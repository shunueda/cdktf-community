import * as cdktf from 'cdktf';
import { DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextCapabilities,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextCapabilitiesToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextCapabilitiesToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextCapabilitiesOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeLinuxOptions,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeLinuxOptionsToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeLinuxOptionsToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeLinuxOptionsOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeccompProfile,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeccompProfileToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeccompProfileToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeccompProfileOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextWindowsOptions,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextWindowsOptionsToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextWindowsOptionsToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextWindowsOptionsOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetAffinity,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetAffinityToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetAffinityToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetAffinityOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetDeploymentStrategy,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetDeploymentStrategyToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetDeploymentStrategyToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetDeploymentStrategyOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetEnv,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetEnvToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetEnvToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetEnvList,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetImagePullSecrets,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetImagePullSecretsToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetImagePullSecretsToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetImagePullSecretsList,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetLivenessProbe,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetLivenessProbeToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetLivenessProbeToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetLivenessProbeOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetMetadata,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetMetadataToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetMetadataToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetMetadataOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodDisruptionBudget,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodDisruptionBudgetToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodDisruptionBudgetToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodDisruptionBudgetOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodMetadata,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodMetadataToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodMetadataToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodMetadataOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodSecurityContext,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodSecurityContextToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodSecurityContextToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodSecurityContextOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReadinessProbe,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReadinessProbeToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReadinessProbeToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReadinessProbeOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReplicas,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReplicasToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReplicasToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReplicasOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetResources,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetResourcesToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetResourcesToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetResourcesOutputReference } from './structs800'
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContext {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#allow_privilege_escalation DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#allow_privilege_escalation}
  */
  readonly allowPrivilegeEscalation?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#capabilities DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#capabilities}
  */
  readonly capabilities?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextCapabilities;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#privileged DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#privileged}
  */
  readonly privileged?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#proc_mount DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#proc_mount}
  */
  readonly procMount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only_root_filesystem DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only_root_filesystem}
  */
  readonly readOnlyRootFilesystem?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#run_as_group DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#run_as_group}
  */
  readonly runAsGroup?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#run_as_non_root DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#run_as_non_root}
  */
  readonly runAsNonRoot?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#run_as_user DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#run_as_user}
  */
  readonly runAsUser?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#se_linux_options DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#se_linux_options}
  */
  readonly seLinuxOptions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeLinuxOptions;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#seccomp_profile DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#seccomp_profile}
  */
  readonly seccompProfile?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeccompProfile;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#windows_options DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#windows_options}
  */
  readonly windowsOptions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextWindowsOptions;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContext | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_privilege_escalation: cdktf.booleanToTerraform(struct!.allowPrivilegeEscalation),
    capabilities: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextCapabilitiesToTerraform(struct!.capabilities),
    privileged: cdktf.booleanToTerraform(struct!.privileged),
    proc_mount: cdktf.stringToTerraform(struct!.procMount),
    read_only_root_filesystem: cdktf.booleanToTerraform(struct!.readOnlyRootFilesystem),
    run_as_group: cdktf.numberToTerraform(struct!.runAsGroup),
    run_as_non_root: cdktf.booleanToTerraform(struct!.runAsNonRoot),
    run_as_user: cdktf.numberToTerraform(struct!.runAsUser),
    se_linux_options: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeLinuxOptionsToTerraform(struct!.seLinuxOptions),
    seccomp_profile: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeccompProfileToTerraform(struct!.seccompProfile),
    windows_options: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextWindowsOptionsToTerraform(struct!.windowsOptions),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContext | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_privilege_escalation: {
      value: cdktf.booleanToHclTerraform(struct!.allowPrivilegeEscalation),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    capabilities: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextCapabilitiesToHclTerraform(struct!.capabilities),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextCapabilities",
    },
    privileged: {
      value: cdktf.booleanToHclTerraform(struct!.privileged),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    proc_mount: {
      value: cdktf.stringToHclTerraform(struct!.procMount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only_root_filesystem: {
      value: cdktf.booleanToHclTerraform(struct!.readOnlyRootFilesystem),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_group: {
      value: cdktf.numberToHclTerraform(struct!.runAsGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    run_as_non_root: {
      value: cdktf.booleanToHclTerraform(struct!.runAsNonRoot),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_user: {
      value: cdktf.numberToHclTerraform(struct!.runAsUser),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    se_linux_options: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeLinuxOptionsToHclTerraform(struct!.seLinuxOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeLinuxOptions",
    },
    seccomp_profile: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeccompProfileToHclTerraform(struct!.seccompProfile),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeccompProfile",
    },
    windows_options: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextWindowsOptionsToHclTerraform(struct!.windowsOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextWindowsOptions",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContext | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowPrivilegeEscalation !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowPrivilegeEscalation = this._allowPrivilegeEscalation;
    }
    if (this._capabilities?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.capabilities = this._capabilities?.internalValue;
    }
    if (this._privileged !== undefined) {
      hasAnyValues = true;
      internalValueResult.privileged = this._privileged;
    }
    if (this._procMount !== undefined) {
      hasAnyValues = true;
      internalValueResult.procMount = this._procMount;
    }
    if (this._readOnlyRootFilesystem !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnlyRootFilesystem = this._readOnlyRootFilesystem;
    }
    if (this._runAsGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsGroup = this._runAsGroup;
    }
    if (this._runAsNonRoot !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsNonRoot = this._runAsNonRoot;
    }
    if (this._runAsUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsUser = this._runAsUser;
    }
    if (this._seLinuxOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.seLinuxOptions = this._seLinuxOptions?.internalValue;
    }
    if (this._seccompProfile?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.seccompProfile = this._seccompProfile?.internalValue;
    }
    if (this._windowsOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.windowsOptions = this._windowsOptions?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContext | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowPrivilegeEscalation = undefined;
      this._capabilities.internalValue = undefined;
      this._privileged = undefined;
      this._procMount = undefined;
      this._readOnlyRootFilesystem = undefined;
      this._runAsGroup = undefined;
      this._runAsNonRoot = undefined;
      this._runAsUser = undefined;
      this._seLinuxOptions.internalValue = undefined;
      this._seccompProfile.internalValue = undefined;
      this._windowsOptions.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowPrivilegeEscalation = value.allowPrivilegeEscalation;
      this._capabilities.internalValue = value.capabilities;
      this._privileged = value.privileged;
      this._procMount = value.procMount;
      this._readOnlyRootFilesystem = value.readOnlyRootFilesystem;
      this._runAsGroup = value.runAsGroup;
      this._runAsNonRoot = value.runAsNonRoot;
      this._runAsUser = value.runAsUser;
      this._seLinuxOptions.internalValue = value.seLinuxOptions;
      this._seccompProfile.internalValue = value.seccompProfile;
      this._windowsOptions.internalValue = value.windowsOptions;
    }
  }

  // allow_privilege_escalation - computed: false, optional: true, required: false
  private _allowPrivilegeEscalation?: boolean | cdktf.IResolvable; 
  public get allowPrivilegeEscalation() {
    return this.getBooleanAttribute('allow_privilege_escalation');
  }
  public set allowPrivilegeEscalation(value: boolean | cdktf.IResolvable) {
    this._allowPrivilegeEscalation = value;
  }
  public resetAllowPrivilegeEscalation() {
    this._allowPrivilegeEscalation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowPrivilegeEscalationInput() {
    return this._allowPrivilegeEscalation;
  }

  // capabilities - computed: false, optional: true, required: false
  private _capabilities = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextCapabilitiesOutputReference(this, "capabilities");
  public get capabilities() {
    return this._capabilities;
  }
  public putCapabilities(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextCapabilities) {
    this._capabilities.internalValue = value;
  }
  public resetCapabilities() {
    this._capabilities.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get capabilitiesInput() {
    return this._capabilities.internalValue;
  }

  // privileged - computed: false, optional: true, required: false
  private _privileged?: boolean | cdktf.IResolvable; 
  public get privileged() {
    return this.getBooleanAttribute('privileged');
  }
  public set privileged(value: boolean | cdktf.IResolvable) {
    this._privileged = value;
  }
  public resetPrivileged() {
    this._privileged = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get privilegedInput() {
    return this._privileged;
  }

  // proc_mount - computed: false, optional: true, required: false
  private _procMount?: string; 
  public get procMount() {
    return this.getStringAttribute('proc_mount');
  }
  public set procMount(value: string) {
    this._procMount = value;
  }
  public resetProcMount() {
    this._procMount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get procMountInput() {
    return this._procMount;
  }

  // read_only_root_filesystem - computed: false, optional: true, required: false
  private _readOnlyRootFilesystem?: boolean | cdktf.IResolvable; 
  public get readOnlyRootFilesystem() {
    return this.getBooleanAttribute('read_only_root_filesystem');
  }
  public set readOnlyRootFilesystem(value: boolean | cdktf.IResolvable) {
    this._readOnlyRootFilesystem = value;
  }
  public resetReadOnlyRootFilesystem() {
    this._readOnlyRootFilesystem = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyRootFilesystemInput() {
    return this._readOnlyRootFilesystem;
  }

  // run_as_group - computed: false, optional: true, required: false
  private _runAsGroup?: number; 
  public get runAsGroup() {
    return this.getNumberAttribute('run_as_group');
  }
  public set runAsGroup(value: number) {
    this._runAsGroup = value;
  }
  public resetRunAsGroup() {
    this._runAsGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsGroupInput() {
    return this._runAsGroup;
  }

  // run_as_non_root - computed: false, optional: true, required: false
  private _runAsNonRoot?: boolean | cdktf.IResolvable; 
  public get runAsNonRoot() {
    return this.getBooleanAttribute('run_as_non_root');
  }
  public set runAsNonRoot(value: boolean | cdktf.IResolvable) {
    this._runAsNonRoot = value;
  }
  public resetRunAsNonRoot() {
    this._runAsNonRoot = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsNonRootInput() {
    return this._runAsNonRoot;
  }

  // run_as_user - computed: false, optional: true, required: false
  private _runAsUser?: number; 
  public get runAsUser() {
    return this.getNumberAttribute('run_as_user');
  }
  public set runAsUser(value: number) {
    this._runAsUser = value;
  }
  public resetRunAsUser() {
    this._runAsUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsUserInput() {
    return this._runAsUser;
  }

  // se_linux_options - computed: false, optional: true, required: false
  private _seLinuxOptions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeLinuxOptionsOutputReference(this, "se_linux_options");
  public get seLinuxOptions() {
    return this._seLinuxOptions;
  }
  public putSeLinuxOptions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeLinuxOptions) {
    this._seLinuxOptions.internalValue = value;
  }
  public resetSeLinuxOptions() {
    this._seLinuxOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get seLinuxOptionsInput() {
    return this._seLinuxOptions.internalValue;
  }

  // seccomp_profile - computed: false, optional: true, required: false
  private _seccompProfile = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeccompProfileOutputReference(this, "seccomp_profile");
  public get seccompProfile() {
    return this._seccompProfile;
  }
  public putSeccompProfile(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextSeccompProfile) {
    this._seccompProfile.internalValue = value;
  }
  public resetSeccompProfile() {
    this._seccompProfile.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get seccompProfileInput() {
    return this._seccompProfile.internalValue;
  }

  // windows_options - computed: false, optional: true, required: false
  private _windowsOptions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextWindowsOptionsOutputReference(this, "windows_options");
  public get windowsOptions() {
    return this._windowsOptions;
  }
  public putWindowsOptions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextWindowsOptions) {
    this._windowsOptions.internalValue = value;
  }
  public resetWindowsOptions() {
    this._windowsOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get windowsOptionsInput() {
    return this._windowsOptions.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerations {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#effect DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#toleration_seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#value DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerationsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerationsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerationsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_expressions DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraints {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#label_selector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#max_skew DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#max_skew}
  */
  readonly maxSkew?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#topology_key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#topology_key}
  */
  readonly topologyKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#when_unsatisfiable DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#when_unsatisfiable}
  */
  readonly whenUnsatisfiable?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraints | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorToTerraform(struct!.labelSelector),
    max_skew: cdktf.numberToTerraform(struct!.maxSkew),
    topology_key: cdktf.stringToTerraform(struct!.topologyKey),
    when_unsatisfiable: cdktf.stringToTerraform(struct!.whenUnsatisfiable),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraints | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelector",
    },
    max_skew: {
      value: cdktf.numberToHclTerraform(struct!.maxSkew),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topology_key: {
      value: cdktf.stringToHclTerraform(struct!.topologyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    when_unsatisfiable: {
      value: cdktf.stringToHclTerraform(struct!.whenUnsatisfiable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraints | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._maxSkew !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxSkew = this._maxSkew;
    }
    if (this._topologyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyKey = this._topologyKey;
    }
    if (this._whenUnsatisfiable !== undefined) {
      hasAnyValues = true;
      internalValueResult.whenUnsatisfiable = this._whenUnsatisfiable;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraints | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._maxSkew = undefined;
      this._topologyKey = undefined;
      this._whenUnsatisfiable = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._maxSkew = value.maxSkew;
      this._topologyKey = value.topologyKey;
      this._whenUnsatisfiable = value.whenUnsatisfiable;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // max_skew - computed: false, optional: true, required: false
  private _maxSkew?: number; 
  public get maxSkew() {
    return this.getNumberAttribute('max_skew');
  }
  public set maxSkew(value: number) {
    this._maxSkew = value;
  }
  public resetMaxSkew() {
    this._maxSkew = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxSkewInput() {
    return this._maxSkew;
  }

  // topology_key - computed: false, optional: true, required: false
  private _topologyKey?: string; 
  public get topologyKey() {
    return this.getStringAttribute('topology_key');
  }
  public set topologyKey(value: string) {
    this._topologyKey = value;
  }
  public resetTopologyKey() {
    this._topologyKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyKeyInput() {
    return this._topologyKey;
  }

  // when_unsatisfiable - computed: false, optional: true, required: false
  private _whenUnsatisfiable?: string; 
  public get whenUnsatisfiable() {
    return this.getStringAttribute('when_unsatisfiable');
  }
  public set whenUnsatisfiable(value: string) {
    this._whenUnsatisfiable = value;
  }
  public resetWhenUnsatisfiable() {
    this._whenUnsatisfiable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get whenUnsatisfiableInput() {
    return this._whenUnsatisfiable;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraints[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMounts {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mount_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mount_path}
  */
  readonly mountPath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mount_propagation DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mount_propagation}
  */
  readonly mountPropagation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#sub_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#sub_path}
  */
  readonly subPath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#sub_path_expr DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#sub_path_expr}
  */
  readonly subPathExpr?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMountsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    mount_path: cdktf.stringToTerraform(struct!.mountPath),
    mount_propagation: cdktf.stringToTerraform(struct!.mountPropagation),
    name: cdktf.stringToTerraform(struct!.name),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    sub_path: cdktf.stringToTerraform(struct!.subPath),
    sub_path_expr: cdktf.stringToTerraform(struct!.subPathExpr),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMountsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    mount_path: {
      value: cdktf.stringToHclTerraform(struct!.mountPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mount_propagation: {
      value: cdktf.stringToHclTerraform(struct!.mountPropagation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    sub_path: {
      value: cdktf.stringToHclTerraform(struct!.subPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sub_path_expr: {
      value: cdktf.stringToHclTerraform(struct!.subPathExpr),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMountsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMounts | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._mountPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.mountPath = this._mountPath;
    }
    if (this._mountPropagation !== undefined) {
      hasAnyValues = true;
      internalValueResult.mountPropagation = this._mountPropagation;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._subPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.subPath = this._subPath;
    }
    if (this._subPathExpr !== undefined) {
      hasAnyValues = true;
      internalValueResult.subPathExpr = this._subPathExpr;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMounts | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._mountPath = undefined;
      this._mountPropagation = undefined;
      this._name = undefined;
      this._readOnly = undefined;
      this._subPath = undefined;
      this._subPathExpr = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._mountPath = value.mountPath;
      this._mountPropagation = value.mountPropagation;
      this._name = value.name;
      this._readOnly = value.readOnly;
      this._subPath = value.subPath;
      this._subPathExpr = value.subPathExpr;
    }
  }

  // mount_path - computed: false, optional: true, required: false
  private _mountPath?: string; 
  public get mountPath() {
    return this.getStringAttribute('mount_path');
  }
  public set mountPath(value: string) {
    this._mountPath = value;
  }
  public resetMountPath() {
    this._mountPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mountPathInput() {
    return this._mountPath;
  }

  // mount_propagation - computed: false, optional: true, required: false
  private _mountPropagation?: string; 
  public get mountPropagation() {
    return this.getStringAttribute('mount_propagation');
  }
  public set mountPropagation(value: string) {
    this._mountPropagation = value;
  }
  public resetMountPropagation() {
    this._mountPropagation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mountPropagationInput() {
    return this._mountPropagation;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // sub_path - computed: false, optional: true, required: false
  private _subPath?: string; 
  public get subPath() {
    return this.getStringAttribute('sub_path');
  }
  public set subPath(value: string) {
    this._subPath = value;
  }
  public resetSubPath() {
    this._subPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subPathInput() {
    return this._subPath;
  }

  // sub_path_expr - computed: false, optional: true, required: false
  private _subPathExpr?: string; 
  public get subPathExpr() {
    return this.getStringAttribute('sub_path_expr');
  }
  public set subPathExpr(value: string) {
    this._subPathExpr = value;
  }
  public resetSubPathExpr() {
    this._subPathExpr = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subPathExprInput() {
    return this._subPathExpr;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMountsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMounts[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMountsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMountsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAwsElasticBlockStore {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#partition DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#partition}
  */
  readonly partition?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_id DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_id}
  */
  readonly volumeId?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAwsElasticBlockStoreToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAwsElasticBlockStore | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    partition: cdktf.numberToTerraform(struct!.partition),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    volume_id: cdktf.stringToTerraform(struct!.volumeId),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAwsElasticBlockStoreToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAwsElasticBlockStore | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    partition: {
      value: cdktf.numberToHclTerraform(struct!.partition),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    volume_id: {
      value: cdktf.stringToHclTerraform(struct!.volumeId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAwsElasticBlockStoreOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAwsElasticBlockStore | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._partition !== undefined) {
      hasAnyValues = true;
      internalValueResult.partition = this._partition;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._volumeId !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeId = this._volumeId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAwsElasticBlockStore | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._partition = undefined;
      this._readOnly = undefined;
      this._volumeId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._partition = value.partition;
      this._readOnly = value.readOnly;
      this._volumeId = value.volumeId;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // partition - computed: false, optional: true, required: false
  private _partition?: number; 
  public get partition() {
    return this.getNumberAttribute('partition');
  }
  public set partition(value: number) {
    this._partition = value;
  }
  public resetPartition() {
    this._partition = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partitionInput() {
    return this._partition;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // volume_id - computed: false, optional: true, required: false
  private _volumeId?: string; 
  public get volumeId() {
    return this.getStringAttribute('volume_id');
  }
  public set volumeId(value: string) {
    this._volumeId = value;
  }
  public resetVolumeId() {
    this._volumeId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeIdInput() {
    return this._volumeId;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureDisk {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#caching_mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#caching_mode}
  */
  readonly cachingMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#disk_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#disk_name}
  */
  readonly diskName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#disk_uri DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#disk_uri}
  */
  readonly diskUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#kind DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureDiskToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    caching_mode: cdktf.stringToTerraform(struct!.cachingMode),
    disk_name: cdktf.stringToTerraform(struct!.diskName),
    disk_uri: cdktf.stringToTerraform(struct!.diskUri),
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    kind: cdktf.stringToTerraform(struct!.kind),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureDiskToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    caching_mode: {
      value: cdktf.stringToHclTerraform(struct!.cachingMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disk_name: {
      value: cdktf.stringToHclTerraform(struct!.diskName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disk_uri: {
      value: cdktf.stringToHclTerraform(struct!.diskUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureDiskOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureDisk | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cachingMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.cachingMode = this._cachingMode;
    }
    if (this._diskName !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskName = this._diskName;
    }
    if (this._diskUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskUri = this._diskUri;
    }
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureDisk | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cachingMode = undefined;
      this._diskName = undefined;
      this._diskUri = undefined;
      this._fsType = undefined;
      this._kind = undefined;
      this._readOnly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cachingMode = value.cachingMode;
      this._diskName = value.diskName;
      this._diskUri = value.diskUri;
      this._fsType = value.fsType;
      this._kind = value.kind;
      this._readOnly = value.readOnly;
    }
  }

  // caching_mode - computed: false, optional: true, required: false
  private _cachingMode?: string; 
  public get cachingMode() {
    return this.getStringAttribute('caching_mode');
  }
  public set cachingMode(value: string) {
    this._cachingMode = value;
  }
  public resetCachingMode() {
    this._cachingMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cachingModeInput() {
    return this._cachingMode;
  }

  // disk_name - computed: false, optional: true, required: false
  private _diskName?: string; 
  public get diskName() {
    return this.getStringAttribute('disk_name');
  }
  public set diskName(value: string) {
    this._diskName = value;
  }
  public resetDiskName() {
    this._diskName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get diskNameInput() {
    return this._diskName;
  }

  // disk_uri - computed: false, optional: true, required: false
  private _diskUri?: string; 
  public get diskUri() {
    return this.getStringAttribute('disk_uri');
  }
  public set diskUri(value: string) {
    this._diskUri = value;
  }
  public resetDiskUri() {
    this._diskUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get diskUriInput() {
    return this._diskUri;
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureFile {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_name}
  */
  readonly secretName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#share_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#share_name}
  */
  readonly shareName?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureFileToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureFile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_name: cdktf.stringToTerraform(struct!.secretName),
    share_name: cdktf.stringToTerraform(struct!.shareName),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureFileToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureFile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    share_name: {
      value: cdktf.stringToHclTerraform(struct!.shareName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureFileOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureFile | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    if (this._shareName !== undefined) {
      hasAnyValues = true;
      internalValueResult.shareName = this._shareName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureFile | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._readOnly = undefined;
      this._secretName = undefined;
      this._shareName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._readOnly = value.readOnly;
      this._secretName = value.secretName;
      this._shareName = value.shareName;
    }
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_name - computed: false, optional: true, required: false
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  public resetSecretName() {
    this._secretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }

  // share_name - computed: false, optional: true, required: false
  private _shareName?: string; 
  public get shareName() {
    return this.getStringAttribute('share_name');
  }
  public set shareName(value: string) {
    this._shareName = value;
  }
  public resetShareName() {
    this._shareName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get shareNameInput() {
    return this._shareName;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#monitors DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#monitors}
  */
  readonly monitors?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_file DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_file}
  */
  readonly secretFile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsSecretRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#user DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#user}
  */
  readonly user?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    monitors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitors),
    path: cdktf.stringToTerraform(struct!.path),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_file: cdktf.stringToTerraform(struct!.secretFile),
    secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsSecretRefToTerraform(struct!.secretRef),
    user: cdktf.stringToTerraform(struct!.user),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    monitors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_file: {
      value: cdktf.stringToHclTerraform(struct!.secretFile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsSecretRef",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._monitors !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitors = this._monitors;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretFile !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretFile = this._secretFile;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._monitors = undefined;
      this._path = undefined;
      this._readOnly = undefined;
      this._secretFile = undefined;
      this._secretRef.internalValue = undefined;
      this._user = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._monitors = value.monitors;
      this._path = value.path;
      this._readOnly = value.readOnly;
      this._secretFile = value.secretFile;
      this._secretRef.internalValue = value.secretRef;
      this._user = value.user;
    }
  }

  // monitors - computed: false, optional: true, required: false
  private _monitors?: string[]; 
  public get monitors() {
    return this.getListAttribute('monitors');
  }
  public set monitors(value: string[]) {
    this._monitors = value;
  }
  public resetMonitors() {
    this._monitors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitorsInput() {
    return this._monitors;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_file - computed: false, optional: true, required: false
  private _secretFile?: string; 
  public get secretFile() {
    return this.getStringAttribute('secret_file');
  }
  public set secretFile(value: string) {
    this._secretFile = value;
  }
  public resetSecretFile() {
    this._secretFile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretFileInput() {
    return this._secretFile;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinder {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderSecretRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_id DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_id}
  */
  readonly volumeId?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinder | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderSecretRefToTerraform(struct!.secretRef),
    volume_id: cdktf.stringToTerraform(struct!.volumeId),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinder | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderSecretRef",
    },
    volume_id: {
      value: cdktf.stringToHclTerraform(struct!.volumeId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinder | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._volumeId !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeId = this._volumeId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinder | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
      this._volumeId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
      this._volumeId = value.volumeId;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // volume_id - computed: false, optional: true, required: false
  private _volumeId?: string; 
  public get volumeId() {
    return this.getStringAttribute('volume_id');
  }
  public set volumeId(value: string) {
    this._volumeId = value;
  }
  public resetVolumeId() {
    this._volumeId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeIdInput() {
    return this._volumeId;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItems {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItemsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItemsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._mode = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._mode = value.mode;
      this._path = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItemsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapLocalObjectReference {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapLocalObjectReferenceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapLocalObjectReferenceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapLocalObjectReferenceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapLocalObjectReference | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapLocalObjectReference | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMap {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#default_mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#default_mode}
  */
  readonly defaultMode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#items DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItems[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#local_object_reference DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#local_object_reference}
  */
  readonly localObjectReference?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapLocalObjectReference;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#optional DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_mode: cdktf.numberToTerraform(struct!.defaultMode),
    items: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItemsToTerraform, false)(struct!.items),
    local_object_reference: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapLocalObjectReferenceToTerraform(struct!.localObjectReference),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_mode: {
      value: cdktf.numberToHclTerraform(struct!.defaultMode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    items: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItemsList",
    },
    local_object_reference: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapLocalObjectReferenceToHclTerraform(struct!.localObjectReference),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapLocalObjectReference",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMap | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultMode = this._defaultMode;
    }
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    if (this._localObjectReference?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.localObjectReference = this._localObjectReference?.internalValue;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMap | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultMode = undefined;
      this._items.internalValue = undefined;
      this._localObjectReference.internalValue = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultMode = value.defaultMode;
      this._items.internalValue = value.items;
      this._localObjectReference.internalValue = value.localObjectReference;
      this._optional = value.optional;
    }
  }

  // default_mode - computed: false, optional: true, required: false
  private _defaultMode?: number; 
  public get defaultMode() {
    return this.getNumberAttribute('default_mode');
  }
  public set defaultMode(value: number) {
    this._defaultMode = value;
  }
  public resetDefaultMode() {
    this._defaultMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultModeInput() {
    return this._defaultMode;
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }

  // local_object_reference - computed: false, optional: true, required: false
  private _localObjectReference = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapLocalObjectReferenceOutputReference(this, "local_object_reference");
  public get localObjectReference() {
    return this._localObjectReference;
  }
  public putLocalObjectReference(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapLocalObjectReference) {
    this._localObjectReference.internalValue = value;
  }
  public resetLocalObjectReference() {
    this._localObjectReference.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localObjectReferenceInput() {
    return this._localObjectReference.internalValue;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiNodePublishSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiNodePublishSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiNodePublishSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiNodePublishSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiNodePublishSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiNodePublishSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiNodePublishSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiNodePublishSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsi {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#driver DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#driver}
  */
  readonly driver?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#node_publish_secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#node_publish_secret_ref}
  */
  readonly nodePublishSecretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiNodePublishSecretRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_attributes DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_attributes}
  */
  readonly volumeAttributes?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    driver: cdktf.stringToTerraform(struct!.driver),
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    node_publish_secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiNodePublishSecretRefToTerraform(struct!.nodePublishSecretRef),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    volume_attributes: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.volumeAttributes),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    driver: {
      value: cdktf.stringToHclTerraform(struct!.driver),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_publish_secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiNodePublishSecretRefToHclTerraform(struct!.nodePublishSecretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiNodePublishSecretRef",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    volume_attributes: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.volumeAttributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._driver !== undefined) {
      hasAnyValues = true;
      internalValueResult.driver = this._driver;
    }
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._nodePublishSecretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodePublishSecretRef = this._nodePublishSecretRef?.internalValue;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._volumeAttributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeAttributes = this._volumeAttributes;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._driver = undefined;
      this._fsType = undefined;
      this._nodePublishSecretRef.internalValue = undefined;
      this._readOnly = undefined;
      this._volumeAttributes = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._driver = value.driver;
      this._fsType = value.fsType;
      this._nodePublishSecretRef.internalValue = value.nodePublishSecretRef;
      this._readOnly = value.readOnly;
      this._volumeAttributes = value.volumeAttributes;
    }
  }

  // driver - computed: false, optional: true, required: false
  private _driver?: string; 
  public get driver() {
    return this.getStringAttribute('driver');
  }
  public set driver(value: string) {
    this._driver = value;
  }
  public resetDriver() {
    this._driver = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get driverInput() {
    return this._driver;
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // node_publish_secret_ref - computed: false, optional: true, required: false
  private _nodePublishSecretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiNodePublishSecretRefOutputReference(this, "node_publish_secret_ref");
  public get nodePublishSecretRef() {
    return this._nodePublishSecretRef;
  }
  public putNodePublishSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiNodePublishSecretRef) {
    this._nodePublishSecretRef.internalValue = value;
  }
  public resetNodePublishSecretRef() {
    this._nodePublishSecretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodePublishSecretRefInput() {
    return this._nodePublishSecretRef.internalValue;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // volume_attributes - computed: false, optional: true, required: false
  private _volumeAttributes?: { [key: string]: string }; 
  public get volumeAttributes() {
    return this.getStringMapAttribute('volume_attributes');
  }
  public set volumeAttributes(value: { [key: string]: string }) {
    this._volumeAttributes = value;
  }
  public resetVolumeAttributes() {
    this._volumeAttributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeAttributesInput() {
    return this._volumeAttributes;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#api_version DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#field_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#field_path}
  */
  readonly fieldPath?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsFieldRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    field_path: cdktf.stringToTerraform(struct!.fieldPath),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsFieldRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    field_path: {
      value: cdktf.stringToHclTerraform(struct!.fieldPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldPath = this._fieldPath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldPath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldPath = value.fieldPath;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // field_path - computed: false, optional: true, required: false
  private _fieldPath?: string; 
  public get fieldPath() {
    return this.getStringAttribute('field_path');
  }
  public set fieldPath(value: string) {
    this._fieldPath = value;
  }
  public resetFieldPath() {
    this._fieldPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldPathInput() {
    return this._fieldPath;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsResourceFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#container_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#container_name}
  */
  readonly containerName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#divisor DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#divisor}
  */
  readonly divisor?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resource DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resource}
  */
  readonly resource?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsResourceFieldRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_name: cdktf.stringToTerraform(struct!.containerName),
    divisor: cdktf.stringToTerraform(struct!.divisor),
    resource: cdktf.stringToTerraform(struct!.resource),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsResourceFieldRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_name: {
      value: cdktf.stringToHclTerraform(struct!.containerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    divisor: {
      value: cdktf.stringToHclTerraform(struct!.divisor),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsResourceFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsResourceFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerName = this._containerName;
    }
    if (this._divisor !== undefined) {
      hasAnyValues = true;
      internalValueResult.divisor = this._divisor;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsResourceFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerName = undefined;
      this._divisor = undefined;
      this._resource = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerName = value.containerName;
      this._divisor = value.divisor;
      this._resource = value.resource;
    }
  }

  // container_name - computed: false, optional: true, required: false
  private _containerName?: string; 
  public get containerName() {
    return this.getStringAttribute('container_name');
  }
  public set containerName(value: string) {
    this._containerName = value;
  }
  public resetContainerName() {
    this._containerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNameInput() {
    return this._containerName;
  }

  // divisor - computed: false, optional: true, required: false
  private _divisor?: string; 
  public get divisor() {
    return this.getStringAttribute('divisor');
  }
  public set divisor(value: string) {
    this._divisor = value;
  }
  public resetDivisor() {
    this._divisor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get divisorInput() {
    return this._divisor;
  }

  // resource - computed: false, optional: true, required: false
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  public resetResource() {
    this._resource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItems {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#field_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#field_ref}
  */
  readonly fieldRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsFieldRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resource_field_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resource_field_ref}
  */
  readonly resourceFieldRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsResourceFieldRef;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    field_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsFieldRefToTerraform(struct!.fieldRef),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
    resource_field_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsResourceFieldRefToTerraform(struct!.resourceFieldRef),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    field_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsFieldRefToHclTerraform(struct!.fieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsFieldRef",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_field_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsResourceFieldRefToHclTerraform(struct!.resourceFieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsResourceFieldRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldRef = this._fieldRef?.internalValue;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._resourceFieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceFieldRef = this._resourceFieldRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fieldRef.internalValue = undefined;
      this._mode = undefined;
      this._path = undefined;
      this._resourceFieldRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fieldRef.internalValue = value.fieldRef;
      this._mode = value.mode;
      this._path = value.path;
      this._resourceFieldRef.internalValue = value.resourceFieldRef;
    }
  }

  // field_ref - computed: false, optional: true, required: false
  private _fieldRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsFieldRefOutputReference(this, "field_ref");
  public get fieldRef() {
    return this._fieldRef;
  }
  public putFieldRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsFieldRef) {
    this._fieldRef.internalValue = value;
  }
  public resetFieldRef() {
    this._fieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldRefInput() {
    return this._fieldRef.internalValue;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // resource_field_ref - computed: false, optional: true, required: false
  private _resourceFieldRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsResourceFieldRefOutputReference(this, "resource_field_ref");
  public get resourceFieldRef() {
    return this._resourceFieldRef;
  }
  public putResourceFieldRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsResourceFieldRef) {
    this._resourceFieldRef.internalValue = value;
  }
  public resetResourceFieldRef() {
    this._resourceFieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceFieldRefInput() {
    return this._resourceFieldRef.internalValue;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApi {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#default_mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#default_mode}
  */
  readonly defaultMode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#items DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItems[] | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_mode: cdktf.numberToTerraform(struct!.defaultMode),
    items: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsToTerraform, false)(struct!.items),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_mode: {
      value: cdktf.numberToHclTerraform(struct!.defaultMode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    items: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultMode = this._defaultMode;
    }
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultMode = undefined;
      this._items.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultMode = value.defaultMode;
      this._items.internalValue = value.items;
    }
  }

  // default_mode - computed: false, optional: true, required: false
  private _defaultMode?: number; 
  public get defaultMode() {
    return this.getNumberAttribute('default_mode');
  }
  public set defaultMode(value: number) {
    this._defaultMode = value;
  }
  public resetDefaultMode() {
    this._defaultMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultModeInput() {
    return this._defaultMode;
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEmptyDir {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#medium DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#medium}
  */
  readonly medium?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#size_limit DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#size_limit}
  */
  readonly sizeLimit?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEmptyDirToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEmptyDir | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    medium: cdktf.stringToTerraform(struct!.medium),
    size_limit: cdktf.stringToTerraform(struct!.sizeLimit),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEmptyDirToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEmptyDir | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    medium: {
      value: cdktf.stringToHclTerraform(struct!.medium),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    size_limit: {
      value: cdktf.stringToHclTerraform(struct!.sizeLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEmptyDirOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEmptyDir | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._medium !== undefined) {
      hasAnyValues = true;
      internalValueResult.medium = this._medium;
    }
    if (this._sizeLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.sizeLimit = this._sizeLimit;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEmptyDir | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._medium = undefined;
      this._sizeLimit = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._medium = value.medium;
      this._sizeLimit = value.sizeLimit;
    }
  }

  // medium - computed: false, optional: true, required: false
  private _medium?: string; 
  public get medium() {
    return this.getStringAttribute('medium');
  }
  public set medium(value: string) {
    this._medium = value;
  }
  public resetMedium() {
    this._medium = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mediumInput() {
    return this._medium;
  }

  // size_limit - computed: false, optional: true, required: false
  private _sizeLimit?: string; 
  public get sizeLimit() {
    return this.getStringAttribute('size_limit');
  }
  public set sizeLimit(value: string) {
    this._sizeLimit = value;
  }
  public resetSizeLimit() {
    this._sizeLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sizeLimitInput() {
    return this._sizeLimit;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#nanos DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#nanos}
  */
  readonly nanos?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#seconds}
  */
  readonly seconds?: number;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestampToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nanos: cdktf.numberToTerraform(struct!.nanos),
    seconds: cdktf.numberToTerraform(struct!.seconds),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestampToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nanos: {
      value: cdktf.numberToHclTerraform(struct!.nanos),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    seconds: {
      value: cdktf.numberToHclTerraform(struct!.seconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestampOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nanos !== undefined) {
      hasAnyValues = true;
      internalValueResult.nanos = this._nanos;
    }
    if (this._seconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.seconds = this._seconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nanos = undefined;
      this._seconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nanos = value.nanos;
      this._seconds = value.seconds;
    }
  }

  // nanos - computed: false, optional: true, required: false
  private _nanos?: number; 
  public get nanos() {
    return this.getNumberAttribute('nanos');
  }
  public set nanos(value: number) {
    this._nanos = value;
  }
  public resetNanos() {
    this._nanos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nanosInput() {
    return this._nanos;
  }

  // seconds - computed: false, optional: true, required: false
  private _seconds?: number; 
  public get seconds() {
    return this.getNumberAttribute('seconds');
  }
  public set seconds(value: number) {
    this._seconds = value;
  }
  public resetSeconds() {
    this._seconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secondsInput() {
    return this._seconds;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#nanos DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#nanos}
  */
  readonly nanos?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#seconds}
  */
  readonly seconds?: number;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestampToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nanos: cdktf.numberToTerraform(struct!.nanos),
    seconds: cdktf.numberToTerraform(struct!.seconds),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestampToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nanos: {
      value: cdktf.numberToHclTerraform(struct!.nanos),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    seconds: {
      value: cdktf.numberToHclTerraform(struct!.seconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestampOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nanos !== undefined) {
      hasAnyValues = true;
      internalValueResult.nanos = this._nanos;
    }
    if (this._seconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.seconds = this._seconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nanos = undefined;
      this._seconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nanos = value.nanos;
      this._seconds = value.seconds;
    }
  }

  // nanos - computed: false, optional: true, required: false
  private _nanos?: number; 
  public get nanos() {
    return this.getNumberAttribute('nanos');
  }
  public set nanos(value: number) {
    this._nanos = value;
  }
  public resetNanos() {
    this._nanos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nanosInput() {
    return this._nanos;
  }

  // seconds - computed: false, optional: true, required: false
  private _seconds?: number; 
  public get seconds() {
    return this.getNumberAttribute('seconds');
  }
  public set seconds(value: number) {
    this._seconds = value;
  }
  public resetSeconds() {
    this._seconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secondsInput() {
    return this._seconds;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1 {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#raw DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#raw}
  */
  readonly raw?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1ToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    raw: cdktf.stringToTerraform(struct!.raw),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1ToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    raw: {
      value: cdktf.stringToHclTerraform(struct!.raw),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1OutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1 | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._raw !== undefined) {
      hasAnyValues = true;
      internalValueResult.raw = this._raw;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1 | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._raw = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._raw = value.raw;
    }
  }

  // raw - computed: false, optional: true, required: false
  private _raw?: string; 
  public get raw() {
    return this.getStringAttribute('raw');
  }
  public set raw(value: string) {
    this._raw = value;
  }
  public resetRaw() {
    this._raw = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rawInput() {
    return this._raw;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#nanos DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#nanos}
  */
  readonly nanos?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#seconds}
  */
  readonly seconds?: number;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTimeToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nanos: cdktf.numberToTerraform(struct!.nanos),
    seconds: cdktf.numberToTerraform(struct!.seconds),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTimeToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nanos: {
      value: cdktf.numberToHclTerraform(struct!.nanos),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    seconds: {
      value: cdktf.numberToHclTerraform(struct!.seconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTimeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nanos !== undefined) {
      hasAnyValues = true;
      internalValueResult.nanos = this._nanos;
    }
    if (this._seconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.seconds = this._seconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nanos = undefined;
      this._seconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nanos = value.nanos;
      this._seconds = value.seconds;
    }
  }

  // nanos - computed: false, optional: true, required: false
  private _nanos?: number; 
  public get nanos() {
    return this.getNumberAttribute('nanos');
  }
  public set nanos(value: number) {
    this._nanos = value;
  }
  public resetNanos() {
    this._nanos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nanosInput() {
    return this._nanos;
  }

  // seconds - computed: false, optional: true, required: false
  private _seconds?: number; 
  public get seconds() {
    return this.getNumberAttribute('seconds');
  }
  public set seconds(value: number) {
    this._seconds = value;
  }
  public resetSeconds() {
    this._seconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secondsInput() {
    return this._seconds;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#api_version DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fields_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fields_type}
  */
  readonly fieldsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fields_v1 DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fields_v1}
  */
  readonly fieldsV1?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#manager DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#manager}
  */
  readonly manager?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operation DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#subresource DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#subresource}
  */
  readonly subresource?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#time DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#time}
  */
  readonly time?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    fields_type: cdktf.stringToTerraform(struct!.fieldsType),
    fields_v1: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1ToTerraform(struct!.fieldsV1),
    manager: cdktf.stringToTerraform(struct!.manager),
    operation: cdktf.stringToTerraform(struct!.operation),
    subresource: cdktf.stringToTerraform(struct!.subresource),
    time: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTimeToTerraform(struct!.time),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fields_type: {
      value: cdktf.stringToHclTerraform(struct!.fieldsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fields_v1: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1ToHclTerraform(struct!.fieldsV1),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1",
    },
    manager: {
      value: cdktf.stringToHclTerraform(struct!.manager),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    subresource: {
      value: cdktf.stringToHclTerraform(struct!.subresource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTimeToHclTerraform(struct!.time),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldsType = this._fieldsType;
    }
    if (this._fieldsV1?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldsV1 = this._fieldsV1?.internalValue;
    }
    if (this._manager !== undefined) {
      hasAnyValues = true;
      internalValueResult.manager = this._manager;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._subresource !== undefined) {
      hasAnyValues = true;
      internalValueResult.subresource = this._subresource;
    }
    if (this._time?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.time = this._time?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldsType = undefined;
      this._fieldsV1.internalValue = undefined;
      this._manager = undefined;
      this._operation = undefined;
      this._subresource = undefined;
      this._time.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldsType = value.fieldsType;
      this._fieldsV1.internalValue = value.fieldsV1;
      this._manager = value.manager;
      this._operation = value.operation;
      this._subresource = value.subresource;
      this._time.internalValue = value.time;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // fields_type - computed: false, optional: true, required: false
  private _fieldsType?: string; 
  public get fieldsType() {
    return this.getStringAttribute('fields_type');
  }
  public set fieldsType(value: string) {
    this._fieldsType = value;
  }
  public resetFieldsType() {
    this._fieldsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldsTypeInput() {
    return this._fieldsType;
  }

  // fields_v1 - computed: false, optional: true, required: false
  private _fieldsV1 = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1OutputReference(this, "fields_v1");
  public get fieldsV1() {
    return this._fieldsV1;
  }
  public putFieldsV1(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1) {
    this._fieldsV1.internalValue = value;
  }
  public resetFieldsV1() {
    this._fieldsV1.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldsV1Input() {
    return this._fieldsV1.internalValue;
  }

  // manager - computed: false, optional: true, required: false
  private _manager?: string; 
  public get manager() {
    return this.getStringAttribute('manager');
  }
  public set manager(value: string) {
    this._manager = value;
  }
  public resetManager() {
    this._manager = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get managerInput() {
    return this._manager;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // subresource - computed: false, optional: true, required: false
  private _subresource?: string; 
  public get subresource() {
    return this.getStringAttribute('subresource');
  }
  public set subresource(value: string) {
    this._subresource = value;
  }
  public resetSubresource() {
    this._subresource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subresourceInput() {
    return this._subresource;
  }

  // time - computed: false, optional: true, required: false
  private _time = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTimeOutputReference(this, "time");
  public get time() {
    return this._time;
  }
  public putTime(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime) {
    this._time.internalValue = value;
  }
  public resetTime() {
    this._time.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeInput() {
    return this._time.internalValue;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#api_version DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#block_owner_deletion DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#block_owner_deletion}
  */
  readonly blockOwnerDeletion?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#controller DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#controller}
  */
  readonly controller?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#kind DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#uid DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#uid}
  */
  readonly uid?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    block_owner_deletion: cdktf.booleanToTerraform(struct!.blockOwnerDeletion),
    controller: cdktf.booleanToTerraform(struct!.controller),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
    uid: cdktf.stringToTerraform(struct!.uid),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    block_owner_deletion: {
      value: cdktf.booleanToHclTerraform(struct!.blockOwnerDeletion),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    controller: {
      value: cdktf.booleanToHclTerraform(struct!.controller),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uid: {
      value: cdktf.stringToHclTerraform(struct!.uid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._blockOwnerDeletion !== undefined) {
      hasAnyValues = true;
      internalValueResult.blockOwnerDeletion = this._blockOwnerDeletion;
    }
    if (this._controller !== undefined) {
      hasAnyValues = true;
      internalValueResult.controller = this._controller;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._uid !== undefined) {
      hasAnyValues = true;
      internalValueResult.uid = this._uid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._blockOwnerDeletion = undefined;
      this._controller = undefined;
      this._kind = undefined;
      this._name = undefined;
      this._uid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._blockOwnerDeletion = value.blockOwnerDeletion;
      this._controller = value.controller;
      this._kind = value.kind;
      this._name = value.name;
      this._uid = value.uid;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // block_owner_deletion - computed: false, optional: true, required: false
  private _blockOwnerDeletion?: boolean | cdktf.IResolvable; 
  public get blockOwnerDeletion() {
    return this.getBooleanAttribute('block_owner_deletion');
  }
  public set blockOwnerDeletion(value: boolean | cdktf.IResolvable) {
    this._blockOwnerDeletion = value;
  }
  public resetBlockOwnerDeletion() {
    this._blockOwnerDeletion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get blockOwnerDeletionInput() {
    return this._blockOwnerDeletion;
  }

  // controller - computed: false, optional: true, required: false
  private _controller?: boolean | cdktf.IResolvable; 
  public get controller() {
    return this.getBooleanAttribute('controller');
  }
  public set controller(value: boolean | cdktf.IResolvable) {
    this._controller = value;
  }
  public resetController() {
    this._controller = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get controllerInput() {
    return this._controller;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // uid - computed: false, optional: true, required: false
  private _uid?: string; 
  public get uid() {
    return this.getStringAttribute('uid');
  }
  public set uid(value: string) {
    this._uid = value;
  }
  public resetUid() {
    this._uid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uidInput() {
    return this._uid;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#annotations DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#cluster_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#cluster_name}
  */
  readonly clusterName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#creation_timestamp DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#creation_timestamp}
  */
  readonly creationTimestamp?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#deletion_grace_period_seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#deletion_grace_period_seconds}
  */
  readonly deletionGracePeriodSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#deletion_timestamp DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#deletion_timestamp}
  */
  readonly deletionTimestamp?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#finalizers DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#finalizers}
  */
  readonly finalizers?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#generate_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#generate_name}
  */
  readonly generateName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#generation DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#generation}
  */
  readonly generation?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#managed_fields DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#managed_fields}
  */
  readonly managedFields?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#namespace DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#namespace}
  */
  readonly namespace?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#owner_references DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#owner_references}
  */
  readonly ownerReferences?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resource_version DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resource_version}
  */
  readonly resourceVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#self_link DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#self_link}
  */
  readonly selfLink?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#uid DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#uid}
  */
  readonly uid?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    cluster_name: cdktf.stringToTerraform(struct!.clusterName),
    creation_timestamp: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestampToTerraform(struct!.creationTimestamp),
    deletion_grace_period_seconds: cdktf.numberToTerraform(struct!.deletionGracePeriodSeconds),
    deletion_timestamp: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestampToTerraform(struct!.deletionTimestamp),
    finalizers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.finalizers),
    generate_name: cdktf.stringToTerraform(struct!.generateName),
    generation: cdktf.numberToTerraform(struct!.generation),
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    managed_fields: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsToTerraform, false)(struct!.managedFields),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
    owner_references: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesToTerraform, false)(struct!.ownerReferences),
    resource_version: cdktf.stringToTerraform(struct!.resourceVersion),
    self_link: cdktf.stringToTerraform(struct!.selfLink),
    uid: cdktf.stringToTerraform(struct!.uid),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    cluster_name: {
      value: cdktf.stringToHclTerraform(struct!.clusterName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    creation_timestamp: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestampToHclTerraform(struct!.creationTimestamp),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp",
    },
    deletion_grace_period_seconds: {
      value: cdktf.numberToHclTerraform(struct!.deletionGracePeriodSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    deletion_timestamp: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestampToHclTerraform(struct!.deletionTimestamp),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp",
    },
    finalizers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.finalizers),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    generate_name: {
      value: cdktf.stringToHclTerraform(struct!.generateName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    generation: {
      value: cdktf.numberToHclTerraform(struct!.generation),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    managed_fields: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsToHclTerraform, false)(struct!.managedFields),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsList",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    owner_references: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesToHclTerraform, false)(struct!.ownerReferences),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesList",
    },
    resource_version: {
      value: cdktf.stringToHclTerraform(struct!.resourceVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_link: {
      value: cdktf.stringToHclTerraform(struct!.selfLink),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uid: {
      value: cdktf.stringToHclTerraform(struct!.uid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._clusterName !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterName = this._clusterName;
    }
    if (this._creationTimestamp?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.creationTimestamp = this._creationTimestamp?.internalValue;
    }
    if (this._deletionGracePeriodSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.deletionGracePeriodSeconds = this._deletionGracePeriodSeconds;
    }
    if (this._deletionTimestamp?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.deletionTimestamp = this._deletionTimestamp?.internalValue;
    }
    if (this._finalizers !== undefined) {
      hasAnyValues = true;
      internalValueResult.finalizers = this._finalizers;
    }
    if (this._generateName !== undefined) {
      hasAnyValues = true;
      internalValueResult.generateName = this._generateName;
    }
    if (this._generation !== undefined) {
      hasAnyValues = true;
      internalValueResult.generation = this._generation;
    }
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._managedFields?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.managedFields = this._managedFields?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    if (this._ownerReferences?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ownerReferences = this._ownerReferences?.internalValue;
    }
    if (this._resourceVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceVersion = this._resourceVersion;
    }
    if (this._selfLink !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfLink = this._selfLink;
    }
    if (this._uid !== undefined) {
      hasAnyValues = true;
      internalValueResult.uid = this._uid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._clusterName = undefined;
      this._creationTimestamp.internalValue = undefined;
      this._deletionGracePeriodSeconds = undefined;
      this._deletionTimestamp.internalValue = undefined;
      this._finalizers = undefined;
      this._generateName = undefined;
      this._generation = undefined;
      this._labels = undefined;
      this._managedFields.internalValue = undefined;
      this._name = undefined;
      this._namespace = undefined;
      this._ownerReferences.internalValue = undefined;
      this._resourceVersion = undefined;
      this._selfLink = undefined;
      this._uid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._clusterName = value.clusterName;
      this._creationTimestamp.internalValue = value.creationTimestamp;
      this._deletionGracePeriodSeconds = value.deletionGracePeriodSeconds;
      this._deletionTimestamp.internalValue = value.deletionTimestamp;
      this._finalizers = value.finalizers;
      this._generateName = value.generateName;
      this._generation = value.generation;
      this._labels = value.labels;
      this._managedFields.internalValue = value.managedFields;
      this._name = value.name;
      this._namespace = value.namespace;
      this._ownerReferences.internalValue = value.ownerReferences;
      this._resourceVersion = value.resourceVersion;
      this._selfLink = value.selfLink;
      this._uid = value.uid;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // cluster_name - computed: false, optional: true, required: false
  private _clusterName?: string; 
  public get clusterName() {
    return this.getStringAttribute('cluster_name');
  }
  public set clusterName(value: string) {
    this._clusterName = value;
  }
  public resetClusterName() {
    this._clusterName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterNameInput() {
    return this._clusterName;
  }

  // creation_timestamp - computed: false, optional: true, required: false
  private _creationTimestamp = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestampOutputReference(this, "creation_timestamp");
  public get creationTimestamp() {
    return this._creationTimestamp;
  }
  public putCreationTimestamp(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp) {
    this._creationTimestamp.internalValue = value;
  }
  public resetCreationTimestamp() {
    this._creationTimestamp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get creationTimestampInput() {
    return this._creationTimestamp.internalValue;
  }

  // deletion_grace_period_seconds - computed: false, optional: true, required: false
  private _deletionGracePeriodSeconds?: number; 
  public get deletionGracePeriodSeconds() {
    return this.getNumberAttribute('deletion_grace_period_seconds');
  }
  public set deletionGracePeriodSeconds(value: number) {
    this._deletionGracePeriodSeconds = value;
  }
  public resetDeletionGracePeriodSeconds() {
    this._deletionGracePeriodSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deletionGracePeriodSecondsInput() {
    return this._deletionGracePeriodSeconds;
  }

  // deletion_timestamp - computed: false, optional: true, required: false
  private _deletionTimestamp = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestampOutputReference(this, "deletion_timestamp");
  public get deletionTimestamp() {
    return this._deletionTimestamp;
  }
  public putDeletionTimestamp(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp) {
    this._deletionTimestamp.internalValue = value;
  }
  public resetDeletionTimestamp() {
    this._deletionTimestamp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deletionTimestampInput() {
    return this._deletionTimestamp.internalValue;
  }

  // finalizers - computed: false, optional: true, required: false
  private _finalizers?: string[]; 
  public get finalizers() {
    return this.getListAttribute('finalizers');
  }
  public set finalizers(value: string[]) {
    this._finalizers = value;
  }
  public resetFinalizers() {
    this._finalizers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get finalizersInput() {
    return this._finalizers;
  }

  // generate_name - computed: false, optional: true, required: false
  private _generateName?: string; 
  public get generateName() {
    return this.getStringAttribute('generate_name');
  }
  public set generateName(value: string) {
    this._generateName = value;
  }
  public resetGenerateName() {
    this._generateName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get generateNameInput() {
    return this._generateName;
  }

  // generation - computed: false, optional: true, required: false
  private _generation?: number; 
  public get generation() {
    return this.getNumberAttribute('generation');
  }
  public set generation(value: number) {
    this._generation = value;
  }
  public resetGeneration() {
    this._generation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get generationInput() {
    return this._generation;
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // managed_fields - computed: false, optional: true, required: false
  private _managedFields = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsList(this, "managed_fields", false);
  public get managedFields() {
    return this._managedFields;
  }
  public putManagedFields(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields[] | cdktf.IResolvable) {
    this._managedFields.internalValue = value;
  }
  public resetManagedFields() {
    this._managedFields.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get managedFieldsInput() {
    return this._managedFields.internalValue;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }

  // owner_references - computed: false, optional: true, required: false
  private _ownerReferences = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesList(this, "owner_references", false);
  public get ownerReferences() {
    return this._ownerReferences;
  }
  public putOwnerReferences(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences[] | cdktf.IResolvable) {
    this._ownerReferences.internalValue = value;
  }
  public resetOwnerReferences() {
    this._ownerReferences.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerReferencesInput() {
    return this._ownerReferences.internalValue;
  }

  // resource_version - computed: false, optional: true, required: false
  private _resourceVersion?: string; 
  public get resourceVersion() {
    return this.getStringAttribute('resource_version');
  }
  public set resourceVersion(value: string) {
    this._resourceVersion = value;
  }
  public resetResourceVersion() {
    this._resourceVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceVersionInput() {
    return this._resourceVersion;
  }

  // self_link - computed: false, optional: true, required: false
  private _selfLink?: string; 
  public get selfLink() {
    return this.getStringAttribute('self_link');
  }
  public set selfLink(value: string) {
    this._selfLink = value;
  }
  public resetSelfLink() {
    this._selfLink = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfLinkInput() {
    return this._selfLink;
  }

  // uid - computed: false, optional: true, required: false
  private _uid?: string; 
  public get uid() {
    return this.getStringAttribute('uid');
  }
  public set uid(value: string) {
    this._uid = value;
  }
  public resetUid() {
    this._uid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uidInput() {
    return this._uid;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#api_group DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#api_group}
  */
  readonly apiGroup?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#kind DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_group: cdktf.stringToTerraform(struct!.apiGroup),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_group: {
      value: cdktf.stringToHclTerraform(struct!.apiGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiGroup = this._apiGroup;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiGroup = undefined;
      this._kind = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiGroup = value.apiGroup;
      this._kind = value.kind;
      this._name = value.name;
    }
  }

  // api_group - computed: false, optional: true, required: false
  private _apiGroup?: string; 
  public get apiGroup() {
    return this.getStringAttribute('api_group');
  }
  public set apiGroup(value: string) {
    this._apiGroup = value;
  }
  public resetApiGroup() {
    this._apiGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiGroupInput() {
    return this._apiGroup;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#api_group DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#api_group}
  */
  readonly apiGroup?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#kind DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_group: cdktf.stringToTerraform(struct!.apiGroup),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_group: {
      value: cdktf.stringToHclTerraform(struct!.apiGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiGroup = this._apiGroup;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiGroup = undefined;
      this._kind = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiGroup = value.apiGroup;
      this._kind = value.kind;
      this._name = value.name;
    }
  }

  // api_group - computed: false, optional: true, required: false
  private _apiGroup?: string; 
  public get apiGroup() {
    return this.getStringAttribute('api_group');
  }
  public set apiGroup(value: string) {
    this._apiGroup = value;
  }
  public resetApiGroup() {
    this._apiGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiGroupInput() {
    return this._apiGroup;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#string DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#string}
  */
  readonly string?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimitsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    string: cdktf.stringToTerraform(struct!.string),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimitsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    string: {
      value: cdktf.stringToHclTerraform(struct!.string),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimitsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._string !== undefined) {
      hasAnyValues = true;
      internalValueResult.string = this._string;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._string = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._string = value.string;
    }
  }

  // string - computed: false, optional: true, required: false
  private _string?: string; 
  public get string() {
    return this.getStringAttribute('string');
  }
  public set string(value: string) {
    this._string = value;
  }
  public resetString() {
    this._string = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stringInput() {
    return this._string;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#string DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#string}
  */
  readonly string?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequestsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    string: cdktf.stringToTerraform(struct!.string),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequestsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    string: {
      value: cdktf.stringToHclTerraform(struct!.string),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequestsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._string !== undefined) {
      hasAnyValues = true;
      internalValueResult.string = this._string;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._string = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._string = value.string;
    }
  }

  // string - computed: false, optional: true, required: false
  private _string?: string; 
  public get string() {
    return this.getStringAttribute('string');
  }
  public set string(value: string) {
    this._string = value;
  }
  public resetString() {
    this._string = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stringInput() {
    return this._string;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#limits DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#limits}
  */
  readonly limits?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#requests DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#requests}
  */
  readonly requests?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    limits: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimitsToTerraform(struct!.limits),
    requests: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequestsToTerraform(struct!.requests),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    limits: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimitsToHclTerraform(struct!.limits),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits",
    },
    requests: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequestsToHclTerraform(struct!.requests),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._limits?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.limits = this._limits?.internalValue;
    }
    if (this._requests?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requests = this._requests?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._limits.internalValue = undefined;
      this._requests.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._limits.internalValue = value.limits;
      this._requests.internalValue = value.requests;
    }
  }

  // limits - computed: false, optional: true, required: false
  private _limits = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimitsOutputReference(this, "limits");
  public get limits() {
    return this._limits;
  }
  public putLimits(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits) {
    this._limits.internalValue = value;
  }
  public resetLimits() {
    this._limits.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitsInput() {
    return this._limits.internalValue;
  }

  // requests - computed: false, optional: true, required: false
  private _requests = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequestsOutputReference(this, "requests");
  public get requests() {
    return this._requests;
  }
  public putRequests(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests) {
    this._requests.internalValue = value;
  }
  public resetRequests() {
    this._requests.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestsInput() {
    return this._requests.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_expressions DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#access_modes DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#access_modes}
  */
  readonly accessModes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#data_source DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#data_source}
  */
  readonly dataSource?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#data_source_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#data_source_ref}
  */
  readonly dataSourceRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resources DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resources}
  */
  readonly resources?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#selector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#selector}
  */
  readonly selector?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#storage_class_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#storage_class_name}
  */
  readonly storageClassName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_mode}
  */
  readonly volumeMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_name}
  */
  readonly volumeName?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_modes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.accessModes),
    data_source: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceToTerraform(struct!.dataSource),
    data_source_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRefToTerraform(struct!.dataSourceRef),
    resources: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesToTerraform(struct!.resources),
    selector: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorToTerraform(struct!.selector),
    storage_class_name: cdktf.stringToTerraform(struct!.storageClassName),
    volume_mode: cdktf.stringToTerraform(struct!.volumeMode),
    volume_name: cdktf.stringToTerraform(struct!.volumeName),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_modes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.accessModes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    data_source: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceToHclTerraform(struct!.dataSource),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource",
    },
    data_source_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRefToHclTerraform(struct!.dataSourceRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef",
    },
    resources: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesToHclTerraform(struct!.resources),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources",
    },
    selector: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector",
    },
    storage_class_name: {
      value: cdktf.stringToHclTerraform(struct!.storageClassName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_mode: {
      value: cdktf.stringToHclTerraform(struct!.volumeMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_name: {
      value: cdktf.stringToHclTerraform(struct!.volumeName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessModes !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessModes = this._accessModes;
    }
    if (this._dataSource?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSource = this._dataSource?.internalValue;
    }
    if (this._dataSourceRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSourceRef = this._dataSourceRef?.internalValue;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._storageClassName !== undefined) {
      hasAnyValues = true;
      internalValueResult.storageClassName = this._storageClassName;
    }
    if (this._volumeMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeMode = this._volumeMode;
    }
    if (this._volumeName !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeName = this._volumeName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessModes = undefined;
      this._dataSource.internalValue = undefined;
      this._dataSourceRef.internalValue = undefined;
      this._resources.internalValue = undefined;
      this._selector.internalValue = undefined;
      this._storageClassName = undefined;
      this._volumeMode = undefined;
      this._volumeName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessModes = value.accessModes;
      this._dataSource.internalValue = value.dataSource;
      this._dataSourceRef.internalValue = value.dataSourceRef;
      this._resources.internalValue = value.resources;
      this._selector.internalValue = value.selector;
      this._storageClassName = value.storageClassName;
      this._volumeMode = value.volumeMode;
      this._volumeName = value.volumeName;
    }
  }

  // access_modes - computed: false, optional: true, required: false
  private _accessModes?: string[]; 
  public get accessModes() {
    return this.getListAttribute('access_modes');
  }
  public set accessModes(value: string[]) {
    this._accessModes = value;
  }
  public resetAccessModes() {
    this._accessModes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessModesInput() {
    return this._accessModes;
  }

  // data_source - computed: false, optional: true, required: false
  private _dataSource = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceOutputReference(this, "data_source");
  public get dataSource() {
    return this._dataSource;
  }
  public putDataSource(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource) {
    this._dataSource.internalValue = value;
  }
  public resetDataSource() {
    this._dataSource.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceInput() {
    return this._dataSource.internalValue;
  }

  // data_source_ref - computed: false, optional: true, required: false
  private _dataSourceRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRefOutputReference(this, "data_source_ref");
  public get dataSourceRef() {
    return this._dataSourceRef;
  }
  public putDataSourceRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef) {
    this._dataSourceRef.internalValue = value;
  }
  public resetDataSourceRef() {
    this._dataSourceRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceRefInput() {
    return this._dataSourceRef.internalValue;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesOutputReference(this, "resources");
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // selector - computed: false, optional: true, required: false
  private _selector = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector) {
    this._selector.internalValue = value;
  }
  public resetSelector() {
    this._selector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // storage_class_name - computed: false, optional: true, required: false
  private _storageClassName?: string; 
  public get storageClassName() {
    return this.getStringAttribute('storage_class_name');
  }
  public set storageClassName(value: string) {
    this._storageClassName = value;
  }
  public resetStorageClassName() {
    this._storageClassName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storageClassNameInput() {
    return this._storageClassName;
  }

  // volume_mode - computed: false, optional: true, required: false
  private _volumeMode?: string; 
  public get volumeMode() {
    return this.getStringAttribute('volume_mode');
  }
  public set volumeMode(value: string) {
    this._volumeMode = value;
  }
  public resetVolumeMode() {
    this._volumeMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeModeInput() {
    return this._volumeMode;
  }

  // volume_name - computed: false, optional: true, required: false
  private _volumeName?: string; 
  public get volumeName() {
    return this.getStringAttribute('volume_name');
  }
  public set volumeName(value: string) {
    this._volumeName = value;
  }
  public resetVolumeName() {
    this._volumeName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNameInput() {
    return this._volumeName;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplate {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#metadata DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#spec DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataToTerraform(struct!.metadata),
    spec: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecToTerraform(struct!.spec),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata",
    },
    spec: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeral {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_claim_template DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_claim_template}
  */
  readonly volumeClaimTemplate?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplate;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeral | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    volume_claim_template: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateToTerraform(struct!.volumeClaimTemplate),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeral | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    volume_claim_template: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateToHclTerraform(struct!.volumeClaimTemplate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplate",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeral | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._volumeClaimTemplate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeClaimTemplate = this._volumeClaimTemplate?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeral | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._volumeClaimTemplate.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._volumeClaimTemplate.internalValue = value.volumeClaimTemplate;
    }
  }

  // volume_claim_template - computed: false, optional: true, required: false
  private _volumeClaimTemplate = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplateOutputReference(this, "volume_claim_template");
  public get volumeClaimTemplate() {
    return this._volumeClaimTemplate;
  }
  public putVolumeClaimTemplate(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralVolumeClaimTemplate) {
    this._volumeClaimTemplate.internalValue = value;
  }
  public resetVolumeClaimTemplate() {
    this._volumeClaimTemplate.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeClaimTemplateInput() {
    return this._volumeClaimTemplate.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFc {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#lun DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#lun}
  */
  readonly lun?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#target_ww_ns DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#target_ww_ns}
  */
  readonly targetWwNs?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#wwids DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#wwids}
  */
  readonly wwids?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFcToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    lun: cdktf.numberToTerraform(struct!.lun),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    target_ww_ns: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.targetWwNs),
    wwids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.wwids),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFcToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    lun: {
      value: cdktf.numberToHclTerraform(struct!.lun),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    target_ww_ns: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.targetWwNs),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    wwids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.wwids),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._lun !== undefined) {
      hasAnyValues = true;
      internalValueResult.lun = this._lun;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._targetWwNs !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetWwNs = this._targetWwNs;
    }
    if (this._wwids !== undefined) {
      hasAnyValues = true;
      internalValueResult.wwids = this._wwids;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._lun = undefined;
      this._readOnly = undefined;
      this._targetWwNs = undefined;
      this._wwids = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._lun = value.lun;
      this._readOnly = value.readOnly;
      this._targetWwNs = value.targetWwNs;
      this._wwids = value.wwids;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // lun - computed: false, optional: true, required: false
  private _lun?: number; 
  public get lun() {
    return this.getNumberAttribute('lun');
  }
  public set lun(value: number) {
    this._lun = value;
  }
  public resetLun() {
    this._lun = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lunInput() {
    return this._lun;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // target_ww_ns - computed: false, optional: true, required: false
  private _targetWwNs?: string[]; 
  public get targetWwNs() {
    return this.getListAttribute('target_ww_ns');
  }
  public set targetWwNs(value: string[]) {
    this._targetWwNs = value;
  }
  public resetTargetWwNs() {
    this._targetWwNs = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetWwNsInput() {
    return this._targetWwNs;
  }

  // wwids - computed: false, optional: true, required: false
  private _wwids?: string[]; 
  public get wwids() {
    return this.getListAttribute('wwids');
  }
  public set wwids(value: string[]) {
    this._wwids = value;
  }
  public resetWwids() {
    this._wwids = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get wwidsInput() {
    return this._wwids;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolume {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#driver DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#driver}
  */
  readonly driver?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#options DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#options}
  */
  readonly options?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeSecretRef;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    driver: cdktf.stringToTerraform(struct!.driver),
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    options: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.options),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeSecretRefToTerraform(struct!.secretRef),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    driver: {
      value: cdktf.stringToHclTerraform(struct!.driver),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    options: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.options),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeSecretRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolume | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._driver !== undefined) {
      hasAnyValues = true;
      internalValueResult.driver = this._driver;
    }
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._options !== undefined) {
      hasAnyValues = true;
      internalValueResult.options = this._options;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolume | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._driver = undefined;
      this._fsType = undefined;
      this._options = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._driver = value.driver;
      this._fsType = value.fsType;
      this._options = value.options;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
    }
  }

  // driver - computed: false, optional: true, required: false
  private _driver?: string; 
  public get driver() {
    return this.getStringAttribute('driver');
  }
  public set driver(value: string) {
    this._driver = value;
  }
  public resetDriver() {
    this._driver = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get driverInput() {
    return this._driver;
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // options - computed: false, optional: true, required: false
  private _options?: { [key: string]: string }; 
  public get options() {
    return this.getStringMapAttribute('options');
  }
  public set options(value: { [key: string]: string }) {
    this._options = value;
  }
  public resetOptions() {
    this._options = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionsInput() {
    return this._options;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlocker {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#dataset_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#dataset_name}
  */
  readonly datasetName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#dataset_uuid DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#dataset_uuid}
  */
  readonly datasetUuid?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlockerToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlocker | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dataset_name: cdktf.stringToTerraform(struct!.datasetName),
    dataset_uuid: cdktf.stringToTerraform(struct!.datasetUuid),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlockerToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlocker | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dataset_name: {
      value: cdktf.stringToHclTerraform(struct!.datasetName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dataset_uuid: {
      value: cdktf.stringToHclTerraform(struct!.datasetUuid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlockerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlocker | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._datasetName !== undefined) {
      hasAnyValues = true;
      internalValueResult.datasetName = this._datasetName;
    }
    if (this._datasetUuid !== undefined) {
      hasAnyValues = true;
      internalValueResult.datasetUuid = this._datasetUuid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlocker | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._datasetName = undefined;
      this._datasetUuid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._datasetName = value.datasetName;
      this._datasetUuid = value.datasetUuid;
    }
  }

  // dataset_name - computed: false, optional: true, required: false
  private _datasetName?: string; 
  public get datasetName() {
    return this.getStringAttribute('dataset_name');
  }
  public set datasetName(value: string) {
    this._datasetName = value;
  }
  public resetDatasetName() {
    this._datasetName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get datasetNameInput() {
    return this._datasetName;
  }

  // dataset_uuid - computed: false, optional: true, required: false
  private _datasetUuid?: string; 
  public get datasetUuid() {
    return this.getStringAttribute('dataset_uuid');
  }
  public set datasetUuid(value: string) {
    this._datasetUuid = value;
  }
  public resetDatasetUuid() {
    this._datasetUuid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get datasetUuidInput() {
    return this._datasetUuid;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGcePersistentDisk {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#partition DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#partition}
  */
  readonly partition?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pd_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pd_name}
  */
  readonly pdName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGcePersistentDiskToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGcePersistentDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    partition: cdktf.numberToTerraform(struct!.partition),
    pd_name: cdktf.stringToTerraform(struct!.pdName),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGcePersistentDiskToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGcePersistentDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    partition: {
      value: cdktf.numberToHclTerraform(struct!.partition),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    pd_name: {
      value: cdktf.stringToHclTerraform(struct!.pdName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGcePersistentDiskOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGcePersistentDisk | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._partition !== undefined) {
      hasAnyValues = true;
      internalValueResult.partition = this._partition;
    }
    if (this._pdName !== undefined) {
      hasAnyValues = true;
      internalValueResult.pdName = this._pdName;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGcePersistentDisk | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._partition = undefined;
      this._pdName = undefined;
      this._readOnly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._partition = value.partition;
      this._pdName = value.pdName;
      this._readOnly = value.readOnly;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // partition - computed: false, optional: true, required: false
  private _partition?: number; 
  public get partition() {
    return this.getNumberAttribute('partition');
  }
  public set partition(value: number) {
    this._partition = value;
  }
  public resetPartition() {
    this._partition = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partitionInput() {
    return this._partition;
  }

  // pd_name - computed: false, optional: true, required: false
  private _pdName?: string; 
  public get pdName() {
    return this.getStringAttribute('pd_name');
  }
  public set pdName(value: string) {
    this._pdName = value;
  }
  public resetPdName() {
    this._pdName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pdNameInput() {
    return this._pdName;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGitRepo {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#directory DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#directory}
  */
  readonly directory?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#repository DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#repository}
  */
  readonly repository?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#revision DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#revision}
  */
  readonly revision?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGitRepoToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGitRepo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    directory: cdktf.stringToTerraform(struct!.directory),
    repository: cdktf.stringToTerraform(struct!.repository),
    revision: cdktf.stringToTerraform(struct!.revision),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGitRepoToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGitRepo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    directory: {
      value: cdktf.stringToHclTerraform(struct!.directory),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    repository: {
      value: cdktf.stringToHclTerraform(struct!.repository),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    revision: {
      value: cdktf.stringToHclTerraform(struct!.revision),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGitRepoOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGitRepo | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._directory !== undefined) {
      hasAnyValues = true;
      internalValueResult.directory = this._directory;
    }
    if (this._repository !== undefined) {
      hasAnyValues = true;
      internalValueResult.repository = this._repository;
    }
    if (this._revision !== undefined) {
      hasAnyValues = true;
      internalValueResult.revision = this._revision;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGitRepo | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._directory = undefined;
      this._repository = undefined;
      this._revision = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._directory = value.directory;
      this._repository = value.repository;
      this._revision = value.revision;
    }
  }

  // directory - computed: false, optional: true, required: false
  private _directory?: string; 
  public get directory() {
    return this.getStringAttribute('directory');
  }
  public set directory(value: string) {
    this._directory = value;
  }
  public resetDirectory() {
    this._directory = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directoryInput() {
    return this._directory;
  }

  // repository - computed: false, optional: true, required: false
  private _repository?: string; 
  public get repository() {
    return this.getStringAttribute('repository');
  }
  public set repository(value: string) {
    this._repository = value;
  }
  public resetRepository() {
    this._repository = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get repositoryInput() {
    return this._repository;
  }

  // revision - computed: false, optional: true, required: false
  private _revision?: string; 
  public get revision() {
    return this.getStringAttribute('revision');
  }
  public set revision(value: string) {
    this._revision = value;
  }
  public resetRevision() {
    this._revision = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get revisionInput() {
    return this._revision;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGlusterfs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#endpoints DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#endpoints}
  */
  readonly endpoints?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGlusterfsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGlusterfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    endpoints: cdktf.stringToTerraform(struct!.endpoints),
    path: cdktf.stringToTerraform(struct!.path),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGlusterfsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGlusterfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    endpoints: {
      value: cdktf.stringToHclTerraform(struct!.endpoints),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGlusterfsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGlusterfs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._endpoints !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoints = this._endpoints;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGlusterfs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._endpoints = undefined;
      this._path = undefined;
      this._readOnly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._endpoints = value.endpoints;
      this._path = value.path;
      this._readOnly = value.readOnly;
    }
  }

  // endpoints - computed: false, optional: true, required: false
  private _endpoints?: string; 
  public get endpoints() {
    return this.getStringAttribute('endpoints');
  }
  public set endpoints(value: string) {
    this._endpoints = value;
  }
  public resetEndpoints() {
    this._endpoints = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointsInput() {
    return this._endpoints;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceHostPath {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceHostPathToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceHostPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    path: cdktf.stringToTerraform(struct!.path),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceHostPathToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceHostPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceHostPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceHostPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceHostPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._path = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._path = value.path;
      this._type = value.type;
    }
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsi {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#chap_auth_discovery DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#chap_auth_discovery}
  */
  readonly chapAuthDiscovery?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#chap_auth_session DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#chap_auth_session}
  */
  readonly chapAuthSession?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#initiator_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#initiator_name}
  */
  readonly initiatorName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#iqn DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#iqn}
  */
  readonly iqn?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#iscsi_interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#iscsi_interface}
  */
  readonly iscsiInterface?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#lun DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#lun}
  */
  readonly lun?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#portals DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#portals}
  */
  readonly portals?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiSecretRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#target_portal DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#target_portal}
  */
  readonly targetPortal?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    chap_auth_discovery: cdktf.booleanToTerraform(struct!.chapAuthDiscovery),
    chap_auth_session: cdktf.booleanToTerraform(struct!.chapAuthSession),
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    initiator_name: cdktf.stringToTerraform(struct!.initiatorName),
    iqn: cdktf.stringToTerraform(struct!.iqn),
    iscsi_interface: cdktf.stringToTerraform(struct!.iscsiInterface),
    lun: cdktf.numberToTerraform(struct!.lun),
    portals: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.portals),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiSecretRefToTerraform(struct!.secretRef),
    target_portal: cdktf.stringToTerraform(struct!.targetPortal),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    chap_auth_discovery: {
      value: cdktf.booleanToHclTerraform(struct!.chapAuthDiscovery),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    chap_auth_session: {
      value: cdktf.booleanToHclTerraform(struct!.chapAuthSession),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    initiator_name: {
      value: cdktf.stringToHclTerraform(struct!.initiatorName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    iqn: {
      value: cdktf.stringToHclTerraform(struct!.iqn),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    iscsi_interface: {
      value: cdktf.stringToHclTerraform(struct!.iscsiInterface),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    lun: {
      value: cdktf.numberToHclTerraform(struct!.lun),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    portals: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.portals),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiSecretRef",
    },
    target_portal: {
      value: cdktf.stringToHclTerraform(struct!.targetPortal),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._chapAuthDiscovery !== undefined) {
      hasAnyValues = true;
      internalValueResult.chapAuthDiscovery = this._chapAuthDiscovery;
    }
    if (this._chapAuthSession !== undefined) {
      hasAnyValues = true;
      internalValueResult.chapAuthSession = this._chapAuthSession;
    }
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._initiatorName !== undefined) {
      hasAnyValues = true;
      internalValueResult.initiatorName = this._initiatorName;
    }
    if (this._iqn !== undefined) {
      hasAnyValues = true;
      internalValueResult.iqn = this._iqn;
    }
    if (this._iscsiInterface !== undefined) {
      hasAnyValues = true;
      internalValueResult.iscsiInterface = this._iscsiInterface;
    }
    if (this._lun !== undefined) {
      hasAnyValues = true;
      internalValueResult.lun = this._lun;
    }
    if (this._portals !== undefined) {
      hasAnyValues = true;
      internalValueResult.portals = this._portals;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._targetPortal !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetPortal = this._targetPortal;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._chapAuthDiscovery = undefined;
      this._chapAuthSession = undefined;
      this._fsType = undefined;
      this._initiatorName = undefined;
      this._iqn = undefined;
      this._iscsiInterface = undefined;
      this._lun = undefined;
      this._portals = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
      this._targetPortal = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._chapAuthDiscovery = value.chapAuthDiscovery;
      this._chapAuthSession = value.chapAuthSession;
      this._fsType = value.fsType;
      this._initiatorName = value.initiatorName;
      this._iqn = value.iqn;
      this._iscsiInterface = value.iscsiInterface;
      this._lun = value.lun;
      this._portals = value.portals;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
      this._targetPortal = value.targetPortal;
    }
  }

  // chap_auth_discovery - computed: false, optional: true, required: false
  private _chapAuthDiscovery?: boolean | cdktf.IResolvable; 
  public get chapAuthDiscovery() {
    return this.getBooleanAttribute('chap_auth_discovery');
  }
  public set chapAuthDiscovery(value: boolean | cdktf.IResolvable) {
    this._chapAuthDiscovery = value;
  }
  public resetChapAuthDiscovery() {
    this._chapAuthDiscovery = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get chapAuthDiscoveryInput() {
    return this._chapAuthDiscovery;
  }

  // chap_auth_session - computed: false, optional: true, required: false
  private _chapAuthSession?: boolean | cdktf.IResolvable; 
  public get chapAuthSession() {
    return this.getBooleanAttribute('chap_auth_session');
  }
  public set chapAuthSession(value: boolean | cdktf.IResolvable) {
    this._chapAuthSession = value;
  }
  public resetChapAuthSession() {
    this._chapAuthSession = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get chapAuthSessionInput() {
    return this._chapAuthSession;
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // initiator_name - computed: false, optional: true, required: false
  private _initiatorName?: string; 
  public get initiatorName() {
    return this.getStringAttribute('initiator_name');
  }
  public set initiatorName(value: string) {
    this._initiatorName = value;
  }
  public resetInitiatorName() {
    this._initiatorName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get initiatorNameInput() {
    return this._initiatorName;
  }

  // iqn - computed: false, optional: true, required: false
  private _iqn?: string; 
  public get iqn() {
    return this.getStringAttribute('iqn');
  }
  public set iqn(value: string) {
    this._iqn = value;
  }
  public resetIqn() {
    this._iqn = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iqnInput() {
    return this._iqn;
  }

  // iscsi_interface - computed: false, optional: true, required: false
  private _iscsiInterface?: string; 
  public get iscsiInterface() {
    return this.getStringAttribute('iscsi_interface');
  }
  public set iscsiInterface(value: string) {
    this._iscsiInterface = value;
  }
  public resetIscsiInterface() {
    this._iscsiInterface = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iscsiInterfaceInput() {
    return this._iscsiInterface;
  }

  // lun - computed: false, optional: true, required: false
  private _lun?: number; 
  public get lun() {
    return this.getNumberAttribute('lun');
  }
  public set lun(value: number) {
    this._lun = value;
  }
  public resetLun() {
    this._lun = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lunInput() {
    return this._lun;
  }

  // portals - computed: false, optional: true, required: false
  private _portals?: string[]; 
  public get portals() {
    return this.getListAttribute('portals');
  }
  public set portals(value: string[]) {
    this._portals = value;
  }
  public resetPortals() {
    this._portals = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portalsInput() {
    return this._portals;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // target_portal - computed: false, optional: true, required: false
  private _targetPortal?: string; 
  public get targetPortal() {
    return this.getStringAttribute('target_portal');
  }
  public set targetPortal(value: string) {
    this._targetPortal = value;
  }
  public resetTargetPortal() {
    this._targetPortal = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetPortalInput() {
    return this._targetPortal;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceNfs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#server DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#server}
  */
  readonly server?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceNfsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceNfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    path: cdktf.stringToTerraform(struct!.path),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    server: cdktf.stringToTerraform(struct!.server),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceNfsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceNfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    server: {
      value: cdktf.stringToHclTerraform(struct!.server),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceNfsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceNfs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._server !== undefined) {
      hasAnyValues = true;
      internalValueResult.server = this._server;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceNfs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._path = undefined;
      this._readOnly = undefined;
      this._server = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._path = value.path;
      this._readOnly = value.readOnly;
      this._server = value.server;
    }
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // server - computed: false, optional: true, required: false
  private _server?: string; 
  public get server() {
    return this.getStringAttribute('server');
  }
  public set server(value: string) {
    this._server = value;
  }
  public resetServer() {
    this._server = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serverInput() {
    return this._server;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePersistentVolumeClaim {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#claim_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#claim_name}
  */
  readonly claimName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePersistentVolumeClaimToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePersistentVolumeClaim | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    claim_name: cdktf.stringToTerraform(struct!.claimName),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePersistentVolumeClaimToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePersistentVolumeClaim | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    claim_name: {
      value: cdktf.stringToHclTerraform(struct!.claimName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePersistentVolumeClaimOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePersistentVolumeClaim | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._claimName !== undefined) {
      hasAnyValues = true;
      internalValueResult.claimName = this._claimName;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePersistentVolumeClaim | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._claimName = undefined;
      this._readOnly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._claimName = value.claimName;
      this._readOnly = value.readOnly;
    }
  }

  // claim_name - computed: false, optional: true, required: false
  private _claimName?: string; 
  public get claimName() {
    return this.getStringAttribute('claim_name');
  }
  public set claimName(value: string) {
    this._claimName = value;
  }
  public resetClaimName() {
    this._claimName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get claimNameInput() {
    return this._claimName;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePhotonPersistentDisk {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pd_id DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pd_id}
  */
  readonly pdId?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePhotonPersistentDiskToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePhotonPersistentDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    pd_id: cdktf.stringToTerraform(struct!.pdId),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePhotonPersistentDiskToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePhotonPersistentDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pd_id: {
      value: cdktf.stringToHclTerraform(struct!.pdId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePhotonPersistentDiskOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePhotonPersistentDisk | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._pdId !== undefined) {
      hasAnyValues = true;
      internalValueResult.pdId = this._pdId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePhotonPersistentDisk | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._pdId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._pdId = value.pdId;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // pd_id - computed: false, optional: true, required: false
  private _pdId?: string; 
  public get pdId() {
    return this.getStringAttribute('pd_id');
  }
  public set pdId(value: string) {
    this._pdId = value;
  }
  public resetPdId() {
    this._pdId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pdIdInput() {
    return this._pdId;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePortworxVolume {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_id DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_id}
  */
  readonly volumeId?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePortworxVolumeToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePortworxVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    volume_id: cdktf.stringToTerraform(struct!.volumeId),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePortworxVolumeToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePortworxVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    volume_id: {
      value: cdktf.stringToHclTerraform(struct!.volumeId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePortworxVolumeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePortworxVolume | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._volumeId !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeId = this._volumeId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePortworxVolume | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._readOnly = undefined;
      this._volumeId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._readOnly = value.readOnly;
      this._volumeId = value.volumeId;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // volume_id - computed: false, optional: true, required: false
  private _volumeId?: string; 
  public get volumeId() {
    return this.getStringAttribute('volume_id');
  }
  public set volumeId(value: string) {
    this._volumeId = value;
  }
  public resetVolumeId() {
    this._volumeId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeIdInput() {
    return this._volumeId;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItems {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItemsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItemsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._mode = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._mode = value.mode;
      this._path = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItemsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReferenceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReferenceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReferenceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMap {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#items DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItems[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#local_object_reference DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#local_object_reference}
  */
  readonly localObjectReference?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#optional DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    items: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItemsToTerraform, false)(struct!.items),
    local_object_reference: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReferenceToTerraform(struct!.localObjectReference),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    items: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItemsList",
    },
    local_object_reference: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReferenceToHclTerraform(struct!.localObjectReference),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMap | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    if (this._localObjectReference?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.localObjectReference = this._localObjectReference?.internalValue;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMap | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._items.internalValue = undefined;
      this._localObjectReference.internalValue = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._items.internalValue = value.items;
      this._localObjectReference.internalValue = value.localObjectReference;
      this._optional = value.optional;
    }
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }

  // local_object_reference - computed: false, optional: true, required: false
  private _localObjectReference = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReferenceOutputReference(this, "local_object_reference");
  public get localObjectReference() {
    return this._localObjectReference;
  }
  public putLocalObjectReference(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference) {
    this._localObjectReference.internalValue = value;
  }
  public resetLocalObjectReference() {
    this._localObjectReference.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localObjectReferenceInput() {
    return this._localObjectReference.internalValue;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#api_version DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#field_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#field_path}
  */
  readonly fieldPath?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    field_path: cdktf.stringToTerraform(struct!.fieldPath),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    field_path: {
      value: cdktf.stringToHclTerraform(struct!.fieldPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldPath = this._fieldPath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldPath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldPath = value.fieldPath;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // field_path - computed: false, optional: true, required: false
  private _fieldPath?: string; 
  public get fieldPath() {
    return this.getStringAttribute('field_path');
  }
  public set fieldPath(value: string) {
    this._fieldPath = value;
  }
  public resetFieldPath() {
    this._fieldPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldPathInput() {
    return this._fieldPath;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#container_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#container_name}
  */
  readonly containerName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#divisor DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#divisor}
  */
  readonly divisor?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resource DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resource}
  */
  readonly resource?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_name: cdktf.stringToTerraform(struct!.containerName),
    divisor: cdktf.stringToTerraform(struct!.divisor),
    resource: cdktf.stringToTerraform(struct!.resource),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_name: {
      value: cdktf.stringToHclTerraform(struct!.containerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    divisor: {
      value: cdktf.stringToHclTerraform(struct!.divisor),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerName = this._containerName;
    }
    if (this._divisor !== undefined) {
      hasAnyValues = true;
      internalValueResult.divisor = this._divisor;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerName = undefined;
      this._divisor = undefined;
      this._resource = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerName = value.containerName;
      this._divisor = value.divisor;
      this._resource = value.resource;
    }
  }

  // container_name - computed: false, optional: true, required: false
  private _containerName?: string; 
  public get containerName() {
    return this.getStringAttribute('container_name');
  }
  public set containerName(value: string) {
    this._containerName = value;
  }
  public resetContainerName() {
    this._containerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNameInput() {
    return this._containerName;
  }

  // divisor - computed: false, optional: true, required: false
  private _divisor?: string; 
  public get divisor() {
    return this.getStringAttribute('divisor');
  }
  public set divisor(value: string) {
    this._divisor = value;
  }
  public resetDivisor() {
    this._divisor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get divisorInput() {
    return this._divisor;
  }

  // resource - computed: false, optional: true, required: false
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  public resetResource() {
    this._resource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItems {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#field_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#field_ref}
  */
  readonly fieldRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resource_field_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resource_field_ref}
  */
  readonly resourceFieldRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    field_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRefToTerraform(struct!.fieldRef),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
    resource_field_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRefToTerraform(struct!.resourceFieldRef),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    field_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRefToHclTerraform(struct!.fieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_field_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRefToHclTerraform(struct!.resourceFieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldRef = this._fieldRef?.internalValue;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._resourceFieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceFieldRef = this._resourceFieldRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fieldRef.internalValue = undefined;
      this._mode = undefined;
      this._path = undefined;
      this._resourceFieldRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fieldRef.internalValue = value.fieldRef;
      this._mode = value.mode;
      this._path = value.path;
      this._resourceFieldRef.internalValue = value.resourceFieldRef;
    }
  }

  // field_ref - computed: false, optional: true, required: false
  private _fieldRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRefOutputReference(this, "field_ref");
  public get fieldRef() {
    return this._fieldRef;
  }
  public putFieldRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef) {
    this._fieldRef.internalValue = value;
  }
  public resetFieldRef() {
    this._fieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldRefInput() {
    return this._fieldRef.internalValue;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // resource_field_ref - computed: false, optional: true, required: false
  private _resourceFieldRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRefOutputReference(this, "resource_field_ref");
  public get resourceFieldRef() {
    return this._resourceFieldRef;
  }
  public putResourceFieldRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef) {
    this._resourceFieldRef.internalValue = value;
  }
  public resetResourceFieldRef() {
    this._resourceFieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceFieldRefInput() {
    return this._resourceFieldRef.internalValue;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApi {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#items DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItems[] | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    items: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsToTerraform, false)(struct!.items),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    items: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._items.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._items.internalValue = value.items;
    }
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItems {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItemsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItemsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._mode = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._mode = value.mode;
      this._path = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItemsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretLocalObjectReferenceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretLocalObjectReferenceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretLocalObjectReferenceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecret {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#items DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItems[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#local_object_reference DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#local_object_reference}
  */
  readonly localObjectReference?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#optional DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    items: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItemsToTerraform, false)(struct!.items),
    local_object_reference: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretLocalObjectReferenceToTerraform(struct!.localObjectReference),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    items: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItemsList",
    },
    local_object_reference: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretLocalObjectReferenceToHclTerraform(struct!.localObjectReference),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecret | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    if (this._localObjectReference?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.localObjectReference = this._localObjectReference?.internalValue;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecret | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._items.internalValue = undefined;
      this._localObjectReference.internalValue = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._items.internalValue = value.items;
      this._localObjectReference.internalValue = value.localObjectReference;
      this._optional = value.optional;
    }
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }

  // local_object_reference - computed: false, optional: true, required: false
  private _localObjectReference = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretLocalObjectReferenceOutputReference(this, "local_object_reference");
  public get localObjectReference() {
    return this._localObjectReference;
  }
  public putLocalObjectReference(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference) {
    this._localObjectReference.internalValue = value;
  }
  public resetLocalObjectReference() {
    this._localObjectReference.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localObjectReferenceInput() {
    return this._localObjectReference.internalValue;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesServiceAccountToken {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#audience DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#audience}
  */
  readonly audience?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#expiration_seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#expiration_seconds}
  */
  readonly expirationSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesServiceAccountTokenToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesServiceAccountToken | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    audience: cdktf.stringToTerraform(struct!.audience),
    expiration_seconds: cdktf.numberToTerraform(struct!.expirationSeconds),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesServiceAccountTokenToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesServiceAccountToken | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    audience: {
      value: cdktf.stringToHclTerraform(struct!.audience),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    expiration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.expirationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesServiceAccountTokenOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesServiceAccountToken | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._audience !== undefined) {
      hasAnyValues = true;
      internalValueResult.audience = this._audience;
    }
    if (this._expirationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.expirationSeconds = this._expirationSeconds;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesServiceAccountToken | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._audience = undefined;
      this._expirationSeconds = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._audience = value.audience;
      this._expirationSeconds = value.expirationSeconds;
      this._path = value.path;
    }
  }

  // audience - computed: false, optional: true, required: false
  private _audience?: string; 
  public get audience() {
    return this.getStringAttribute('audience');
  }
  public set audience(value: string) {
    this._audience = value;
  }
  public resetAudience() {
    this._audience = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get audienceInput() {
    return this._audience;
  }

  // expiration_seconds - computed: false, optional: true, required: false
  private _expirationSeconds?: number; 
  public get expirationSeconds() {
    return this.getNumberAttribute('expiration_seconds');
  }
  public set expirationSeconds(value: number) {
    this._expirationSeconds = value;
  }
  public resetExpirationSeconds() {
    this._expirationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expirationSecondsInput() {
    return this._expirationSeconds;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSources {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#config_map DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#config_map}
  */
  readonly configMap?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMap;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#downward_api DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#downward_api}
  */
  readonly downwardApi?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApi;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret}
  */
  readonly secret?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecret;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#service_account_token DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#service_account_token}
  */
  readonly serviceAccountToken?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesServiceAccountToken;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config_map: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapToTerraform(struct!.configMap),
    downward_api: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiToTerraform(struct!.downwardApi),
    secret: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretToTerraform(struct!.secret),
    service_account_token: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesServiceAccountTokenToTerraform(struct!.serviceAccountToken),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config_map: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapToHclTerraform(struct!.configMap),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMap",
    },
    downward_api: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiToHclTerraform(struct!.downwardApi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApi",
    },
    secret: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretToHclTerraform(struct!.secret),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecret",
    },
    service_account_token: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesServiceAccountTokenToHclTerraform(struct!.serviceAccountToken),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesServiceAccountToken",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configMap?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.configMap = this._configMap?.internalValue;
    }
    if (this._downwardApi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.downwardApi = this._downwardApi?.internalValue;
    }
    if (this._secret?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret?.internalValue;
    }
    if (this._serviceAccountToken?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountToken = this._serviceAccountToken?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configMap.internalValue = undefined;
      this._downwardApi.internalValue = undefined;
      this._secret.internalValue = undefined;
      this._serviceAccountToken.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configMap.internalValue = value.configMap;
      this._downwardApi.internalValue = value.downwardApi;
      this._secret.internalValue = value.secret;
      this._serviceAccountToken.internalValue = value.serviceAccountToken;
    }
  }

  // config_map - computed: false, optional: true, required: false
  private _configMap = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMapOutputReference(this, "config_map");
  public get configMap() {
    return this._configMap;
  }
  public putConfigMap(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesConfigMap) {
    this._configMap.internalValue = value;
  }
  public resetConfigMap() {
    this._configMap.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configMapInput() {
    return this._configMap.internalValue;
  }

  // downward_api - computed: false, optional: true, required: false
  private _downwardApi = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApiOutputReference(this, "downward_api");
  public get downwardApi() {
    return this._downwardApi;
  }
  public putDownwardApi(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesDownwardApi) {
    this._downwardApi.internalValue = value;
  }
  public resetDownwardApi() {
    this._downwardApi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get downwardApiInput() {
    return this._downwardApi.internalValue;
  }

  // secret - computed: false, optional: true, required: false
  private _secret = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecretOutputReference(this, "secret");
  public get secret() {
    return this._secret;
  }
  public putSecret(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesSecret) {
    this._secret.internalValue = value;
  }
  public resetSecret() {
    this._secret.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret.internalValue;
  }

  // service_account_token - computed: false, optional: true, required: false
  private _serviceAccountToken = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesServiceAccountTokenOutputReference(this, "service_account_token");
  public get serviceAccountToken() {
    return this._serviceAccountToken;
  }
  public putServiceAccountToken(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesServiceAccountToken) {
    this._serviceAccountToken.internalValue = value;
  }
  public resetServiceAccountToken() {
    this._serviceAccountToken.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountTokenInput() {
    return this._serviceAccountToken.internalValue;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSources[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjected {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#default_mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#default_mode}
  */
  readonly defaultMode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#sources DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#sources}
  */
  readonly sources?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSources[] | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjected | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_mode: cdktf.numberToTerraform(struct!.defaultMode),
    sources: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesToTerraform, false)(struct!.sources),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjected | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_mode: {
      value: cdktf.numberToHclTerraform(struct!.defaultMode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    sources: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesToHclTerraform, false)(struct!.sources),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjected | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultMode = this._defaultMode;
    }
    if (this._sources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sources = this._sources?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjected | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultMode = undefined;
      this._sources.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultMode = value.defaultMode;
      this._sources.internalValue = value.sources;
    }
  }

  // default_mode - computed: false, optional: true, required: false
  private _defaultMode?: number; 
  public get defaultMode() {
    return this.getNumberAttribute('default_mode');
  }
  public set defaultMode(value: number) {
    this._defaultMode = value;
  }
  public resetDefaultMode() {
    this._defaultMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultModeInput() {
    return this._defaultMode;
  }

  // sources - computed: false, optional: true, required: false
  private _sources = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSourcesList(this, "sources", false);
  public get sources() {
    return this._sources;
  }
  public putSources(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedSources[] | cdktf.IResolvable) {
    this._sources.internalValue = value;
  }
  public resetSources() {
    this._sources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourcesInput() {
    return this._sources.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceQuobyte {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#group DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#group}
  */
  readonly group?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#registry DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#registry}
  */
  readonly registry?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#tenant DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#tenant}
  */
  readonly tenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#user DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#user}
  */
  readonly user?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume}
  */
  readonly volume?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceQuobyteToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceQuobyte | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    group: cdktf.stringToTerraform(struct!.group),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    registry: cdktf.stringToTerraform(struct!.registry),
    tenant: cdktf.stringToTerraform(struct!.tenant),
    user: cdktf.stringToTerraform(struct!.user),
    volume: cdktf.stringToTerraform(struct!.volume),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceQuobyteToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceQuobyte | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    group: {
      value: cdktf.stringToHclTerraform(struct!.group),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    registry: {
      value: cdktf.stringToHclTerraform(struct!.registry),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tenant: {
      value: cdktf.stringToHclTerraform(struct!.tenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume: {
      value: cdktf.stringToHclTerraform(struct!.volume),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceQuobyteOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceQuobyte | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._group !== undefined) {
      hasAnyValues = true;
      internalValueResult.group = this._group;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._registry !== undefined) {
      hasAnyValues = true;
      internalValueResult.registry = this._registry;
    }
    if (this._tenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.tenant = this._tenant;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    if (this._volume !== undefined) {
      hasAnyValues = true;
      internalValueResult.volume = this._volume;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceQuobyte | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._group = undefined;
      this._readOnly = undefined;
      this._registry = undefined;
      this._tenant = undefined;
      this._user = undefined;
      this._volume = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._group = value.group;
      this._readOnly = value.readOnly;
      this._registry = value.registry;
      this._tenant = value.tenant;
      this._user = value.user;
      this._volume = value.volume;
    }
  }

  // group - computed: false, optional: true, required: false
  private _group?: string; 
  public get group() {
    return this.getStringAttribute('group');
  }
  public set group(value: string) {
    this._group = value;
  }
  public resetGroup() {
    this._group = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupInput() {
    return this._group;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // registry - computed: false, optional: true, required: false
  private _registry?: string; 
  public get registry() {
    return this.getStringAttribute('registry');
  }
  public set registry(value: string) {
    this._registry = value;
  }
  public resetRegistry() {
    this._registry = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get registryInput() {
    return this._registry;
  }

  // tenant - computed: false, optional: true, required: false
  private _tenant?: string; 
  public get tenant() {
    return this.getStringAttribute('tenant');
  }
  public set tenant(value: string) {
    this._tenant = value;
  }
  public resetTenant() {
    this._tenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tenantInput() {
    return this._tenant;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }

  // volume - computed: false, optional: true, required: false
  private _volume?: string; 
  public get volume() {
    return this.getStringAttribute('volume');
  }
  public set volume(value: string) {
    this._volume = value;
  }
  public resetVolume() {
    this._volume = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeInput() {
    return this._volume;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbd {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#image DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#keyring DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#keyring}
  */
  readonly keyring?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#monitors DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#monitors}
  */
  readonly monitors?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pool DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pool}
  */
  readonly pool?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdSecretRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#user DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#user}
  */
  readonly user?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    image: cdktf.stringToTerraform(struct!.image),
    keyring: cdktf.stringToTerraform(struct!.keyring),
    monitors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitors),
    pool: cdktf.stringToTerraform(struct!.pool),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdSecretRefToTerraform(struct!.secretRef),
    user: cdktf.stringToTerraform(struct!.user),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keyring: {
      value: cdktf.stringToHclTerraform(struct!.keyring),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    monitors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pool: {
      value: cdktf.stringToHclTerraform(struct!.pool),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdSecretRef",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbd | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._keyring !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyring = this._keyring;
    }
    if (this._monitors !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitors = this._monitors;
    }
    if (this._pool !== undefined) {
      hasAnyValues = true;
      internalValueResult.pool = this._pool;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbd | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._image = undefined;
      this._keyring = undefined;
      this._monitors = undefined;
      this._pool = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
      this._user = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._image = value.image;
      this._keyring = value.keyring;
      this._monitors = value.monitors;
      this._pool = value.pool;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
      this._user = value.user;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // keyring - computed: false, optional: true, required: false
  private _keyring?: string; 
  public get keyring() {
    return this.getStringAttribute('keyring');
  }
  public set keyring(value: string) {
    this._keyring = value;
  }
  public resetKeyring() {
    this._keyring = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyringInput() {
    return this._keyring;
  }

  // monitors - computed: false, optional: true, required: false
  private _monitors?: string[]; 
  public get monitors() {
    return this.getListAttribute('monitors');
  }
  public set monitors(value: string[]) {
    this._monitors = value;
  }
  public resetMonitors() {
    this._monitors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitorsInput() {
    return this._monitors;
  }

  // pool - computed: false, optional: true, required: false
  private _pool?: string; 
  public get pool() {
    return this.getStringAttribute('pool');
  }
  public set pool(value: string) {
    this._pool = value;
  }
  public resetPool() {
    this._pool = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get poolInput() {
    return this._pool;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIo {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#gateway DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#gateway}
  */
  readonly gateway?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#protection_domain DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#protection_domain}
  */
  readonly protectionDomain?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoSecretRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#ssl_enabled DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#ssl_enabled}
  */
  readonly sslEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#storage_mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#storage_mode}
  */
  readonly storageMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#storage_pool DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#storage_pool}
  */
  readonly storagePool?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#system DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#system}
  */
  readonly systemAttribute?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_name}
  */
  readonly volumeName?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    gateway: cdktf.stringToTerraform(struct!.gateway),
    protection_domain: cdktf.stringToTerraform(struct!.protectionDomain),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoSecretRefToTerraform(struct!.secretRef),
    ssl_enabled: cdktf.booleanToTerraform(struct!.sslEnabled),
    storage_mode: cdktf.stringToTerraform(struct!.storageMode),
    storage_pool: cdktf.stringToTerraform(struct!.storagePool),
    system: cdktf.stringToTerraform(struct!.systemAttribute),
    volume_name: cdktf.stringToTerraform(struct!.volumeName),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    gateway: {
      value: cdktf.stringToHclTerraform(struct!.gateway),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protection_domain: {
      value: cdktf.stringToHclTerraform(struct!.protectionDomain),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoSecretRef",
    },
    ssl_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.sslEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    storage_mode: {
      value: cdktf.stringToHclTerraform(struct!.storageMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    storage_pool: {
      value: cdktf.stringToHclTerraform(struct!.storagePool),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    system: {
      value: cdktf.stringToHclTerraform(struct!.systemAttribute),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_name: {
      value: cdktf.stringToHclTerraform(struct!.volumeName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIo | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._gateway !== undefined) {
      hasAnyValues = true;
      internalValueResult.gateway = this._gateway;
    }
    if (this._protectionDomain !== undefined) {
      hasAnyValues = true;
      internalValueResult.protectionDomain = this._protectionDomain;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._sslEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.sslEnabled = this._sslEnabled;
    }
    if (this._storageMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.storageMode = this._storageMode;
    }
    if (this._storagePool !== undefined) {
      hasAnyValues = true;
      internalValueResult.storagePool = this._storagePool;
    }
    if (this._system !== undefined) {
      hasAnyValues = true;
      internalValueResult.systemAttribute = this._system;
    }
    if (this._volumeName !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeName = this._volumeName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIo | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._gateway = undefined;
      this._protectionDomain = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
      this._sslEnabled = undefined;
      this._storageMode = undefined;
      this._storagePool = undefined;
      this._system = undefined;
      this._volumeName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._gateway = value.gateway;
      this._protectionDomain = value.protectionDomain;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
      this._sslEnabled = value.sslEnabled;
      this._storageMode = value.storageMode;
      this._storagePool = value.storagePool;
      this._system = value.systemAttribute;
      this._volumeName = value.volumeName;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // gateway - computed: false, optional: true, required: false
  private _gateway?: string; 
  public get gateway() {
    return this.getStringAttribute('gateway');
  }
  public set gateway(value: string) {
    this._gateway = value;
  }
  public resetGateway() {
    this._gateway = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gatewayInput() {
    return this._gateway;
  }

  // protection_domain - computed: false, optional: true, required: false
  private _protectionDomain?: string; 
  public get protectionDomain() {
    return this.getStringAttribute('protection_domain');
  }
  public set protectionDomain(value: string) {
    this._protectionDomain = value;
  }
  public resetProtectionDomain() {
    this._protectionDomain = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protectionDomainInput() {
    return this._protectionDomain;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // ssl_enabled - computed: false, optional: true, required: false
  private _sslEnabled?: boolean | cdktf.IResolvable; 
  public get sslEnabled() {
    return this.getBooleanAttribute('ssl_enabled');
  }
  public set sslEnabled(value: boolean | cdktf.IResolvable) {
    this._sslEnabled = value;
  }
  public resetSslEnabled() {
    this._sslEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sslEnabledInput() {
    return this._sslEnabled;
  }

  // storage_mode - computed: false, optional: true, required: false
  private _storageMode?: string; 
  public get storageMode() {
    return this.getStringAttribute('storage_mode');
  }
  public set storageMode(value: string) {
    this._storageMode = value;
  }
  public resetStorageMode() {
    this._storageMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storageModeInput() {
    return this._storageMode;
  }

  // storage_pool - computed: false, optional: true, required: false
  private _storagePool?: string; 
  public get storagePool() {
    return this.getStringAttribute('storage_pool');
  }
  public set storagePool(value: string) {
    this._storagePool = value;
  }
  public resetStoragePool() {
    this._storagePool = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storagePoolInput() {
    return this._storagePool;
  }

  // system - computed: false, optional: true, required: false
  private _system?: string; 
  public get systemAttribute() {
    return this.getStringAttribute('system');
  }
  public set systemAttribute(value: string) {
    this._system = value;
  }
  public resetSystemAttribute() {
    this._system = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get systemAttributeInput() {
    return this._system;
  }

  // volume_name - computed: false, optional: true, required: false
  private _volumeName?: string; 
  public get volumeName() {
    return this.getStringAttribute('volume_name');
  }
  public set volumeName(value: string) {
    this._volumeName = value;
  }
  public resetVolumeName() {
    this._volumeName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNameInput() {
    return this._volumeName;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItems {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItemsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItemsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._mode = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._mode = value.mode;
      this._path = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItemsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecret {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#default_mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#default_mode}
  */
  readonly defaultMode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#items DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItems[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#optional DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_name}
  */
  readonly secretName?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_mode: cdktf.numberToTerraform(struct!.defaultMode),
    items: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItemsToTerraform, false)(struct!.items),
    optional: cdktf.booleanToTerraform(struct!.optional),
    secret_name: cdktf.stringToTerraform(struct!.secretName),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_mode: {
      value: cdktf.numberToHclTerraform(struct!.defaultMode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    items: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItemsList",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecret | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultMode = this._defaultMode;
    }
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecret | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultMode = undefined;
      this._items.internalValue = undefined;
      this._optional = undefined;
      this._secretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultMode = value.defaultMode;
      this._items.internalValue = value.items;
      this._optional = value.optional;
      this._secretName = value.secretName;
    }
  }

  // default_mode - computed: false, optional: true, required: false
  private _defaultMode?: number; 
  public get defaultMode() {
    return this.getNumberAttribute('default_mode');
  }
  public set defaultMode(value: number) {
    this._defaultMode = value;
  }
  public resetDefaultMode() {
    this._defaultMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultModeInput() {
    return this._defaultMode;
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }

  // secret_name - computed: false, optional: true, required: false
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  public resetSecretName() {
    this._secretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageos {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosSecretRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_name}
  */
  readonly volumeName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_namespace DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_namespace}
  */
  readonly volumeNamespace?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosSecretRefToTerraform(struct!.secretRef),
    volume_name: cdktf.stringToTerraform(struct!.volumeName),
    volume_namespace: cdktf.stringToTerraform(struct!.volumeNamespace),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosSecretRef",
    },
    volume_name: {
      value: cdktf.stringToHclTerraform(struct!.volumeName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_namespace: {
      value: cdktf.stringToHclTerraform(struct!.volumeNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._volumeName !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeName = this._volumeName;
    }
    if (this._volumeNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeNamespace = this._volumeNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
      this._volumeName = undefined;
      this._volumeNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
      this._volumeName = value.volumeName;
      this._volumeNamespace = value.volumeNamespace;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // volume_name - computed: false, optional: true, required: false
  private _volumeName?: string; 
  public get volumeName() {
    return this.getStringAttribute('volume_name');
  }
  public set volumeName(value: string) {
    this._volumeName = value;
  }
  public resetVolumeName() {
    this._volumeName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNameInput() {
    return this._volumeName;
  }

  // volume_namespace - computed: false, optional: true, required: false
  private _volumeNamespace?: string; 
  public get volumeNamespace() {
    return this.getStringAttribute('volume_namespace');
  }
  public set volumeNamespace(value: string) {
    this._volumeNamespace = value;
  }
  public resetVolumeNamespace() {
    this._volumeNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNamespaceInput() {
    return this._volumeNamespace;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceVsphereVolume {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#storage_policy_id DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#storage_policy_id}
  */
  readonly storagePolicyId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#storage_policy_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#storage_policy_name}
  */
  readonly storagePolicyName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_path}
  */
  readonly volumePath?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceVsphereVolumeToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceVsphereVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    storage_policy_id: cdktf.stringToTerraform(struct!.storagePolicyId),
    storage_policy_name: cdktf.stringToTerraform(struct!.storagePolicyName),
    volume_path: cdktf.stringToTerraform(struct!.volumePath),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceVsphereVolumeToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceVsphereVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    storage_policy_id: {
      value: cdktf.stringToHclTerraform(struct!.storagePolicyId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    storage_policy_name: {
      value: cdktf.stringToHclTerraform(struct!.storagePolicyName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_path: {
      value: cdktf.stringToHclTerraform(struct!.volumePath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceVsphereVolumeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceVsphereVolume | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._storagePolicyId !== undefined) {
      hasAnyValues = true;
      internalValueResult.storagePolicyId = this._storagePolicyId;
    }
    if (this._storagePolicyName !== undefined) {
      hasAnyValues = true;
      internalValueResult.storagePolicyName = this._storagePolicyName;
    }
    if (this._volumePath !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumePath = this._volumePath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceVsphereVolume | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._storagePolicyId = undefined;
      this._storagePolicyName = undefined;
      this._volumePath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._storagePolicyId = value.storagePolicyId;
      this._storagePolicyName = value.storagePolicyName;
      this._volumePath = value.volumePath;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // storage_policy_id - computed: false, optional: true, required: false
  private _storagePolicyId?: string; 
  public get storagePolicyId() {
    return this.getStringAttribute('storage_policy_id');
  }
  public set storagePolicyId(value: string) {
    this._storagePolicyId = value;
  }
  public resetStoragePolicyId() {
    this._storagePolicyId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storagePolicyIdInput() {
    return this._storagePolicyId;
  }

  // storage_policy_name - computed: false, optional: true, required: false
  private _storagePolicyName?: string; 
  public get storagePolicyName() {
    return this.getStringAttribute('storage_policy_name');
  }
  public set storagePolicyName(value: string) {
    this._storagePolicyName = value;
  }
  public resetStoragePolicyName() {
    this._storagePolicyName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storagePolicyNameInput() {
    return this._storagePolicyName;
  }

  // volume_path - computed: false, optional: true, required: false
  private _volumePath?: string; 
  public get volumePath() {
    return this.getStringAttribute('volume_path');
  }
  public set volumePath(value: string) {
    this._volumePath = value;
  }
  public resetVolumePath() {
    this._volumePath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumePathInput() {
    return this._volumePath;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSource {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#aws_elastic_block_store DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#aws_elastic_block_store}
  */
  readonly awsElasticBlockStore?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAwsElasticBlockStore;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#azure_disk DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#azure_disk}
  */
  readonly azureDisk?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureDisk;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#azure_file DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#azure_file}
  */
  readonly azureFile?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureFile;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#cephfs DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#cephfs}
  */
  readonly cephfs?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfs;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#cinder DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#cinder}
  */
  readonly cinder?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinder;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#config_map DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#config_map}
  */
  readonly configMap?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMap;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#csi DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#csi}
  */
  readonly csi?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsi;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#downward_api DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#downward_api}
  */
  readonly downwardApi?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApi;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#empty_dir DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#empty_dir}
  */
  readonly emptyDir?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEmptyDir;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#ephemeral DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#ephemeral}
  */
  readonly ephemeral?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeral;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fc DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fc}
  */
  readonly fc?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFc;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#flex_volume DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#flex_volume}
  */
  readonly flexVolume?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolume;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#flocker DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#flocker}
  */
  readonly flocker?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlocker;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#gce_persistent_disk DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#gce_persistent_disk}
  */
  readonly gcePersistentDisk?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGcePersistentDisk;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#git_repo DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#git_repo}
  */
  readonly gitRepo?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGitRepo;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#glusterfs DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#glusterfs}
  */
  readonly glusterfs?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGlusterfs;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#host_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#host_path}
  */
  readonly hostPath?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceHostPath;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#iscsi DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#iscsi}
  */
  readonly iscsi?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsi;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#nfs DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#nfs}
  */
  readonly nfs?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceNfs;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#persistent_volume_claim DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#persistent_volume_claim}
  */
  readonly persistentVolumeClaim?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePersistentVolumeClaim;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#photon_persistent_disk DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#photon_persistent_disk}
  */
  readonly photonPersistentDisk?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePhotonPersistentDisk;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#portworx_volume DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#portworx_volume}
  */
  readonly portworxVolume?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePortworxVolume;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#projected DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#projected}
  */
  readonly projected?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjected;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#quobyte DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#quobyte}
  */
  readonly quobyte?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceQuobyte;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#rbd DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#rbd}
  */
  readonly rbd?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbd;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#scale_io DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#scale_io}
  */
  readonly scaleIo?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIo;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret}
  */
  readonly secret?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecret;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#storageos DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#storageos}
  */
  readonly storageos?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageos;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#vsphere_volume DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#vsphere_volume}
  */
  readonly vsphereVolume?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceVsphereVolume;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    aws_elastic_block_store: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAwsElasticBlockStoreToTerraform(struct!.awsElasticBlockStore),
    azure_disk: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureDiskToTerraform(struct!.azureDisk),
    azure_file: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureFileToTerraform(struct!.azureFile),
    cephfs: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsToTerraform(struct!.cephfs),
    cinder: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderToTerraform(struct!.cinder),
    config_map: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapToTerraform(struct!.configMap),
    csi: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiToTerraform(struct!.csi),
    downward_api: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiToTerraform(struct!.downwardApi),
    empty_dir: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEmptyDirToTerraform(struct!.emptyDir),
    ephemeral: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralToTerraform(struct!.ephemeral),
    fc: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFcToTerraform(struct!.fc),
    flex_volume: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeToTerraform(struct!.flexVolume),
    flocker: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlockerToTerraform(struct!.flocker),
    gce_persistent_disk: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGcePersistentDiskToTerraform(struct!.gcePersistentDisk),
    git_repo: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGitRepoToTerraform(struct!.gitRepo),
    glusterfs: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGlusterfsToTerraform(struct!.glusterfs),
    host_path: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceHostPathToTerraform(struct!.hostPath),
    iscsi: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiToTerraform(struct!.iscsi),
    nfs: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceNfsToTerraform(struct!.nfs),
    persistent_volume_claim: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePersistentVolumeClaimToTerraform(struct!.persistentVolumeClaim),
    photon_persistent_disk: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePhotonPersistentDiskToTerraform(struct!.photonPersistentDisk),
    portworx_volume: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePortworxVolumeToTerraform(struct!.portworxVolume),
    projected: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedToTerraform(struct!.projected),
    quobyte: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceQuobyteToTerraform(struct!.quobyte),
    rbd: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdToTerraform(struct!.rbd),
    scale_io: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoToTerraform(struct!.scaleIo),
    secret: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretToTerraform(struct!.secret),
    storageos: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosToTerraform(struct!.storageos),
    vsphere_volume: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceVsphereVolumeToTerraform(struct!.vsphereVolume),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    aws_elastic_block_store: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAwsElasticBlockStoreToHclTerraform(struct!.awsElasticBlockStore),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAwsElasticBlockStore",
    },
    azure_disk: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureDiskToHclTerraform(struct!.azureDisk),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureDisk",
    },
    azure_file: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureFileToHclTerraform(struct!.azureFile),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureFile",
    },
    cephfs: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsToHclTerraform(struct!.cephfs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfs",
    },
    cinder: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderToHclTerraform(struct!.cinder),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinder",
    },
    config_map: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapToHclTerraform(struct!.configMap),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMap",
    },
    csi: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiToHclTerraform(struct!.csi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsi",
    },
    downward_api: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiToHclTerraform(struct!.downwardApi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApi",
    },
    empty_dir: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEmptyDirToHclTerraform(struct!.emptyDir),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEmptyDir",
    },
    ephemeral: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralToHclTerraform(struct!.ephemeral),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeral",
    },
    fc: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFcToHclTerraform(struct!.fc),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFc",
    },
    flex_volume: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeToHclTerraform(struct!.flexVolume),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolume",
    },
    flocker: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlockerToHclTerraform(struct!.flocker),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlocker",
    },
    gce_persistent_disk: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGcePersistentDiskToHclTerraform(struct!.gcePersistentDisk),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGcePersistentDisk",
    },
    git_repo: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGitRepoToHclTerraform(struct!.gitRepo),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGitRepo",
    },
    glusterfs: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGlusterfsToHclTerraform(struct!.glusterfs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGlusterfs",
    },
    host_path: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceHostPathToHclTerraform(struct!.hostPath),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceHostPath",
    },
    iscsi: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiToHclTerraform(struct!.iscsi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsi",
    },
    nfs: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceNfsToHclTerraform(struct!.nfs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceNfs",
    },
    persistent_volume_claim: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePersistentVolumeClaimToHclTerraform(struct!.persistentVolumeClaim),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePersistentVolumeClaim",
    },
    photon_persistent_disk: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePhotonPersistentDiskToHclTerraform(struct!.photonPersistentDisk),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePhotonPersistentDisk",
    },
    portworx_volume: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePortworxVolumeToHclTerraform(struct!.portworxVolume),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePortworxVolume",
    },
    projected: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedToHclTerraform(struct!.projected),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjected",
    },
    quobyte: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceQuobyteToHclTerraform(struct!.quobyte),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceQuobyte",
    },
    rbd: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdToHclTerraform(struct!.rbd),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbd",
    },
    scale_io: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoToHclTerraform(struct!.scaleIo),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIo",
    },
    secret: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretToHclTerraform(struct!.secret),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecret",
    },
    storageos: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosToHclTerraform(struct!.storageos),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageos",
    },
    vsphere_volume: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceVsphereVolumeToHclTerraform(struct!.vsphereVolume),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceVsphereVolume",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._awsElasticBlockStore?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.awsElasticBlockStore = this._awsElasticBlockStore?.internalValue;
    }
    if (this._azureDisk?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.azureDisk = this._azureDisk?.internalValue;
    }
    if (this._azureFile?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.azureFile = this._azureFile?.internalValue;
    }
    if (this._cephfs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cephfs = this._cephfs?.internalValue;
    }
    if (this._cinder?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cinder = this._cinder?.internalValue;
    }
    if (this._configMap?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.configMap = this._configMap?.internalValue;
    }
    if (this._csi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.csi = this._csi?.internalValue;
    }
    if (this._downwardApi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.downwardApi = this._downwardApi?.internalValue;
    }
    if (this._emptyDir?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.emptyDir = this._emptyDir?.internalValue;
    }
    if (this._ephemeral?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ephemeral = this._ephemeral?.internalValue;
    }
    if (this._fc?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fc = this._fc?.internalValue;
    }
    if (this._flexVolume?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.flexVolume = this._flexVolume?.internalValue;
    }
    if (this._flocker?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.flocker = this._flocker?.internalValue;
    }
    if (this._gcePersistentDisk?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.gcePersistentDisk = this._gcePersistentDisk?.internalValue;
    }
    if (this._gitRepo?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.gitRepo = this._gitRepo?.internalValue;
    }
    if (this._glusterfs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.glusterfs = this._glusterfs?.internalValue;
    }
    if (this._hostPath?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostPath = this._hostPath?.internalValue;
    }
    if (this._iscsi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.iscsi = this._iscsi?.internalValue;
    }
    if (this._nfs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nfs = this._nfs?.internalValue;
    }
    if (this._persistentVolumeClaim?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.persistentVolumeClaim = this._persistentVolumeClaim?.internalValue;
    }
    if (this._photonPersistentDisk?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.photonPersistentDisk = this._photonPersistentDisk?.internalValue;
    }
    if (this._portworxVolume?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.portworxVolume = this._portworxVolume?.internalValue;
    }
    if (this._projected?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.projected = this._projected?.internalValue;
    }
    if (this._quobyte?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.quobyte = this._quobyte?.internalValue;
    }
    if (this._rbd?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rbd = this._rbd?.internalValue;
    }
    if (this._scaleIo?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scaleIo = this._scaleIo?.internalValue;
    }
    if (this._secret?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret?.internalValue;
    }
    if (this._storageos?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.storageos = this._storageos?.internalValue;
    }
    if (this._vsphereVolume?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vsphereVolume = this._vsphereVolume?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._awsElasticBlockStore.internalValue = undefined;
      this._azureDisk.internalValue = undefined;
      this._azureFile.internalValue = undefined;
      this._cephfs.internalValue = undefined;
      this._cinder.internalValue = undefined;
      this._configMap.internalValue = undefined;
      this._csi.internalValue = undefined;
      this._downwardApi.internalValue = undefined;
      this._emptyDir.internalValue = undefined;
      this._ephemeral.internalValue = undefined;
      this._fc.internalValue = undefined;
      this._flexVolume.internalValue = undefined;
      this._flocker.internalValue = undefined;
      this._gcePersistentDisk.internalValue = undefined;
      this._gitRepo.internalValue = undefined;
      this._glusterfs.internalValue = undefined;
      this._hostPath.internalValue = undefined;
      this._iscsi.internalValue = undefined;
      this._nfs.internalValue = undefined;
      this._persistentVolumeClaim.internalValue = undefined;
      this._photonPersistentDisk.internalValue = undefined;
      this._portworxVolume.internalValue = undefined;
      this._projected.internalValue = undefined;
      this._quobyte.internalValue = undefined;
      this._rbd.internalValue = undefined;
      this._scaleIo.internalValue = undefined;
      this._secret.internalValue = undefined;
      this._storageos.internalValue = undefined;
      this._vsphereVolume.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._awsElasticBlockStore.internalValue = value.awsElasticBlockStore;
      this._azureDisk.internalValue = value.azureDisk;
      this._azureFile.internalValue = value.azureFile;
      this._cephfs.internalValue = value.cephfs;
      this._cinder.internalValue = value.cinder;
      this._configMap.internalValue = value.configMap;
      this._csi.internalValue = value.csi;
      this._downwardApi.internalValue = value.downwardApi;
      this._emptyDir.internalValue = value.emptyDir;
      this._ephemeral.internalValue = value.ephemeral;
      this._fc.internalValue = value.fc;
      this._flexVolume.internalValue = value.flexVolume;
      this._flocker.internalValue = value.flocker;
      this._gcePersistentDisk.internalValue = value.gcePersistentDisk;
      this._gitRepo.internalValue = value.gitRepo;
      this._glusterfs.internalValue = value.glusterfs;
      this._hostPath.internalValue = value.hostPath;
      this._iscsi.internalValue = value.iscsi;
      this._nfs.internalValue = value.nfs;
      this._persistentVolumeClaim.internalValue = value.persistentVolumeClaim;
      this._photonPersistentDisk.internalValue = value.photonPersistentDisk;
      this._portworxVolume.internalValue = value.portworxVolume;
      this._projected.internalValue = value.projected;
      this._quobyte.internalValue = value.quobyte;
      this._rbd.internalValue = value.rbd;
      this._scaleIo.internalValue = value.scaleIo;
      this._secret.internalValue = value.secret;
      this._storageos.internalValue = value.storageos;
      this._vsphereVolume.internalValue = value.vsphereVolume;
    }
  }

  // aws_elastic_block_store - computed: false, optional: true, required: false
  private _awsElasticBlockStore = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAwsElasticBlockStoreOutputReference(this, "aws_elastic_block_store");
  public get awsElasticBlockStore() {
    return this._awsElasticBlockStore;
  }
  public putAwsElasticBlockStore(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAwsElasticBlockStore) {
    this._awsElasticBlockStore.internalValue = value;
  }
  public resetAwsElasticBlockStore() {
    this._awsElasticBlockStore.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get awsElasticBlockStoreInput() {
    return this._awsElasticBlockStore.internalValue;
  }

  // azure_disk - computed: false, optional: true, required: false
  private _azureDisk = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureDiskOutputReference(this, "azure_disk");
  public get azureDisk() {
    return this._azureDisk;
  }
  public putAzureDisk(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureDisk) {
    this._azureDisk.internalValue = value;
  }
  public resetAzureDisk() {
    this._azureDisk.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get azureDiskInput() {
    return this._azureDisk.internalValue;
  }

  // azure_file - computed: false, optional: true, required: false
  private _azureFile = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureFileOutputReference(this, "azure_file");
  public get azureFile() {
    return this._azureFile;
  }
  public putAzureFile(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceAzureFile) {
    this._azureFile.internalValue = value;
  }
  public resetAzureFile() {
    this._azureFile.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get azureFileInput() {
    return this._azureFile.internalValue;
  }

  // cephfs - computed: false, optional: true, required: false
  private _cephfs = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfsOutputReference(this, "cephfs");
  public get cephfs() {
    return this._cephfs;
  }
  public putCephfs(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCephfs) {
    this._cephfs.internalValue = value;
  }
  public resetCephfs() {
    this._cephfs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cephfsInput() {
    return this._cephfs.internalValue;
  }

  // cinder - computed: false, optional: true, required: false
  private _cinder = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinderOutputReference(this, "cinder");
  public get cinder() {
    return this._cinder;
  }
  public putCinder(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCinder) {
    this._cinder.internalValue = value;
  }
  public resetCinder() {
    this._cinder.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cinderInput() {
    return this._cinder.internalValue;
  }

  // config_map - computed: false, optional: true, required: false
  private _configMap = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMapOutputReference(this, "config_map");
  public get configMap() {
    return this._configMap;
  }
  public putConfigMap(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceConfigMap) {
    this._configMap.internalValue = value;
  }
  public resetConfigMap() {
    this._configMap.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configMapInput() {
    return this._configMap.internalValue;
  }

  // csi - computed: false, optional: true, required: false
  private _csi = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsiOutputReference(this, "csi");
  public get csi() {
    return this._csi;
  }
  public putCsi(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceCsi) {
    this._csi.internalValue = value;
  }
  public resetCsi() {
    this._csi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get csiInput() {
    return this._csi.internalValue;
  }

  // downward_api - computed: false, optional: true, required: false
  private _downwardApi = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApiOutputReference(this, "downward_api");
  public get downwardApi() {
    return this._downwardApi;
  }
  public putDownwardApi(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceDownwardApi) {
    this._downwardApi.internalValue = value;
  }
  public resetDownwardApi() {
    this._downwardApi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get downwardApiInput() {
    return this._downwardApi.internalValue;
  }

  // empty_dir - computed: false, optional: true, required: false
  private _emptyDir = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEmptyDirOutputReference(this, "empty_dir");
  public get emptyDir() {
    return this._emptyDir;
  }
  public putEmptyDir(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEmptyDir) {
    this._emptyDir.internalValue = value;
  }
  public resetEmptyDir() {
    this._emptyDir.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emptyDirInput() {
    return this._emptyDir.internalValue;
  }

  // ephemeral - computed: false, optional: true, required: false
  private _ephemeral = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeralOutputReference(this, "ephemeral");
  public get ephemeral() {
    return this._ephemeral;
  }
  public putEphemeral(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceEphemeral) {
    this._ephemeral.internalValue = value;
  }
  public resetEphemeral() {
    this._ephemeral.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ephemeralInput() {
    return this._ephemeral.internalValue;
  }

  // fc - computed: false, optional: true, required: false
  private _fc = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFcOutputReference(this, "fc");
  public get fc() {
    return this._fc;
  }
  public putFc(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFc) {
    this._fc.internalValue = value;
  }
  public resetFc() {
    this._fc.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fcInput() {
    return this._fc.internalValue;
  }

  // flex_volume - computed: false, optional: true, required: false
  private _flexVolume = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolumeOutputReference(this, "flex_volume");
  public get flexVolume() {
    return this._flexVolume;
  }
  public putFlexVolume(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlexVolume) {
    this._flexVolume.internalValue = value;
  }
  public resetFlexVolume() {
    this._flexVolume.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get flexVolumeInput() {
    return this._flexVolume.internalValue;
  }

  // flocker - computed: false, optional: true, required: false
  private _flocker = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlockerOutputReference(this, "flocker");
  public get flocker() {
    return this._flocker;
  }
  public putFlocker(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceFlocker) {
    this._flocker.internalValue = value;
  }
  public resetFlocker() {
    this._flocker.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get flockerInput() {
    return this._flocker.internalValue;
  }

  // gce_persistent_disk - computed: false, optional: true, required: false
  private _gcePersistentDisk = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGcePersistentDiskOutputReference(this, "gce_persistent_disk");
  public get gcePersistentDisk() {
    return this._gcePersistentDisk;
  }
  public putGcePersistentDisk(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGcePersistentDisk) {
    this._gcePersistentDisk.internalValue = value;
  }
  public resetGcePersistentDisk() {
    this._gcePersistentDisk.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gcePersistentDiskInput() {
    return this._gcePersistentDisk.internalValue;
  }

  // git_repo - computed: false, optional: true, required: false
  private _gitRepo = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGitRepoOutputReference(this, "git_repo");
  public get gitRepo() {
    return this._gitRepo;
  }
  public putGitRepo(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGitRepo) {
    this._gitRepo.internalValue = value;
  }
  public resetGitRepo() {
    this._gitRepo.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gitRepoInput() {
    return this._gitRepo.internalValue;
  }

  // glusterfs - computed: false, optional: true, required: false
  private _glusterfs = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGlusterfsOutputReference(this, "glusterfs");
  public get glusterfs() {
    return this._glusterfs;
  }
  public putGlusterfs(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceGlusterfs) {
    this._glusterfs.internalValue = value;
  }
  public resetGlusterfs() {
    this._glusterfs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get glusterfsInput() {
    return this._glusterfs.internalValue;
  }

  // host_path - computed: false, optional: true, required: false
  private _hostPath = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceHostPathOutputReference(this, "host_path");
  public get hostPath() {
    return this._hostPath;
  }
  public putHostPath(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceHostPath) {
    this._hostPath.internalValue = value;
  }
  public resetHostPath() {
    this._hostPath.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostPathInput() {
    return this._hostPath.internalValue;
  }

  // iscsi - computed: false, optional: true, required: false
  private _iscsi = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsiOutputReference(this, "iscsi");
  public get iscsi() {
    return this._iscsi;
  }
  public putIscsi(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceIscsi) {
    this._iscsi.internalValue = value;
  }
  public resetIscsi() {
    this._iscsi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iscsiInput() {
    return this._iscsi.internalValue;
  }

  // nfs - computed: false, optional: true, required: false
  private _nfs = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceNfsOutputReference(this, "nfs");
  public get nfs() {
    return this._nfs;
  }
  public putNfs(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceNfs) {
    this._nfs.internalValue = value;
  }
  public resetNfs() {
    this._nfs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nfsInput() {
    return this._nfs.internalValue;
  }

  // persistent_volume_claim - computed: false, optional: true, required: false
  private _persistentVolumeClaim = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePersistentVolumeClaimOutputReference(this, "persistent_volume_claim");
  public get persistentVolumeClaim() {
    return this._persistentVolumeClaim;
  }
  public putPersistentVolumeClaim(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePersistentVolumeClaim) {
    this._persistentVolumeClaim.internalValue = value;
  }
  public resetPersistentVolumeClaim() {
    this._persistentVolumeClaim.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get persistentVolumeClaimInput() {
    return this._persistentVolumeClaim.internalValue;
  }

  // photon_persistent_disk - computed: false, optional: true, required: false
  private _photonPersistentDisk = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePhotonPersistentDiskOutputReference(this, "photon_persistent_disk");
  public get photonPersistentDisk() {
    return this._photonPersistentDisk;
  }
  public putPhotonPersistentDisk(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePhotonPersistentDisk) {
    this._photonPersistentDisk.internalValue = value;
  }
  public resetPhotonPersistentDisk() {
    this._photonPersistentDisk.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get photonPersistentDiskInput() {
    return this._photonPersistentDisk.internalValue;
  }

  // portworx_volume - computed: false, optional: true, required: false
  private _portworxVolume = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePortworxVolumeOutputReference(this, "portworx_volume");
  public get portworxVolume() {
    return this._portworxVolume;
  }
  public putPortworxVolume(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourcePortworxVolume) {
    this._portworxVolume.internalValue = value;
  }
  public resetPortworxVolume() {
    this._portworxVolume.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portworxVolumeInput() {
    return this._portworxVolume.internalValue;
  }

  // projected - computed: false, optional: true, required: false
  private _projected = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjectedOutputReference(this, "projected");
  public get projected() {
    return this._projected;
  }
  public putProjected(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceProjected) {
    this._projected.internalValue = value;
  }
  public resetProjected() {
    this._projected.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectedInput() {
    return this._projected.internalValue;
  }

  // quobyte - computed: false, optional: true, required: false
  private _quobyte = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceQuobyteOutputReference(this, "quobyte");
  public get quobyte() {
    return this._quobyte;
  }
  public putQuobyte(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceQuobyte) {
    this._quobyte.internalValue = value;
  }
  public resetQuobyte() {
    this._quobyte.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get quobyteInput() {
    return this._quobyte.internalValue;
  }

  // rbd - computed: false, optional: true, required: false
  private _rbd = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbdOutputReference(this, "rbd");
  public get rbd() {
    return this._rbd;
  }
  public putRbd(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceRbd) {
    this._rbd.internalValue = value;
  }
  public resetRbd() {
    this._rbd.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rbdInput() {
    return this._rbd.internalValue;
  }

  // scale_io - computed: false, optional: true, required: false
  private _scaleIo = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIoOutputReference(this, "scale_io");
  public get scaleIo() {
    return this._scaleIo;
  }
  public putScaleIo(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceScaleIo) {
    this._scaleIo.internalValue = value;
  }
  public resetScaleIo() {
    this._scaleIo.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scaleIoInput() {
    return this._scaleIo.internalValue;
  }

  // secret - computed: false, optional: true, required: false
  private _secret = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecretOutputReference(this, "secret");
  public get secret() {
    return this._secret;
  }
  public putSecret(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceSecret) {
    this._secret.internalValue = value;
  }
  public resetSecret() {
    this._secret.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret.internalValue;
  }

  // storageos - computed: false, optional: true, required: false
  private _storageos = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageosOutputReference(this, "storageos");
  public get storageos() {
    return this._storageos;
  }
  public putStorageos(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceStorageos) {
    this._storageos.internalValue = value;
  }
  public resetStorageos() {
    this._storageos.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storageosInput() {
    return this._storageos.internalValue;
  }

  // vsphere_volume - computed: false, optional: true, required: false
  private _vsphereVolume = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceVsphereVolumeOutputReference(this, "vsphere_volume");
  public get vsphereVolume() {
    return this._vsphereVolume;
  }
  public putVsphereVolume(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceVsphereVolume) {
    this._vsphereVolume.internalValue = value;
  }
  public resetVsphereVolume() {
    this._vsphereVolume.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vsphereVolumeInput() {
    return this._vsphereVolume.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumes {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_source DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_source}
  */
  readonly volumeSource?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSource;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    volume_source: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceToTerraform(struct!.volumeSource),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_source: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceToHclTerraform(struct!.volumeSource),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSource",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._volumeSource?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeSource = this._volumeSource?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._volumeSource.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._volumeSource.internalValue = value.volumeSource;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // volume_source - computed: false, optional: true, required: false
  private _volumeSource = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSourceOutputReference(this, "volume_source");
  public get volumeSource() {
    return this._volumeSource;
  }
  public putVolumeSource(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesVolumeSource) {
    this._volumeSource.internalValue = value;
  }
  public resetVolumeSource() {
    this._volumeSource.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeSourceInput() {
    return this._volumeSource.internalValue;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumes[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonset {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#affinity DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#affinity}
  */
  readonly affinity?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetAffinity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#deployment_strategy DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#deployment_strategy}
  */
  readonly deploymentStrategy?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetDeploymentStrategy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#env DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#env}
  */
  readonly env?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetEnv[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#image DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#image_pull_policy DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#image_pull_policy}
  */
  readonly imagePullPolicy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#image_pull_secrets DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetImagePullSecrets[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#liveness_probe DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#liveness_probe}
  */
  readonly livenessProbe?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetLivenessProbe;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#metadata DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#node_selector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pod_disruption_budget DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pod_disruption_budget}
  */
  readonly podDisruptionBudget?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodDisruptionBudget;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pod_metadata DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pod_metadata}
  */
  readonly podMetadata?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pod_security_context DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pod_security_context}
  */
  readonly podSecurityContext?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodSecurityContext;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#priority_class_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#priority_class_name}
  */
  readonly priorityClassName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#readiness_probe DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#readiness_probe}
  */
  readonly readinessProbe?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReadinessProbe;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#replicas DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#replicas}
  */
  readonly replicas?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReplicas;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resources DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resources}
  */
  readonly resources?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetResources;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#security_context DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#security_context}
  */
  readonly securityContext?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContext;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#tolerations DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerations[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#topology_spread_constraints DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#topology_spread_constraints}
  */
  readonly topologySpreadConstraints?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraints[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_mounts DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_mounts}
  */
  readonly volumeMounts?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMounts[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volumes DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volumes}
  */
  readonly volumes?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumes[] | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonset | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    affinity: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetAffinityToTerraform(struct!.affinity),
    deployment_strategy: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetDeploymentStrategyToTerraform(struct!.deploymentStrategy),
    env: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetEnvToTerraform, false)(struct!.env),
    image: cdktf.stringToTerraform(struct!.image),
    image_pull_policy: cdktf.stringToTerraform(struct!.imagePullPolicy),
    image_pull_secrets: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetImagePullSecretsToTerraform, false)(struct!.imagePullSecrets),
    liveness_probe: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetLivenessProbeToTerraform(struct!.livenessProbe),
    metadata: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetMetadataToTerraform(struct!.metadata),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    pod_disruption_budget: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodDisruptionBudgetToTerraform(struct!.podDisruptionBudget),
    pod_metadata: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodMetadataToTerraform(struct!.podMetadata),
    pod_security_context: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodSecurityContextToTerraform(struct!.podSecurityContext),
    priority_class_name: cdktf.stringToTerraform(struct!.priorityClassName),
    readiness_probe: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReadinessProbeToTerraform(struct!.readinessProbe),
    replicas: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReplicasToTerraform(struct!.replicas),
    resources: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetResourcesToTerraform(struct!.resources),
    security_context: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextToTerraform(struct!.securityContext),
    tolerations: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerationsToTerraform, false)(struct!.tolerations),
    topology_spread_constraints: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsToTerraform, false)(struct!.topologySpreadConstraints),
    volume_mounts: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMountsToTerraform, false)(struct!.volumeMounts),
    volumes: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesToTerraform, false)(struct!.volumes),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonset | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    affinity: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetAffinityToHclTerraform(struct!.affinity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetAffinity",
    },
    deployment_strategy: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetDeploymentStrategyToHclTerraform(struct!.deploymentStrategy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetDeploymentStrategy",
    },
    env: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetEnvToHclTerraform, false)(struct!.env),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetEnvList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_policy: {
      value: cdktf.stringToHclTerraform(struct!.imagePullPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetImagePullSecretsToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetImagePullSecretsList",
    },
    liveness_probe: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetLivenessProbeToHclTerraform(struct!.livenessProbe),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetLivenessProbe",
    },
    metadata: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetMetadata",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    pod_disruption_budget: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodDisruptionBudgetToHclTerraform(struct!.podDisruptionBudget),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodDisruptionBudget",
    },
    pod_metadata: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodMetadataToHclTerraform(struct!.podMetadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodMetadata",
    },
    pod_security_context: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodSecurityContextToHclTerraform(struct!.podSecurityContext),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodSecurityContext",
    },
    priority_class_name: {
      value: cdktf.stringToHclTerraform(struct!.priorityClassName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    readiness_probe: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReadinessProbeToHclTerraform(struct!.readinessProbe),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReadinessProbe",
    },
    replicas: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReplicasToHclTerraform(struct!.replicas),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReplicas",
    },
    resources: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetResourcesToHclTerraform(struct!.resources),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetResources",
    },
    security_context: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextToHclTerraform(struct!.securityContext),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContext",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerationsList",
    },
    topology_spread_constraints: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsToHclTerraform, false)(struct!.topologySpreadConstraints),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsList",
    },
    volume_mounts: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMountsToHclTerraform, false)(struct!.volumeMounts),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMountsList",
    },
    volumes: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesToHclTerraform, false)(struct!.volumes),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonset | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._affinity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.affinity = this._affinity?.internalValue;
    }
    if (this._deploymentStrategy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.deploymentStrategy = this._deploymentStrategy?.internalValue;
    }
    if (this._env?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.env = this._env?.internalValue;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._imagePullPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullPolicy = this._imagePullPolicy;
    }
    if (this._imagePullSecrets?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets?.internalValue;
    }
    if (this._livenessProbe?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.livenessProbe = this._livenessProbe?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._podDisruptionBudget?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podDisruptionBudget = this._podDisruptionBudget?.internalValue;
    }
    if (this._podMetadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podMetadata = this._podMetadata?.internalValue;
    }
    if (this._podSecurityContext?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podSecurityContext = this._podSecurityContext?.internalValue;
    }
    if (this._priorityClassName !== undefined) {
      hasAnyValues = true;
      internalValueResult.priorityClassName = this._priorityClassName;
    }
    if (this._readinessProbe?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.readinessProbe = this._readinessProbe?.internalValue;
    }
    if (this._replicas?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.replicas = this._replicas?.internalValue;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._securityContext?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.securityContext = this._securityContext?.internalValue;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    if (this._topologySpreadConstraints?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologySpreadConstraints = this._topologySpreadConstraints?.internalValue;
    }
    if (this._volumeMounts?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeMounts = this._volumeMounts?.internalValue;
    }
    if (this._volumes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumes = this._volumes?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonset | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._affinity.internalValue = undefined;
      this._deploymentStrategy.internalValue = undefined;
      this._env.internalValue = undefined;
      this._image = undefined;
      this._imagePullPolicy = undefined;
      this._imagePullSecrets.internalValue = undefined;
      this._livenessProbe.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._nodeSelector = undefined;
      this._podDisruptionBudget.internalValue = undefined;
      this._podMetadata.internalValue = undefined;
      this._podSecurityContext.internalValue = undefined;
      this._priorityClassName = undefined;
      this._readinessProbe.internalValue = undefined;
      this._replicas.internalValue = undefined;
      this._resources.internalValue = undefined;
      this._securityContext.internalValue = undefined;
      this._tolerations.internalValue = undefined;
      this._topologySpreadConstraints.internalValue = undefined;
      this._volumeMounts.internalValue = undefined;
      this._volumes.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._affinity.internalValue = value.affinity;
      this._deploymentStrategy.internalValue = value.deploymentStrategy;
      this._env.internalValue = value.env;
      this._image = value.image;
      this._imagePullPolicy = value.imagePullPolicy;
      this._imagePullSecrets.internalValue = value.imagePullSecrets;
      this._livenessProbe.internalValue = value.livenessProbe;
      this._metadata.internalValue = value.metadata;
      this._nodeSelector = value.nodeSelector;
      this._podDisruptionBudget.internalValue = value.podDisruptionBudget;
      this._podMetadata.internalValue = value.podMetadata;
      this._podSecurityContext.internalValue = value.podSecurityContext;
      this._priorityClassName = value.priorityClassName;
      this._readinessProbe.internalValue = value.readinessProbe;
      this._replicas.internalValue = value.replicas;
      this._resources.internalValue = value.resources;
      this._securityContext.internalValue = value.securityContext;
      this._tolerations.internalValue = value.tolerations;
      this._topologySpreadConstraints.internalValue = value.topologySpreadConstraints;
      this._volumeMounts.internalValue = value.volumeMounts;
      this._volumes.internalValue = value.volumes;
    }
  }

  // affinity - computed: false, optional: true, required: false
  private _affinity = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetAffinityOutputReference(this, "affinity");
  public get affinity() {
    return this._affinity;
  }
  public putAffinity(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetAffinity) {
    this._affinity.internalValue = value;
  }
  public resetAffinity() {
    this._affinity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get affinityInput() {
    return this._affinity.internalValue;
  }

  // deployment_strategy - computed: false, optional: true, required: false
  private _deploymentStrategy = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetDeploymentStrategyOutputReference(this, "deployment_strategy");
  public get deploymentStrategy() {
    return this._deploymentStrategy;
  }
  public putDeploymentStrategy(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetDeploymentStrategy) {
    this._deploymentStrategy.internalValue = value;
  }
  public resetDeploymentStrategy() {
    this._deploymentStrategy.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deploymentStrategyInput() {
    return this._deploymentStrategy.internalValue;
  }

  // env - computed: false, optional: true, required: false
  private _env = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetEnvList(this, "env", false);
  public get env() {
    return this._env;
  }
  public putEnv(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetEnv[] | cdktf.IResolvable) {
    this._env.internalValue = value;
  }
  public resetEnv() {
    this._env.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get envInput() {
    return this._env.internalValue;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // image_pull_policy - computed: false, optional: true, required: false
  private _imagePullPolicy?: string; 
  public get imagePullPolicy() {
    return this.getStringAttribute('image_pull_policy');
  }
  public set imagePullPolicy(value: string) {
    this._imagePullPolicy = value;
  }
  public resetImagePullPolicy() {
    this._imagePullPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullPolicyInput() {
    return this._imagePullPolicy;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetImagePullSecretsList(this, "image_pull_secrets", false);
  public get imagePullSecrets() {
    return this._imagePullSecrets;
  }
  public putImagePullSecrets(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetImagePullSecrets[] | cdktf.IResolvable) {
    this._imagePullSecrets.internalValue = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets.internalValue;
  }

  // liveness_probe - computed: false, optional: true, required: false
  private _livenessProbe = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetLivenessProbeOutputReference(this, "liveness_probe");
  public get livenessProbe() {
    return this._livenessProbe;
  }
  public putLivenessProbe(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetLivenessProbe) {
    this._livenessProbe.internalValue = value;
  }
  public resetLivenessProbe() {
    this._livenessProbe.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get livenessProbeInput() {
    return this._livenessProbe.internalValue;
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // pod_disruption_budget - computed: false, optional: true, required: false
  private _podDisruptionBudget = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodDisruptionBudgetOutputReference(this, "pod_disruption_budget");
  public get podDisruptionBudget() {
    return this._podDisruptionBudget;
  }
  public putPodDisruptionBudget(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodDisruptionBudget) {
    this._podDisruptionBudget.internalValue = value;
  }
  public resetPodDisruptionBudget() {
    this._podDisruptionBudget.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podDisruptionBudgetInput() {
    return this._podDisruptionBudget.internalValue;
  }

  // pod_metadata - computed: false, optional: true, required: false
  private _podMetadata = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodMetadataOutputReference(this, "pod_metadata");
  public get podMetadata() {
    return this._podMetadata;
  }
  public putPodMetadata(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodMetadata) {
    this._podMetadata.internalValue = value;
  }
  public resetPodMetadata() {
    this._podMetadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podMetadataInput() {
    return this._podMetadata.internalValue;
  }

  // pod_security_context - computed: false, optional: true, required: false
  private _podSecurityContext = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodSecurityContextOutputReference(this, "pod_security_context");
  public get podSecurityContext() {
    return this._podSecurityContext;
  }
  public putPodSecurityContext(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetPodSecurityContext) {
    this._podSecurityContext.internalValue = value;
  }
  public resetPodSecurityContext() {
    this._podSecurityContext.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podSecurityContextInput() {
    return this._podSecurityContext.internalValue;
  }

  // priority_class_name - computed: false, optional: true, required: false
  private _priorityClassName?: string; 
  public get priorityClassName() {
    return this.getStringAttribute('priority_class_name');
  }
  public set priorityClassName(value: string) {
    this._priorityClassName = value;
  }
  public resetPriorityClassName() {
    this._priorityClassName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityClassNameInput() {
    return this._priorityClassName;
  }

  // readiness_probe - computed: false, optional: true, required: false
  private _readinessProbe = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReadinessProbeOutputReference(this, "readiness_probe");
  public get readinessProbe() {
    return this._readinessProbe;
  }
  public putReadinessProbe(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReadinessProbe) {
    this._readinessProbe.internalValue = value;
  }
  public resetReadinessProbe() {
    this._readinessProbe.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readinessProbeInput() {
    return this._readinessProbe.internalValue;
  }

  // replicas - computed: false, optional: true, required: false
  private _replicas = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReplicasOutputReference(this, "replicas");
  public get replicas() {
    return this._replicas;
  }
  public putReplicas(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetReplicas) {
    this._replicas.internalValue = value;
  }
  public resetReplicas() {
    this._replicas.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get replicasInput() {
    return this._replicas.internalValue;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetResourcesOutputReference(this, "resources");
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetResources) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // security_context - computed: false, optional: true, required: false
  private _securityContext = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContextOutputReference(this, "security_context");
  public get securityContext() {
    return this._securityContext;
  }
  public putSecurityContext(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetSecurityContext) {
    this._securityContext.internalValue = value;
  }
  public resetSecurityContext() {
    this._securityContext.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get securityContextInput() {
    return this._securityContext.internalValue;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }

  // topology_spread_constraints - computed: false, optional: true, required: false
  private _topologySpreadConstraints = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraintsList(this, "topology_spread_constraints", false);
  public get topologySpreadConstraints() {
    return this._topologySpreadConstraints;
  }
  public putTopologySpreadConstraints(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetTopologySpreadConstraints[] | cdktf.IResolvable) {
    this._topologySpreadConstraints.internalValue = value;
  }
  public resetTopologySpreadConstraints() {
    this._topologySpreadConstraints.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologySpreadConstraintsInput() {
    return this._topologySpreadConstraints.internalValue;
  }

  // volume_mounts - computed: false, optional: true, required: false
  private _volumeMounts = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMountsList(this, "volume_mounts", false);
  public get volumeMounts() {
    return this._volumeMounts;
  }
  public putVolumeMounts(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumeMounts[] | cdktf.IResolvable) {
    this._volumeMounts.internalValue = value;
  }
  public resetVolumeMounts() {
    this._volumeMounts.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeMountsInput() {
    return this._volumeMounts.internalValue;
  }

  // volumes - computed: false, optional: true, required: false
  private _volumes = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumesList(this, "volumes", false);
  public get volumes() {
    return this._volumes;
  }
  public putVolumes(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetVolumes[] | cdktf.IResolvable) {
    this._volumes.internalValue = value;
  }
  public resetVolumes() {
    this._volumes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumesInput() {
    return this._volumes.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniRepair {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#broken_pod_label_key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#broken_pod_label_key}
  */
  readonly brokenPodLabelKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#broken_pod_label_value DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#broken_pod_label_value}
  */
  readonly brokenPodLabelValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#delete_pods DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#delete_pods}
  */
  readonly deletePods?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#enabled DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#init_container_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#init_container_name}
  */
  readonly initContainerName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#label_pods DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#label_pods}
  */
  readonly labelPods?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniRepairToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniRepair | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    broken_pod_label_key: cdktf.stringToTerraform(struct!.brokenPodLabelKey),
    broken_pod_label_value: cdktf.stringToTerraform(struct!.brokenPodLabelValue),
    delete_pods: cdktf.booleanToTerraform(struct!.deletePods),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    init_container_name: cdktf.stringToTerraform(struct!.initContainerName),
    label_pods: cdktf.booleanToTerraform(struct!.labelPods),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniRepairToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniRepair | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    broken_pod_label_key: {
      value: cdktf.stringToHclTerraform(struct!.brokenPodLabelKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    broken_pod_label_value: {
      value: cdktf.stringToHclTerraform(struct!.brokenPodLabelValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    delete_pods: {
      value: cdktf.booleanToHclTerraform(struct!.deletePods),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    init_container_name: {
      value: cdktf.stringToHclTerraform(struct!.initContainerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    label_pods: {
      value: cdktf.booleanToHclTerraform(struct!.labelPods),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniRepairOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniRepair | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._brokenPodLabelKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.brokenPodLabelKey = this._brokenPodLabelKey;
    }
    if (this._brokenPodLabelValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.brokenPodLabelValue = this._brokenPodLabelValue;
    }
    if (this._deletePods !== undefined) {
      hasAnyValues = true;
      internalValueResult.deletePods = this._deletePods;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._initContainerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.initContainerName = this._initContainerName;
    }
    if (this._labelPods !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelPods = this._labelPods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniRepair | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._brokenPodLabelKey = undefined;
      this._brokenPodLabelValue = undefined;
      this._deletePods = undefined;
      this._enabled = undefined;
      this._initContainerName = undefined;
      this._labelPods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._brokenPodLabelKey = value.brokenPodLabelKey;
      this._brokenPodLabelValue = value.brokenPodLabelValue;
      this._deletePods = value.deletePods;
      this._enabled = value.enabled;
      this._initContainerName = value.initContainerName;
      this._labelPods = value.labelPods;
    }
  }

  // broken_pod_label_key - computed: false, optional: true, required: false
  private _brokenPodLabelKey?: string; 
  public get brokenPodLabelKey() {
    return this.getStringAttribute('broken_pod_label_key');
  }
  public set brokenPodLabelKey(value: string) {
    this._brokenPodLabelKey = value;
  }
  public resetBrokenPodLabelKey() {
    this._brokenPodLabelKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get brokenPodLabelKeyInput() {
    return this._brokenPodLabelKey;
  }

  // broken_pod_label_value - computed: false, optional: true, required: false
  private _brokenPodLabelValue?: string; 
  public get brokenPodLabelValue() {
    return this.getStringAttribute('broken_pod_label_value');
  }
  public set brokenPodLabelValue(value: string) {
    this._brokenPodLabelValue = value;
  }
  public resetBrokenPodLabelValue() {
    this._brokenPodLabelValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get brokenPodLabelValueInput() {
    return this._brokenPodLabelValue;
  }

  // delete_pods - computed: false, optional: true, required: false
  private _deletePods?: boolean | cdktf.IResolvable; 
  public get deletePods() {
    return this.getBooleanAttribute('delete_pods');
  }
  public set deletePods(value: boolean | cdktf.IResolvable) {
    this._deletePods = value;
  }
  public resetDeletePods() {
    this._deletePods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deletePodsInput() {
    return this._deletePods;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // init_container_name - computed: false, optional: true, required: false
  private _initContainerName?: string; 
  public get initContainerName() {
    return this.getStringAttribute('init_container_name');
  }
  public set initContainerName(value: string) {
    this._initContainerName = value;
  }
  public resetInitContainerName() {
    this._initContainerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get initContainerNameInput() {
    return this._initContainerName;
  }

  // label_pods - computed: false, optional: true, required: false
  private _labelPods?: boolean | cdktf.IResolvable; 
  public get labelPods() {
    return this.getBooleanAttribute('label_pods');
  }
  public set labelPods(value: boolean | cdktf.IResolvable) {
    this._labelPods = value;
  }
  public resetLabelPods() {
    this._labelPods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelPodsInput() {
    return this._labelPods;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniResourceQuotas {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#enabled DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pods DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pods}
  */
  readonly pods?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#priority_classes DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#priority_classes}
  */
  readonly priorityClasses?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniResourceQuotasToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniResourceQuotas | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    pods: cdktf.stringToTerraform(struct!.pods),
    priority_classes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.priorityClasses),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniResourceQuotasToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniResourceQuotas | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    pods: {
      value: cdktf.stringToHclTerraform(struct!.pods),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    priority_classes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.priorityClasses),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniResourceQuotasOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniResourceQuotas | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    if (this._priorityClasses !== undefined) {
      hasAnyValues = true;
      internalValueResult.priorityClasses = this._priorityClasses;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniResourceQuotas | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
      this._pods = undefined;
      this._priorityClasses = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
      this._pods = value.pods;
      this._priorityClasses = value.priorityClasses;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: string; 
  public get pods() {
    return this.getStringAttribute('pods');
  }
  public set pods(value: string) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }

  // priority_classes - computed: false, optional: true, required: false
  private _priorityClasses?: string[]; 
  public get priorityClasses() {
    return this.getListAttribute('priority_classes');
  }
  public set priorityClasses(value: string[]) {
    this._priorityClasses = value;
  }
  public resetPriorityClasses() {
    this._priorityClasses = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityClassesInput() {
    return this._priorityClasses;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefLocalObjectReference {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefLocalObjectReferenceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefLocalObjectReferenceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefLocalObjectReferenceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefLocalObjectReference | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefLocalObjectReference | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#local_object_reference DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#local_object_reference}
  */
  readonly localObjectReference?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefLocalObjectReference;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#optional DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    local_object_reference: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefLocalObjectReferenceToTerraform(struct!.localObjectReference),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    local_object_reference: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefLocalObjectReferenceToHclTerraform(struct!.localObjectReference),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefLocalObjectReference",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._localObjectReference?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.localObjectReference = this._localObjectReference?.internalValue;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._localObjectReference.internalValue = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._localObjectReference.internalValue = value.localObjectReference;
      this._optional = value.optional;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // local_object_reference - computed: false, optional: true, required: false
  private _localObjectReference = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefLocalObjectReferenceOutputReference(this, "local_object_reference");
  public get localObjectReference() {
    return this._localObjectReference;
  }
  public putLocalObjectReference(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefLocalObjectReference) {
    this._localObjectReference.internalValue = value;
  }
  public resetLocalObjectReference() {
    this._localObjectReference.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localObjectReferenceInput() {
    return this._localObjectReference.internalValue;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#api_version DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#field_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#field_path}
  */
  readonly fieldPath?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromFieldRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    field_path: cdktf.stringToTerraform(struct!.fieldPath),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromFieldRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    field_path: {
      value: cdktf.stringToHclTerraform(struct!.fieldPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldPath = this._fieldPath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldPath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldPath = value.fieldPath;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // field_path - computed: false, optional: true, required: false
  private _fieldPath?: string; 
  public get fieldPath() {
    return this.getStringAttribute('field_path');
  }
  public set fieldPath(value: string) {
    this._fieldPath = value;
  }
  public resetFieldPath() {
    this._fieldPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldPathInput() {
    return this._fieldPath;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromResourceFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#container_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#container_name}
  */
  readonly containerName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#divisor DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#divisor}
  */
  readonly divisor?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resource DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resource}
  */
  readonly resource?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromResourceFieldRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_name: cdktf.stringToTerraform(struct!.containerName),
    divisor: cdktf.stringToTerraform(struct!.divisor),
    resource: cdktf.stringToTerraform(struct!.resource),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromResourceFieldRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_name: {
      value: cdktf.stringToHclTerraform(struct!.containerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    divisor: {
      value: cdktf.stringToHclTerraform(struct!.divisor),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromResourceFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromResourceFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerName = this._containerName;
    }
    if (this._divisor !== undefined) {
      hasAnyValues = true;
      internalValueResult.divisor = this._divisor;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromResourceFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerName = undefined;
      this._divisor = undefined;
      this._resource = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerName = value.containerName;
      this._divisor = value.divisor;
      this._resource = value.resource;
    }
  }

  // container_name - computed: false, optional: true, required: false
  private _containerName?: string; 
  public get containerName() {
    return this.getStringAttribute('container_name');
  }
  public set containerName(value: string) {
    this._containerName = value;
  }
  public resetContainerName() {
    this._containerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNameInput() {
    return this._containerName;
  }

  // divisor - computed: false, optional: true, required: false
  private _divisor?: string; 
  public get divisor() {
    return this.getStringAttribute('divisor');
  }
  public set divisor(value: string) {
    this._divisor = value;
  }
  public resetDivisor() {
    this._divisor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get divisorInput() {
    return this._divisor;
  }

  // resource - computed: false, optional: true, required: false
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  public resetResource() {
    this._resource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefLocalObjectReference {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefLocalObjectReferenceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefLocalObjectReferenceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefLocalObjectReferenceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefLocalObjectReference | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefLocalObjectReference | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#local_object_reference DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#local_object_reference}
  */
  readonly localObjectReference?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefLocalObjectReference;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#optional DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    local_object_reference: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefLocalObjectReferenceToTerraform(struct!.localObjectReference),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    local_object_reference: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefLocalObjectReferenceToHclTerraform(struct!.localObjectReference),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefLocalObjectReference",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._localObjectReference?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.localObjectReference = this._localObjectReference?.internalValue;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._localObjectReference.internalValue = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._localObjectReference.internalValue = value.localObjectReference;
      this._optional = value.optional;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // local_object_reference - computed: false, optional: true, required: false
  private _localObjectReference = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefLocalObjectReferenceOutputReference(this, "local_object_reference");
  public get localObjectReference() {
    return this._localObjectReference;
  }
  public putLocalObjectReference(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefLocalObjectReference) {
    this._localObjectReference.internalValue = value;
  }
  public resetLocalObjectReference() {
    this._localObjectReference.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localObjectReferenceInput() {
    return this._localObjectReference.internalValue;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#config_map_key_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#config_map_key_ref}
  */
  readonly configMapKeyRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#field_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#field_ref}
  */
  readonly fieldRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromFieldRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resource_field_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resource_field_ref}
  */
  readonly resourceFieldRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromResourceFieldRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_key_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRef;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config_map_key_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefToTerraform(struct!.configMapKeyRef),
    field_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromFieldRefToTerraform(struct!.fieldRef),
    resource_field_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromResourceFieldRefToTerraform(struct!.resourceFieldRef),
    secret_key_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config_map_key_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefToHclTerraform(struct!.configMapKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRef",
    },
    field_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromFieldRefToHclTerraform(struct!.fieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromFieldRef",
    },
    resource_field_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromResourceFieldRefToHclTerraform(struct!.resourceFieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromResourceFieldRef",
    },
    secret_key_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configMapKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.configMapKeyRef = this._configMapKeyRef?.internalValue;
    }
    if (this._fieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldRef = this._fieldRef?.internalValue;
    }
    if (this._resourceFieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceFieldRef = this._resourceFieldRef?.internalValue;
    }
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configMapKeyRef.internalValue = undefined;
      this._fieldRef.internalValue = undefined;
      this._resourceFieldRef.internalValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configMapKeyRef.internalValue = value.configMapKeyRef;
      this._fieldRef.internalValue = value.fieldRef;
      this._resourceFieldRef.internalValue = value.resourceFieldRef;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // config_map_key_ref - computed: false, optional: true, required: false
  private _configMapKeyRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRefOutputReference(this, "config_map_key_ref");
  public get configMapKeyRef() {
    return this._configMapKeyRef;
  }
  public putConfigMapKeyRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromConfigMapKeyRef) {
    this._configMapKeyRef.internalValue = value;
  }
  public resetConfigMapKeyRef() {
    this._configMapKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configMapKeyRefInput() {
    return this._configMapKeyRef.internalValue;
  }

  // field_ref - computed: false, optional: true, required: false
  private _fieldRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromFieldRefOutputReference(this, "field_ref");
  public get fieldRef() {
    return this._fieldRef;
  }
  public putFieldRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromFieldRef) {
    this._fieldRef.internalValue = value;
  }
  public resetFieldRef() {
    this._fieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldRefInput() {
    return this._fieldRef.internalValue;
  }

  // resource_field_ref - computed: false, optional: true, required: false
  private _resourceFieldRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromResourceFieldRefOutputReference(this, "resource_field_ref");
  public get resourceFieldRef() {
    return this._resourceFieldRef;
  }
  public putResourceFieldRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromResourceFieldRef) {
    this._resourceFieldRef.internalValue = value;
  }
  public resetResourceFieldRef() {
    this._resourceFieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceFieldRefInput() {
    return this._resourceFieldRef.internalValue;
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnv {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#value DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#value_from DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#value_from}
  */
  readonly valueFrom?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFrom;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnv | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnv | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnv | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnv | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnv[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerResources {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#limits DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#limits}
  */
  readonly limits?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#requests DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#requests}
  */
  readonly requests?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerResourcesToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    limits: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.limits),
    requests: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.requests),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerResourcesToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    limits: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.limits),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    requests: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.requests),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerResourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerResources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._limits !== undefined) {
      hasAnyValues = true;
      internalValueResult.limits = this._limits;
    }
    if (this._requests !== undefined) {
      hasAnyValues = true;
      internalValueResult.requests = this._requests;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerResources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._limits = undefined;
      this._requests = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._limits = value.limits;
      this._requests = value.requests;
    }
  }

  // limits - computed: false, optional: true, required: false
  private _limits?: { [key: string]: string }; 
  public get limits() {
    return this.getStringMapAttribute('limits');
  }
  public set limits(value: { [key: string]: string }) {
    this._limits = value;
  }
  public resetLimits() {
    this._limits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitsInput() {
    return this._limits;
  }

  // requests - computed: false, optional: true, required: false
  private _requests?: { [key: string]: string }; 
  public get requests() {
    return this.getStringMapAttribute('requests');
  }
  public set requests(value: { [key: string]: string }) {
    this._requests = value;
  }
  public resetRequests() {
    this._requests = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestsInput() {
    return this._requests;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextCapabilities {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#add DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#add}
  */
  readonly add?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#drop DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#drop}
  */
  readonly drop?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextCapabilitiesToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextCapabilities | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    add: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.add),
    drop: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.drop),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextCapabilitiesToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextCapabilities | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    add: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.add),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    drop: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.drop),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextCapabilitiesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextCapabilities | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._add !== undefined) {
      hasAnyValues = true;
      internalValueResult.add = this._add;
    }
    if (this._drop !== undefined) {
      hasAnyValues = true;
      internalValueResult.drop = this._drop;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextCapabilities | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._add = undefined;
      this._drop = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._add = value.add;
      this._drop = value.drop;
    }
  }

  // add - computed: false, optional: true, required: false
  private _add?: string[]; 
  public get add() {
    return this.getListAttribute('add');
  }
  public set add(value: string[]) {
    this._add = value;
  }
  public resetAdd() {
    this._add = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addInput() {
    return this._add;
  }

  // drop - computed: false, optional: true, required: false
  private _drop?: string[]; 
  public get drop() {
    return this.getListAttribute('drop');
  }
  public set drop(value: string[]) {
    this._drop = value;
  }
  public resetDrop() {
    this._drop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInput() {
    return this._drop;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeLinuxOptions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#level DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#level}
  */
  readonly level?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#role DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#role}
  */
  readonly role?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#user DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#user}
  */
  readonly user?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeLinuxOptionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeLinuxOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    level: cdktf.stringToTerraform(struct!.level),
    role: cdktf.stringToTerraform(struct!.role),
    type: cdktf.stringToTerraform(struct!.type),
    user: cdktf.stringToTerraform(struct!.user),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeLinuxOptionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeLinuxOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    level: {
      value: cdktf.stringToHclTerraform(struct!.level),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeLinuxOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeLinuxOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._level !== undefined) {
      hasAnyValues = true;
      internalValueResult.level = this._level;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeLinuxOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._level = undefined;
      this._role = undefined;
      this._type = undefined;
      this._user = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._level = value.level;
      this._role = value.role;
      this._type = value.type;
      this._user = value.user;
    }
  }

  // level - computed: false, optional: true, required: false
  private _level?: string; 
  public get level() {
    return this.getStringAttribute('level');
  }
  public set level(value: string) {
    this._level = value;
  }
  public resetLevel() {
    this._level = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get levelInput() {
    return this._level;
  }

  // role - computed: false, optional: true, required: false
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  public resetRole() {
    this._role = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeccompProfile {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#localhost_profile DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#localhost_profile}
  */
  readonly localhostProfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeccompProfileToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeccompProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    localhost_profile: cdktf.stringToTerraform(struct!.localhostProfile),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeccompProfileToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeccompProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    localhost_profile: {
      value: cdktf.stringToHclTerraform(struct!.localhostProfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeccompProfileOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeccompProfile | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._localhostProfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.localhostProfile = this._localhostProfile;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeccompProfile | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._localhostProfile = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._localhostProfile = value.localhostProfile;
      this._type = value.type;
    }
  }

  // localhost_profile - computed: false, optional: true, required: false
  private _localhostProfile?: string; 
  public get localhostProfile() {
    return this.getStringAttribute('localhost_profile');
  }
  public set localhostProfile(value: string) {
    this._localhostProfile = value;
  }
  public resetLocalhostProfile() {
    this._localhostProfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localhostProfileInput() {
    return this._localhostProfile;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextWindowsOptions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#gmsa_credential_spec DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#gmsa_credential_spec}
  */
  readonly gmsaCredentialSpec?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#gmsa_credential_spec_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#gmsa_credential_spec_name}
  */
  readonly gmsaCredentialSpecName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#host_process DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#host_process}
  */
  readonly hostProcess?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#run_as_user_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#run_as_user_name}
  */
  readonly runAsUserName?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextWindowsOptionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextWindowsOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    gmsa_credential_spec: cdktf.stringToTerraform(struct!.gmsaCredentialSpec),
    gmsa_credential_spec_name: cdktf.stringToTerraform(struct!.gmsaCredentialSpecName),
    host_process: cdktf.booleanToTerraform(struct!.hostProcess),
    run_as_user_name: cdktf.stringToTerraform(struct!.runAsUserName),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextWindowsOptionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextWindowsOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    gmsa_credential_spec: {
      value: cdktf.stringToHclTerraform(struct!.gmsaCredentialSpec),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    gmsa_credential_spec_name: {
      value: cdktf.stringToHclTerraform(struct!.gmsaCredentialSpecName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    host_process: {
      value: cdktf.booleanToHclTerraform(struct!.hostProcess),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_user_name: {
      value: cdktf.stringToHclTerraform(struct!.runAsUserName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextWindowsOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextWindowsOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._gmsaCredentialSpec !== undefined) {
      hasAnyValues = true;
      internalValueResult.gmsaCredentialSpec = this._gmsaCredentialSpec;
    }
    if (this._gmsaCredentialSpecName !== undefined) {
      hasAnyValues = true;
      internalValueResult.gmsaCredentialSpecName = this._gmsaCredentialSpecName;
    }
    if (this._hostProcess !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostProcess = this._hostProcess;
    }
    if (this._runAsUserName !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsUserName = this._runAsUserName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextWindowsOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._gmsaCredentialSpec = undefined;
      this._gmsaCredentialSpecName = undefined;
      this._hostProcess = undefined;
      this._runAsUserName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._gmsaCredentialSpec = value.gmsaCredentialSpec;
      this._gmsaCredentialSpecName = value.gmsaCredentialSpecName;
      this._hostProcess = value.hostProcess;
      this._runAsUserName = value.runAsUserName;
    }
  }

  // gmsa_credential_spec - computed: false, optional: true, required: false
  private _gmsaCredentialSpec?: string; 
  public get gmsaCredentialSpec() {
    return this.getStringAttribute('gmsa_credential_spec');
  }
  public set gmsaCredentialSpec(value: string) {
    this._gmsaCredentialSpec = value;
  }
  public resetGmsaCredentialSpec() {
    this._gmsaCredentialSpec = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gmsaCredentialSpecInput() {
    return this._gmsaCredentialSpec;
  }

  // gmsa_credential_spec_name - computed: false, optional: true, required: false
  private _gmsaCredentialSpecName?: string; 
  public get gmsaCredentialSpecName() {
    return this.getStringAttribute('gmsa_credential_spec_name');
  }
  public set gmsaCredentialSpecName(value: string) {
    this._gmsaCredentialSpecName = value;
  }
  public resetGmsaCredentialSpecName() {
    this._gmsaCredentialSpecName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gmsaCredentialSpecNameInput() {
    return this._gmsaCredentialSpecName;
  }

  // host_process - computed: false, optional: true, required: false
  private _hostProcess?: boolean | cdktf.IResolvable; 
  public get hostProcess() {
    return this.getBooleanAttribute('host_process');
  }
  public set hostProcess(value: boolean | cdktf.IResolvable) {
    this._hostProcess = value;
  }
  public resetHostProcess() {
    this._hostProcess = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostProcessInput() {
    return this._hostProcess;
  }

  // run_as_user_name - computed: false, optional: true, required: false
  private _runAsUserName?: string; 
  public get runAsUserName() {
    return this.getStringAttribute('run_as_user_name');
  }
  public set runAsUserName(value: string) {
    this._runAsUserName = value;
  }
  public resetRunAsUserName() {
    this._runAsUserName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsUserNameInput() {
    return this._runAsUserName;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContext {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#allow_privilege_escalation DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#allow_privilege_escalation}
  */
  readonly allowPrivilegeEscalation?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#capabilities DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#capabilities}
  */
  readonly capabilities?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextCapabilities;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#privileged DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#privileged}
  */
  readonly privileged?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#proc_mount DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#proc_mount}
  */
  readonly procMount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only_root_filesystem DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only_root_filesystem}
  */
  readonly readOnlyRootFilesystem?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#run_as_group DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#run_as_group}
  */
  readonly runAsGroup?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#run_as_non_root DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#run_as_non_root}
  */
  readonly runAsNonRoot?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#run_as_user DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#run_as_user}
  */
  readonly runAsUser?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#se_linux_options DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#se_linux_options}
  */
  readonly seLinuxOptions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeLinuxOptions;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#seccomp_profile DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#seccomp_profile}
  */
  readonly seccompProfile?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeccompProfile;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#windows_options DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#windows_options}
  */
  readonly windowsOptions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextWindowsOptions;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContext | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_privilege_escalation: cdktf.booleanToTerraform(struct!.allowPrivilegeEscalation),
    capabilities: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextCapabilitiesToTerraform(struct!.capabilities),
    privileged: cdktf.booleanToTerraform(struct!.privileged),
    proc_mount: cdktf.stringToTerraform(struct!.procMount),
    read_only_root_filesystem: cdktf.booleanToTerraform(struct!.readOnlyRootFilesystem),
    run_as_group: cdktf.numberToTerraform(struct!.runAsGroup),
    run_as_non_root: cdktf.booleanToTerraform(struct!.runAsNonRoot),
    run_as_user: cdktf.numberToTerraform(struct!.runAsUser),
    se_linux_options: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeLinuxOptionsToTerraform(struct!.seLinuxOptions),
    seccomp_profile: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeccompProfileToTerraform(struct!.seccompProfile),
    windows_options: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextWindowsOptionsToTerraform(struct!.windowsOptions),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContext | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_privilege_escalation: {
      value: cdktf.booleanToHclTerraform(struct!.allowPrivilegeEscalation),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    capabilities: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextCapabilitiesToHclTerraform(struct!.capabilities),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextCapabilities",
    },
    privileged: {
      value: cdktf.booleanToHclTerraform(struct!.privileged),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    proc_mount: {
      value: cdktf.stringToHclTerraform(struct!.procMount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only_root_filesystem: {
      value: cdktf.booleanToHclTerraform(struct!.readOnlyRootFilesystem),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_group: {
      value: cdktf.numberToHclTerraform(struct!.runAsGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    run_as_non_root: {
      value: cdktf.booleanToHclTerraform(struct!.runAsNonRoot),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_user: {
      value: cdktf.numberToHclTerraform(struct!.runAsUser),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    se_linux_options: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeLinuxOptionsToHclTerraform(struct!.seLinuxOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeLinuxOptions",
    },
    seccomp_profile: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeccompProfileToHclTerraform(struct!.seccompProfile),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeccompProfile",
    },
    windows_options: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextWindowsOptionsToHclTerraform(struct!.windowsOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextWindowsOptions",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContext | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowPrivilegeEscalation !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowPrivilegeEscalation = this._allowPrivilegeEscalation;
    }
    if (this._capabilities?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.capabilities = this._capabilities?.internalValue;
    }
    if (this._privileged !== undefined) {
      hasAnyValues = true;
      internalValueResult.privileged = this._privileged;
    }
    if (this._procMount !== undefined) {
      hasAnyValues = true;
      internalValueResult.procMount = this._procMount;
    }
    if (this._readOnlyRootFilesystem !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnlyRootFilesystem = this._readOnlyRootFilesystem;
    }
    if (this._runAsGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsGroup = this._runAsGroup;
    }
    if (this._runAsNonRoot !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsNonRoot = this._runAsNonRoot;
    }
    if (this._runAsUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsUser = this._runAsUser;
    }
    if (this._seLinuxOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.seLinuxOptions = this._seLinuxOptions?.internalValue;
    }
    if (this._seccompProfile?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.seccompProfile = this._seccompProfile?.internalValue;
    }
    if (this._windowsOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.windowsOptions = this._windowsOptions?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContext | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowPrivilegeEscalation = undefined;
      this._capabilities.internalValue = undefined;
      this._privileged = undefined;
      this._procMount = undefined;
      this._readOnlyRootFilesystem = undefined;
      this._runAsGroup = undefined;
      this._runAsNonRoot = undefined;
      this._runAsUser = undefined;
      this._seLinuxOptions.internalValue = undefined;
      this._seccompProfile.internalValue = undefined;
      this._windowsOptions.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowPrivilegeEscalation = value.allowPrivilegeEscalation;
      this._capabilities.internalValue = value.capabilities;
      this._privileged = value.privileged;
      this._procMount = value.procMount;
      this._readOnlyRootFilesystem = value.readOnlyRootFilesystem;
      this._runAsGroup = value.runAsGroup;
      this._runAsNonRoot = value.runAsNonRoot;
      this._runAsUser = value.runAsUser;
      this._seLinuxOptions.internalValue = value.seLinuxOptions;
      this._seccompProfile.internalValue = value.seccompProfile;
      this._windowsOptions.internalValue = value.windowsOptions;
    }
  }

  // allow_privilege_escalation - computed: false, optional: true, required: false
  private _allowPrivilegeEscalation?: boolean | cdktf.IResolvable; 
  public get allowPrivilegeEscalation() {
    return this.getBooleanAttribute('allow_privilege_escalation');
  }
  public set allowPrivilegeEscalation(value: boolean | cdktf.IResolvable) {
    this._allowPrivilegeEscalation = value;
  }
  public resetAllowPrivilegeEscalation() {
    this._allowPrivilegeEscalation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowPrivilegeEscalationInput() {
    return this._allowPrivilegeEscalation;
  }

  // capabilities - computed: false, optional: true, required: false
  private _capabilities = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextCapabilitiesOutputReference(this, "capabilities");
  public get capabilities() {
    return this._capabilities;
  }
  public putCapabilities(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextCapabilities) {
    this._capabilities.internalValue = value;
  }
  public resetCapabilities() {
    this._capabilities.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get capabilitiesInput() {
    return this._capabilities.internalValue;
  }

  // privileged - computed: false, optional: true, required: false
  private _privileged?: boolean | cdktf.IResolvable; 
  public get privileged() {
    return this.getBooleanAttribute('privileged');
  }
  public set privileged(value: boolean | cdktf.IResolvable) {
    this._privileged = value;
  }
  public resetPrivileged() {
    this._privileged = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get privilegedInput() {
    return this._privileged;
  }

  // proc_mount - computed: false, optional: true, required: false
  private _procMount?: string; 
  public get procMount() {
    return this.getStringAttribute('proc_mount');
  }
  public set procMount(value: string) {
    this._procMount = value;
  }
  public resetProcMount() {
    this._procMount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get procMountInput() {
    return this._procMount;
  }

  // read_only_root_filesystem - computed: false, optional: true, required: false
  private _readOnlyRootFilesystem?: boolean | cdktf.IResolvable; 
  public get readOnlyRootFilesystem() {
    return this.getBooleanAttribute('read_only_root_filesystem');
  }
  public set readOnlyRootFilesystem(value: boolean | cdktf.IResolvable) {
    this._readOnlyRootFilesystem = value;
  }
  public resetReadOnlyRootFilesystem() {
    this._readOnlyRootFilesystem = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyRootFilesystemInput() {
    return this._readOnlyRootFilesystem;
  }

  // run_as_group - computed: false, optional: true, required: false
  private _runAsGroup?: number; 
  public get runAsGroup() {
    return this.getNumberAttribute('run_as_group');
  }
  public set runAsGroup(value: number) {
    this._runAsGroup = value;
  }
  public resetRunAsGroup() {
    this._runAsGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsGroupInput() {
    return this._runAsGroup;
  }

  // run_as_non_root - computed: false, optional: true, required: false
  private _runAsNonRoot?: boolean | cdktf.IResolvable; 
  public get runAsNonRoot() {
    return this.getBooleanAttribute('run_as_non_root');
  }
  public set runAsNonRoot(value: boolean | cdktf.IResolvable) {
    this._runAsNonRoot = value;
  }
  public resetRunAsNonRoot() {
    this._runAsNonRoot = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsNonRootInput() {
    return this._runAsNonRoot;
  }

  // run_as_user - computed: false, optional: true, required: false
  private _runAsUser?: number; 
  public get runAsUser() {
    return this.getNumberAttribute('run_as_user');
  }
  public set runAsUser(value: number) {
    this._runAsUser = value;
  }
  public resetRunAsUser() {
    this._runAsUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsUserInput() {
    return this._runAsUser;
  }

  // se_linux_options - computed: false, optional: true, required: false
  private _seLinuxOptions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeLinuxOptionsOutputReference(this, "se_linux_options");
  public get seLinuxOptions() {
    return this._seLinuxOptions;
  }
  public putSeLinuxOptions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeLinuxOptions) {
    this._seLinuxOptions.internalValue = value;
  }
  public resetSeLinuxOptions() {
    this._seLinuxOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get seLinuxOptionsInput() {
    return this._seLinuxOptions.internalValue;
  }

  // seccomp_profile - computed: false, optional: true, required: false
  private _seccompProfile = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeccompProfileOutputReference(this, "seccomp_profile");
  public get seccompProfile() {
    return this._seccompProfile;
  }
  public putSeccompProfile(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextSeccompProfile) {
    this._seccompProfile.internalValue = value;
  }
  public resetSeccompProfile() {
    this._seccompProfile.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get seccompProfileInput() {
    return this._seccompProfile.internalValue;
  }

  // windows_options - computed: false, optional: true, required: false
  private _windowsOptions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextWindowsOptionsOutputReference(this, "windows_options");
  public get windowsOptions() {
    return this._windowsOptions;
  }
  public putWindowsOptions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextWindowsOptions) {
    this._windowsOptions.internalValue = value;
  }
  public resetWindowsOptions() {
    this._windowsOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get windowsOptionsInput() {
    return this._windowsOptions.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMounts {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mount_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mount_path}
  */
  readonly mountPath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mount_propagation DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mount_propagation}
  */
  readonly mountPropagation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#sub_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#sub_path}
  */
  readonly subPath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#sub_path_expr DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#sub_path_expr}
  */
  readonly subPathExpr?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMountsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    mount_path: cdktf.stringToTerraform(struct!.mountPath),
    mount_propagation: cdktf.stringToTerraform(struct!.mountPropagation),
    name: cdktf.stringToTerraform(struct!.name),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    sub_path: cdktf.stringToTerraform(struct!.subPath),
    sub_path_expr: cdktf.stringToTerraform(struct!.subPathExpr),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMountsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    mount_path: {
      value: cdktf.stringToHclTerraform(struct!.mountPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mount_propagation: {
      value: cdktf.stringToHclTerraform(struct!.mountPropagation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    sub_path: {
      value: cdktf.stringToHclTerraform(struct!.subPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sub_path_expr: {
      value: cdktf.stringToHclTerraform(struct!.subPathExpr),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMountsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMounts | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._mountPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.mountPath = this._mountPath;
    }
    if (this._mountPropagation !== undefined) {
      hasAnyValues = true;
      internalValueResult.mountPropagation = this._mountPropagation;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._subPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.subPath = this._subPath;
    }
    if (this._subPathExpr !== undefined) {
      hasAnyValues = true;
      internalValueResult.subPathExpr = this._subPathExpr;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMounts | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._mountPath = undefined;
      this._mountPropagation = undefined;
      this._name = undefined;
      this._readOnly = undefined;
      this._subPath = undefined;
      this._subPathExpr = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._mountPath = value.mountPath;
      this._mountPropagation = value.mountPropagation;
      this._name = value.name;
      this._readOnly = value.readOnly;
      this._subPath = value.subPath;
      this._subPathExpr = value.subPathExpr;
    }
  }

  // mount_path - computed: false, optional: true, required: false
  private _mountPath?: string; 
  public get mountPath() {
    return this.getStringAttribute('mount_path');
  }
  public set mountPath(value: string) {
    this._mountPath = value;
  }
  public resetMountPath() {
    this._mountPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mountPathInput() {
    return this._mountPath;
  }

  // mount_propagation - computed: false, optional: true, required: false
  private _mountPropagation?: string; 
  public get mountPropagation() {
    return this.getStringAttribute('mount_propagation');
  }
  public set mountPropagation(value: string) {
    this._mountPropagation = value;
  }
  public resetMountPropagation() {
    this._mountPropagation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mountPropagationInput() {
    return this._mountPropagation;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // sub_path - computed: false, optional: true, required: false
  private _subPath?: string; 
  public get subPath() {
    return this.getStringAttribute('sub_path');
  }
  public set subPath(value: string) {
    this._subPath = value;
  }
  public resetSubPath() {
    this._subPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subPathInput() {
    return this._subPath;
  }

  // sub_path_expr - computed: false, optional: true, required: false
  private _subPathExpr?: string; 
  public get subPathExpr() {
    return this.getStringAttribute('sub_path_expr');
  }
  public set subPathExpr(value: string) {
    this._subPathExpr = value;
  }
  public resetSubPathExpr() {
    this._subPathExpr = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subPathExprInput() {
    return this._subPathExpr;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMountsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMounts[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMountsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMountsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainer {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#env DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#env}
  */
  readonly env?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnv[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#image DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resources DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resources}
  */
  readonly resources?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerResources;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#security_context DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#security_context}
  */
  readonly securityContext?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContext;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_mounts DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_mounts}
  */
  readonly volumeMounts?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMounts[] | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    env: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvToTerraform, false)(struct!.env),
    image: cdktf.stringToTerraform(struct!.image),
    resources: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerResourcesToTerraform(struct!.resources),
    security_context: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextToTerraform(struct!.securityContext),
    volume_mounts: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMountsToTerraform, false)(struct!.volumeMounts),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    env: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvToHclTerraform, false)(struct!.env),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resources: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerResourcesToHclTerraform(struct!.resources),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerResources",
    },
    security_context: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextToHclTerraform(struct!.securityContext),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContext",
    },
    volume_mounts: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMountsToHclTerraform, false)(struct!.volumeMounts),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMountsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainer | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._env?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.env = this._env?.internalValue;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._securityContext?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.securityContext = this._securityContext?.internalValue;
    }
    if (this._volumeMounts?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeMounts = this._volumeMounts?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainer | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._env.internalValue = undefined;
      this._image = undefined;
      this._resources.internalValue = undefined;
      this._securityContext.internalValue = undefined;
      this._volumeMounts.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._env.internalValue = value.env;
      this._image = value.image;
      this._resources.internalValue = value.resources;
      this._securityContext.internalValue = value.securityContext;
      this._volumeMounts.internalValue = value.volumeMounts;
    }
  }

  // env - computed: false, optional: true, required: false
  private _env = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnvList(this, "env", false);
  public get env() {
    return this._env;
  }
  public putEnv(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerEnv[] | cdktf.IResolvable) {
    this._env.internalValue = value;
  }
  public resetEnv() {
    this._env.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get envInput() {
    return this._env.internalValue;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerResourcesOutputReference(this, "resources");
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerResources) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // security_context - computed: false, optional: true, required: false
  private _securityContext = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContextOutputReference(this, "security_context");
  public get securityContext() {
    return this._securityContext;
  }
  public putSecurityContext(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerSecurityContext) {
    this._securityContext.internalValue = value;
  }
  public resetSecurityContext() {
    this._securityContext.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get securityContextInput() {
    return this._securityContext.internalValue;
  }

  // volume_mounts - computed: false, optional: true, required: false
  private _volumeMounts = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMountsList(this, "volume_mounts", false);
  public get volumeMounts() {
    return this._volumeMounts;
  }
  public putVolumeMounts(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerVolumeMounts[] | cdktf.IResolvable) {
    this._volumeMounts.internalValue = value;
  }
  public resetVolumeMounts() {
    this._volumeMounts.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeMountsInput() {
    return this._volumeMounts.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaint {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#container DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#container}
  */
  readonly container?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainer;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#enabled DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaint | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerToTerraform(struct!.container),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaint | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerToHclTerraform(struct!.container),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainer",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaint | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._container?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.container = this._container?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaint | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._container.internalValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._container.internalValue = value.container;
      this._enabled = value.enabled;
    }
  }

  // container - computed: false, optional: true, required: false
  private _container = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainerOutputReference(this, "container");
  public get container() {
    return this._container;
  }
  public putContainer(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintContainer) {
    this._container.internalValue = value;
  }
  public resetContainer() {
    this._container.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerInput() {
    return this._container.internalValue;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCni {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#bin_dir DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#bin_dir}
  */
  readonly binDir?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#chained DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#chained}
  */
  readonly chained?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#conf_dir DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#conf_dir}
  */
  readonly confDir?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#conf_file_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#conf_file_name}
  */
  readonly confFileName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#daemonset DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#daemonset}
  */
  readonly daemonset?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonset;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#enabled DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#exclude_namespaces DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#exclude_namespaces}
  */
  readonly excludeNamespaces?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#include_namespaces DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#include_namespaces}
  */
  readonly includeNamespaces?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#log_level DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#log_level}
  */
  readonly logLevel?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#psp_cluster_role_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#psp_cluster_role_name}
  */
  readonly pspClusterRoleName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#repair DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#repair}
  */
  readonly repair?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniRepair;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resource_quotas DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resource_quotas}
  */
  readonly resourceQuotas?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniResourceQuotas;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#taint DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#taint}
  */
  readonly taint?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaint;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCni | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    bin_dir: cdktf.stringToTerraform(struct!.binDir),
    chained: cdktf.booleanToTerraform(struct!.chained),
    conf_dir: cdktf.stringToTerraform(struct!.confDir),
    conf_file_name: cdktf.stringToTerraform(struct!.confFileName),
    daemonset: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetToTerraform(struct!.daemonset),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    exclude_namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.excludeNamespaces),
    include_namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.includeNamespaces),
    log_level: cdktf.stringToTerraform(struct!.logLevel),
    psp_cluster_role_name: cdktf.stringToTerraform(struct!.pspClusterRoleName),
    repair: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniRepairToTerraform(struct!.repair),
    resource_quotas: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniResourceQuotasToTerraform(struct!.resourceQuotas),
    taint: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintToTerraform(struct!.taint),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCni | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    bin_dir: {
      value: cdktf.stringToHclTerraform(struct!.binDir),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    chained: {
      value: cdktf.booleanToHclTerraform(struct!.chained),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    conf_dir: {
      value: cdktf.stringToHclTerraform(struct!.confDir),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    conf_file_name: {
      value: cdktf.stringToHclTerraform(struct!.confFileName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    daemonset: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetToHclTerraform(struct!.daemonset),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonset",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    exclude_namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.excludeNamespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    include_namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.includeNamespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    log_level: {
      value: cdktf.stringToHclTerraform(struct!.logLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    psp_cluster_role_name: {
      value: cdktf.stringToHclTerraform(struct!.pspClusterRoleName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    repair: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniRepairToHclTerraform(struct!.repair),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniRepair",
    },
    resource_quotas: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniResourceQuotasToHclTerraform(struct!.resourceQuotas),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniResourceQuotas",
    },
    taint: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintToHclTerraform(struct!.taint),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaint",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCni | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._binDir !== undefined) {
      hasAnyValues = true;
      internalValueResult.binDir = this._binDir;
    }
    if (this._chained !== undefined) {
      hasAnyValues = true;
      internalValueResult.chained = this._chained;
    }
    if (this._confDir !== undefined) {
      hasAnyValues = true;
      internalValueResult.confDir = this._confDir;
    }
    if (this._confFileName !== undefined) {
      hasAnyValues = true;
      internalValueResult.confFileName = this._confFileName;
    }
    if (this._daemonset?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.daemonset = this._daemonset?.internalValue;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._excludeNamespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.excludeNamespaces = this._excludeNamespaces;
    }
    if (this._includeNamespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.includeNamespaces = this._includeNamespaces;
    }
    if (this._logLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLevel = this._logLevel;
    }
    if (this._pspClusterRoleName !== undefined) {
      hasAnyValues = true;
      internalValueResult.pspClusterRoleName = this._pspClusterRoleName;
    }
    if (this._repair?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.repair = this._repair?.internalValue;
    }
    if (this._resourceQuotas?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceQuotas = this._resourceQuotas?.internalValue;
    }
    if (this._taint?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.taint = this._taint?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCni | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._binDir = undefined;
      this._chained = undefined;
      this._confDir = undefined;
      this._confFileName = undefined;
      this._daemonset.internalValue = undefined;
      this._enabled = undefined;
      this._excludeNamespaces = undefined;
      this._includeNamespaces = undefined;
      this._logLevel = undefined;
      this._pspClusterRoleName = undefined;
      this._repair.internalValue = undefined;
      this._resourceQuotas.internalValue = undefined;
      this._taint.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._binDir = value.binDir;
      this._chained = value.chained;
      this._confDir = value.confDir;
      this._confFileName = value.confFileName;
      this._daemonset.internalValue = value.daemonset;
      this._enabled = value.enabled;
      this._excludeNamespaces = value.excludeNamespaces;
      this._includeNamespaces = value.includeNamespaces;
      this._logLevel = value.logLevel;
      this._pspClusterRoleName = value.pspClusterRoleName;
      this._repair.internalValue = value.repair;
      this._resourceQuotas.internalValue = value.resourceQuotas;
      this._taint.internalValue = value.taint;
    }
  }

  // bin_dir - computed: false, optional: true, required: false
  private _binDir?: string; 
  public get binDir() {
    return this.getStringAttribute('bin_dir');
  }
  public set binDir(value: string) {
    this._binDir = value;
  }
  public resetBinDir() {
    this._binDir = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get binDirInput() {
    return this._binDir;
  }

  // chained - computed: false, optional: true, required: false
  private _chained?: boolean | cdktf.IResolvable; 
  public get chained() {
    return this.getBooleanAttribute('chained');
  }
  public set chained(value: boolean | cdktf.IResolvable) {
    this._chained = value;
  }
  public resetChained() {
    this._chained = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get chainedInput() {
    return this._chained;
  }

  // conf_dir - computed: false, optional: true, required: false
  private _confDir?: string; 
  public get confDir() {
    return this.getStringAttribute('conf_dir');
  }
  public set confDir(value: string) {
    this._confDir = value;
  }
  public resetConfDir() {
    this._confDir = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get confDirInput() {
    return this._confDir;
  }

  // conf_file_name - computed: false, optional: true, required: false
  private _confFileName?: string; 
  public get confFileName() {
    return this.getStringAttribute('conf_file_name');
  }
  public set confFileName(value: string) {
    this._confFileName = value;
  }
  public resetConfFileName() {
    this._confFileName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get confFileNameInput() {
    return this._confFileName;
  }

  // daemonset - computed: false, optional: true, required: false
  private _daemonset = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonsetOutputReference(this, "daemonset");
  public get daemonset() {
    return this._daemonset;
  }
  public putDaemonset(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniDaemonset) {
    this._daemonset.internalValue = value;
  }
  public resetDaemonset() {
    this._daemonset.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get daemonsetInput() {
    return this._daemonset.internalValue;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // exclude_namespaces - computed: false, optional: true, required: false
  private _excludeNamespaces?: string[]; 
  public get excludeNamespaces() {
    return this.getListAttribute('exclude_namespaces');
  }
  public set excludeNamespaces(value: string[]) {
    this._excludeNamespaces = value;
  }
  public resetExcludeNamespaces() {
    this._excludeNamespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get excludeNamespacesInput() {
    return this._excludeNamespaces;
  }

  // include_namespaces - computed: false, optional: true, required: false
  private _includeNamespaces?: string[]; 
  public get includeNamespaces() {
    return this.getListAttribute('include_namespaces');
  }
  public set includeNamespaces(value: string[]) {
    this._includeNamespaces = value;
  }
  public resetIncludeNamespaces() {
    this._includeNamespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeNamespacesInput() {
    return this._includeNamespaces;
  }

  // log_level - computed: false, optional: true, required: false
  private _logLevel?: string; 
  public get logLevel() {
    return this.getStringAttribute('log_level');
  }
  public set logLevel(value: string) {
    this._logLevel = value;
  }
  public resetLogLevel() {
    this._logLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLevelInput() {
    return this._logLevel;
  }

  // psp_cluster_role_name - computed: false, optional: true, required: false
  private _pspClusterRoleName?: string; 
  public get pspClusterRoleName() {
    return this.getStringAttribute('psp_cluster_role_name');
  }
  public set pspClusterRoleName(value: string) {
    this._pspClusterRoleName = value;
  }
  public resetPspClusterRoleName() {
    this._pspClusterRoleName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pspClusterRoleNameInput() {
    return this._pspClusterRoleName;
  }

  // repair - computed: false, optional: true, required: false
  private _repair = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniRepairOutputReference(this, "repair");
  public get repair() {
    return this._repair;
  }
  public putRepair(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniRepair) {
    this._repair.internalValue = value;
  }
  public resetRepair() {
    this._repair.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get repairInput() {
    return this._repair.internalValue;
  }

  // resource_quotas - computed: false, optional: true, required: false
  private _resourceQuotas = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniResourceQuotasOutputReference(this, "resource_quotas");
  public get resourceQuotas() {
    return this._resourceQuotas;
  }
  public putResourceQuotas(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniResourceQuotas) {
    this._resourceQuotas.internalValue = value;
  }
  public resetResourceQuotas() {
    this._resourceQuotas.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceQuotasInput() {
    return this._resourceQuotas.internalValue;
  }

  // taint - computed: false, optional: true, required: false
  private _taint = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaintOutputReference(this, "taint");
  public get taint() {
    return this._taint;
  }
  public putTaint(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniTaint) {
    this._taint.internalValue = value;
  }
  public resetTaint() {
    this._taint.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get taintInput() {
    return this._taint.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitResources {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#limits DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#limits}
  */
  readonly limits?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#requests DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#requests}
  */
  readonly requests?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitResourcesToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    limits: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.limits),
    requests: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.requests),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitResourcesToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    limits: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.limits),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    requests: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.requests),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitResourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitResources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._limits !== undefined) {
      hasAnyValues = true;
      internalValueResult.limits = this._limits;
    }
    if (this._requests !== undefined) {
      hasAnyValues = true;
      internalValueResult.requests = this._requests;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitResources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._limits = undefined;
      this._requests = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._limits = value.limits;
      this._requests = value.requests;
    }
  }

  // limits - computed: false, optional: true, required: false
  private _limits?: { [key: string]: string }; 
  public get limits() {
    return this.getStringMapAttribute('limits');
  }
  public set limits(value: { [key: string]: string }) {
    this._limits = value;
  }
  public resetLimits() {
    this._limits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitsInput() {
    return this._limits;
  }

  // requests - computed: false, optional: true, required: false
  private _requests?: { [key: string]: string }; 
  public get requests() {
    return this.getStringMapAttribute('requests');
  }
  public set requests(value: { [key: string]: string }) {
    this._requests = value;
  }
  public resetRequests() {
    this._requests = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestsInput() {
    return this._requests;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInit {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#cni DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#cni}
  */
  readonly cni?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCni;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#image DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resources DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resources}
  */
  readonly resources?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitResources;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cni: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniToTerraform(struct!.cni),
    image: cdktf.stringToTerraform(struct!.image),
    resources: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitResourcesToTerraform(struct!.resources),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cni: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniToHclTerraform(struct!.cni),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCni",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resources: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitResourcesToHclTerraform(struct!.resources),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitResources",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInit | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cni?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cni = this._cni?.internalValue;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInit | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cni.internalValue = undefined;
      this._image = undefined;
      this._resources.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cni.internalValue = value.cni;
      this._image = value.image;
      this._resources.internalValue = value.resources;
    }
  }

  // cni - computed: false, optional: true, required: false
  private _cni = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCniOutputReference(this, "cni");
  public get cni() {
    return this._cni;
  }
  public putCni(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitCni) {
    this._cni.internalValue = value;
  }
  public resetCni() {
    this._cni.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cniInput() {
    return this._cni.internalValue;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitResourcesOutputReference(this, "resources");
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitResources) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#enabled DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasmToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasmToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSds {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#token_audience DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#token_audience}
  */
  readonly tokenAudience?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSdsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSds | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    token_audience: cdktf.stringToTerraform(struct!.tokenAudience),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSdsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSds | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    token_audience: {
      value: cdktf.stringToHclTerraform(struct!.tokenAudience),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSdsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSds | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._tokenAudience !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenAudience = this._tokenAudience;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSds | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._tokenAudience = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._tokenAudience = value.tokenAudience;
    }
  }

  // token_audience - computed: false, optional: true, required: false
  private _tokenAudience?: string; 
  public get tokenAudience() {
    return this.getStringAttribute('token_audience');
  }
  public set tokenAudience(value: string) {
    this._tokenAudience = value;
  }
  public resetTokenAudience() {
    this._tokenAudience = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenAudienceInput() {
    return this._tokenAudience;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_expressions DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_fields DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_fields}
  */
  readonly matchFields?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[] | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_fields: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsToTerraform, false)(struct!.matchFields),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsList",
    },
    match_fields: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsToHclTerraform, false)(struct!.matchFields),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchFields?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchFields = this._matchFields?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchFields.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchFields.internalValue = value.matchFields;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_fields - computed: false, optional: true, required: false
  private _matchFields = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsList(this, "match_fields", false);
  public get matchFields() {
    return this._matchFields;
  }
  public putMatchFields(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[] | cdktf.IResolvable) {
    this._matchFields.internalValue = value;
  }
  public resetMatchFields() {
    this._matchFields.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchFieldsInput() {
    return this._matchFields.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#preference DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#preference}
  */
  readonly preference?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#weight DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#weight}
  */
  readonly weight?: number;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    preference: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceToTerraform(struct!.preference),
    weight: cdktf.numberToTerraform(struct!.weight),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    preference: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceToHclTerraform(struct!.preference),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
    },
    weight: {
      value: cdktf.numberToHclTerraform(struct!.weight),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._preference?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.preference = this._preference?.internalValue;
    }
    if (this._weight !== undefined) {
      hasAnyValues = true;
      internalValueResult.weight = this._weight;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._preference.internalValue = undefined;
      this._weight = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._preference.internalValue = value.preference;
      this._weight = value.weight;
    }
  }

  // preference - computed: false, optional: true, required: false
  private _preference = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputReference(this, "preference");
  public get preference() {
    return this._preference;
  }
  public putPreference(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) {
    this._preference.internalValue = value;
  }
  public resetPreference() {
    this._preference.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preferenceInput() {
    return this._preference.internalValue;
  }

  // weight - computed: false, optional: true, required: false
  private _weight?: number; 
  public get weight() {
    return this.getNumberAttribute('weight');
  }
  public set weight(value: number) {
    this._weight = value;
  }
  public resetWeight() {
    this._weight = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get weightInput() {
    return this._weight;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_expressions DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_fields DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_fields}
  */
  readonly matchFields?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[] | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_fields: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsToTerraform, false)(struct!.matchFields),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsList",
    },
    match_fields: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsToHclTerraform, false)(struct!.matchFields),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchFields?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchFields = this._matchFields?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchFields.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchFields.internalValue = value.matchFields;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_fields - computed: false, optional: true, required: false
  private _matchFields = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsList(this, "match_fields", false);
  public get matchFields() {
    return this._matchFields;
  }
  public putMatchFields(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[] | cdktf.IResolvable) {
    this._matchFields.internalValue = value;
  }
  public resetMatchFields() {
    this._matchFields.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchFieldsInput() {
    return this._matchFields.internalValue;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#node_selector_terms DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#node_selector_terms}
  */
  readonly nodeSelectorTerms?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[] | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    node_selector_terms: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsToTerraform, false)(struct!.nodeSelectorTerms),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    node_selector_terms: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsToHclTerraform, false)(struct!.nodeSelectorTerms),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nodeSelectorTerms?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectorTerms = this._nodeSelectorTerms?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nodeSelectorTerms.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nodeSelectorTerms.internalValue = value.nodeSelectorTerms;
    }
  }

  // node_selector_terms - computed: false, optional: true, required: false
  private _nodeSelectorTerms = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsList(this, "node_selector_terms", false);
  public get nodeSelectorTerms() {
    return this._nodeSelectorTerms;
  }
  public putNodeSelectorTerms(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[] | cdktf.IResolvable) {
    this._nodeSelectorTerms.internalValue = value;
  }
  public resetNodeSelectorTerms() {
    this._nodeSelectorTerms.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorTermsInput() {
    return this._nodeSelectorTerms.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinity {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#preferred_during_scheduling_ignored_during_execution DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#preferred_during_scheduling_ignored_during_execution}
  */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#required_during_scheduling_ignored_during_execution DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#required_during_scheduling_ignored_during_execution}
  */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    preferred_during_scheduling_ignored_during_execution: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
    required_during_scheduling_ignored_during_execution: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform(struct!.requiredDuringSchedulingIgnoredDuringExecution),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    preferred_during_scheduling_ignored_during_execution: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionList",
    },
    required_during_scheduling_ignored_during_execution: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct!.requiredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.preferredDuringSchedulingIgnoredDuringExecution = this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    if (this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requiredDuringSchedulingIgnoredDuringExecution = this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value.preferredDuringSchedulingIgnoredDuringExecution;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value.requiredDuringSchedulingIgnoredDuringExecution;
    }
  }

  // preferred_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _preferredDuringSchedulingIgnoredDuringExecution = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionList(this, "preferred_during_scheduling_ignored_during_execution", false);
  public get preferredDuringSchedulingIgnoredDuringExecution() {
    return this._preferredDuringSchedulingIgnoredDuringExecution;
  }
  public putPreferredDuringSchedulingIgnoredDuringExecution(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable) {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetPreferredDuringSchedulingIgnoredDuringExecution() {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preferredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._preferredDuringSchedulingIgnoredDuringExecution.internalValue;
  }

  // required_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _requiredDuringSchedulingIgnoredDuringExecution = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference(this, "required_during_scheduling_ignored_during_execution");
  public get requiredDuringSchedulingIgnoredDuringExecution() {
    return this._requiredDuringSchedulingIgnoredDuringExecution;
  }
  public putRequiredDuringSchedulingIgnoredDuringExecution(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetRequiredDuringSchedulingIgnoredDuringExecution() {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._requiredDuringSchedulingIgnoredDuringExecution.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_expressions DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_expressions DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#label_selector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#namespace_selector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#namespace_selector}
  */
  readonly namespaceSelector?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#namespaces DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#topology_key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#topology_key}
  */
  readonly topologyKey?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToTerraform(struct!.labelSelector),
    namespace_selector: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToTerraform(struct!.namespaceSelector),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    topology_key: cdktf.stringToTerraform(struct!.topologyKey),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
    },
    namespace_selector: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToHclTerraform(struct!.namespaceSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    topology_key: {
      value: cdktf.stringToHclTerraform(struct!.topologyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._namespaceSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaceSelector = this._namespaceSelector?.internalValue;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._topologyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyKey = this._topologyKey;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._namespaceSelector.internalValue = undefined;
      this._namespaces = undefined;
      this._topologyKey = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._namespaceSelector.internalValue = value.namespaceSelector;
      this._namespaces = value.namespaces;
      this._topologyKey = value.topologyKey;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // namespace_selector - computed: false, optional: true, required: false
  private _namespaceSelector = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputReference(this, "namespace_selector");
  public get namespaceSelector() {
    return this._namespaceSelector;
  }
  public putNamespaceSelector(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) {
    this._namespaceSelector.internalValue = value;
  }
  public resetNamespaceSelector() {
    this._namespaceSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceSelectorInput() {
    return this._namespaceSelector.internalValue;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // topology_key - computed: false, optional: true, required: false
  private _topologyKey?: string; 
  public get topologyKey() {
    return this.getStringAttribute('topology_key');
  }
  public set topologyKey(value: string) {
    this._topologyKey = value;
  }
  public resetTopologyKey() {
    this._topologyKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyKeyInput() {
    return this._topologyKey;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pod_affinity_term DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pod_affinity_term}
  */
  readonly podAffinityTerm?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#weight DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#weight}
  */
  readonly weight?: number;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    pod_affinity_term: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToTerraform(struct!.podAffinityTerm),
    weight: cdktf.numberToTerraform(struct!.weight),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    pod_affinity_term: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToHclTerraform(struct!.podAffinityTerm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
    },
    weight: {
      value: cdktf.numberToHclTerraform(struct!.weight),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._podAffinityTerm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAffinityTerm = this._podAffinityTerm?.internalValue;
    }
    if (this._weight !== undefined) {
      hasAnyValues = true;
      internalValueResult.weight = this._weight;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._podAffinityTerm.internalValue = undefined;
      this._weight = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._podAffinityTerm.internalValue = value.podAffinityTerm;
      this._weight = value.weight;
    }
  }

  // pod_affinity_term - computed: false, optional: true, required: false
  private _podAffinityTerm = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputReference(this, "pod_affinity_term");
  public get podAffinityTerm() {
    return this._podAffinityTerm;
  }
  public putPodAffinityTerm(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) {
    this._podAffinityTerm.internalValue = value;
  }
  public resetPodAffinityTerm() {
    this._podAffinityTerm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podAffinityTermInput() {
    return this._podAffinityTerm.internalValue;
  }

  // weight - computed: false, optional: true, required: false
  private _weight?: number; 
  public get weight() {
    return this.getNumberAttribute('weight');
  }
  public set weight(value: number) {
    this._weight = value;
  }
  public resetWeight() {
    this._weight = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get weightInput() {
    return this._weight;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_expressions DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_expressions DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#label_selector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#namespace_selector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#namespace_selector}
  */
  readonly namespaceSelector?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#namespaces DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#topology_key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#topology_key}
  */
  readonly topologyKey?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToTerraform(struct!.labelSelector),
    namespace_selector: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToTerraform(struct!.namespaceSelector),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    topology_key: cdktf.stringToTerraform(struct!.topologyKey),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
    },
    namespace_selector: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToHclTerraform(struct!.namespaceSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    topology_key: {
      value: cdktf.stringToHclTerraform(struct!.topologyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._namespaceSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaceSelector = this._namespaceSelector?.internalValue;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._topologyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyKey = this._topologyKey;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._namespaceSelector.internalValue = undefined;
      this._namespaces = undefined;
      this._topologyKey = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._namespaceSelector.internalValue = value.namespaceSelector;
      this._namespaces = value.namespaces;
      this._topologyKey = value.topologyKey;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // namespace_selector - computed: false, optional: true, required: false
  private _namespaceSelector = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputReference(this, "namespace_selector");
  public get namespaceSelector() {
    return this._namespaceSelector;
  }
  public putNamespaceSelector(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) {
    this._namespaceSelector.internalValue = value;
  }
  public resetNamespaceSelector() {
    this._namespaceSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceSelectorInput() {
    return this._namespaceSelector.internalValue;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // topology_key - computed: false, optional: true, required: false
  private _topologyKey?: string; 
  public get topologyKey() {
    return this.getStringAttribute('topology_key');
  }
  public set topologyKey(value: string) {
    this._topologyKey = value;
  }
  public resetTopologyKey() {
    this._topologyKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyKeyInput() {
    return this._topologyKey;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinity {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#preferred_during_scheduling_ignored_during_execution DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#preferred_during_scheduling_ignored_during_execution}
  */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#required_during_scheduling_ignored_during_execution DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#required_during_scheduling_ignored_during_execution}
  */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    preferred_during_scheduling_ignored_during_execution: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
    required_during_scheduling_ignored_during_execution: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform, false)(struct!.requiredDuringSchedulingIgnoredDuringExecution),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    preferred_during_scheduling_ignored_during_execution: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionList",
    },
    required_during_scheduling_ignored_during_execution: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform, false)(struct!.requiredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.preferredDuringSchedulingIgnoredDuringExecution = this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    if (this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requiredDuringSchedulingIgnoredDuringExecution = this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value.preferredDuringSchedulingIgnoredDuringExecution;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value.requiredDuringSchedulingIgnoredDuringExecution;
    }
  }

  // preferred_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _preferredDuringSchedulingIgnoredDuringExecution = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionList(this, "preferred_during_scheduling_ignored_during_execution", false);
  public get preferredDuringSchedulingIgnoredDuringExecution() {
    return this._preferredDuringSchedulingIgnoredDuringExecution;
  }
  public putPreferredDuringSchedulingIgnoredDuringExecution(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable) {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetPreferredDuringSchedulingIgnoredDuringExecution() {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preferredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._preferredDuringSchedulingIgnoredDuringExecution.internalValue;
  }

  // required_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _requiredDuringSchedulingIgnoredDuringExecution = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionList(this, "required_during_scheduling_ignored_during_execution", false);
  public get requiredDuringSchedulingIgnoredDuringExecution() {
    return this._requiredDuringSchedulingIgnoredDuringExecution;
  }
  public putRequiredDuringSchedulingIgnoredDuringExecution(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable) {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetRequiredDuringSchedulingIgnoredDuringExecution() {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._requiredDuringSchedulingIgnoredDuringExecution.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_expressions DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_expressions DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#label_selector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#namespace_selector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#namespace_selector}
  */
  readonly namespaceSelector?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#namespaces DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#topology_key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#topology_key}
  */
  readonly topologyKey?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToTerraform(struct!.labelSelector),
    namespace_selector: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToTerraform(struct!.namespaceSelector),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    topology_key: cdktf.stringToTerraform(struct!.topologyKey),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
    },
    namespace_selector: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToHclTerraform(struct!.namespaceSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    topology_key: {
      value: cdktf.stringToHclTerraform(struct!.topologyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._namespaceSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaceSelector = this._namespaceSelector?.internalValue;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._topologyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyKey = this._topologyKey;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._namespaceSelector.internalValue = undefined;
      this._namespaces = undefined;
      this._topologyKey = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._namespaceSelector.internalValue = value.namespaceSelector;
      this._namespaces = value.namespaces;
      this._topologyKey = value.topologyKey;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // namespace_selector - computed: false, optional: true, required: false
  private _namespaceSelector = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputReference(this, "namespace_selector");
  public get namespaceSelector() {
    return this._namespaceSelector;
  }
  public putNamespaceSelector(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) {
    this._namespaceSelector.internalValue = value;
  }
  public resetNamespaceSelector() {
    this._namespaceSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceSelectorInput() {
    return this._namespaceSelector.internalValue;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // topology_key - computed: false, optional: true, required: false
  private _topologyKey?: string; 
  public get topologyKey() {
    return this.getStringAttribute('topology_key');
  }
  public set topologyKey(value: string) {
    this._topologyKey = value;
  }
  public resetTopologyKey() {
    this._topologyKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyKeyInput() {
    return this._topologyKey;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pod_affinity_term DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pod_affinity_term}
  */
  readonly podAffinityTerm?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#weight DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#weight}
  */
  readonly weight?: number;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    pod_affinity_term: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToTerraform(struct!.podAffinityTerm),
    weight: cdktf.numberToTerraform(struct!.weight),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    pod_affinity_term: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToHclTerraform(struct!.podAffinityTerm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
    },
    weight: {
      value: cdktf.numberToHclTerraform(struct!.weight),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._podAffinityTerm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAffinityTerm = this._podAffinityTerm?.internalValue;
    }
    if (this._weight !== undefined) {
      hasAnyValues = true;
      internalValueResult.weight = this._weight;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._podAffinityTerm.internalValue = undefined;
      this._weight = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._podAffinityTerm.internalValue = value.podAffinityTerm;
      this._weight = value.weight;
    }
  }

  // pod_affinity_term - computed: false, optional: true, required: false
  private _podAffinityTerm = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputReference(this, "pod_affinity_term");
  public get podAffinityTerm() {
    return this._podAffinityTerm;
  }
  public putPodAffinityTerm(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) {
    this._podAffinityTerm.internalValue = value;
  }
  public resetPodAffinityTerm() {
    this._podAffinityTerm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podAffinityTermInput() {
    return this._podAffinityTerm.internalValue;
  }

  // weight - computed: false, optional: true, required: false
  private _weight?: number; 
  public get weight() {
    return this.getNumberAttribute('weight');
  }
  public set weight(value: number) {
    this._weight = value;
  }
  public resetWeight() {
    this._weight = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get weightInput() {
    return this._weight;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_expressions DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_expressions DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#label_selector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#namespace_selector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#namespace_selector}
  */
  readonly namespaceSelector?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#namespaces DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#topology_key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#topology_key}
  */
  readonly topologyKey?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToTerraform(struct!.labelSelector),
    namespace_selector: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToTerraform(struct!.namespaceSelector),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    topology_key: cdktf.stringToTerraform(struct!.topologyKey),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
    },
    namespace_selector: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToHclTerraform(struct!.namespaceSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    topology_key: {
      value: cdktf.stringToHclTerraform(struct!.topologyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._namespaceSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaceSelector = this._namespaceSelector?.internalValue;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._topologyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyKey = this._topologyKey;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._namespaceSelector.internalValue = undefined;
      this._namespaces = undefined;
      this._topologyKey = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._namespaceSelector.internalValue = value.namespaceSelector;
      this._namespaces = value.namespaces;
      this._topologyKey = value.topologyKey;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // namespace_selector - computed: false, optional: true, required: false
  private _namespaceSelector = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputReference(this, "namespace_selector");
  public get namespaceSelector() {
    return this._namespaceSelector;
  }
  public putNamespaceSelector(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) {
    this._namespaceSelector.internalValue = value;
  }
  public resetNamespaceSelector() {
    this._namespaceSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceSelectorInput() {
    return this._namespaceSelector.internalValue;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // topology_key - computed: false, optional: true, required: false
  private _topologyKey?: string; 
  public get topologyKey() {
    return this.getStringAttribute('topology_key');
  }
  public set topologyKey(value: string) {
    this._topologyKey = value;
  }
  public resetTopologyKey() {
    this._topologyKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyKeyInput() {
    return this._topologyKey;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinity {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#preferred_during_scheduling_ignored_during_execution DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#preferred_during_scheduling_ignored_during_execution}
  */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#required_during_scheduling_ignored_during_execution DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#required_during_scheduling_ignored_during_execution}
  */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    preferred_during_scheduling_ignored_during_execution: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
    required_during_scheduling_ignored_during_execution: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform, false)(struct!.requiredDuringSchedulingIgnoredDuringExecution),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    preferred_during_scheduling_ignored_during_execution: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionList",
    },
    required_during_scheduling_ignored_during_execution: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform, false)(struct!.requiredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.preferredDuringSchedulingIgnoredDuringExecution = this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    if (this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requiredDuringSchedulingIgnoredDuringExecution = this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value.preferredDuringSchedulingIgnoredDuringExecution;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value.requiredDuringSchedulingIgnoredDuringExecution;
    }
  }

  // preferred_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _preferredDuringSchedulingIgnoredDuringExecution = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionList(this, "preferred_during_scheduling_ignored_during_execution", false);
  public get preferredDuringSchedulingIgnoredDuringExecution() {
    return this._preferredDuringSchedulingIgnoredDuringExecution;
  }
  public putPreferredDuringSchedulingIgnoredDuringExecution(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable) {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetPreferredDuringSchedulingIgnoredDuringExecution() {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preferredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._preferredDuringSchedulingIgnoredDuringExecution.internalValue;
  }

  // required_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _requiredDuringSchedulingIgnoredDuringExecution = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionList(this, "required_during_scheduling_ignored_during_execution", false);
  public get requiredDuringSchedulingIgnoredDuringExecution() {
    return this._requiredDuringSchedulingIgnoredDuringExecution;
  }
  public putRequiredDuringSchedulingIgnoredDuringExecution(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable) {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetRequiredDuringSchedulingIgnoredDuringExecution() {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._requiredDuringSchedulingIgnoredDuringExecution.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinity {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#node_affinity DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#node_affinity}
  */
  readonly nodeAffinity?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pod_affinity DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pod_affinity}
  */
  readonly podAffinity?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pod_anti_affinity DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pod_anti_affinity}
  */
  readonly podAntiAffinity?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinity;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    node_affinity: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityToTerraform(struct!.nodeAffinity),
    pod_affinity: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityToTerraform(struct!.podAffinity),
    pod_anti_affinity: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityToTerraform(struct!.podAntiAffinity),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    node_affinity: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityToHclTerraform(struct!.nodeAffinity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinity",
    },
    pod_affinity: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityToHclTerraform(struct!.podAffinity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinity",
    },
    pod_anti_affinity: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityToHclTerraform(struct!.podAntiAffinity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinity",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nodeAffinity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeAffinity = this._nodeAffinity?.internalValue;
    }
    if (this._podAffinity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAffinity = this._podAffinity?.internalValue;
    }
    if (this._podAntiAffinity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAntiAffinity = this._podAntiAffinity?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nodeAffinity.internalValue = undefined;
      this._podAffinity.internalValue = undefined;
      this._podAntiAffinity.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nodeAffinity.internalValue = value.nodeAffinity;
      this._podAffinity.internalValue = value.podAffinity;
      this._podAntiAffinity.internalValue = value.podAntiAffinity;
    }
  }

  // node_affinity - computed: false, optional: true, required: false
  private _nodeAffinity = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinityOutputReference(this, "node_affinity");
  public get nodeAffinity() {
    return this._nodeAffinity;
  }
  public putNodeAffinity(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityNodeAffinity) {
    this._nodeAffinity.internalValue = value;
  }
  public resetNodeAffinity() {
    this._nodeAffinity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeAffinityInput() {
    return this._nodeAffinity.internalValue;
  }

  // pod_affinity - computed: false, optional: true, required: false
  private _podAffinity = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinityOutputReference(this, "pod_affinity");
  public get podAffinity() {
    return this._podAffinity;
  }
  public putPodAffinity(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAffinity) {
    this._podAffinity.internalValue = value;
  }
  public resetPodAffinity() {
    this._podAffinity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podAffinityInput() {
    return this._podAffinity.internalValue;
  }

  // pod_anti_affinity - computed: false, optional: true, required: false
  private _podAntiAffinity = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinityOutputReference(this, "pod_anti_affinity");
  public get podAntiAffinity() {
    return this._podAntiAffinity;
  }
  public putPodAntiAffinity(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityPodAntiAffinity) {
    this._podAntiAffinity.internalValue = value;
  }
  public resetPodAntiAffinity() {
    this._podAntiAffinity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podAntiAffinityInput() {
    return this._podAntiAffinity.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyRollingUpdate {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#max_surge DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#max_surge}
  */
  readonly maxSurge?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#max_unavailable DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#max_unavailable}
  */
  readonly maxUnavailable?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyRollingUpdateToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyRollingUpdate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    max_surge: cdktf.stringToTerraform(struct!.maxSurge),
    max_unavailable: cdktf.stringToTerraform(struct!.maxUnavailable),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyRollingUpdateToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyRollingUpdate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    max_surge: {
      value: cdktf.stringToHclTerraform(struct!.maxSurge),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_unavailable: {
      value: cdktf.stringToHclTerraform(struct!.maxUnavailable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyRollingUpdateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyRollingUpdate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._maxSurge !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxSurge = this._maxSurge;
    }
    if (this._maxUnavailable !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxUnavailable = this._maxUnavailable;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyRollingUpdate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._maxSurge = undefined;
      this._maxUnavailable = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._maxSurge = value.maxSurge;
      this._maxUnavailable = value.maxUnavailable;
    }
  }

  // max_surge - computed: false, optional: true, required: false
  private _maxSurge?: string; 
  public get maxSurge() {
    return this.getStringAttribute('max_surge');
  }
  public set maxSurge(value: string) {
    this._maxSurge = value;
  }
  public resetMaxSurge() {
    this._maxSurge = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxSurgeInput() {
    return this._maxSurge;
  }

  // max_unavailable - computed: false, optional: true, required: false
  private _maxUnavailable?: string; 
  public get maxUnavailable() {
    return this.getStringAttribute('max_unavailable');
  }
  public set maxUnavailable(value: string) {
    this._maxUnavailable = value;
  }
  public resetMaxUnavailable() {
    this._maxUnavailable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxUnavailableInput() {
    return this._maxUnavailable;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategy {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#rolling_update DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#rolling_update}
  */
  readonly rollingUpdate?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyRollingUpdate;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    rolling_update: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyRollingUpdateToTerraform(struct!.rollingUpdate),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    rolling_update: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyRollingUpdateToHclTerraform(struct!.rollingUpdate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyRollingUpdate",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._rollingUpdate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rollingUpdate = this._rollingUpdate?.internalValue;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._rollingUpdate.internalValue = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._rollingUpdate.internalValue = value.rollingUpdate;
      this._type = value.type;
    }
  }

  // rolling_update - computed: false, optional: true, required: false
  private _rollingUpdate = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyRollingUpdateOutputReference(this, "rolling_update");
  public get rollingUpdate() {
    return this._rollingUpdate;
  }
  public putRollingUpdate(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyRollingUpdate) {
    this._rollingUpdate.internalValue = value;
  }
  public resetRollingUpdate() {
    this._rollingUpdate.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rollingUpdateInput() {
    return this._rollingUpdate.internalValue;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefLocalObjectReference {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefLocalObjectReferenceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefLocalObjectReferenceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefLocalObjectReferenceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefLocalObjectReference | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefLocalObjectReference | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#local_object_reference DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#local_object_reference}
  */
  readonly localObjectReference?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefLocalObjectReference;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#optional DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    local_object_reference: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefLocalObjectReferenceToTerraform(struct!.localObjectReference),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    local_object_reference: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefLocalObjectReferenceToHclTerraform(struct!.localObjectReference),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefLocalObjectReference",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._localObjectReference?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.localObjectReference = this._localObjectReference?.internalValue;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._localObjectReference.internalValue = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._localObjectReference.internalValue = value.localObjectReference;
      this._optional = value.optional;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // local_object_reference - computed: false, optional: true, required: false
  private _localObjectReference = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefLocalObjectReferenceOutputReference(this, "local_object_reference");
  public get localObjectReference() {
    return this._localObjectReference;
  }
  public putLocalObjectReference(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefLocalObjectReference) {
    this._localObjectReference.internalValue = value;
  }
  public resetLocalObjectReference() {
    this._localObjectReference.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localObjectReferenceInput() {
    return this._localObjectReference.internalValue;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#api_version DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#field_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#field_path}
  */
  readonly fieldPath?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromFieldRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    field_path: cdktf.stringToTerraform(struct!.fieldPath),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromFieldRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    field_path: {
      value: cdktf.stringToHclTerraform(struct!.fieldPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldPath = this._fieldPath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldPath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldPath = value.fieldPath;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // field_path - computed: false, optional: true, required: false
  private _fieldPath?: string; 
  public get fieldPath() {
    return this.getStringAttribute('field_path');
  }
  public set fieldPath(value: string) {
    this._fieldPath = value;
  }
  public resetFieldPath() {
    this._fieldPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldPathInput() {
    return this._fieldPath;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromResourceFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#container_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#container_name}
  */
  readonly containerName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#divisor DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#divisor}
  */
  readonly divisor?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resource DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resource}
  */
  readonly resource?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromResourceFieldRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_name: cdktf.stringToTerraform(struct!.containerName),
    divisor: cdktf.stringToTerraform(struct!.divisor),
    resource: cdktf.stringToTerraform(struct!.resource),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromResourceFieldRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_name: {
      value: cdktf.stringToHclTerraform(struct!.containerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    divisor: {
      value: cdktf.stringToHclTerraform(struct!.divisor),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromResourceFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromResourceFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerName = this._containerName;
    }
    if (this._divisor !== undefined) {
      hasAnyValues = true;
      internalValueResult.divisor = this._divisor;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromResourceFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerName = undefined;
      this._divisor = undefined;
      this._resource = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerName = value.containerName;
      this._divisor = value.divisor;
      this._resource = value.resource;
    }
  }

  // container_name - computed: false, optional: true, required: false
  private _containerName?: string; 
  public get containerName() {
    return this.getStringAttribute('container_name');
  }
  public set containerName(value: string) {
    this._containerName = value;
  }
  public resetContainerName() {
    this._containerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNameInput() {
    return this._containerName;
  }

  // divisor - computed: false, optional: true, required: false
  private _divisor?: string; 
  public get divisor() {
    return this.getStringAttribute('divisor');
  }
  public set divisor(value: string) {
    this._divisor = value;
  }
  public resetDivisor() {
    this._divisor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get divisorInput() {
    return this._divisor;
  }

  // resource - computed: false, optional: true, required: false
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  public resetResource() {
    this._resource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefLocalObjectReference {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefLocalObjectReferenceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefLocalObjectReferenceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefLocalObjectReferenceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefLocalObjectReference | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefLocalObjectReference | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#local_object_reference DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#local_object_reference}
  */
  readonly localObjectReference?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefLocalObjectReference;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#optional DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    local_object_reference: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefLocalObjectReferenceToTerraform(struct!.localObjectReference),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    local_object_reference: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefLocalObjectReferenceToHclTerraform(struct!.localObjectReference),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefLocalObjectReference",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._localObjectReference?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.localObjectReference = this._localObjectReference?.internalValue;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._localObjectReference.internalValue = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._localObjectReference.internalValue = value.localObjectReference;
      this._optional = value.optional;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // local_object_reference - computed: false, optional: true, required: false
  private _localObjectReference = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefLocalObjectReferenceOutputReference(this, "local_object_reference");
  public get localObjectReference() {
    return this._localObjectReference;
  }
  public putLocalObjectReference(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefLocalObjectReference) {
    this._localObjectReference.internalValue = value;
  }
  public resetLocalObjectReference() {
    this._localObjectReference.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localObjectReferenceInput() {
    return this._localObjectReference.internalValue;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#config_map_key_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#config_map_key_ref}
  */
  readonly configMapKeyRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#field_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#field_ref}
  */
  readonly fieldRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromFieldRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resource_field_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resource_field_ref}
  */
  readonly resourceFieldRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromResourceFieldRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_key_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRef;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config_map_key_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefToTerraform(struct!.configMapKeyRef),
    field_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromFieldRefToTerraform(struct!.fieldRef),
    resource_field_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromResourceFieldRefToTerraform(struct!.resourceFieldRef),
    secret_key_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config_map_key_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefToHclTerraform(struct!.configMapKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRef",
    },
    field_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromFieldRefToHclTerraform(struct!.fieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromFieldRef",
    },
    resource_field_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromResourceFieldRefToHclTerraform(struct!.resourceFieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromResourceFieldRef",
    },
    secret_key_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configMapKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.configMapKeyRef = this._configMapKeyRef?.internalValue;
    }
    if (this._fieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldRef = this._fieldRef?.internalValue;
    }
    if (this._resourceFieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceFieldRef = this._resourceFieldRef?.internalValue;
    }
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configMapKeyRef.internalValue = undefined;
      this._fieldRef.internalValue = undefined;
      this._resourceFieldRef.internalValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configMapKeyRef.internalValue = value.configMapKeyRef;
      this._fieldRef.internalValue = value.fieldRef;
      this._resourceFieldRef.internalValue = value.resourceFieldRef;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // config_map_key_ref - computed: false, optional: true, required: false
  private _configMapKeyRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRefOutputReference(this, "config_map_key_ref");
  public get configMapKeyRef() {
    return this._configMapKeyRef;
  }
  public putConfigMapKeyRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromConfigMapKeyRef) {
    this._configMapKeyRef.internalValue = value;
  }
  public resetConfigMapKeyRef() {
    this._configMapKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configMapKeyRefInput() {
    return this._configMapKeyRef.internalValue;
  }

  // field_ref - computed: false, optional: true, required: false
  private _fieldRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromFieldRefOutputReference(this, "field_ref");
  public get fieldRef() {
    return this._fieldRef;
  }
  public putFieldRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromFieldRef) {
    this._fieldRef.internalValue = value;
  }
  public resetFieldRef() {
    this._fieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldRefInput() {
    return this._fieldRef.internalValue;
  }

  // resource_field_ref - computed: false, optional: true, required: false
  private _resourceFieldRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromResourceFieldRefOutputReference(this, "resource_field_ref");
  public get resourceFieldRef() {
    return this._resourceFieldRef;
  }
  public putResourceFieldRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromResourceFieldRef) {
    this._resourceFieldRef.internalValue = value;
  }
  public resetResourceFieldRef() {
    this._resourceFieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceFieldRefInput() {
    return this._resourceFieldRef.internalValue;
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnv {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#value DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#value_from DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#value_from}
  */
  readonly valueFrom?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFrom;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnv | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnv | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnv | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnv | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnv[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecrets {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecretsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecrets | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecretsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecrets | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecretsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecrets | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecrets | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecretsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecrets[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecretsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecretsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeExec {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#command DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#command}
  */
  readonly command?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeExecToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeExecToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeExecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeExec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeExec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeGrpc {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#port DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#service DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#service}
  */
  readonly service?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeGrpcToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeGrpc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    port: cdktf.numberToTerraform(struct!.port),
    service: cdktf.stringToTerraform(struct!.service),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeGrpcToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeGrpc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    service: {
      value: cdktf.stringToHclTerraform(struct!.service),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeGrpcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeGrpc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._service !== undefined) {
      hasAnyValues = true;
      internalValueResult.service = this._service;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeGrpc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._port = undefined;
      this._service = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._port = value.port;
      this._service = value.service;
    }
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // service - computed: false, optional: true, required: false
  private _service?: string; 
  public get service() {
    return this.getStringAttribute('service');
  }
  public set service(value: string) {
    this._service = value;
  }
  public resetService() {
    this._service = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceInput() {
    return this._service;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#value DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeadersToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeadersToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeadersOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGet {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#host DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#http_headers DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#http_headers}
  */
  readonly httpHeaders?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeaders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#port DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#port}
  */
  readonly port?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#scheme DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#scheme}
  */
  readonly scheme?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    http_headers: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeadersToTerraform, false)(struct!.httpHeaders),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.stringToTerraform(struct!.port),
    scheme: cdktf.stringToTerraform(struct!.scheme),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    http_headers: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeadersToHclTerraform, false)(struct!.httpHeaders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeadersList",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme: {
      value: cdktf.stringToHclTerraform(struct!.scheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGet | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._httpHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpHeaders = this._httpHeaders?.internalValue;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._scheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.scheme = this._scheme;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGet | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._httpHeaders.internalValue = undefined;
      this._path = undefined;
      this._port = undefined;
      this._scheme = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._httpHeaders.internalValue = value.httpHeaders;
      this._path = value.path;
      this._port = value.port;
      this._scheme = value.scheme;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // http_headers - computed: false, optional: true, required: false
  private _httpHeaders = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeadersList(this, "http_headers", false);
  public get httpHeaders() {
    return this._httpHeaders;
  }
  public putHttpHeaders(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetHttpHeaders[] | cdktf.IResolvable) {
    this._httpHeaders.internalValue = value;
  }
  public resetHttpHeaders() {
    this._httpHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpHeadersInput() {
    return this._httpHeaders.internalValue;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // scheme - computed: false, optional: true, required: false
  private _scheme?: string; 
  public get scheme() {
    return this.getStringAttribute('scheme');
  }
  public set scheme(value: string) {
    this._scheme = value;
  }
  public resetScheme() {
    this._scheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeInput() {
    return this._scheme;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeTcpSocket {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#host DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#port DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#port}
  */
  readonly port?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeTcpSocketToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    port: cdktf.stringToTerraform(struct!.port),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeTcpSocketToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeTcpSocketOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeTcpSocket | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeTcpSocket | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._port = value.port;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbe {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#exec DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#exec}
  */
  readonly exec?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeExec;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#failure_threshold DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#failure_threshold}
  */
  readonly failureThreshold?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#grpc DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#grpc}
  */
  readonly grpc?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeGrpc;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#http_get DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#http_get}
  */
  readonly httpGet?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGet;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#initial_delay_seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#initial_delay_seconds}
  */
  readonly initialDelaySeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#period_seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#period_seconds}
  */
  readonly periodSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#success_threshold DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#success_threshold}
  */
  readonly successThreshold?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#tcp_socket DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#tcp_socket}
  */
  readonly tcpSocket?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeTcpSocket;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#termination_grace_period_seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#termination_grace_period_seconds}
  */
  readonly terminationGracePeriodSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#timeout_seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#timeout_seconds}
  */
  readonly timeoutSeconds?: number;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbe | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exec: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeExecToTerraform(struct!.exec),
    failure_threshold: cdktf.numberToTerraform(struct!.failureThreshold),
    grpc: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeGrpcToTerraform(struct!.grpc),
    http_get: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetToTerraform(struct!.httpGet),
    initial_delay_seconds: cdktf.numberToTerraform(struct!.initialDelaySeconds),
    period_seconds: cdktf.numberToTerraform(struct!.periodSeconds),
    success_threshold: cdktf.numberToTerraform(struct!.successThreshold),
    tcp_socket: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeTcpSocketToTerraform(struct!.tcpSocket),
    termination_grace_period_seconds: cdktf.numberToTerraform(struct!.terminationGracePeriodSeconds),
    timeout_seconds: cdktf.numberToTerraform(struct!.timeoutSeconds),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbe | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exec: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeExecToHclTerraform(struct!.exec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeExec",
    },
    failure_threshold: {
      value: cdktf.numberToHclTerraform(struct!.failureThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    grpc: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeGrpcToHclTerraform(struct!.grpc),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeGrpc",
    },
    http_get: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetToHclTerraform(struct!.httpGet),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGet",
    },
    initial_delay_seconds: {
      value: cdktf.numberToHclTerraform(struct!.initialDelaySeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    period_seconds: {
      value: cdktf.numberToHclTerraform(struct!.periodSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    success_threshold: {
      value: cdktf.numberToHclTerraform(struct!.successThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    tcp_socket: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeTcpSocketToHclTerraform(struct!.tcpSocket),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeTcpSocket",
    },
    termination_grace_period_seconds: {
      value: cdktf.numberToHclTerraform(struct!.terminationGracePeriodSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    timeout_seconds: {
      value: cdktf.numberToHclTerraform(struct!.timeoutSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbe | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.exec = this._exec?.internalValue;
    }
    if (this._failureThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.failureThreshold = this._failureThreshold;
    }
    if (this._grpc?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.grpc = this._grpc?.internalValue;
    }
    if (this._httpGet?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpGet = this._httpGet?.internalValue;
    }
    if (this._initialDelaySeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.initialDelaySeconds = this._initialDelaySeconds;
    }
    if (this._periodSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.periodSeconds = this._periodSeconds;
    }
    if (this._successThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.successThreshold = this._successThreshold;
    }
    if (this._tcpSocket?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tcpSocket = this._tcpSocket?.internalValue;
    }
    if (this._terminationGracePeriodSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.terminationGracePeriodSeconds = this._terminationGracePeriodSeconds;
    }
    if (this._timeoutSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeoutSeconds = this._timeoutSeconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbe | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exec.internalValue = undefined;
      this._failureThreshold = undefined;
      this._grpc.internalValue = undefined;
      this._httpGet.internalValue = undefined;
      this._initialDelaySeconds = undefined;
      this._periodSeconds = undefined;
      this._successThreshold = undefined;
      this._tcpSocket.internalValue = undefined;
      this._terminationGracePeriodSeconds = undefined;
      this._timeoutSeconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exec.internalValue = value.exec;
      this._failureThreshold = value.failureThreshold;
      this._grpc.internalValue = value.grpc;
      this._httpGet.internalValue = value.httpGet;
      this._initialDelaySeconds = value.initialDelaySeconds;
      this._periodSeconds = value.periodSeconds;
      this._successThreshold = value.successThreshold;
      this._tcpSocket.internalValue = value.tcpSocket;
      this._terminationGracePeriodSeconds = value.terminationGracePeriodSeconds;
      this._timeoutSeconds = value.timeoutSeconds;
    }
  }

  // exec - computed: false, optional: true, required: false
  private _exec = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeExecOutputReference(this, "exec");
  public get exec() {
    return this._exec;
  }
  public putExec(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeExec) {
    this._exec.internalValue = value;
  }
  public resetExec() {
    this._exec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get execInput() {
    return this._exec.internalValue;
  }

  // failure_threshold - computed: false, optional: true, required: false
  private _failureThreshold?: number; 
  public get failureThreshold() {
    return this.getNumberAttribute('failure_threshold');
  }
  public set failureThreshold(value: number) {
    this._failureThreshold = value;
  }
  public resetFailureThreshold() {
    this._failureThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get failureThresholdInput() {
    return this._failureThreshold;
  }

  // grpc - computed: false, optional: true, required: false
  private _grpc = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeGrpcOutputReference(this, "grpc");
  public get grpc() {
    return this._grpc;
  }
  public putGrpc(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeGrpc) {
    this._grpc.internalValue = value;
  }
  public resetGrpc() {
    this._grpc.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get grpcInput() {
    return this._grpc.internalValue;
  }

  // http_get - computed: false, optional: true, required: false
  private _httpGet = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGetOutputReference(this, "http_get");
  public get httpGet() {
    return this._httpGet;
  }
  public putHttpGet(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeHttpGet) {
    this._httpGet.internalValue = value;
  }
  public resetHttpGet() {
    this._httpGet.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpGetInput() {
    return this._httpGet.internalValue;
  }

  // initial_delay_seconds - computed: false, optional: true, required: false
  private _initialDelaySeconds?: number; 
  public get initialDelaySeconds() {
    return this.getNumberAttribute('initial_delay_seconds');
  }
  public set initialDelaySeconds(value: number) {
    this._initialDelaySeconds = value;
  }
  public resetInitialDelaySeconds() {
    this._initialDelaySeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get initialDelaySecondsInput() {
    return this._initialDelaySeconds;
  }

  // period_seconds - computed: false, optional: true, required: false
  private _periodSeconds?: number; 
  public get periodSeconds() {
    return this.getNumberAttribute('period_seconds');
  }
  public set periodSeconds(value: number) {
    this._periodSeconds = value;
  }
  public resetPeriodSeconds() {
    this._periodSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get periodSecondsInput() {
    return this._periodSeconds;
  }

  // success_threshold - computed: false, optional: true, required: false
  private _successThreshold?: number; 
  public get successThreshold() {
    return this.getNumberAttribute('success_threshold');
  }
  public set successThreshold(value: number) {
    this._successThreshold = value;
  }
  public resetSuccessThreshold() {
    this._successThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get successThresholdInput() {
    return this._successThreshold;
  }

  // tcp_socket - computed: false, optional: true, required: false
  private _tcpSocket = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeTcpSocketOutputReference(this, "tcp_socket");
  public get tcpSocket() {
    return this._tcpSocket;
  }
  public putTcpSocket(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeTcpSocket) {
    this._tcpSocket.internalValue = value;
  }
  public resetTcpSocket() {
    this._tcpSocket.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tcpSocketInput() {
    return this._tcpSocket.internalValue;
  }

  // termination_grace_period_seconds - computed: false, optional: true, required: false
  private _terminationGracePeriodSeconds?: number; 
  public get terminationGracePeriodSeconds() {
    return this.getNumberAttribute('termination_grace_period_seconds');
  }
  public set terminationGracePeriodSeconds(value: number) {
    this._terminationGracePeriodSeconds = value;
  }
  public resetTerminationGracePeriodSeconds() {
    this._terminationGracePeriodSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get terminationGracePeriodSecondsInput() {
    return this._terminationGracePeriodSeconds;
  }

  // timeout_seconds - computed: false, optional: true, required: false
  private _timeoutSeconds?: number; 
  public get timeoutSeconds() {
    return this.getNumberAttribute('timeout_seconds');
  }
  public set timeoutSeconds(value: number) {
    this._timeoutSeconds = value;
  }
  public resetTimeoutSeconds() {
    this._timeoutSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeoutSecondsInput() {
    return this._timeoutSeconds;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#annotations DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadataToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadataToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._labels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._labels = value.labels;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudget {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#max_unavailable DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#max_unavailable}
  */
  readonly maxUnavailable?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#min_available DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#min_available}
  */
  readonly minAvailable?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudgetToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudget | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    max_unavailable: cdktf.stringToTerraform(struct!.maxUnavailable),
    min_available: cdktf.stringToTerraform(struct!.minAvailable),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudgetToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudget | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    max_unavailable: {
      value: cdktf.stringToHclTerraform(struct!.maxUnavailable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    min_available: {
      value: cdktf.stringToHclTerraform(struct!.minAvailable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudgetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudget | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._maxUnavailable !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxUnavailable = this._maxUnavailable;
    }
    if (this._minAvailable !== undefined) {
      hasAnyValues = true;
      internalValueResult.minAvailable = this._minAvailable;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudget | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._maxUnavailable = undefined;
      this._minAvailable = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._maxUnavailable = value.maxUnavailable;
      this._minAvailable = value.minAvailable;
    }
  }

  // max_unavailable - computed: false, optional: true, required: false
  private _maxUnavailable?: string; 
  public get maxUnavailable() {
    return this.getStringAttribute('max_unavailable');
  }
  public set maxUnavailable(value: string) {
    this._maxUnavailable = value;
  }
  public resetMaxUnavailable() {
    this._maxUnavailable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxUnavailableInput() {
    return this._maxUnavailable;
  }

  // min_available - computed: false, optional: true, required: false
  private _minAvailable?: string; 
  public get minAvailable() {
    return this.getStringAttribute('min_available');
  }
  public set minAvailable(value: string) {
    this._minAvailable = value;
  }
  public resetMinAvailable() {
    this._minAvailable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minAvailableInput() {
    return this._minAvailable;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#annotations DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadataToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadataToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._labels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._labels = value.labels;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#level DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#level}
  */
  readonly level?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#role DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#role}
  */
  readonly role?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#user DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#user}
  */
  readonly user?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    level: cdktf.stringToTerraform(struct!.level),
    role: cdktf.stringToTerraform(struct!.role),
    type: cdktf.stringToTerraform(struct!.type),
    user: cdktf.stringToTerraform(struct!.user),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    level: {
      value: cdktf.stringToHclTerraform(struct!.level),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._level !== undefined) {
      hasAnyValues = true;
      internalValueResult.level = this._level;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._level = undefined;
      this._role = undefined;
      this._type = undefined;
      this._user = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._level = value.level;
      this._role = value.role;
      this._type = value.type;
      this._user = value.user;
    }
  }

  // level - computed: false, optional: true, required: false
  private _level?: string; 
  public get level() {
    return this.getStringAttribute('level');
  }
  public set level(value: string) {
    this._level = value;
  }
  public resetLevel() {
    this._level = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get levelInput() {
    return this._level;
  }

  // role - computed: false, optional: true, required: false
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  public resetRole() {
    this._role = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfile {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#localhost_profile DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#localhost_profile}
  */
  readonly localhostProfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfileToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    localhost_profile: cdktf.stringToTerraform(struct!.localhostProfile),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfileToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    localhost_profile: {
      value: cdktf.stringToHclTerraform(struct!.localhostProfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfileOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfile | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._localhostProfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.localhostProfile = this._localhostProfile;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfile | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._localhostProfile = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._localhostProfile = value.localhostProfile;
      this._type = value.type;
    }
  }

  // localhost_profile - computed: false, optional: true, required: false
  private _localhostProfile?: string; 
  public get localhostProfile() {
    return this.getStringAttribute('localhost_profile');
  }
  public set localhostProfile(value: string) {
    this._localhostProfile = value;
  }
  public resetLocalhostProfile() {
    this._localhostProfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localhostProfileInput() {
    return this._localhostProfile;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctls {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#value DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctlsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctls | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctlsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctls | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctlsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctls | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctls | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctlsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctls[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctlsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctlsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
