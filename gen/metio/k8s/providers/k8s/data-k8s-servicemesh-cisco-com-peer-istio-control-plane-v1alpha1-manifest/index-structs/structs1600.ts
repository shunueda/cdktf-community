import * as cdktf from 'cdktf';
import { DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptions,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptionsToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptionsToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptionsOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfile,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfileToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfileToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfileOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctls,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctlsToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctlsToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctlsList,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinity,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategy,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnv,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvList,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecrets,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecretsToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecretsToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecretsList,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbe,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadata,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadataToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadataToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadataOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudget,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudgetToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudgetToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudgetOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadata,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadataToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadataToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadataOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInit,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasm,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasmToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasmToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasmOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSds,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSdsToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSdsToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSdsOutputReference } from './structs1200'
import { DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecContainerImageConfiguration,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecContainerImageConfigurationToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecContainerImageConfigurationToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecContainerImageConfigurationOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecHttpProxyEnvs,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecHttpProxyEnvsToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecHttpProxyEnvsToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecHttpProxyEnvsOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecIstiod,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecIstiodToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecIstiodToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecIstiodOutputReference } from './structs0'
import { DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecK8SResourceOverlays,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecK8SResourceOverlaysToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecK8SResourceOverlaysToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecK8SResourceOverlaysList,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecLogging,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecLoggingToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecLoggingToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecLoggingOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshConfig,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshConfigToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshConfigToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshConfigOutputReference } from './structs400'
import { DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshExpansion,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshExpansionToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshExpansionToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshExpansionOutputReference,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxy,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyToTerraform,
dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyToHclTerraform,
DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyOutputReference } from './structs800'
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextWindowsOptions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#gmsa_credential_spec DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#gmsa_credential_spec}
  */
  readonly gmsaCredentialSpec?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#gmsa_credential_spec_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#gmsa_credential_spec_name}
  */
  readonly gmsaCredentialSpecName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#host_process DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#host_process}
  */
  readonly hostProcess?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#run_as_user_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#run_as_user_name}
  */
  readonly runAsUserName?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextWindowsOptionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextWindowsOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    gmsa_credential_spec: cdktf.stringToTerraform(struct!.gmsaCredentialSpec),
    gmsa_credential_spec_name: cdktf.stringToTerraform(struct!.gmsaCredentialSpecName),
    host_process: cdktf.booleanToTerraform(struct!.hostProcess),
    run_as_user_name: cdktf.stringToTerraform(struct!.runAsUserName),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextWindowsOptionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextWindowsOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    gmsa_credential_spec: {
      value: cdktf.stringToHclTerraform(struct!.gmsaCredentialSpec),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    gmsa_credential_spec_name: {
      value: cdktf.stringToHclTerraform(struct!.gmsaCredentialSpecName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    host_process: {
      value: cdktf.booleanToHclTerraform(struct!.hostProcess),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_user_name: {
      value: cdktf.stringToHclTerraform(struct!.runAsUserName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextWindowsOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextWindowsOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._gmsaCredentialSpec !== undefined) {
      hasAnyValues = true;
      internalValueResult.gmsaCredentialSpec = this._gmsaCredentialSpec;
    }
    if (this._gmsaCredentialSpecName !== undefined) {
      hasAnyValues = true;
      internalValueResult.gmsaCredentialSpecName = this._gmsaCredentialSpecName;
    }
    if (this._hostProcess !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostProcess = this._hostProcess;
    }
    if (this._runAsUserName !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsUserName = this._runAsUserName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextWindowsOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._gmsaCredentialSpec = undefined;
      this._gmsaCredentialSpecName = undefined;
      this._hostProcess = undefined;
      this._runAsUserName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._gmsaCredentialSpec = value.gmsaCredentialSpec;
      this._gmsaCredentialSpecName = value.gmsaCredentialSpecName;
      this._hostProcess = value.hostProcess;
      this._runAsUserName = value.runAsUserName;
    }
  }

  // gmsa_credential_spec - computed: false, optional: true, required: false
  private _gmsaCredentialSpec?: string; 
  public get gmsaCredentialSpec() {
    return this.getStringAttribute('gmsa_credential_spec');
  }
  public set gmsaCredentialSpec(value: string) {
    this._gmsaCredentialSpec = value;
  }
  public resetGmsaCredentialSpec() {
    this._gmsaCredentialSpec = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gmsaCredentialSpecInput() {
    return this._gmsaCredentialSpec;
  }

  // gmsa_credential_spec_name - computed: false, optional: true, required: false
  private _gmsaCredentialSpecName?: string; 
  public get gmsaCredentialSpecName() {
    return this.getStringAttribute('gmsa_credential_spec_name');
  }
  public set gmsaCredentialSpecName(value: string) {
    this._gmsaCredentialSpecName = value;
  }
  public resetGmsaCredentialSpecName() {
    this._gmsaCredentialSpecName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gmsaCredentialSpecNameInput() {
    return this._gmsaCredentialSpecName;
  }

  // host_process - computed: false, optional: true, required: false
  private _hostProcess?: boolean | cdktf.IResolvable; 
  public get hostProcess() {
    return this.getBooleanAttribute('host_process');
  }
  public set hostProcess(value: boolean | cdktf.IResolvable) {
    this._hostProcess = value;
  }
  public resetHostProcess() {
    this._hostProcess = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostProcessInput() {
    return this._hostProcess;
  }

  // run_as_user_name - computed: false, optional: true, required: false
  private _runAsUserName?: string; 
  public get runAsUserName() {
    return this.getStringAttribute('run_as_user_name');
  }
  public set runAsUserName(value: string) {
    this._runAsUserName = value;
  }
  public resetRunAsUserName() {
    this._runAsUserName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsUserNameInput() {
    return this._runAsUserName;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContext {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_group DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_group}
  */
  readonly fsGroup?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_group_change_policy DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_group_change_policy}
  */
  readonly fsGroupChangePolicy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#run_as_group DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#run_as_group}
  */
  readonly runAsGroup?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#run_as_non_root DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#run_as_non_root}
  */
  readonly runAsNonRoot?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#run_as_user DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#run_as_user}
  */
  readonly runAsUser?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#se_linux_options DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#se_linux_options}
  */
  readonly seLinuxOptions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptions;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#seccomp_profile DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#seccomp_profile}
  */
  readonly seccompProfile?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfile;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#supplemental_groups DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#supplemental_groups}
  */
  readonly supplementalGroups?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#sysctls DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#sysctls}
  */
  readonly sysctls?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctls[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#windows_options DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#windows_options}
  */
  readonly windowsOptions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextWindowsOptions;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContext | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_group: cdktf.numberToTerraform(struct!.fsGroup),
    fs_group_change_policy: cdktf.stringToTerraform(struct!.fsGroupChangePolicy),
    run_as_group: cdktf.numberToTerraform(struct!.runAsGroup),
    run_as_non_root: cdktf.booleanToTerraform(struct!.runAsNonRoot),
    run_as_user: cdktf.numberToTerraform(struct!.runAsUser),
    se_linux_options: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptionsToTerraform(struct!.seLinuxOptions),
    seccomp_profile: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfileToTerraform(struct!.seccompProfile),
    supplemental_groups: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.supplementalGroups),
    sysctls: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctlsToTerraform, false)(struct!.sysctls),
    windows_options: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextWindowsOptionsToTerraform(struct!.windowsOptions),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContext | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_group: {
      value: cdktf.numberToHclTerraform(struct!.fsGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    fs_group_change_policy: {
      value: cdktf.stringToHclTerraform(struct!.fsGroupChangePolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    run_as_group: {
      value: cdktf.numberToHclTerraform(struct!.runAsGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    run_as_non_root: {
      value: cdktf.booleanToHclTerraform(struct!.runAsNonRoot),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_user: {
      value: cdktf.numberToHclTerraform(struct!.runAsUser),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    se_linux_options: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptionsToHclTerraform(struct!.seLinuxOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptions",
    },
    seccomp_profile: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfileToHclTerraform(struct!.seccompProfile),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfile",
    },
    supplemental_groups: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.supplementalGroups),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    sysctls: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctlsToHclTerraform, false)(struct!.sysctls),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctlsList",
    },
    windows_options: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextWindowsOptionsToHclTerraform(struct!.windowsOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextWindowsOptions",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContext | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsGroup = this._fsGroup;
    }
    if (this._fsGroupChangePolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsGroupChangePolicy = this._fsGroupChangePolicy;
    }
    if (this._runAsGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsGroup = this._runAsGroup;
    }
    if (this._runAsNonRoot !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsNonRoot = this._runAsNonRoot;
    }
    if (this._runAsUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsUser = this._runAsUser;
    }
    if (this._seLinuxOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.seLinuxOptions = this._seLinuxOptions?.internalValue;
    }
    if (this._seccompProfile?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.seccompProfile = this._seccompProfile?.internalValue;
    }
    if (this._supplementalGroups !== undefined) {
      hasAnyValues = true;
      internalValueResult.supplementalGroups = this._supplementalGroups;
    }
    if (this._sysctls?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sysctls = this._sysctls?.internalValue;
    }
    if (this._windowsOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.windowsOptions = this._windowsOptions?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContext | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsGroup = undefined;
      this._fsGroupChangePolicy = undefined;
      this._runAsGroup = undefined;
      this._runAsNonRoot = undefined;
      this._runAsUser = undefined;
      this._seLinuxOptions.internalValue = undefined;
      this._seccompProfile.internalValue = undefined;
      this._supplementalGroups = undefined;
      this._sysctls.internalValue = undefined;
      this._windowsOptions.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsGroup = value.fsGroup;
      this._fsGroupChangePolicy = value.fsGroupChangePolicy;
      this._runAsGroup = value.runAsGroup;
      this._runAsNonRoot = value.runAsNonRoot;
      this._runAsUser = value.runAsUser;
      this._seLinuxOptions.internalValue = value.seLinuxOptions;
      this._seccompProfile.internalValue = value.seccompProfile;
      this._supplementalGroups = value.supplementalGroups;
      this._sysctls.internalValue = value.sysctls;
      this._windowsOptions.internalValue = value.windowsOptions;
    }
  }

  // fs_group - computed: false, optional: true, required: false
  private _fsGroup?: number; 
  public get fsGroup() {
    return this.getNumberAttribute('fs_group');
  }
  public set fsGroup(value: number) {
    this._fsGroup = value;
  }
  public resetFsGroup() {
    this._fsGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsGroupInput() {
    return this._fsGroup;
  }

  // fs_group_change_policy - computed: false, optional: true, required: false
  private _fsGroupChangePolicy?: string; 
  public get fsGroupChangePolicy() {
    return this.getStringAttribute('fs_group_change_policy');
  }
  public set fsGroupChangePolicy(value: string) {
    this._fsGroupChangePolicy = value;
  }
  public resetFsGroupChangePolicy() {
    this._fsGroupChangePolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsGroupChangePolicyInput() {
    return this._fsGroupChangePolicy;
  }

  // run_as_group - computed: false, optional: true, required: false
  private _runAsGroup?: number; 
  public get runAsGroup() {
    return this.getNumberAttribute('run_as_group');
  }
  public set runAsGroup(value: number) {
    this._runAsGroup = value;
  }
  public resetRunAsGroup() {
    this._runAsGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsGroupInput() {
    return this._runAsGroup;
  }

  // run_as_non_root - computed: false, optional: true, required: false
  private _runAsNonRoot?: boolean | cdktf.IResolvable; 
  public get runAsNonRoot() {
    return this.getBooleanAttribute('run_as_non_root');
  }
  public set runAsNonRoot(value: boolean | cdktf.IResolvable) {
    this._runAsNonRoot = value;
  }
  public resetRunAsNonRoot() {
    this._runAsNonRoot = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsNonRootInput() {
    return this._runAsNonRoot;
  }

  // run_as_user - computed: false, optional: true, required: false
  private _runAsUser?: number; 
  public get runAsUser() {
    return this.getNumberAttribute('run_as_user');
  }
  public set runAsUser(value: number) {
    this._runAsUser = value;
  }
  public resetRunAsUser() {
    this._runAsUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsUserInput() {
    return this._runAsUser;
  }

  // se_linux_options - computed: false, optional: true, required: false
  private _seLinuxOptions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptionsOutputReference(this, "se_linux_options");
  public get seLinuxOptions() {
    return this._seLinuxOptions;
  }
  public putSeLinuxOptions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeLinuxOptions) {
    this._seLinuxOptions.internalValue = value;
  }
  public resetSeLinuxOptions() {
    this._seLinuxOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get seLinuxOptionsInput() {
    return this._seLinuxOptions.internalValue;
  }

  // seccomp_profile - computed: false, optional: true, required: false
  private _seccompProfile = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfileOutputReference(this, "seccomp_profile");
  public get seccompProfile() {
    return this._seccompProfile;
  }
  public putSeccompProfile(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSeccompProfile) {
    this._seccompProfile.internalValue = value;
  }
  public resetSeccompProfile() {
    this._seccompProfile.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get seccompProfileInput() {
    return this._seccompProfile.internalValue;
  }

  // supplemental_groups - computed: false, optional: true, required: false
  private _supplementalGroups?: string[]; 
  public get supplementalGroups() {
    return this.getListAttribute('supplemental_groups');
  }
  public set supplementalGroups(value: string[]) {
    this._supplementalGroups = value;
  }
  public resetSupplementalGroups() {
    this._supplementalGroups = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get supplementalGroupsInput() {
    return this._supplementalGroups;
  }

  // sysctls - computed: false, optional: true, required: false
  private _sysctls = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctlsList(this, "sysctls", false);
  public get sysctls() {
    return this._sysctls;
  }
  public putSysctls(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextSysctls[] | cdktf.IResolvable) {
    this._sysctls.internalValue = value;
  }
  public resetSysctls() {
    this._sysctls.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sysctlsInput() {
    return this._sysctls.internalValue;
  }

  // windows_options - computed: false, optional: true, required: false
  private _windowsOptions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextWindowsOptionsOutputReference(this, "windows_options");
  public get windowsOptions() {
    return this._windowsOptions;
  }
  public putWindowsOptions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextWindowsOptions) {
    this._windowsOptions.internalValue = value;
  }
  public resetWindowsOptions() {
    this._windowsOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get windowsOptionsInput() {
    return this._windowsOptions.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeExec {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#command DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#command}
  */
  readonly command?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeExecToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeExecToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeExecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeExec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeExec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeGrpc {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#port DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#service DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#service}
  */
  readonly service?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeGrpcToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeGrpc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    port: cdktf.numberToTerraform(struct!.port),
    service: cdktf.stringToTerraform(struct!.service),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeGrpcToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeGrpc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    service: {
      value: cdktf.stringToHclTerraform(struct!.service),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeGrpcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeGrpc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._service !== undefined) {
      hasAnyValues = true;
      internalValueResult.service = this._service;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeGrpc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._port = undefined;
      this._service = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._port = value.port;
      this._service = value.service;
    }
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // service - computed: false, optional: true, required: false
  private _service?: string; 
  public get service() {
    return this.getStringAttribute('service');
  }
  public set service(value: string) {
    this._service = value;
  }
  public resetService() {
    this._service = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceInput() {
    return this._service;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#value DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeadersToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeadersToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeadersOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGet {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#host DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#http_headers DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#http_headers}
  */
  readonly httpHeaders?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeaders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#port DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#port}
  */
  readonly port?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#scheme DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#scheme}
  */
  readonly scheme?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    http_headers: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeadersToTerraform, false)(struct!.httpHeaders),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.stringToTerraform(struct!.port),
    scheme: cdktf.stringToTerraform(struct!.scheme),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    http_headers: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeadersToHclTerraform, false)(struct!.httpHeaders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeadersList",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme: {
      value: cdktf.stringToHclTerraform(struct!.scheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGet | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._httpHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpHeaders = this._httpHeaders?.internalValue;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._scheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.scheme = this._scheme;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGet | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._httpHeaders.internalValue = undefined;
      this._path = undefined;
      this._port = undefined;
      this._scheme = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._httpHeaders.internalValue = value.httpHeaders;
      this._path = value.path;
      this._port = value.port;
      this._scheme = value.scheme;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // http_headers - computed: false, optional: true, required: false
  private _httpHeaders = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeadersList(this, "http_headers", false);
  public get httpHeaders() {
    return this._httpHeaders;
  }
  public putHttpHeaders(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetHttpHeaders[] | cdktf.IResolvable) {
    this._httpHeaders.internalValue = value;
  }
  public resetHttpHeaders() {
    this._httpHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpHeadersInput() {
    return this._httpHeaders.internalValue;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // scheme - computed: false, optional: true, required: false
  private _scheme?: string; 
  public get scheme() {
    return this.getStringAttribute('scheme');
  }
  public set scheme(value: string) {
    this._scheme = value;
  }
  public resetScheme() {
    this._scheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeInput() {
    return this._scheme;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeTcpSocket {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#host DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#port DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#port}
  */
  readonly port?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeTcpSocketToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    port: cdktf.stringToTerraform(struct!.port),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeTcpSocketToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeTcpSocketOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeTcpSocket | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeTcpSocket | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._port = value.port;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbe {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#exec DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#exec}
  */
  readonly exec?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeExec;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#failure_threshold DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#failure_threshold}
  */
  readonly failureThreshold?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#grpc DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#grpc}
  */
  readonly grpc?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeGrpc;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#http_get DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#http_get}
  */
  readonly httpGet?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGet;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#initial_delay_seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#initial_delay_seconds}
  */
  readonly initialDelaySeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#period_seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#period_seconds}
  */
  readonly periodSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#success_threshold DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#success_threshold}
  */
  readonly successThreshold?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#tcp_socket DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#tcp_socket}
  */
  readonly tcpSocket?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeTcpSocket;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#termination_grace_period_seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#termination_grace_period_seconds}
  */
  readonly terminationGracePeriodSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#timeout_seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#timeout_seconds}
  */
  readonly timeoutSeconds?: number;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbe | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exec: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeExecToTerraform(struct!.exec),
    failure_threshold: cdktf.numberToTerraform(struct!.failureThreshold),
    grpc: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeGrpcToTerraform(struct!.grpc),
    http_get: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetToTerraform(struct!.httpGet),
    initial_delay_seconds: cdktf.numberToTerraform(struct!.initialDelaySeconds),
    period_seconds: cdktf.numberToTerraform(struct!.periodSeconds),
    success_threshold: cdktf.numberToTerraform(struct!.successThreshold),
    tcp_socket: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeTcpSocketToTerraform(struct!.tcpSocket),
    termination_grace_period_seconds: cdktf.numberToTerraform(struct!.terminationGracePeriodSeconds),
    timeout_seconds: cdktf.numberToTerraform(struct!.timeoutSeconds),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbe | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exec: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeExecToHclTerraform(struct!.exec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeExec",
    },
    failure_threshold: {
      value: cdktf.numberToHclTerraform(struct!.failureThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    grpc: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeGrpcToHclTerraform(struct!.grpc),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeGrpc",
    },
    http_get: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetToHclTerraform(struct!.httpGet),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGet",
    },
    initial_delay_seconds: {
      value: cdktf.numberToHclTerraform(struct!.initialDelaySeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    period_seconds: {
      value: cdktf.numberToHclTerraform(struct!.periodSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    success_threshold: {
      value: cdktf.numberToHclTerraform(struct!.successThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    tcp_socket: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeTcpSocketToHclTerraform(struct!.tcpSocket),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeTcpSocket",
    },
    termination_grace_period_seconds: {
      value: cdktf.numberToHclTerraform(struct!.terminationGracePeriodSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    timeout_seconds: {
      value: cdktf.numberToHclTerraform(struct!.timeoutSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbe | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.exec = this._exec?.internalValue;
    }
    if (this._failureThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.failureThreshold = this._failureThreshold;
    }
    if (this._grpc?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.grpc = this._grpc?.internalValue;
    }
    if (this._httpGet?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpGet = this._httpGet?.internalValue;
    }
    if (this._initialDelaySeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.initialDelaySeconds = this._initialDelaySeconds;
    }
    if (this._periodSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.periodSeconds = this._periodSeconds;
    }
    if (this._successThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.successThreshold = this._successThreshold;
    }
    if (this._tcpSocket?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tcpSocket = this._tcpSocket?.internalValue;
    }
    if (this._terminationGracePeriodSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.terminationGracePeriodSeconds = this._terminationGracePeriodSeconds;
    }
    if (this._timeoutSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeoutSeconds = this._timeoutSeconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbe | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exec.internalValue = undefined;
      this._failureThreshold = undefined;
      this._grpc.internalValue = undefined;
      this._httpGet.internalValue = undefined;
      this._initialDelaySeconds = undefined;
      this._periodSeconds = undefined;
      this._successThreshold = undefined;
      this._tcpSocket.internalValue = undefined;
      this._terminationGracePeriodSeconds = undefined;
      this._timeoutSeconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exec.internalValue = value.exec;
      this._failureThreshold = value.failureThreshold;
      this._grpc.internalValue = value.grpc;
      this._httpGet.internalValue = value.httpGet;
      this._initialDelaySeconds = value.initialDelaySeconds;
      this._periodSeconds = value.periodSeconds;
      this._successThreshold = value.successThreshold;
      this._tcpSocket.internalValue = value.tcpSocket;
      this._terminationGracePeriodSeconds = value.terminationGracePeriodSeconds;
      this._timeoutSeconds = value.timeoutSeconds;
    }
  }

  // exec - computed: false, optional: true, required: false
  private _exec = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeExecOutputReference(this, "exec");
  public get exec() {
    return this._exec;
  }
  public putExec(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeExec) {
    this._exec.internalValue = value;
  }
  public resetExec() {
    this._exec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get execInput() {
    return this._exec.internalValue;
  }

  // failure_threshold - computed: false, optional: true, required: false
  private _failureThreshold?: number; 
  public get failureThreshold() {
    return this.getNumberAttribute('failure_threshold');
  }
  public set failureThreshold(value: number) {
    this._failureThreshold = value;
  }
  public resetFailureThreshold() {
    this._failureThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get failureThresholdInput() {
    return this._failureThreshold;
  }

  // grpc - computed: false, optional: true, required: false
  private _grpc = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeGrpcOutputReference(this, "grpc");
  public get grpc() {
    return this._grpc;
  }
  public putGrpc(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeGrpc) {
    this._grpc.internalValue = value;
  }
  public resetGrpc() {
    this._grpc.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get grpcInput() {
    return this._grpc.internalValue;
  }

  // http_get - computed: false, optional: true, required: false
  private _httpGet = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGetOutputReference(this, "http_get");
  public get httpGet() {
    return this._httpGet;
  }
  public putHttpGet(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeHttpGet) {
    this._httpGet.internalValue = value;
  }
  public resetHttpGet() {
    this._httpGet.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpGetInput() {
    return this._httpGet.internalValue;
  }

  // initial_delay_seconds - computed: false, optional: true, required: false
  private _initialDelaySeconds?: number; 
  public get initialDelaySeconds() {
    return this.getNumberAttribute('initial_delay_seconds');
  }
  public set initialDelaySeconds(value: number) {
    this._initialDelaySeconds = value;
  }
  public resetInitialDelaySeconds() {
    this._initialDelaySeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get initialDelaySecondsInput() {
    return this._initialDelaySeconds;
  }

  // period_seconds - computed: false, optional: true, required: false
  private _periodSeconds?: number; 
  public get periodSeconds() {
    return this.getNumberAttribute('period_seconds');
  }
  public set periodSeconds(value: number) {
    this._periodSeconds = value;
  }
  public resetPeriodSeconds() {
    this._periodSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get periodSecondsInput() {
    return this._periodSeconds;
  }

  // success_threshold - computed: false, optional: true, required: false
  private _successThreshold?: number; 
  public get successThreshold() {
    return this.getNumberAttribute('success_threshold');
  }
  public set successThreshold(value: number) {
    this._successThreshold = value;
  }
  public resetSuccessThreshold() {
    this._successThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get successThresholdInput() {
    return this._successThreshold;
  }

  // tcp_socket - computed: false, optional: true, required: false
  private _tcpSocket = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeTcpSocketOutputReference(this, "tcp_socket");
  public get tcpSocket() {
    return this._tcpSocket;
  }
  public putTcpSocket(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeTcpSocket) {
    this._tcpSocket.internalValue = value;
  }
  public resetTcpSocket() {
    this._tcpSocket.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tcpSocketInput() {
    return this._tcpSocket.internalValue;
  }

  // termination_grace_period_seconds - computed: false, optional: true, required: false
  private _terminationGracePeriodSeconds?: number; 
  public get terminationGracePeriodSeconds() {
    return this.getNumberAttribute('termination_grace_period_seconds');
  }
  public set terminationGracePeriodSeconds(value: number) {
    this._terminationGracePeriodSeconds = value;
  }
  public resetTerminationGracePeriodSeconds() {
    this._terminationGracePeriodSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get terminationGracePeriodSecondsInput() {
    return this._terminationGracePeriodSeconds;
  }

  // timeout_seconds - computed: false, optional: true, required: false
  private _timeoutSeconds?: number; 
  public get timeoutSeconds() {
    return this.getNumberAttribute('timeout_seconds');
  }
  public set timeoutSeconds(value: number) {
    this._timeoutSeconds = value;
  }
  public resetTimeoutSeconds() {
    this._timeoutSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeoutSecondsInput() {
    return this._timeoutSeconds;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReplicas {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#count DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#count}
  */
  readonly count?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#max DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#max}
  */
  readonly max?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#min DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#min}
  */
  readonly min?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#target_cpu_utilization_percentage DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#target_cpu_utilization_percentage}
  */
  readonly targetCpuUtilizationPercentage?: number;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReplicasToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReplicas | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    count: cdktf.numberToTerraform(struct!.count),
    max: cdktf.numberToTerraform(struct!.max),
    min: cdktf.numberToTerraform(struct!.min),
    target_cpu_utilization_percentage: cdktf.numberToTerraform(struct!.targetCpuUtilizationPercentage),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReplicasToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReplicas | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    count: {
      value: cdktf.numberToHclTerraform(struct!.count),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max: {
      value: cdktf.numberToHclTerraform(struct!.max),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    min: {
      value: cdktf.numberToHclTerraform(struct!.min),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    target_cpu_utilization_percentage: {
      value: cdktf.numberToHclTerraform(struct!.targetCpuUtilizationPercentage),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReplicasOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReplicas | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._count !== undefined) {
      hasAnyValues = true;
      internalValueResult.count = this._count;
    }
    if (this._max !== undefined) {
      hasAnyValues = true;
      internalValueResult.max = this._max;
    }
    if (this._min !== undefined) {
      hasAnyValues = true;
      internalValueResult.min = this._min;
    }
    if (this._targetCpuUtilizationPercentage !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetCpuUtilizationPercentage = this._targetCpuUtilizationPercentage;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReplicas | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._count = undefined;
      this._max = undefined;
      this._min = undefined;
      this._targetCpuUtilizationPercentage = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._count = value.count;
      this._max = value.max;
      this._min = value.min;
      this._targetCpuUtilizationPercentage = value.targetCpuUtilizationPercentage;
    }
  }

  // count - computed: false, optional: true, required: false
  private _count?: number; 
  public get count() {
    return this.getNumberAttribute('count');
  }
  public set count(value: number) {
    this._count = value;
  }
  public resetCount() {
    this._count = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get countInput() {
    return this._count;
  }

  // max - computed: false, optional: true, required: false
  private _max?: number; 
  public get max() {
    return this.getNumberAttribute('max');
  }
  public set max(value: number) {
    this._max = value;
  }
  public resetMax() {
    this._max = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxInput() {
    return this._max;
  }

  // min - computed: false, optional: true, required: false
  private _min?: number; 
  public get min() {
    return this.getNumberAttribute('min');
  }
  public set min(value: number) {
    this._min = value;
  }
  public resetMin() {
    this._min = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minInput() {
    return this._min;
  }

  // target_cpu_utilization_percentage - computed: false, optional: true, required: false
  private _targetCpuUtilizationPercentage?: number; 
  public get targetCpuUtilizationPercentage() {
    return this.getNumberAttribute('target_cpu_utilization_percentage');
  }
  public set targetCpuUtilizationPercentage(value: number) {
    this._targetCpuUtilizationPercentage = value;
  }
  public resetTargetCpuUtilizationPercentage() {
    this._targetCpuUtilizationPercentage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetCpuUtilizationPercentageInput() {
    return this._targetCpuUtilizationPercentage;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentResources {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#limits DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#limits}
  */
  readonly limits?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#requests DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#requests}
  */
  readonly requests?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentResourcesToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    limits: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.limits),
    requests: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.requests),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentResourcesToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    limits: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.limits),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    requests: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.requests),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentResourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentResources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._limits !== undefined) {
      hasAnyValues = true;
      internalValueResult.limits = this._limits;
    }
    if (this._requests !== undefined) {
      hasAnyValues = true;
      internalValueResult.requests = this._requests;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentResources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._limits = undefined;
      this._requests = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._limits = value.limits;
      this._requests = value.requests;
    }
  }

  // limits - computed: false, optional: true, required: false
  private _limits?: { [key: string]: string }; 
  public get limits() {
    return this.getStringMapAttribute('limits');
  }
  public set limits(value: { [key: string]: string }) {
    this._limits = value;
  }
  public resetLimits() {
    this._limits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitsInput() {
    return this._limits;
  }

  // requests - computed: false, optional: true, required: false
  private _requests?: { [key: string]: string }; 
  public get requests() {
    return this.getStringMapAttribute('requests');
  }
  public set requests(value: { [key: string]: string }) {
    this._requests = value;
  }
  public resetRequests() {
    this._requests = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestsInput() {
    return this._requests;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextCapabilities {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#add DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#add}
  */
  readonly add?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#drop DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#drop}
  */
  readonly drop?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextCapabilitiesToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextCapabilities | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    add: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.add),
    drop: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.drop),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextCapabilitiesToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextCapabilities | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    add: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.add),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    drop: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.drop),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextCapabilitiesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextCapabilities | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._add !== undefined) {
      hasAnyValues = true;
      internalValueResult.add = this._add;
    }
    if (this._drop !== undefined) {
      hasAnyValues = true;
      internalValueResult.drop = this._drop;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextCapabilities | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._add = undefined;
      this._drop = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._add = value.add;
      this._drop = value.drop;
    }
  }

  // add - computed: false, optional: true, required: false
  private _add?: string[]; 
  public get add() {
    return this.getListAttribute('add');
  }
  public set add(value: string[]) {
    this._add = value;
  }
  public resetAdd() {
    this._add = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addInput() {
    return this._add;
  }

  // drop - computed: false, optional: true, required: false
  private _drop?: string[]; 
  public get drop() {
    return this.getListAttribute('drop');
  }
  public set drop(value: string[]) {
    this._drop = value;
  }
  public resetDrop() {
    this._drop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInput() {
    return this._drop;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeLinuxOptions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#level DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#level}
  */
  readonly level?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#role DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#role}
  */
  readonly role?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#user DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#user}
  */
  readonly user?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeLinuxOptionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeLinuxOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    level: cdktf.stringToTerraform(struct!.level),
    role: cdktf.stringToTerraform(struct!.role),
    type: cdktf.stringToTerraform(struct!.type),
    user: cdktf.stringToTerraform(struct!.user),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeLinuxOptionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeLinuxOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    level: {
      value: cdktf.stringToHclTerraform(struct!.level),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeLinuxOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeLinuxOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._level !== undefined) {
      hasAnyValues = true;
      internalValueResult.level = this._level;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeLinuxOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._level = undefined;
      this._role = undefined;
      this._type = undefined;
      this._user = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._level = value.level;
      this._role = value.role;
      this._type = value.type;
      this._user = value.user;
    }
  }

  // level - computed: false, optional: true, required: false
  private _level?: string; 
  public get level() {
    return this.getStringAttribute('level');
  }
  public set level(value: string) {
    this._level = value;
  }
  public resetLevel() {
    this._level = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get levelInput() {
    return this._level;
  }

  // role - computed: false, optional: true, required: false
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  public resetRole() {
    this._role = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeccompProfile {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#localhost_profile DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#localhost_profile}
  */
  readonly localhostProfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeccompProfileToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeccompProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    localhost_profile: cdktf.stringToTerraform(struct!.localhostProfile),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeccompProfileToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeccompProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    localhost_profile: {
      value: cdktf.stringToHclTerraform(struct!.localhostProfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeccompProfileOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeccompProfile | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._localhostProfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.localhostProfile = this._localhostProfile;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeccompProfile | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._localhostProfile = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._localhostProfile = value.localhostProfile;
      this._type = value.type;
    }
  }

  // localhost_profile - computed: false, optional: true, required: false
  private _localhostProfile?: string; 
  public get localhostProfile() {
    return this.getStringAttribute('localhost_profile');
  }
  public set localhostProfile(value: string) {
    this._localhostProfile = value;
  }
  public resetLocalhostProfile() {
    this._localhostProfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localhostProfileInput() {
    return this._localhostProfile;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextWindowsOptions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#gmsa_credential_spec DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#gmsa_credential_spec}
  */
  readonly gmsaCredentialSpec?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#gmsa_credential_spec_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#gmsa_credential_spec_name}
  */
  readonly gmsaCredentialSpecName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#host_process DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#host_process}
  */
  readonly hostProcess?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#run_as_user_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#run_as_user_name}
  */
  readonly runAsUserName?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextWindowsOptionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextWindowsOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    gmsa_credential_spec: cdktf.stringToTerraform(struct!.gmsaCredentialSpec),
    gmsa_credential_spec_name: cdktf.stringToTerraform(struct!.gmsaCredentialSpecName),
    host_process: cdktf.booleanToTerraform(struct!.hostProcess),
    run_as_user_name: cdktf.stringToTerraform(struct!.runAsUserName),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextWindowsOptionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextWindowsOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    gmsa_credential_spec: {
      value: cdktf.stringToHclTerraform(struct!.gmsaCredentialSpec),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    gmsa_credential_spec_name: {
      value: cdktf.stringToHclTerraform(struct!.gmsaCredentialSpecName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    host_process: {
      value: cdktf.booleanToHclTerraform(struct!.hostProcess),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_user_name: {
      value: cdktf.stringToHclTerraform(struct!.runAsUserName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextWindowsOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextWindowsOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._gmsaCredentialSpec !== undefined) {
      hasAnyValues = true;
      internalValueResult.gmsaCredentialSpec = this._gmsaCredentialSpec;
    }
    if (this._gmsaCredentialSpecName !== undefined) {
      hasAnyValues = true;
      internalValueResult.gmsaCredentialSpecName = this._gmsaCredentialSpecName;
    }
    if (this._hostProcess !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostProcess = this._hostProcess;
    }
    if (this._runAsUserName !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsUserName = this._runAsUserName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextWindowsOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._gmsaCredentialSpec = undefined;
      this._gmsaCredentialSpecName = undefined;
      this._hostProcess = undefined;
      this._runAsUserName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._gmsaCredentialSpec = value.gmsaCredentialSpec;
      this._gmsaCredentialSpecName = value.gmsaCredentialSpecName;
      this._hostProcess = value.hostProcess;
      this._runAsUserName = value.runAsUserName;
    }
  }

  // gmsa_credential_spec - computed: false, optional: true, required: false
  private _gmsaCredentialSpec?: string; 
  public get gmsaCredentialSpec() {
    return this.getStringAttribute('gmsa_credential_spec');
  }
  public set gmsaCredentialSpec(value: string) {
    this._gmsaCredentialSpec = value;
  }
  public resetGmsaCredentialSpec() {
    this._gmsaCredentialSpec = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gmsaCredentialSpecInput() {
    return this._gmsaCredentialSpec;
  }

  // gmsa_credential_spec_name - computed: false, optional: true, required: false
  private _gmsaCredentialSpecName?: string; 
  public get gmsaCredentialSpecName() {
    return this.getStringAttribute('gmsa_credential_spec_name');
  }
  public set gmsaCredentialSpecName(value: string) {
    this._gmsaCredentialSpecName = value;
  }
  public resetGmsaCredentialSpecName() {
    this._gmsaCredentialSpecName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gmsaCredentialSpecNameInput() {
    return this._gmsaCredentialSpecName;
  }

  // host_process - computed: false, optional: true, required: false
  private _hostProcess?: boolean | cdktf.IResolvable; 
  public get hostProcess() {
    return this.getBooleanAttribute('host_process');
  }
  public set hostProcess(value: boolean | cdktf.IResolvable) {
    this._hostProcess = value;
  }
  public resetHostProcess() {
    this._hostProcess = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostProcessInput() {
    return this._hostProcess;
  }

  // run_as_user_name - computed: false, optional: true, required: false
  private _runAsUserName?: string; 
  public get runAsUserName() {
    return this.getStringAttribute('run_as_user_name');
  }
  public set runAsUserName(value: string) {
    this._runAsUserName = value;
  }
  public resetRunAsUserName() {
    this._runAsUserName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsUserNameInput() {
    return this._runAsUserName;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContext {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#allow_privilege_escalation DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#allow_privilege_escalation}
  */
  readonly allowPrivilegeEscalation?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#capabilities DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#capabilities}
  */
  readonly capabilities?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextCapabilities;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#privileged DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#privileged}
  */
  readonly privileged?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#proc_mount DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#proc_mount}
  */
  readonly procMount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only_root_filesystem DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only_root_filesystem}
  */
  readonly readOnlyRootFilesystem?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#run_as_group DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#run_as_group}
  */
  readonly runAsGroup?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#run_as_non_root DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#run_as_non_root}
  */
  readonly runAsNonRoot?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#run_as_user DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#run_as_user}
  */
  readonly runAsUser?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#se_linux_options DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#se_linux_options}
  */
  readonly seLinuxOptions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeLinuxOptions;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#seccomp_profile DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#seccomp_profile}
  */
  readonly seccompProfile?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeccompProfile;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#windows_options DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#windows_options}
  */
  readonly windowsOptions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextWindowsOptions;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContext | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_privilege_escalation: cdktf.booleanToTerraform(struct!.allowPrivilegeEscalation),
    capabilities: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextCapabilitiesToTerraform(struct!.capabilities),
    privileged: cdktf.booleanToTerraform(struct!.privileged),
    proc_mount: cdktf.stringToTerraform(struct!.procMount),
    read_only_root_filesystem: cdktf.booleanToTerraform(struct!.readOnlyRootFilesystem),
    run_as_group: cdktf.numberToTerraform(struct!.runAsGroup),
    run_as_non_root: cdktf.booleanToTerraform(struct!.runAsNonRoot),
    run_as_user: cdktf.numberToTerraform(struct!.runAsUser),
    se_linux_options: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeLinuxOptionsToTerraform(struct!.seLinuxOptions),
    seccomp_profile: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeccompProfileToTerraform(struct!.seccompProfile),
    windows_options: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextWindowsOptionsToTerraform(struct!.windowsOptions),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContext | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_privilege_escalation: {
      value: cdktf.booleanToHclTerraform(struct!.allowPrivilegeEscalation),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    capabilities: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextCapabilitiesToHclTerraform(struct!.capabilities),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextCapabilities",
    },
    privileged: {
      value: cdktf.booleanToHclTerraform(struct!.privileged),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    proc_mount: {
      value: cdktf.stringToHclTerraform(struct!.procMount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only_root_filesystem: {
      value: cdktf.booleanToHclTerraform(struct!.readOnlyRootFilesystem),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_group: {
      value: cdktf.numberToHclTerraform(struct!.runAsGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    run_as_non_root: {
      value: cdktf.booleanToHclTerraform(struct!.runAsNonRoot),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_user: {
      value: cdktf.numberToHclTerraform(struct!.runAsUser),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    se_linux_options: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeLinuxOptionsToHclTerraform(struct!.seLinuxOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeLinuxOptions",
    },
    seccomp_profile: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeccompProfileToHclTerraform(struct!.seccompProfile),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeccompProfile",
    },
    windows_options: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextWindowsOptionsToHclTerraform(struct!.windowsOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextWindowsOptions",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContext | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowPrivilegeEscalation !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowPrivilegeEscalation = this._allowPrivilegeEscalation;
    }
    if (this._capabilities?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.capabilities = this._capabilities?.internalValue;
    }
    if (this._privileged !== undefined) {
      hasAnyValues = true;
      internalValueResult.privileged = this._privileged;
    }
    if (this._procMount !== undefined) {
      hasAnyValues = true;
      internalValueResult.procMount = this._procMount;
    }
    if (this._readOnlyRootFilesystem !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnlyRootFilesystem = this._readOnlyRootFilesystem;
    }
    if (this._runAsGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsGroup = this._runAsGroup;
    }
    if (this._runAsNonRoot !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsNonRoot = this._runAsNonRoot;
    }
    if (this._runAsUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsUser = this._runAsUser;
    }
    if (this._seLinuxOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.seLinuxOptions = this._seLinuxOptions?.internalValue;
    }
    if (this._seccompProfile?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.seccompProfile = this._seccompProfile?.internalValue;
    }
    if (this._windowsOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.windowsOptions = this._windowsOptions?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContext | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowPrivilegeEscalation = undefined;
      this._capabilities.internalValue = undefined;
      this._privileged = undefined;
      this._procMount = undefined;
      this._readOnlyRootFilesystem = undefined;
      this._runAsGroup = undefined;
      this._runAsNonRoot = undefined;
      this._runAsUser = undefined;
      this._seLinuxOptions.internalValue = undefined;
      this._seccompProfile.internalValue = undefined;
      this._windowsOptions.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowPrivilegeEscalation = value.allowPrivilegeEscalation;
      this._capabilities.internalValue = value.capabilities;
      this._privileged = value.privileged;
      this._procMount = value.procMount;
      this._readOnlyRootFilesystem = value.readOnlyRootFilesystem;
      this._runAsGroup = value.runAsGroup;
      this._runAsNonRoot = value.runAsNonRoot;
      this._runAsUser = value.runAsUser;
      this._seLinuxOptions.internalValue = value.seLinuxOptions;
      this._seccompProfile.internalValue = value.seccompProfile;
      this._windowsOptions.internalValue = value.windowsOptions;
    }
  }

  // allow_privilege_escalation - computed: false, optional: true, required: false
  private _allowPrivilegeEscalation?: boolean | cdktf.IResolvable; 
  public get allowPrivilegeEscalation() {
    return this.getBooleanAttribute('allow_privilege_escalation');
  }
  public set allowPrivilegeEscalation(value: boolean | cdktf.IResolvable) {
    this._allowPrivilegeEscalation = value;
  }
  public resetAllowPrivilegeEscalation() {
    this._allowPrivilegeEscalation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowPrivilegeEscalationInput() {
    return this._allowPrivilegeEscalation;
  }

  // capabilities - computed: false, optional: true, required: false
  private _capabilities = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextCapabilitiesOutputReference(this, "capabilities");
  public get capabilities() {
    return this._capabilities;
  }
  public putCapabilities(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextCapabilities) {
    this._capabilities.internalValue = value;
  }
  public resetCapabilities() {
    this._capabilities.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get capabilitiesInput() {
    return this._capabilities.internalValue;
  }

  // privileged - computed: false, optional: true, required: false
  private _privileged?: boolean | cdktf.IResolvable; 
  public get privileged() {
    return this.getBooleanAttribute('privileged');
  }
  public set privileged(value: boolean | cdktf.IResolvable) {
    this._privileged = value;
  }
  public resetPrivileged() {
    this._privileged = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get privilegedInput() {
    return this._privileged;
  }

  // proc_mount - computed: false, optional: true, required: false
  private _procMount?: string; 
  public get procMount() {
    return this.getStringAttribute('proc_mount');
  }
  public set procMount(value: string) {
    this._procMount = value;
  }
  public resetProcMount() {
    this._procMount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get procMountInput() {
    return this._procMount;
  }

  // read_only_root_filesystem - computed: false, optional: true, required: false
  private _readOnlyRootFilesystem?: boolean | cdktf.IResolvable; 
  public get readOnlyRootFilesystem() {
    return this.getBooleanAttribute('read_only_root_filesystem');
  }
  public set readOnlyRootFilesystem(value: boolean | cdktf.IResolvable) {
    this._readOnlyRootFilesystem = value;
  }
  public resetReadOnlyRootFilesystem() {
    this._readOnlyRootFilesystem = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyRootFilesystemInput() {
    return this._readOnlyRootFilesystem;
  }

  // run_as_group - computed: false, optional: true, required: false
  private _runAsGroup?: number; 
  public get runAsGroup() {
    return this.getNumberAttribute('run_as_group');
  }
  public set runAsGroup(value: number) {
    this._runAsGroup = value;
  }
  public resetRunAsGroup() {
    this._runAsGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsGroupInput() {
    return this._runAsGroup;
  }

  // run_as_non_root - computed: false, optional: true, required: false
  private _runAsNonRoot?: boolean | cdktf.IResolvable; 
  public get runAsNonRoot() {
    return this.getBooleanAttribute('run_as_non_root');
  }
  public set runAsNonRoot(value: boolean | cdktf.IResolvable) {
    this._runAsNonRoot = value;
  }
  public resetRunAsNonRoot() {
    this._runAsNonRoot = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsNonRootInput() {
    return this._runAsNonRoot;
  }

  // run_as_user - computed: false, optional: true, required: false
  private _runAsUser?: number; 
  public get runAsUser() {
    return this.getNumberAttribute('run_as_user');
  }
  public set runAsUser(value: number) {
    this._runAsUser = value;
  }
  public resetRunAsUser() {
    this._runAsUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsUserInput() {
    return this._runAsUser;
  }

  // se_linux_options - computed: false, optional: true, required: false
  private _seLinuxOptions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeLinuxOptionsOutputReference(this, "se_linux_options");
  public get seLinuxOptions() {
    return this._seLinuxOptions;
  }
  public putSeLinuxOptions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeLinuxOptions) {
    this._seLinuxOptions.internalValue = value;
  }
  public resetSeLinuxOptions() {
    this._seLinuxOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get seLinuxOptionsInput() {
    return this._seLinuxOptions.internalValue;
  }

  // seccomp_profile - computed: false, optional: true, required: false
  private _seccompProfile = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeccompProfileOutputReference(this, "seccomp_profile");
  public get seccompProfile() {
    return this._seccompProfile;
  }
  public putSeccompProfile(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextSeccompProfile) {
    this._seccompProfile.internalValue = value;
  }
  public resetSeccompProfile() {
    this._seccompProfile.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get seccompProfileInput() {
    return this._seccompProfile.internalValue;
  }

  // windows_options - computed: false, optional: true, required: false
  private _windowsOptions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextWindowsOptionsOutputReference(this, "windows_options");
  public get windowsOptions() {
    return this._windowsOptions;
  }
  public putWindowsOptions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextWindowsOptions) {
    this._windowsOptions.internalValue = value;
  }
  public resetWindowsOptions() {
    this._windowsOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get windowsOptionsInput() {
    return this._windowsOptions.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerations {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#effect DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#toleration_seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#value DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerationsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerationsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerationsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_expressions DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraints {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#label_selector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#max_skew DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#max_skew}
  */
  readonly maxSkew?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#topology_key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#topology_key}
  */
  readonly topologyKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#when_unsatisfiable DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#when_unsatisfiable}
  */
  readonly whenUnsatisfiable?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraints | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorToTerraform(struct!.labelSelector),
    max_skew: cdktf.numberToTerraform(struct!.maxSkew),
    topology_key: cdktf.stringToTerraform(struct!.topologyKey),
    when_unsatisfiable: cdktf.stringToTerraform(struct!.whenUnsatisfiable),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraints | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelector",
    },
    max_skew: {
      value: cdktf.numberToHclTerraform(struct!.maxSkew),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topology_key: {
      value: cdktf.stringToHclTerraform(struct!.topologyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    when_unsatisfiable: {
      value: cdktf.stringToHclTerraform(struct!.whenUnsatisfiable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraints | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._maxSkew !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxSkew = this._maxSkew;
    }
    if (this._topologyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyKey = this._topologyKey;
    }
    if (this._whenUnsatisfiable !== undefined) {
      hasAnyValues = true;
      internalValueResult.whenUnsatisfiable = this._whenUnsatisfiable;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraints | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._maxSkew = undefined;
      this._topologyKey = undefined;
      this._whenUnsatisfiable = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._maxSkew = value.maxSkew;
      this._topologyKey = value.topologyKey;
      this._whenUnsatisfiable = value.whenUnsatisfiable;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // max_skew - computed: false, optional: true, required: false
  private _maxSkew?: number; 
  public get maxSkew() {
    return this.getNumberAttribute('max_skew');
  }
  public set maxSkew(value: number) {
    this._maxSkew = value;
  }
  public resetMaxSkew() {
    this._maxSkew = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxSkewInput() {
    return this._maxSkew;
  }

  // topology_key - computed: false, optional: true, required: false
  private _topologyKey?: string; 
  public get topologyKey() {
    return this.getStringAttribute('topology_key');
  }
  public set topologyKey(value: string) {
    this._topologyKey = value;
  }
  public resetTopologyKey() {
    this._topologyKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyKeyInput() {
    return this._topologyKey;
  }

  // when_unsatisfiable - computed: false, optional: true, required: false
  private _whenUnsatisfiable?: string; 
  public get whenUnsatisfiable() {
    return this.getStringAttribute('when_unsatisfiable');
  }
  public set whenUnsatisfiable(value: string) {
    this._whenUnsatisfiable = value;
  }
  public resetWhenUnsatisfiable() {
    this._whenUnsatisfiable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get whenUnsatisfiableInput() {
    return this._whenUnsatisfiable;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraints[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMounts {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mount_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mount_path}
  */
  readonly mountPath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mount_propagation DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mount_propagation}
  */
  readonly mountPropagation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#sub_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#sub_path}
  */
  readonly subPath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#sub_path_expr DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#sub_path_expr}
  */
  readonly subPathExpr?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMountsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    mount_path: cdktf.stringToTerraform(struct!.mountPath),
    mount_propagation: cdktf.stringToTerraform(struct!.mountPropagation),
    name: cdktf.stringToTerraform(struct!.name),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    sub_path: cdktf.stringToTerraform(struct!.subPath),
    sub_path_expr: cdktf.stringToTerraform(struct!.subPathExpr),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMountsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    mount_path: {
      value: cdktf.stringToHclTerraform(struct!.mountPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mount_propagation: {
      value: cdktf.stringToHclTerraform(struct!.mountPropagation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    sub_path: {
      value: cdktf.stringToHclTerraform(struct!.subPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sub_path_expr: {
      value: cdktf.stringToHclTerraform(struct!.subPathExpr),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMountsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMounts | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._mountPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.mountPath = this._mountPath;
    }
    if (this._mountPropagation !== undefined) {
      hasAnyValues = true;
      internalValueResult.mountPropagation = this._mountPropagation;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._subPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.subPath = this._subPath;
    }
    if (this._subPathExpr !== undefined) {
      hasAnyValues = true;
      internalValueResult.subPathExpr = this._subPathExpr;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMounts | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._mountPath = undefined;
      this._mountPropagation = undefined;
      this._name = undefined;
      this._readOnly = undefined;
      this._subPath = undefined;
      this._subPathExpr = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._mountPath = value.mountPath;
      this._mountPropagation = value.mountPropagation;
      this._name = value.name;
      this._readOnly = value.readOnly;
      this._subPath = value.subPath;
      this._subPathExpr = value.subPathExpr;
    }
  }

  // mount_path - computed: false, optional: true, required: false
  private _mountPath?: string; 
  public get mountPath() {
    return this.getStringAttribute('mount_path');
  }
  public set mountPath(value: string) {
    this._mountPath = value;
  }
  public resetMountPath() {
    this._mountPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mountPathInput() {
    return this._mountPath;
  }

  // mount_propagation - computed: false, optional: true, required: false
  private _mountPropagation?: string; 
  public get mountPropagation() {
    return this.getStringAttribute('mount_propagation');
  }
  public set mountPropagation(value: string) {
    this._mountPropagation = value;
  }
  public resetMountPropagation() {
    this._mountPropagation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mountPropagationInput() {
    return this._mountPropagation;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // sub_path - computed: false, optional: true, required: false
  private _subPath?: string; 
  public get subPath() {
    return this.getStringAttribute('sub_path');
  }
  public set subPath(value: string) {
    this._subPath = value;
  }
  public resetSubPath() {
    this._subPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subPathInput() {
    return this._subPath;
  }

  // sub_path_expr - computed: false, optional: true, required: false
  private _subPathExpr?: string; 
  public get subPathExpr() {
    return this.getStringAttribute('sub_path_expr');
  }
  public set subPathExpr(value: string) {
    this._subPathExpr = value;
  }
  public resetSubPathExpr() {
    this._subPathExpr = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subPathExprInput() {
    return this._subPathExpr;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMountsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMounts[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMountsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMountsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAwsElasticBlockStore {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#partition DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#partition}
  */
  readonly partition?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_id DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_id}
  */
  readonly volumeId?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAwsElasticBlockStoreToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAwsElasticBlockStore | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    partition: cdktf.numberToTerraform(struct!.partition),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    volume_id: cdktf.stringToTerraform(struct!.volumeId),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAwsElasticBlockStoreToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAwsElasticBlockStore | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    partition: {
      value: cdktf.numberToHclTerraform(struct!.partition),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    volume_id: {
      value: cdktf.stringToHclTerraform(struct!.volumeId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAwsElasticBlockStoreOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAwsElasticBlockStore | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._partition !== undefined) {
      hasAnyValues = true;
      internalValueResult.partition = this._partition;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._volumeId !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeId = this._volumeId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAwsElasticBlockStore | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._partition = undefined;
      this._readOnly = undefined;
      this._volumeId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._partition = value.partition;
      this._readOnly = value.readOnly;
      this._volumeId = value.volumeId;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // partition - computed: false, optional: true, required: false
  private _partition?: number; 
  public get partition() {
    return this.getNumberAttribute('partition');
  }
  public set partition(value: number) {
    this._partition = value;
  }
  public resetPartition() {
    this._partition = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partitionInput() {
    return this._partition;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // volume_id - computed: false, optional: true, required: false
  private _volumeId?: string; 
  public get volumeId() {
    return this.getStringAttribute('volume_id');
  }
  public set volumeId(value: string) {
    this._volumeId = value;
  }
  public resetVolumeId() {
    this._volumeId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeIdInput() {
    return this._volumeId;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureDisk {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#caching_mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#caching_mode}
  */
  readonly cachingMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#disk_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#disk_name}
  */
  readonly diskName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#disk_uri DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#disk_uri}
  */
  readonly diskUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#kind DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureDiskToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    caching_mode: cdktf.stringToTerraform(struct!.cachingMode),
    disk_name: cdktf.stringToTerraform(struct!.diskName),
    disk_uri: cdktf.stringToTerraform(struct!.diskUri),
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    kind: cdktf.stringToTerraform(struct!.kind),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureDiskToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    caching_mode: {
      value: cdktf.stringToHclTerraform(struct!.cachingMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disk_name: {
      value: cdktf.stringToHclTerraform(struct!.diskName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disk_uri: {
      value: cdktf.stringToHclTerraform(struct!.diskUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureDiskOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureDisk | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cachingMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.cachingMode = this._cachingMode;
    }
    if (this._diskName !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskName = this._diskName;
    }
    if (this._diskUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskUri = this._diskUri;
    }
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureDisk | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cachingMode = undefined;
      this._diskName = undefined;
      this._diskUri = undefined;
      this._fsType = undefined;
      this._kind = undefined;
      this._readOnly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cachingMode = value.cachingMode;
      this._diskName = value.diskName;
      this._diskUri = value.diskUri;
      this._fsType = value.fsType;
      this._kind = value.kind;
      this._readOnly = value.readOnly;
    }
  }

  // caching_mode - computed: false, optional: true, required: false
  private _cachingMode?: string; 
  public get cachingMode() {
    return this.getStringAttribute('caching_mode');
  }
  public set cachingMode(value: string) {
    this._cachingMode = value;
  }
  public resetCachingMode() {
    this._cachingMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cachingModeInput() {
    return this._cachingMode;
  }

  // disk_name - computed: false, optional: true, required: false
  private _diskName?: string; 
  public get diskName() {
    return this.getStringAttribute('disk_name');
  }
  public set diskName(value: string) {
    this._diskName = value;
  }
  public resetDiskName() {
    this._diskName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get diskNameInput() {
    return this._diskName;
  }

  // disk_uri - computed: false, optional: true, required: false
  private _diskUri?: string; 
  public get diskUri() {
    return this.getStringAttribute('disk_uri');
  }
  public set diskUri(value: string) {
    this._diskUri = value;
  }
  public resetDiskUri() {
    this._diskUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get diskUriInput() {
    return this._diskUri;
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureFile {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_name}
  */
  readonly secretName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#share_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#share_name}
  */
  readonly shareName?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureFileToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureFile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_name: cdktf.stringToTerraform(struct!.secretName),
    share_name: cdktf.stringToTerraform(struct!.shareName),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureFileToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureFile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    share_name: {
      value: cdktf.stringToHclTerraform(struct!.shareName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureFileOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureFile | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    if (this._shareName !== undefined) {
      hasAnyValues = true;
      internalValueResult.shareName = this._shareName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureFile | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._readOnly = undefined;
      this._secretName = undefined;
      this._shareName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._readOnly = value.readOnly;
      this._secretName = value.secretName;
      this._shareName = value.shareName;
    }
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_name - computed: false, optional: true, required: false
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  public resetSecretName() {
    this._secretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }

  // share_name - computed: false, optional: true, required: false
  private _shareName?: string; 
  public get shareName() {
    return this.getStringAttribute('share_name');
  }
  public set shareName(value: string) {
    this._shareName = value;
  }
  public resetShareName() {
    this._shareName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get shareNameInput() {
    return this._shareName;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#monitors DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#monitors}
  */
  readonly monitors?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_file DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_file}
  */
  readonly secretFile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsSecretRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#user DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#user}
  */
  readonly user?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    monitors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitors),
    path: cdktf.stringToTerraform(struct!.path),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_file: cdktf.stringToTerraform(struct!.secretFile),
    secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsSecretRefToTerraform(struct!.secretRef),
    user: cdktf.stringToTerraform(struct!.user),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    monitors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_file: {
      value: cdktf.stringToHclTerraform(struct!.secretFile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsSecretRef",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._monitors !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitors = this._monitors;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretFile !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretFile = this._secretFile;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._monitors = undefined;
      this._path = undefined;
      this._readOnly = undefined;
      this._secretFile = undefined;
      this._secretRef.internalValue = undefined;
      this._user = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._monitors = value.monitors;
      this._path = value.path;
      this._readOnly = value.readOnly;
      this._secretFile = value.secretFile;
      this._secretRef.internalValue = value.secretRef;
      this._user = value.user;
    }
  }

  // monitors - computed: false, optional: true, required: false
  private _monitors?: string[]; 
  public get monitors() {
    return this.getListAttribute('monitors');
  }
  public set monitors(value: string[]) {
    this._monitors = value;
  }
  public resetMonitors() {
    this._monitors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitorsInput() {
    return this._monitors;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_file - computed: false, optional: true, required: false
  private _secretFile?: string; 
  public get secretFile() {
    return this.getStringAttribute('secret_file');
  }
  public set secretFile(value: string) {
    this._secretFile = value;
  }
  public resetSecretFile() {
    this._secretFile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretFileInput() {
    return this._secretFile;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinder {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderSecretRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_id DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_id}
  */
  readonly volumeId?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinder | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderSecretRefToTerraform(struct!.secretRef),
    volume_id: cdktf.stringToTerraform(struct!.volumeId),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinder | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderSecretRef",
    },
    volume_id: {
      value: cdktf.stringToHclTerraform(struct!.volumeId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinder | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._volumeId !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeId = this._volumeId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinder | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
      this._volumeId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
      this._volumeId = value.volumeId;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // volume_id - computed: false, optional: true, required: false
  private _volumeId?: string; 
  public get volumeId() {
    return this.getStringAttribute('volume_id');
  }
  public set volumeId(value: string) {
    this._volumeId = value;
  }
  public resetVolumeId() {
    this._volumeId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeIdInput() {
    return this._volumeId;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItems {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItemsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItemsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._mode = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._mode = value.mode;
      this._path = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItemsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapLocalObjectReference {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapLocalObjectReferenceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapLocalObjectReferenceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapLocalObjectReferenceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapLocalObjectReference | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapLocalObjectReference | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMap {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#default_mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#default_mode}
  */
  readonly defaultMode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#items DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItems[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#local_object_reference DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#local_object_reference}
  */
  readonly localObjectReference?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapLocalObjectReference;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#optional DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_mode: cdktf.numberToTerraform(struct!.defaultMode),
    items: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItemsToTerraform, false)(struct!.items),
    local_object_reference: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapLocalObjectReferenceToTerraform(struct!.localObjectReference),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_mode: {
      value: cdktf.numberToHclTerraform(struct!.defaultMode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    items: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItemsList",
    },
    local_object_reference: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapLocalObjectReferenceToHclTerraform(struct!.localObjectReference),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapLocalObjectReference",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMap | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultMode = this._defaultMode;
    }
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    if (this._localObjectReference?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.localObjectReference = this._localObjectReference?.internalValue;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMap | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultMode = undefined;
      this._items.internalValue = undefined;
      this._localObjectReference.internalValue = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultMode = value.defaultMode;
      this._items.internalValue = value.items;
      this._localObjectReference.internalValue = value.localObjectReference;
      this._optional = value.optional;
    }
  }

  // default_mode - computed: false, optional: true, required: false
  private _defaultMode?: number; 
  public get defaultMode() {
    return this.getNumberAttribute('default_mode');
  }
  public set defaultMode(value: number) {
    this._defaultMode = value;
  }
  public resetDefaultMode() {
    this._defaultMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultModeInput() {
    return this._defaultMode;
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }

  // local_object_reference - computed: false, optional: true, required: false
  private _localObjectReference = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapLocalObjectReferenceOutputReference(this, "local_object_reference");
  public get localObjectReference() {
    return this._localObjectReference;
  }
  public putLocalObjectReference(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapLocalObjectReference) {
    this._localObjectReference.internalValue = value;
  }
  public resetLocalObjectReference() {
    this._localObjectReference.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localObjectReferenceInput() {
    return this._localObjectReference.internalValue;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiNodePublishSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiNodePublishSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiNodePublishSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiNodePublishSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiNodePublishSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiNodePublishSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiNodePublishSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiNodePublishSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsi {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#driver DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#driver}
  */
  readonly driver?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#node_publish_secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#node_publish_secret_ref}
  */
  readonly nodePublishSecretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiNodePublishSecretRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_attributes DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_attributes}
  */
  readonly volumeAttributes?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    driver: cdktf.stringToTerraform(struct!.driver),
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    node_publish_secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiNodePublishSecretRefToTerraform(struct!.nodePublishSecretRef),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    volume_attributes: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.volumeAttributes),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    driver: {
      value: cdktf.stringToHclTerraform(struct!.driver),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_publish_secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiNodePublishSecretRefToHclTerraform(struct!.nodePublishSecretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiNodePublishSecretRef",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    volume_attributes: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.volumeAttributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._driver !== undefined) {
      hasAnyValues = true;
      internalValueResult.driver = this._driver;
    }
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._nodePublishSecretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodePublishSecretRef = this._nodePublishSecretRef?.internalValue;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._volumeAttributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeAttributes = this._volumeAttributes;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._driver = undefined;
      this._fsType = undefined;
      this._nodePublishSecretRef.internalValue = undefined;
      this._readOnly = undefined;
      this._volumeAttributes = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._driver = value.driver;
      this._fsType = value.fsType;
      this._nodePublishSecretRef.internalValue = value.nodePublishSecretRef;
      this._readOnly = value.readOnly;
      this._volumeAttributes = value.volumeAttributes;
    }
  }

  // driver - computed: false, optional: true, required: false
  private _driver?: string; 
  public get driver() {
    return this.getStringAttribute('driver');
  }
  public set driver(value: string) {
    this._driver = value;
  }
  public resetDriver() {
    this._driver = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get driverInput() {
    return this._driver;
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // node_publish_secret_ref - computed: false, optional: true, required: false
  private _nodePublishSecretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiNodePublishSecretRefOutputReference(this, "node_publish_secret_ref");
  public get nodePublishSecretRef() {
    return this._nodePublishSecretRef;
  }
  public putNodePublishSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiNodePublishSecretRef) {
    this._nodePublishSecretRef.internalValue = value;
  }
  public resetNodePublishSecretRef() {
    this._nodePublishSecretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodePublishSecretRefInput() {
    return this._nodePublishSecretRef.internalValue;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // volume_attributes - computed: false, optional: true, required: false
  private _volumeAttributes?: { [key: string]: string }; 
  public get volumeAttributes() {
    return this.getStringMapAttribute('volume_attributes');
  }
  public set volumeAttributes(value: { [key: string]: string }) {
    this._volumeAttributes = value;
  }
  public resetVolumeAttributes() {
    this._volumeAttributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeAttributesInput() {
    return this._volumeAttributes;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#api_version DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#field_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#field_path}
  */
  readonly fieldPath?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsFieldRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    field_path: cdktf.stringToTerraform(struct!.fieldPath),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsFieldRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    field_path: {
      value: cdktf.stringToHclTerraform(struct!.fieldPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldPath = this._fieldPath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldPath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldPath = value.fieldPath;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // field_path - computed: false, optional: true, required: false
  private _fieldPath?: string; 
  public get fieldPath() {
    return this.getStringAttribute('field_path');
  }
  public set fieldPath(value: string) {
    this._fieldPath = value;
  }
  public resetFieldPath() {
    this._fieldPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldPathInput() {
    return this._fieldPath;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsResourceFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#container_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#container_name}
  */
  readonly containerName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#divisor DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#divisor}
  */
  readonly divisor?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resource DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resource}
  */
  readonly resource?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsResourceFieldRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_name: cdktf.stringToTerraform(struct!.containerName),
    divisor: cdktf.stringToTerraform(struct!.divisor),
    resource: cdktf.stringToTerraform(struct!.resource),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsResourceFieldRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_name: {
      value: cdktf.stringToHclTerraform(struct!.containerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    divisor: {
      value: cdktf.stringToHclTerraform(struct!.divisor),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsResourceFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsResourceFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerName = this._containerName;
    }
    if (this._divisor !== undefined) {
      hasAnyValues = true;
      internalValueResult.divisor = this._divisor;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsResourceFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerName = undefined;
      this._divisor = undefined;
      this._resource = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerName = value.containerName;
      this._divisor = value.divisor;
      this._resource = value.resource;
    }
  }

  // container_name - computed: false, optional: true, required: false
  private _containerName?: string; 
  public get containerName() {
    return this.getStringAttribute('container_name');
  }
  public set containerName(value: string) {
    this._containerName = value;
  }
  public resetContainerName() {
    this._containerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNameInput() {
    return this._containerName;
  }

  // divisor - computed: false, optional: true, required: false
  private _divisor?: string; 
  public get divisor() {
    return this.getStringAttribute('divisor');
  }
  public set divisor(value: string) {
    this._divisor = value;
  }
  public resetDivisor() {
    this._divisor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get divisorInput() {
    return this._divisor;
  }

  // resource - computed: false, optional: true, required: false
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  public resetResource() {
    this._resource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItems {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#field_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#field_ref}
  */
  readonly fieldRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsFieldRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resource_field_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resource_field_ref}
  */
  readonly resourceFieldRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsResourceFieldRef;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    field_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsFieldRefToTerraform(struct!.fieldRef),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
    resource_field_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsResourceFieldRefToTerraform(struct!.resourceFieldRef),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    field_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsFieldRefToHclTerraform(struct!.fieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsFieldRef",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_field_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsResourceFieldRefToHclTerraform(struct!.resourceFieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsResourceFieldRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldRef = this._fieldRef?.internalValue;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._resourceFieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceFieldRef = this._resourceFieldRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fieldRef.internalValue = undefined;
      this._mode = undefined;
      this._path = undefined;
      this._resourceFieldRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fieldRef.internalValue = value.fieldRef;
      this._mode = value.mode;
      this._path = value.path;
      this._resourceFieldRef.internalValue = value.resourceFieldRef;
    }
  }

  // field_ref - computed: false, optional: true, required: false
  private _fieldRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsFieldRefOutputReference(this, "field_ref");
  public get fieldRef() {
    return this._fieldRef;
  }
  public putFieldRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsFieldRef) {
    this._fieldRef.internalValue = value;
  }
  public resetFieldRef() {
    this._fieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldRefInput() {
    return this._fieldRef.internalValue;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // resource_field_ref - computed: false, optional: true, required: false
  private _resourceFieldRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsResourceFieldRefOutputReference(this, "resource_field_ref");
  public get resourceFieldRef() {
    return this._resourceFieldRef;
  }
  public putResourceFieldRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsResourceFieldRef) {
    this._resourceFieldRef.internalValue = value;
  }
  public resetResourceFieldRef() {
    this._resourceFieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceFieldRefInput() {
    return this._resourceFieldRef.internalValue;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApi {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#default_mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#default_mode}
  */
  readonly defaultMode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#items DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItems[] | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_mode: cdktf.numberToTerraform(struct!.defaultMode),
    items: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsToTerraform, false)(struct!.items),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_mode: {
      value: cdktf.numberToHclTerraform(struct!.defaultMode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    items: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultMode = this._defaultMode;
    }
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultMode = undefined;
      this._items.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultMode = value.defaultMode;
      this._items.internalValue = value.items;
    }
  }

  // default_mode - computed: false, optional: true, required: false
  private _defaultMode?: number; 
  public get defaultMode() {
    return this.getNumberAttribute('default_mode');
  }
  public set defaultMode(value: number) {
    this._defaultMode = value;
  }
  public resetDefaultMode() {
    this._defaultMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultModeInput() {
    return this._defaultMode;
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEmptyDir {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#medium DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#medium}
  */
  readonly medium?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#size_limit DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#size_limit}
  */
  readonly sizeLimit?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEmptyDirToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEmptyDir | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    medium: cdktf.stringToTerraform(struct!.medium),
    size_limit: cdktf.stringToTerraform(struct!.sizeLimit),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEmptyDirToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEmptyDir | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    medium: {
      value: cdktf.stringToHclTerraform(struct!.medium),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    size_limit: {
      value: cdktf.stringToHclTerraform(struct!.sizeLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEmptyDirOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEmptyDir | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._medium !== undefined) {
      hasAnyValues = true;
      internalValueResult.medium = this._medium;
    }
    if (this._sizeLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.sizeLimit = this._sizeLimit;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEmptyDir | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._medium = undefined;
      this._sizeLimit = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._medium = value.medium;
      this._sizeLimit = value.sizeLimit;
    }
  }

  // medium - computed: false, optional: true, required: false
  private _medium?: string; 
  public get medium() {
    return this.getStringAttribute('medium');
  }
  public set medium(value: string) {
    this._medium = value;
  }
  public resetMedium() {
    this._medium = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mediumInput() {
    return this._medium;
  }

  // size_limit - computed: false, optional: true, required: false
  private _sizeLimit?: string; 
  public get sizeLimit() {
    return this.getStringAttribute('size_limit');
  }
  public set sizeLimit(value: string) {
    this._sizeLimit = value;
  }
  public resetSizeLimit() {
    this._sizeLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sizeLimitInput() {
    return this._sizeLimit;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#nanos DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#nanos}
  */
  readonly nanos?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#seconds}
  */
  readonly seconds?: number;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestampToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nanos: cdktf.numberToTerraform(struct!.nanos),
    seconds: cdktf.numberToTerraform(struct!.seconds),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestampToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nanos: {
      value: cdktf.numberToHclTerraform(struct!.nanos),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    seconds: {
      value: cdktf.numberToHclTerraform(struct!.seconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestampOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nanos !== undefined) {
      hasAnyValues = true;
      internalValueResult.nanos = this._nanos;
    }
    if (this._seconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.seconds = this._seconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nanos = undefined;
      this._seconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nanos = value.nanos;
      this._seconds = value.seconds;
    }
  }

  // nanos - computed: false, optional: true, required: false
  private _nanos?: number; 
  public get nanos() {
    return this.getNumberAttribute('nanos');
  }
  public set nanos(value: number) {
    this._nanos = value;
  }
  public resetNanos() {
    this._nanos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nanosInput() {
    return this._nanos;
  }

  // seconds - computed: false, optional: true, required: false
  private _seconds?: number; 
  public get seconds() {
    return this.getNumberAttribute('seconds');
  }
  public set seconds(value: number) {
    this._seconds = value;
  }
  public resetSeconds() {
    this._seconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secondsInput() {
    return this._seconds;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#nanos DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#nanos}
  */
  readonly nanos?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#seconds}
  */
  readonly seconds?: number;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestampToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nanos: cdktf.numberToTerraform(struct!.nanos),
    seconds: cdktf.numberToTerraform(struct!.seconds),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestampToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nanos: {
      value: cdktf.numberToHclTerraform(struct!.nanos),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    seconds: {
      value: cdktf.numberToHclTerraform(struct!.seconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestampOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nanos !== undefined) {
      hasAnyValues = true;
      internalValueResult.nanos = this._nanos;
    }
    if (this._seconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.seconds = this._seconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nanos = undefined;
      this._seconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nanos = value.nanos;
      this._seconds = value.seconds;
    }
  }

  // nanos - computed: false, optional: true, required: false
  private _nanos?: number; 
  public get nanos() {
    return this.getNumberAttribute('nanos');
  }
  public set nanos(value: number) {
    this._nanos = value;
  }
  public resetNanos() {
    this._nanos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nanosInput() {
    return this._nanos;
  }

  // seconds - computed: false, optional: true, required: false
  private _seconds?: number; 
  public get seconds() {
    return this.getNumberAttribute('seconds');
  }
  public set seconds(value: number) {
    this._seconds = value;
  }
  public resetSeconds() {
    this._seconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secondsInput() {
    return this._seconds;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1 {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#raw DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#raw}
  */
  readonly raw?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1ToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    raw: cdktf.stringToTerraform(struct!.raw),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1ToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    raw: {
      value: cdktf.stringToHclTerraform(struct!.raw),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1OutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1 | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._raw !== undefined) {
      hasAnyValues = true;
      internalValueResult.raw = this._raw;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1 | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._raw = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._raw = value.raw;
    }
  }

  // raw - computed: false, optional: true, required: false
  private _raw?: string; 
  public get raw() {
    return this.getStringAttribute('raw');
  }
  public set raw(value: string) {
    this._raw = value;
  }
  public resetRaw() {
    this._raw = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rawInput() {
    return this._raw;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#nanos DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#nanos}
  */
  readonly nanos?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#seconds}
  */
  readonly seconds?: number;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTimeToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nanos: cdktf.numberToTerraform(struct!.nanos),
    seconds: cdktf.numberToTerraform(struct!.seconds),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTimeToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nanos: {
      value: cdktf.numberToHclTerraform(struct!.nanos),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    seconds: {
      value: cdktf.numberToHclTerraform(struct!.seconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTimeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nanos !== undefined) {
      hasAnyValues = true;
      internalValueResult.nanos = this._nanos;
    }
    if (this._seconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.seconds = this._seconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nanos = undefined;
      this._seconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nanos = value.nanos;
      this._seconds = value.seconds;
    }
  }

  // nanos - computed: false, optional: true, required: false
  private _nanos?: number; 
  public get nanos() {
    return this.getNumberAttribute('nanos');
  }
  public set nanos(value: number) {
    this._nanos = value;
  }
  public resetNanos() {
    this._nanos = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nanosInput() {
    return this._nanos;
  }

  // seconds - computed: false, optional: true, required: false
  private _seconds?: number; 
  public get seconds() {
    return this.getNumberAttribute('seconds');
  }
  public set seconds(value: number) {
    this._seconds = value;
  }
  public resetSeconds() {
    this._seconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secondsInput() {
    return this._seconds;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#api_version DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fields_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fields_type}
  */
  readonly fieldsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fields_v1 DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fields_v1}
  */
  readonly fieldsV1?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#manager DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#manager}
  */
  readonly manager?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operation DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#subresource DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#subresource}
  */
  readonly subresource?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#time DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#time}
  */
  readonly time?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    fields_type: cdktf.stringToTerraform(struct!.fieldsType),
    fields_v1: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1ToTerraform(struct!.fieldsV1),
    manager: cdktf.stringToTerraform(struct!.manager),
    operation: cdktf.stringToTerraform(struct!.operation),
    subresource: cdktf.stringToTerraform(struct!.subresource),
    time: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTimeToTerraform(struct!.time),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fields_type: {
      value: cdktf.stringToHclTerraform(struct!.fieldsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fields_v1: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1ToHclTerraform(struct!.fieldsV1),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1",
    },
    manager: {
      value: cdktf.stringToHclTerraform(struct!.manager),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    subresource: {
      value: cdktf.stringToHclTerraform(struct!.subresource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTimeToHclTerraform(struct!.time),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldsType = this._fieldsType;
    }
    if (this._fieldsV1?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldsV1 = this._fieldsV1?.internalValue;
    }
    if (this._manager !== undefined) {
      hasAnyValues = true;
      internalValueResult.manager = this._manager;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._subresource !== undefined) {
      hasAnyValues = true;
      internalValueResult.subresource = this._subresource;
    }
    if (this._time?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.time = this._time?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldsType = undefined;
      this._fieldsV1.internalValue = undefined;
      this._manager = undefined;
      this._operation = undefined;
      this._subresource = undefined;
      this._time.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldsType = value.fieldsType;
      this._fieldsV1.internalValue = value.fieldsV1;
      this._manager = value.manager;
      this._operation = value.operation;
      this._subresource = value.subresource;
      this._time.internalValue = value.time;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // fields_type - computed: false, optional: true, required: false
  private _fieldsType?: string; 
  public get fieldsType() {
    return this.getStringAttribute('fields_type');
  }
  public set fieldsType(value: string) {
    this._fieldsType = value;
  }
  public resetFieldsType() {
    this._fieldsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldsTypeInput() {
    return this._fieldsType;
  }

  // fields_v1 - computed: false, optional: true, required: false
  private _fieldsV1 = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1OutputReference(this, "fields_v1");
  public get fieldsV1() {
    return this._fieldsV1;
  }
  public putFieldsV1(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsFieldsV1) {
    this._fieldsV1.internalValue = value;
  }
  public resetFieldsV1() {
    this._fieldsV1.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldsV1Input() {
    return this._fieldsV1.internalValue;
  }

  // manager - computed: false, optional: true, required: false
  private _manager?: string; 
  public get manager() {
    return this.getStringAttribute('manager');
  }
  public set manager(value: string) {
    this._manager = value;
  }
  public resetManager() {
    this._manager = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get managerInput() {
    return this._manager;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // subresource - computed: false, optional: true, required: false
  private _subresource?: string; 
  public get subresource() {
    return this.getStringAttribute('subresource');
  }
  public set subresource(value: string) {
    this._subresource = value;
  }
  public resetSubresource() {
    this._subresource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subresourceInput() {
    return this._subresource;
  }

  // time - computed: false, optional: true, required: false
  private _time = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTimeOutputReference(this, "time");
  public get time() {
    return this._time;
  }
  public putTime(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsTime) {
    this._time.internalValue = value;
  }
  public resetTime() {
    this._time.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeInput() {
    return this._time.internalValue;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#api_version DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#block_owner_deletion DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#block_owner_deletion}
  */
  readonly blockOwnerDeletion?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#controller DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#controller}
  */
  readonly controller?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#kind DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#uid DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#uid}
  */
  readonly uid?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    block_owner_deletion: cdktf.booleanToTerraform(struct!.blockOwnerDeletion),
    controller: cdktf.booleanToTerraform(struct!.controller),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
    uid: cdktf.stringToTerraform(struct!.uid),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    block_owner_deletion: {
      value: cdktf.booleanToHclTerraform(struct!.blockOwnerDeletion),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    controller: {
      value: cdktf.booleanToHclTerraform(struct!.controller),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uid: {
      value: cdktf.stringToHclTerraform(struct!.uid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._blockOwnerDeletion !== undefined) {
      hasAnyValues = true;
      internalValueResult.blockOwnerDeletion = this._blockOwnerDeletion;
    }
    if (this._controller !== undefined) {
      hasAnyValues = true;
      internalValueResult.controller = this._controller;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._uid !== undefined) {
      hasAnyValues = true;
      internalValueResult.uid = this._uid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._blockOwnerDeletion = undefined;
      this._controller = undefined;
      this._kind = undefined;
      this._name = undefined;
      this._uid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._blockOwnerDeletion = value.blockOwnerDeletion;
      this._controller = value.controller;
      this._kind = value.kind;
      this._name = value.name;
      this._uid = value.uid;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // block_owner_deletion - computed: false, optional: true, required: false
  private _blockOwnerDeletion?: boolean | cdktf.IResolvable; 
  public get blockOwnerDeletion() {
    return this.getBooleanAttribute('block_owner_deletion');
  }
  public set blockOwnerDeletion(value: boolean | cdktf.IResolvable) {
    this._blockOwnerDeletion = value;
  }
  public resetBlockOwnerDeletion() {
    this._blockOwnerDeletion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get blockOwnerDeletionInput() {
    return this._blockOwnerDeletion;
  }

  // controller - computed: false, optional: true, required: false
  private _controller?: boolean | cdktf.IResolvable; 
  public get controller() {
    return this.getBooleanAttribute('controller');
  }
  public set controller(value: boolean | cdktf.IResolvable) {
    this._controller = value;
  }
  public resetController() {
    this._controller = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get controllerInput() {
    return this._controller;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // uid - computed: false, optional: true, required: false
  private _uid?: string; 
  public get uid() {
    return this.getStringAttribute('uid');
  }
  public set uid(value: string) {
    this._uid = value;
  }
  public resetUid() {
    this._uid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uidInput() {
    return this._uid;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#annotations DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#cluster_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#cluster_name}
  */
  readonly clusterName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#creation_timestamp DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#creation_timestamp}
  */
  readonly creationTimestamp?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#deletion_grace_period_seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#deletion_grace_period_seconds}
  */
  readonly deletionGracePeriodSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#deletion_timestamp DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#deletion_timestamp}
  */
  readonly deletionTimestamp?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#finalizers DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#finalizers}
  */
  readonly finalizers?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#generate_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#generate_name}
  */
  readonly generateName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#generation DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#generation}
  */
  readonly generation?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#managed_fields DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#managed_fields}
  */
  readonly managedFields?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#namespace DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#namespace}
  */
  readonly namespace?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#owner_references DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#owner_references}
  */
  readonly ownerReferences?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resource_version DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resource_version}
  */
  readonly resourceVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#self_link DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#self_link}
  */
  readonly selfLink?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#uid DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#uid}
  */
  readonly uid?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    cluster_name: cdktf.stringToTerraform(struct!.clusterName),
    creation_timestamp: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestampToTerraform(struct!.creationTimestamp),
    deletion_grace_period_seconds: cdktf.numberToTerraform(struct!.deletionGracePeriodSeconds),
    deletion_timestamp: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestampToTerraform(struct!.deletionTimestamp),
    finalizers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.finalizers),
    generate_name: cdktf.stringToTerraform(struct!.generateName),
    generation: cdktf.numberToTerraform(struct!.generation),
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    managed_fields: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsToTerraform, false)(struct!.managedFields),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
    owner_references: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesToTerraform, false)(struct!.ownerReferences),
    resource_version: cdktf.stringToTerraform(struct!.resourceVersion),
    self_link: cdktf.stringToTerraform(struct!.selfLink),
    uid: cdktf.stringToTerraform(struct!.uid),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    cluster_name: {
      value: cdktf.stringToHclTerraform(struct!.clusterName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    creation_timestamp: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestampToHclTerraform(struct!.creationTimestamp),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp",
    },
    deletion_grace_period_seconds: {
      value: cdktf.numberToHclTerraform(struct!.deletionGracePeriodSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    deletion_timestamp: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestampToHclTerraform(struct!.deletionTimestamp),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp",
    },
    finalizers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.finalizers),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    generate_name: {
      value: cdktf.stringToHclTerraform(struct!.generateName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    generation: {
      value: cdktf.numberToHclTerraform(struct!.generation),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    managed_fields: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsToHclTerraform, false)(struct!.managedFields),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsList",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    owner_references: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesToHclTerraform, false)(struct!.ownerReferences),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesList",
    },
    resource_version: {
      value: cdktf.stringToHclTerraform(struct!.resourceVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_link: {
      value: cdktf.stringToHclTerraform(struct!.selfLink),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uid: {
      value: cdktf.stringToHclTerraform(struct!.uid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._clusterName !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterName = this._clusterName;
    }
    if (this._creationTimestamp?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.creationTimestamp = this._creationTimestamp?.internalValue;
    }
    if (this._deletionGracePeriodSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.deletionGracePeriodSeconds = this._deletionGracePeriodSeconds;
    }
    if (this._deletionTimestamp?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.deletionTimestamp = this._deletionTimestamp?.internalValue;
    }
    if (this._finalizers !== undefined) {
      hasAnyValues = true;
      internalValueResult.finalizers = this._finalizers;
    }
    if (this._generateName !== undefined) {
      hasAnyValues = true;
      internalValueResult.generateName = this._generateName;
    }
    if (this._generation !== undefined) {
      hasAnyValues = true;
      internalValueResult.generation = this._generation;
    }
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._managedFields?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.managedFields = this._managedFields?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    if (this._ownerReferences?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ownerReferences = this._ownerReferences?.internalValue;
    }
    if (this._resourceVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceVersion = this._resourceVersion;
    }
    if (this._selfLink !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfLink = this._selfLink;
    }
    if (this._uid !== undefined) {
      hasAnyValues = true;
      internalValueResult.uid = this._uid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._clusterName = undefined;
      this._creationTimestamp.internalValue = undefined;
      this._deletionGracePeriodSeconds = undefined;
      this._deletionTimestamp.internalValue = undefined;
      this._finalizers = undefined;
      this._generateName = undefined;
      this._generation = undefined;
      this._labels = undefined;
      this._managedFields.internalValue = undefined;
      this._name = undefined;
      this._namespace = undefined;
      this._ownerReferences.internalValue = undefined;
      this._resourceVersion = undefined;
      this._selfLink = undefined;
      this._uid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._clusterName = value.clusterName;
      this._creationTimestamp.internalValue = value.creationTimestamp;
      this._deletionGracePeriodSeconds = value.deletionGracePeriodSeconds;
      this._deletionTimestamp.internalValue = value.deletionTimestamp;
      this._finalizers = value.finalizers;
      this._generateName = value.generateName;
      this._generation = value.generation;
      this._labels = value.labels;
      this._managedFields.internalValue = value.managedFields;
      this._name = value.name;
      this._namespace = value.namespace;
      this._ownerReferences.internalValue = value.ownerReferences;
      this._resourceVersion = value.resourceVersion;
      this._selfLink = value.selfLink;
      this._uid = value.uid;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // cluster_name - computed: false, optional: true, required: false
  private _clusterName?: string; 
  public get clusterName() {
    return this.getStringAttribute('cluster_name');
  }
  public set clusterName(value: string) {
    this._clusterName = value;
  }
  public resetClusterName() {
    this._clusterName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterNameInput() {
    return this._clusterName;
  }

  // creation_timestamp - computed: false, optional: true, required: false
  private _creationTimestamp = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestampOutputReference(this, "creation_timestamp");
  public get creationTimestamp() {
    return this._creationTimestamp;
  }
  public putCreationTimestamp(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataCreationTimestamp) {
    this._creationTimestamp.internalValue = value;
  }
  public resetCreationTimestamp() {
    this._creationTimestamp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get creationTimestampInput() {
    return this._creationTimestamp.internalValue;
  }

  // deletion_grace_period_seconds - computed: false, optional: true, required: false
  private _deletionGracePeriodSeconds?: number; 
  public get deletionGracePeriodSeconds() {
    return this.getNumberAttribute('deletion_grace_period_seconds');
  }
  public set deletionGracePeriodSeconds(value: number) {
    this._deletionGracePeriodSeconds = value;
  }
  public resetDeletionGracePeriodSeconds() {
    this._deletionGracePeriodSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deletionGracePeriodSecondsInput() {
    return this._deletionGracePeriodSeconds;
  }

  // deletion_timestamp - computed: false, optional: true, required: false
  private _deletionTimestamp = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestampOutputReference(this, "deletion_timestamp");
  public get deletionTimestamp() {
    return this._deletionTimestamp;
  }
  public putDeletionTimestamp(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataDeletionTimestamp) {
    this._deletionTimestamp.internalValue = value;
  }
  public resetDeletionTimestamp() {
    this._deletionTimestamp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deletionTimestampInput() {
    return this._deletionTimestamp.internalValue;
  }

  // finalizers - computed: false, optional: true, required: false
  private _finalizers?: string[]; 
  public get finalizers() {
    return this.getListAttribute('finalizers');
  }
  public set finalizers(value: string[]) {
    this._finalizers = value;
  }
  public resetFinalizers() {
    this._finalizers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get finalizersInput() {
    return this._finalizers;
  }

  // generate_name - computed: false, optional: true, required: false
  private _generateName?: string; 
  public get generateName() {
    return this.getStringAttribute('generate_name');
  }
  public set generateName(value: string) {
    this._generateName = value;
  }
  public resetGenerateName() {
    this._generateName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get generateNameInput() {
    return this._generateName;
  }

  // generation - computed: false, optional: true, required: false
  private _generation?: number; 
  public get generation() {
    return this.getNumberAttribute('generation');
  }
  public set generation(value: number) {
    this._generation = value;
  }
  public resetGeneration() {
    this._generation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get generationInput() {
    return this._generation;
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // managed_fields - computed: false, optional: true, required: false
  private _managedFields = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFieldsList(this, "managed_fields", false);
  public get managedFields() {
    return this._managedFields;
  }
  public putManagedFields(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataManagedFields[] | cdktf.IResolvable) {
    this._managedFields.internalValue = value;
  }
  public resetManagedFields() {
    this._managedFields.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get managedFieldsInput() {
    return this._managedFields.internalValue;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }

  // owner_references - computed: false, optional: true, required: false
  private _ownerReferences = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferencesList(this, "owner_references", false);
  public get ownerReferences() {
    return this._ownerReferences;
  }
  public putOwnerReferences(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOwnerReferences[] | cdktf.IResolvable) {
    this._ownerReferences.internalValue = value;
  }
  public resetOwnerReferences() {
    this._ownerReferences.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerReferencesInput() {
    return this._ownerReferences.internalValue;
  }

  // resource_version - computed: false, optional: true, required: false
  private _resourceVersion?: string; 
  public get resourceVersion() {
    return this.getStringAttribute('resource_version');
  }
  public set resourceVersion(value: string) {
    this._resourceVersion = value;
  }
  public resetResourceVersion() {
    this._resourceVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceVersionInput() {
    return this._resourceVersion;
  }

  // self_link - computed: false, optional: true, required: false
  private _selfLink?: string; 
  public get selfLink() {
    return this.getStringAttribute('self_link');
  }
  public set selfLink(value: string) {
    this._selfLink = value;
  }
  public resetSelfLink() {
    this._selfLink = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfLinkInput() {
    return this._selfLink;
  }

  // uid - computed: false, optional: true, required: false
  private _uid?: string; 
  public get uid() {
    return this.getStringAttribute('uid');
  }
  public set uid(value: string) {
    this._uid = value;
  }
  public resetUid() {
    this._uid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uidInput() {
    return this._uid;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#api_group DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#api_group}
  */
  readonly apiGroup?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#kind DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_group: cdktf.stringToTerraform(struct!.apiGroup),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_group: {
      value: cdktf.stringToHclTerraform(struct!.apiGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiGroup = this._apiGroup;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiGroup = undefined;
      this._kind = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiGroup = value.apiGroup;
      this._kind = value.kind;
      this._name = value.name;
    }
  }

  // api_group - computed: false, optional: true, required: false
  private _apiGroup?: string; 
  public get apiGroup() {
    return this.getStringAttribute('api_group');
  }
  public set apiGroup(value: string) {
    this._apiGroup = value;
  }
  public resetApiGroup() {
    this._apiGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiGroupInput() {
    return this._apiGroup;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#api_group DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#api_group}
  */
  readonly apiGroup?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#kind DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_group: cdktf.stringToTerraform(struct!.apiGroup),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_group: {
      value: cdktf.stringToHclTerraform(struct!.apiGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiGroup = this._apiGroup;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiGroup = undefined;
      this._kind = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiGroup = value.apiGroup;
      this._kind = value.kind;
      this._name = value.name;
    }
  }

  // api_group - computed: false, optional: true, required: false
  private _apiGroup?: string; 
  public get apiGroup() {
    return this.getStringAttribute('api_group');
  }
  public set apiGroup(value: string) {
    this._apiGroup = value;
  }
  public resetApiGroup() {
    this._apiGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiGroupInput() {
    return this._apiGroup;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#string DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#string}
  */
  readonly string?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimitsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    string: cdktf.stringToTerraform(struct!.string),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimitsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    string: {
      value: cdktf.stringToHclTerraform(struct!.string),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimitsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._string !== undefined) {
      hasAnyValues = true;
      internalValueResult.string = this._string;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._string = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._string = value.string;
    }
  }

  // string - computed: false, optional: true, required: false
  private _string?: string; 
  public get string() {
    return this.getStringAttribute('string');
  }
  public set string(value: string) {
    this._string = value;
  }
  public resetString() {
    this._string = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stringInput() {
    return this._string;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#string DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#string}
  */
  readonly string?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequestsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    string: cdktf.stringToTerraform(struct!.string),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequestsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    string: {
      value: cdktf.stringToHclTerraform(struct!.string),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequestsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._string !== undefined) {
      hasAnyValues = true;
      internalValueResult.string = this._string;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._string = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._string = value.string;
    }
  }

  // string - computed: false, optional: true, required: false
  private _string?: string; 
  public get string() {
    return this.getStringAttribute('string');
  }
  public set string(value: string) {
    this._string = value;
  }
  public resetString() {
    this._string = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stringInput() {
    return this._string;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#limits DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#limits}
  */
  readonly limits?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#requests DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#requests}
  */
  readonly requests?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    limits: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimitsToTerraform(struct!.limits),
    requests: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequestsToTerraform(struct!.requests),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    limits: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimitsToHclTerraform(struct!.limits),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits",
    },
    requests: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequestsToHclTerraform(struct!.requests),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._limits?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.limits = this._limits?.internalValue;
    }
    if (this._requests?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requests = this._requests?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._limits.internalValue = undefined;
      this._requests.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._limits.internalValue = value.limits;
      this._requests.internalValue = value.requests;
    }
  }

  // limits - computed: false, optional: true, required: false
  private _limits = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimitsOutputReference(this, "limits");
  public get limits() {
    return this._limits;
  }
  public putLimits(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesLimits) {
    this._limits.internalValue = value;
  }
  public resetLimits() {
    this._limits.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitsInput() {
    return this._limits.internalValue;
  }

  // requests - computed: false, optional: true, required: false
  private _requests = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequestsOutputReference(this, "requests");
  public get requests() {
    return this._requests;
  }
  public putRequests(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesRequests) {
    this._requests.internalValue = value;
  }
  public resetRequests() {
    this._requests.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestsInput() {
    return this._requests.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#operator DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#values DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_expressions DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#match_labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#access_modes DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#access_modes}
  */
  readonly accessModes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#data_source DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#data_source}
  */
  readonly dataSource?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#data_source_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#data_source_ref}
  */
  readonly dataSourceRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resources DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resources}
  */
  readonly resources?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#selector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#selector}
  */
  readonly selector?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#storage_class_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#storage_class_name}
  */
  readonly storageClassName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_mode}
  */
  readonly volumeMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_name}
  */
  readonly volumeName?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_modes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.accessModes),
    data_source: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceToTerraform(struct!.dataSource),
    data_source_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRefToTerraform(struct!.dataSourceRef),
    resources: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesToTerraform(struct!.resources),
    selector: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorToTerraform(struct!.selector),
    storage_class_name: cdktf.stringToTerraform(struct!.storageClassName),
    volume_mode: cdktf.stringToTerraform(struct!.volumeMode),
    volume_name: cdktf.stringToTerraform(struct!.volumeName),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_modes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.accessModes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    data_source: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceToHclTerraform(struct!.dataSource),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource",
    },
    data_source_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRefToHclTerraform(struct!.dataSourceRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef",
    },
    resources: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesToHclTerraform(struct!.resources),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources",
    },
    selector: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector",
    },
    storage_class_name: {
      value: cdktf.stringToHclTerraform(struct!.storageClassName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_mode: {
      value: cdktf.stringToHclTerraform(struct!.volumeMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_name: {
      value: cdktf.stringToHclTerraform(struct!.volumeName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessModes !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessModes = this._accessModes;
    }
    if (this._dataSource?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSource = this._dataSource?.internalValue;
    }
    if (this._dataSourceRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSourceRef = this._dataSourceRef?.internalValue;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._storageClassName !== undefined) {
      hasAnyValues = true;
      internalValueResult.storageClassName = this._storageClassName;
    }
    if (this._volumeMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeMode = this._volumeMode;
    }
    if (this._volumeName !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeName = this._volumeName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessModes = undefined;
      this._dataSource.internalValue = undefined;
      this._dataSourceRef.internalValue = undefined;
      this._resources.internalValue = undefined;
      this._selector.internalValue = undefined;
      this._storageClassName = undefined;
      this._volumeMode = undefined;
      this._volumeName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessModes = value.accessModes;
      this._dataSource.internalValue = value.dataSource;
      this._dataSourceRef.internalValue = value.dataSourceRef;
      this._resources.internalValue = value.resources;
      this._selector.internalValue = value.selector;
      this._storageClassName = value.storageClassName;
      this._volumeMode = value.volumeMode;
      this._volumeName = value.volumeName;
    }
  }

  // access_modes - computed: false, optional: true, required: false
  private _accessModes?: string[]; 
  public get accessModes() {
    return this.getListAttribute('access_modes');
  }
  public set accessModes(value: string[]) {
    this._accessModes = value;
  }
  public resetAccessModes() {
    this._accessModes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessModesInput() {
    return this._accessModes;
  }

  // data_source - computed: false, optional: true, required: false
  private _dataSource = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceOutputReference(this, "data_source");
  public get dataSource() {
    return this._dataSource;
  }
  public putDataSource(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSource) {
    this._dataSource.internalValue = value;
  }
  public resetDataSource() {
    this._dataSource.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceInput() {
    return this._dataSource.internalValue;
  }

  // data_source_ref - computed: false, optional: true, required: false
  private _dataSourceRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRefOutputReference(this, "data_source_ref");
  public get dataSourceRef() {
    return this._dataSourceRef;
  }
  public putDataSourceRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecDataSourceRef) {
    this._dataSourceRef.internalValue = value;
  }
  public resetDataSourceRef() {
    this._dataSourceRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceRefInput() {
    return this._dataSourceRef.internalValue;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResourcesOutputReference(this, "resources");
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecResources) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // selector - computed: false, optional: true, required: false
  private _selector = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecSelector) {
    this._selector.internalValue = value;
  }
  public resetSelector() {
    this._selector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // storage_class_name - computed: false, optional: true, required: false
  private _storageClassName?: string; 
  public get storageClassName() {
    return this.getStringAttribute('storage_class_name');
  }
  public set storageClassName(value: string) {
    this._storageClassName = value;
  }
  public resetStorageClassName() {
    this._storageClassName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storageClassNameInput() {
    return this._storageClassName;
  }

  // volume_mode - computed: false, optional: true, required: false
  private _volumeMode?: string; 
  public get volumeMode() {
    return this.getStringAttribute('volume_mode');
  }
  public set volumeMode(value: string) {
    this._volumeMode = value;
  }
  public resetVolumeMode() {
    this._volumeMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeModeInput() {
    return this._volumeMode;
  }

  // volume_name - computed: false, optional: true, required: false
  private _volumeName?: string; 
  public get volumeName() {
    return this.getStringAttribute('volume_name');
  }
  public set volumeName(value: string) {
    this._volumeName = value;
  }
  public resetVolumeName() {
    this._volumeName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNameInput() {
    return this._volumeName;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplate {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#metadata DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#spec DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataToTerraform(struct!.metadata),
    spec: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecToTerraform(struct!.spec),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata",
    },
    spec: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeral {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_claim_template DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_claim_template}
  */
  readonly volumeClaimTemplate?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplate;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeral | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    volume_claim_template: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateToTerraform(struct!.volumeClaimTemplate),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeral | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    volume_claim_template: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateToHclTerraform(struct!.volumeClaimTemplate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplate",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeral | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._volumeClaimTemplate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeClaimTemplate = this._volumeClaimTemplate?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeral | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._volumeClaimTemplate.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._volumeClaimTemplate.internalValue = value.volumeClaimTemplate;
    }
  }

  // volume_claim_template - computed: false, optional: true, required: false
  private _volumeClaimTemplate = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplateOutputReference(this, "volume_claim_template");
  public get volumeClaimTemplate() {
    return this._volumeClaimTemplate;
  }
  public putVolumeClaimTemplate(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralVolumeClaimTemplate) {
    this._volumeClaimTemplate.internalValue = value;
  }
  public resetVolumeClaimTemplate() {
    this._volumeClaimTemplate.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeClaimTemplateInput() {
    return this._volumeClaimTemplate.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFc {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#lun DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#lun}
  */
  readonly lun?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#target_ww_ns DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#target_ww_ns}
  */
  readonly targetWwNs?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#wwids DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#wwids}
  */
  readonly wwids?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFcToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    lun: cdktf.numberToTerraform(struct!.lun),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    target_ww_ns: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.targetWwNs),
    wwids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.wwids),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFcToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    lun: {
      value: cdktf.numberToHclTerraform(struct!.lun),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    target_ww_ns: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.targetWwNs),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    wwids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.wwids),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._lun !== undefined) {
      hasAnyValues = true;
      internalValueResult.lun = this._lun;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._targetWwNs !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetWwNs = this._targetWwNs;
    }
    if (this._wwids !== undefined) {
      hasAnyValues = true;
      internalValueResult.wwids = this._wwids;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._lun = undefined;
      this._readOnly = undefined;
      this._targetWwNs = undefined;
      this._wwids = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._lun = value.lun;
      this._readOnly = value.readOnly;
      this._targetWwNs = value.targetWwNs;
      this._wwids = value.wwids;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // lun - computed: false, optional: true, required: false
  private _lun?: number; 
  public get lun() {
    return this.getNumberAttribute('lun');
  }
  public set lun(value: number) {
    this._lun = value;
  }
  public resetLun() {
    this._lun = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lunInput() {
    return this._lun;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // target_ww_ns - computed: false, optional: true, required: false
  private _targetWwNs?: string[]; 
  public get targetWwNs() {
    return this.getListAttribute('target_ww_ns');
  }
  public set targetWwNs(value: string[]) {
    this._targetWwNs = value;
  }
  public resetTargetWwNs() {
    this._targetWwNs = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetWwNsInput() {
    return this._targetWwNs;
  }

  // wwids - computed: false, optional: true, required: false
  private _wwids?: string[]; 
  public get wwids() {
    return this.getListAttribute('wwids');
  }
  public set wwids(value: string[]) {
    this._wwids = value;
  }
  public resetWwids() {
    this._wwids = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get wwidsInput() {
    return this._wwids;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolume {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#driver DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#driver}
  */
  readonly driver?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#options DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#options}
  */
  readonly options?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeSecretRef;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    driver: cdktf.stringToTerraform(struct!.driver),
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    options: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.options),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeSecretRefToTerraform(struct!.secretRef),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    driver: {
      value: cdktf.stringToHclTerraform(struct!.driver),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    options: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.options),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeSecretRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolume | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._driver !== undefined) {
      hasAnyValues = true;
      internalValueResult.driver = this._driver;
    }
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._options !== undefined) {
      hasAnyValues = true;
      internalValueResult.options = this._options;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolume | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._driver = undefined;
      this._fsType = undefined;
      this._options = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._driver = value.driver;
      this._fsType = value.fsType;
      this._options = value.options;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
    }
  }

  // driver - computed: false, optional: true, required: false
  private _driver?: string; 
  public get driver() {
    return this.getStringAttribute('driver');
  }
  public set driver(value: string) {
    this._driver = value;
  }
  public resetDriver() {
    this._driver = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get driverInput() {
    return this._driver;
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // options - computed: false, optional: true, required: false
  private _options?: { [key: string]: string }; 
  public get options() {
    return this.getStringMapAttribute('options');
  }
  public set options(value: { [key: string]: string }) {
    this._options = value;
  }
  public resetOptions() {
    this._options = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionsInput() {
    return this._options;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlocker {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#dataset_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#dataset_name}
  */
  readonly datasetName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#dataset_uuid DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#dataset_uuid}
  */
  readonly datasetUuid?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlockerToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlocker | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dataset_name: cdktf.stringToTerraform(struct!.datasetName),
    dataset_uuid: cdktf.stringToTerraform(struct!.datasetUuid),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlockerToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlocker | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dataset_name: {
      value: cdktf.stringToHclTerraform(struct!.datasetName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dataset_uuid: {
      value: cdktf.stringToHclTerraform(struct!.datasetUuid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlockerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlocker | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._datasetName !== undefined) {
      hasAnyValues = true;
      internalValueResult.datasetName = this._datasetName;
    }
    if (this._datasetUuid !== undefined) {
      hasAnyValues = true;
      internalValueResult.datasetUuid = this._datasetUuid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlocker | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._datasetName = undefined;
      this._datasetUuid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._datasetName = value.datasetName;
      this._datasetUuid = value.datasetUuid;
    }
  }

  // dataset_name - computed: false, optional: true, required: false
  private _datasetName?: string; 
  public get datasetName() {
    return this.getStringAttribute('dataset_name');
  }
  public set datasetName(value: string) {
    this._datasetName = value;
  }
  public resetDatasetName() {
    this._datasetName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get datasetNameInput() {
    return this._datasetName;
  }

  // dataset_uuid - computed: false, optional: true, required: false
  private _datasetUuid?: string; 
  public get datasetUuid() {
    return this.getStringAttribute('dataset_uuid');
  }
  public set datasetUuid(value: string) {
    this._datasetUuid = value;
  }
  public resetDatasetUuid() {
    this._datasetUuid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get datasetUuidInput() {
    return this._datasetUuid;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGcePersistentDisk {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#partition DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#partition}
  */
  readonly partition?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pd_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pd_name}
  */
  readonly pdName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGcePersistentDiskToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGcePersistentDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    partition: cdktf.numberToTerraform(struct!.partition),
    pd_name: cdktf.stringToTerraform(struct!.pdName),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGcePersistentDiskToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGcePersistentDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    partition: {
      value: cdktf.numberToHclTerraform(struct!.partition),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    pd_name: {
      value: cdktf.stringToHclTerraform(struct!.pdName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGcePersistentDiskOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGcePersistentDisk | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._partition !== undefined) {
      hasAnyValues = true;
      internalValueResult.partition = this._partition;
    }
    if (this._pdName !== undefined) {
      hasAnyValues = true;
      internalValueResult.pdName = this._pdName;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGcePersistentDisk | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._partition = undefined;
      this._pdName = undefined;
      this._readOnly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._partition = value.partition;
      this._pdName = value.pdName;
      this._readOnly = value.readOnly;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // partition - computed: false, optional: true, required: false
  private _partition?: number; 
  public get partition() {
    return this.getNumberAttribute('partition');
  }
  public set partition(value: number) {
    this._partition = value;
  }
  public resetPartition() {
    this._partition = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partitionInput() {
    return this._partition;
  }

  // pd_name - computed: false, optional: true, required: false
  private _pdName?: string; 
  public get pdName() {
    return this.getStringAttribute('pd_name');
  }
  public set pdName(value: string) {
    this._pdName = value;
  }
  public resetPdName() {
    this._pdName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pdNameInput() {
    return this._pdName;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGitRepo {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#directory DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#directory}
  */
  readonly directory?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#repository DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#repository}
  */
  readonly repository?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#revision DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#revision}
  */
  readonly revision?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGitRepoToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGitRepo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    directory: cdktf.stringToTerraform(struct!.directory),
    repository: cdktf.stringToTerraform(struct!.repository),
    revision: cdktf.stringToTerraform(struct!.revision),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGitRepoToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGitRepo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    directory: {
      value: cdktf.stringToHclTerraform(struct!.directory),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    repository: {
      value: cdktf.stringToHclTerraform(struct!.repository),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    revision: {
      value: cdktf.stringToHclTerraform(struct!.revision),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGitRepoOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGitRepo | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._directory !== undefined) {
      hasAnyValues = true;
      internalValueResult.directory = this._directory;
    }
    if (this._repository !== undefined) {
      hasAnyValues = true;
      internalValueResult.repository = this._repository;
    }
    if (this._revision !== undefined) {
      hasAnyValues = true;
      internalValueResult.revision = this._revision;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGitRepo | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._directory = undefined;
      this._repository = undefined;
      this._revision = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._directory = value.directory;
      this._repository = value.repository;
      this._revision = value.revision;
    }
  }

  // directory - computed: false, optional: true, required: false
  private _directory?: string; 
  public get directory() {
    return this.getStringAttribute('directory');
  }
  public set directory(value: string) {
    this._directory = value;
  }
  public resetDirectory() {
    this._directory = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directoryInput() {
    return this._directory;
  }

  // repository - computed: false, optional: true, required: false
  private _repository?: string; 
  public get repository() {
    return this.getStringAttribute('repository');
  }
  public set repository(value: string) {
    this._repository = value;
  }
  public resetRepository() {
    this._repository = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get repositoryInput() {
    return this._repository;
  }

  // revision - computed: false, optional: true, required: false
  private _revision?: string; 
  public get revision() {
    return this.getStringAttribute('revision');
  }
  public set revision(value: string) {
    this._revision = value;
  }
  public resetRevision() {
    this._revision = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get revisionInput() {
    return this._revision;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGlusterfs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#endpoints DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#endpoints}
  */
  readonly endpoints?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGlusterfsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGlusterfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    endpoints: cdktf.stringToTerraform(struct!.endpoints),
    path: cdktf.stringToTerraform(struct!.path),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGlusterfsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGlusterfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    endpoints: {
      value: cdktf.stringToHclTerraform(struct!.endpoints),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGlusterfsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGlusterfs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._endpoints !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoints = this._endpoints;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGlusterfs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._endpoints = undefined;
      this._path = undefined;
      this._readOnly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._endpoints = value.endpoints;
      this._path = value.path;
      this._readOnly = value.readOnly;
    }
  }

  // endpoints - computed: false, optional: true, required: false
  private _endpoints?: string; 
  public get endpoints() {
    return this.getStringAttribute('endpoints');
  }
  public set endpoints(value: string) {
    this._endpoints = value;
  }
  public resetEndpoints() {
    this._endpoints = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointsInput() {
    return this._endpoints;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceHostPath {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceHostPathToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceHostPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    path: cdktf.stringToTerraform(struct!.path),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceHostPathToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceHostPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceHostPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceHostPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceHostPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._path = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._path = value.path;
      this._type = value.type;
    }
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsi {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#chap_auth_discovery DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#chap_auth_discovery}
  */
  readonly chapAuthDiscovery?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#chap_auth_session DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#chap_auth_session}
  */
  readonly chapAuthSession?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#initiator_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#initiator_name}
  */
  readonly initiatorName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#iqn DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#iqn}
  */
  readonly iqn?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#iscsi_interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#iscsi_interface}
  */
  readonly iscsiInterface?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#lun DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#lun}
  */
  readonly lun?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#portals DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#portals}
  */
  readonly portals?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiSecretRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#target_portal DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#target_portal}
  */
  readonly targetPortal?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    chap_auth_discovery: cdktf.booleanToTerraform(struct!.chapAuthDiscovery),
    chap_auth_session: cdktf.booleanToTerraform(struct!.chapAuthSession),
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    initiator_name: cdktf.stringToTerraform(struct!.initiatorName),
    iqn: cdktf.stringToTerraform(struct!.iqn),
    iscsi_interface: cdktf.stringToTerraform(struct!.iscsiInterface),
    lun: cdktf.numberToTerraform(struct!.lun),
    portals: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.portals),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiSecretRefToTerraform(struct!.secretRef),
    target_portal: cdktf.stringToTerraform(struct!.targetPortal),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    chap_auth_discovery: {
      value: cdktf.booleanToHclTerraform(struct!.chapAuthDiscovery),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    chap_auth_session: {
      value: cdktf.booleanToHclTerraform(struct!.chapAuthSession),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    initiator_name: {
      value: cdktf.stringToHclTerraform(struct!.initiatorName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    iqn: {
      value: cdktf.stringToHclTerraform(struct!.iqn),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    iscsi_interface: {
      value: cdktf.stringToHclTerraform(struct!.iscsiInterface),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    lun: {
      value: cdktf.numberToHclTerraform(struct!.lun),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    portals: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.portals),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiSecretRef",
    },
    target_portal: {
      value: cdktf.stringToHclTerraform(struct!.targetPortal),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._chapAuthDiscovery !== undefined) {
      hasAnyValues = true;
      internalValueResult.chapAuthDiscovery = this._chapAuthDiscovery;
    }
    if (this._chapAuthSession !== undefined) {
      hasAnyValues = true;
      internalValueResult.chapAuthSession = this._chapAuthSession;
    }
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._initiatorName !== undefined) {
      hasAnyValues = true;
      internalValueResult.initiatorName = this._initiatorName;
    }
    if (this._iqn !== undefined) {
      hasAnyValues = true;
      internalValueResult.iqn = this._iqn;
    }
    if (this._iscsiInterface !== undefined) {
      hasAnyValues = true;
      internalValueResult.iscsiInterface = this._iscsiInterface;
    }
    if (this._lun !== undefined) {
      hasAnyValues = true;
      internalValueResult.lun = this._lun;
    }
    if (this._portals !== undefined) {
      hasAnyValues = true;
      internalValueResult.portals = this._portals;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._targetPortal !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetPortal = this._targetPortal;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._chapAuthDiscovery = undefined;
      this._chapAuthSession = undefined;
      this._fsType = undefined;
      this._initiatorName = undefined;
      this._iqn = undefined;
      this._iscsiInterface = undefined;
      this._lun = undefined;
      this._portals = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
      this._targetPortal = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._chapAuthDiscovery = value.chapAuthDiscovery;
      this._chapAuthSession = value.chapAuthSession;
      this._fsType = value.fsType;
      this._initiatorName = value.initiatorName;
      this._iqn = value.iqn;
      this._iscsiInterface = value.iscsiInterface;
      this._lun = value.lun;
      this._portals = value.portals;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
      this._targetPortal = value.targetPortal;
    }
  }

  // chap_auth_discovery - computed: false, optional: true, required: false
  private _chapAuthDiscovery?: boolean | cdktf.IResolvable; 
  public get chapAuthDiscovery() {
    return this.getBooleanAttribute('chap_auth_discovery');
  }
  public set chapAuthDiscovery(value: boolean | cdktf.IResolvable) {
    this._chapAuthDiscovery = value;
  }
  public resetChapAuthDiscovery() {
    this._chapAuthDiscovery = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get chapAuthDiscoveryInput() {
    return this._chapAuthDiscovery;
  }

  // chap_auth_session - computed: false, optional: true, required: false
  private _chapAuthSession?: boolean | cdktf.IResolvable; 
  public get chapAuthSession() {
    return this.getBooleanAttribute('chap_auth_session');
  }
  public set chapAuthSession(value: boolean | cdktf.IResolvable) {
    this._chapAuthSession = value;
  }
  public resetChapAuthSession() {
    this._chapAuthSession = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get chapAuthSessionInput() {
    return this._chapAuthSession;
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // initiator_name - computed: false, optional: true, required: false
  private _initiatorName?: string; 
  public get initiatorName() {
    return this.getStringAttribute('initiator_name');
  }
  public set initiatorName(value: string) {
    this._initiatorName = value;
  }
  public resetInitiatorName() {
    this._initiatorName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get initiatorNameInput() {
    return this._initiatorName;
  }

  // iqn - computed: false, optional: true, required: false
  private _iqn?: string; 
  public get iqn() {
    return this.getStringAttribute('iqn');
  }
  public set iqn(value: string) {
    this._iqn = value;
  }
  public resetIqn() {
    this._iqn = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iqnInput() {
    return this._iqn;
  }

  // iscsi_interface - computed: false, optional: true, required: false
  private _iscsiInterface?: string; 
  public get iscsiInterface() {
    return this.getStringAttribute('iscsi_interface');
  }
  public set iscsiInterface(value: string) {
    this._iscsiInterface = value;
  }
  public resetIscsiInterface() {
    this._iscsiInterface = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iscsiInterfaceInput() {
    return this._iscsiInterface;
  }

  // lun - computed: false, optional: true, required: false
  private _lun?: number; 
  public get lun() {
    return this.getNumberAttribute('lun');
  }
  public set lun(value: number) {
    this._lun = value;
  }
  public resetLun() {
    this._lun = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lunInput() {
    return this._lun;
  }

  // portals - computed: false, optional: true, required: false
  private _portals?: string[]; 
  public get portals() {
    return this.getListAttribute('portals');
  }
  public set portals(value: string[]) {
    this._portals = value;
  }
  public resetPortals() {
    this._portals = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portalsInput() {
    return this._portals;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // target_portal - computed: false, optional: true, required: false
  private _targetPortal?: string; 
  public get targetPortal() {
    return this.getStringAttribute('target_portal');
  }
  public set targetPortal(value: string) {
    this._targetPortal = value;
  }
  public resetTargetPortal() {
    this._targetPortal = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetPortalInput() {
    return this._targetPortal;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceNfs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#server DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#server}
  */
  readonly server?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceNfsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceNfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    path: cdktf.stringToTerraform(struct!.path),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    server: cdktf.stringToTerraform(struct!.server),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceNfsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceNfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    server: {
      value: cdktf.stringToHclTerraform(struct!.server),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceNfsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceNfs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._server !== undefined) {
      hasAnyValues = true;
      internalValueResult.server = this._server;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceNfs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._path = undefined;
      this._readOnly = undefined;
      this._server = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._path = value.path;
      this._readOnly = value.readOnly;
      this._server = value.server;
    }
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // server - computed: false, optional: true, required: false
  private _server?: string; 
  public get server() {
    return this.getStringAttribute('server');
  }
  public set server(value: string) {
    this._server = value;
  }
  public resetServer() {
    this._server = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serverInput() {
    return this._server;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePersistentVolumeClaim {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#claim_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#claim_name}
  */
  readonly claimName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePersistentVolumeClaimToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePersistentVolumeClaim | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    claim_name: cdktf.stringToTerraform(struct!.claimName),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePersistentVolumeClaimToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePersistentVolumeClaim | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    claim_name: {
      value: cdktf.stringToHclTerraform(struct!.claimName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePersistentVolumeClaimOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePersistentVolumeClaim | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._claimName !== undefined) {
      hasAnyValues = true;
      internalValueResult.claimName = this._claimName;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePersistentVolumeClaim | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._claimName = undefined;
      this._readOnly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._claimName = value.claimName;
      this._readOnly = value.readOnly;
    }
  }

  // claim_name - computed: false, optional: true, required: false
  private _claimName?: string; 
  public get claimName() {
    return this.getStringAttribute('claim_name');
  }
  public set claimName(value: string) {
    this._claimName = value;
  }
  public resetClaimName() {
    this._claimName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get claimNameInput() {
    return this._claimName;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePhotonPersistentDisk {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pd_id DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pd_id}
  */
  readonly pdId?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePhotonPersistentDiskToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePhotonPersistentDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    pd_id: cdktf.stringToTerraform(struct!.pdId),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePhotonPersistentDiskToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePhotonPersistentDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pd_id: {
      value: cdktf.stringToHclTerraform(struct!.pdId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePhotonPersistentDiskOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePhotonPersistentDisk | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._pdId !== undefined) {
      hasAnyValues = true;
      internalValueResult.pdId = this._pdId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePhotonPersistentDisk | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._pdId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._pdId = value.pdId;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // pd_id - computed: false, optional: true, required: false
  private _pdId?: string; 
  public get pdId() {
    return this.getStringAttribute('pd_id');
  }
  public set pdId(value: string) {
    this._pdId = value;
  }
  public resetPdId() {
    this._pdId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pdIdInput() {
    return this._pdId;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePortworxVolume {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_id DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_id}
  */
  readonly volumeId?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePortworxVolumeToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePortworxVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    volume_id: cdktf.stringToTerraform(struct!.volumeId),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePortworxVolumeToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePortworxVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    volume_id: {
      value: cdktf.stringToHclTerraform(struct!.volumeId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePortworxVolumeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePortworxVolume | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._volumeId !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeId = this._volumeId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePortworxVolume | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._readOnly = undefined;
      this._volumeId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._readOnly = value.readOnly;
      this._volumeId = value.volumeId;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // volume_id - computed: false, optional: true, required: false
  private _volumeId?: string; 
  public get volumeId() {
    return this.getStringAttribute('volume_id');
  }
  public set volumeId(value: string) {
    this._volumeId = value;
  }
  public resetVolumeId() {
    this._volumeId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeIdInput() {
    return this._volumeId;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItems {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItemsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItemsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._mode = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._mode = value.mode;
      this._path = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItemsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReferenceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReferenceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReferenceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMap {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#items DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItems[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#local_object_reference DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#local_object_reference}
  */
  readonly localObjectReference?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#optional DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    items: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItemsToTerraform, false)(struct!.items),
    local_object_reference: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReferenceToTerraform(struct!.localObjectReference),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    items: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItemsList",
    },
    local_object_reference: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReferenceToHclTerraform(struct!.localObjectReference),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMap | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    if (this._localObjectReference?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.localObjectReference = this._localObjectReference?.internalValue;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMap | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._items.internalValue = undefined;
      this._localObjectReference.internalValue = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._items.internalValue = value.items;
      this._localObjectReference.internalValue = value.localObjectReference;
      this._optional = value.optional;
    }
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }

  // local_object_reference - computed: false, optional: true, required: false
  private _localObjectReference = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReferenceOutputReference(this, "local_object_reference");
  public get localObjectReference() {
    return this._localObjectReference;
  }
  public putLocalObjectReference(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapLocalObjectReference) {
    this._localObjectReference.internalValue = value;
  }
  public resetLocalObjectReference() {
    this._localObjectReference.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localObjectReferenceInput() {
    return this._localObjectReference.internalValue;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#api_version DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#field_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#field_path}
  */
  readonly fieldPath?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    field_path: cdktf.stringToTerraform(struct!.fieldPath),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    field_path: {
      value: cdktf.stringToHclTerraform(struct!.fieldPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldPath = this._fieldPath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldPath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldPath = value.fieldPath;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // field_path - computed: false, optional: true, required: false
  private _fieldPath?: string; 
  public get fieldPath() {
    return this.getStringAttribute('field_path');
  }
  public set fieldPath(value: string) {
    this._fieldPath = value;
  }
  public resetFieldPath() {
    this._fieldPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldPathInput() {
    return this._fieldPath;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#container_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#container_name}
  */
  readonly containerName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#divisor DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#divisor}
  */
  readonly divisor?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resource DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resource}
  */
  readonly resource?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_name: cdktf.stringToTerraform(struct!.containerName),
    divisor: cdktf.stringToTerraform(struct!.divisor),
    resource: cdktf.stringToTerraform(struct!.resource),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_name: {
      value: cdktf.stringToHclTerraform(struct!.containerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    divisor: {
      value: cdktf.stringToHclTerraform(struct!.divisor),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerName = this._containerName;
    }
    if (this._divisor !== undefined) {
      hasAnyValues = true;
      internalValueResult.divisor = this._divisor;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerName = undefined;
      this._divisor = undefined;
      this._resource = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerName = value.containerName;
      this._divisor = value.divisor;
      this._resource = value.resource;
    }
  }

  // container_name - computed: false, optional: true, required: false
  private _containerName?: string; 
  public get containerName() {
    return this.getStringAttribute('container_name');
  }
  public set containerName(value: string) {
    this._containerName = value;
  }
  public resetContainerName() {
    this._containerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNameInput() {
    return this._containerName;
  }

  // divisor - computed: false, optional: true, required: false
  private _divisor?: string; 
  public get divisor() {
    return this.getStringAttribute('divisor');
  }
  public set divisor(value: string) {
    this._divisor = value;
  }
  public resetDivisor() {
    this._divisor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get divisorInput() {
    return this._divisor;
  }

  // resource - computed: false, optional: true, required: false
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  public resetResource() {
    this._resource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItems {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#field_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#field_ref}
  */
  readonly fieldRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resource_field_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resource_field_ref}
  */
  readonly resourceFieldRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    field_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRefToTerraform(struct!.fieldRef),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
    resource_field_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRefToTerraform(struct!.resourceFieldRef),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    field_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRefToHclTerraform(struct!.fieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_field_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRefToHclTerraform(struct!.resourceFieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldRef = this._fieldRef?.internalValue;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._resourceFieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceFieldRef = this._resourceFieldRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fieldRef.internalValue = undefined;
      this._mode = undefined;
      this._path = undefined;
      this._resourceFieldRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fieldRef.internalValue = value.fieldRef;
      this._mode = value.mode;
      this._path = value.path;
      this._resourceFieldRef.internalValue = value.resourceFieldRef;
    }
  }

  // field_ref - computed: false, optional: true, required: false
  private _fieldRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRefOutputReference(this, "field_ref");
  public get fieldRef() {
    return this._fieldRef;
  }
  public putFieldRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsFieldRef) {
    this._fieldRef.internalValue = value;
  }
  public resetFieldRef() {
    this._fieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldRefInput() {
    return this._fieldRef.internalValue;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // resource_field_ref - computed: false, optional: true, required: false
  private _resourceFieldRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRefOutputReference(this, "resource_field_ref");
  public get resourceFieldRef() {
    return this._resourceFieldRef;
  }
  public putResourceFieldRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsResourceFieldRef) {
    this._resourceFieldRef.internalValue = value;
  }
  public resetResourceFieldRef() {
    this._resourceFieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceFieldRefInput() {
    return this._resourceFieldRef.internalValue;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApi {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#items DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItems[] | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    items: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsToTerraform, false)(struct!.items),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    items: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._items.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._items.internalValue = value.items;
    }
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItems {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItemsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItemsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._mode = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._mode = value.mode;
      this._path = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItemsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretLocalObjectReferenceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretLocalObjectReferenceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretLocalObjectReferenceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecret {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#items DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItems[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#local_object_reference DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#local_object_reference}
  */
  readonly localObjectReference?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#optional DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    items: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItemsToTerraform, false)(struct!.items),
    local_object_reference: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretLocalObjectReferenceToTerraform(struct!.localObjectReference),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    items: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItemsList",
    },
    local_object_reference: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretLocalObjectReferenceToHclTerraform(struct!.localObjectReference),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecret | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    if (this._localObjectReference?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.localObjectReference = this._localObjectReference?.internalValue;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecret | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._items.internalValue = undefined;
      this._localObjectReference.internalValue = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._items.internalValue = value.items;
      this._localObjectReference.internalValue = value.localObjectReference;
      this._optional = value.optional;
    }
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }

  // local_object_reference - computed: false, optional: true, required: false
  private _localObjectReference = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretLocalObjectReferenceOutputReference(this, "local_object_reference");
  public get localObjectReference() {
    return this._localObjectReference;
  }
  public putLocalObjectReference(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretLocalObjectReference) {
    this._localObjectReference.internalValue = value;
  }
  public resetLocalObjectReference() {
    this._localObjectReference.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localObjectReferenceInput() {
    return this._localObjectReference.internalValue;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesServiceAccountToken {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#audience DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#audience}
  */
  readonly audience?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#expiration_seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#expiration_seconds}
  */
  readonly expirationSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesServiceAccountTokenToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesServiceAccountToken | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    audience: cdktf.stringToTerraform(struct!.audience),
    expiration_seconds: cdktf.numberToTerraform(struct!.expirationSeconds),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesServiceAccountTokenToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesServiceAccountToken | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    audience: {
      value: cdktf.stringToHclTerraform(struct!.audience),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    expiration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.expirationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesServiceAccountTokenOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesServiceAccountToken | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._audience !== undefined) {
      hasAnyValues = true;
      internalValueResult.audience = this._audience;
    }
    if (this._expirationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.expirationSeconds = this._expirationSeconds;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesServiceAccountToken | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._audience = undefined;
      this._expirationSeconds = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._audience = value.audience;
      this._expirationSeconds = value.expirationSeconds;
      this._path = value.path;
    }
  }

  // audience - computed: false, optional: true, required: false
  private _audience?: string; 
  public get audience() {
    return this.getStringAttribute('audience');
  }
  public set audience(value: string) {
    this._audience = value;
  }
  public resetAudience() {
    this._audience = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get audienceInput() {
    return this._audience;
  }

  // expiration_seconds - computed: false, optional: true, required: false
  private _expirationSeconds?: number; 
  public get expirationSeconds() {
    return this.getNumberAttribute('expiration_seconds');
  }
  public set expirationSeconds(value: number) {
    this._expirationSeconds = value;
  }
  public resetExpirationSeconds() {
    this._expirationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expirationSecondsInput() {
    return this._expirationSeconds;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSources {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#config_map DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#config_map}
  */
  readonly configMap?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMap;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#downward_api DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#downward_api}
  */
  readonly downwardApi?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApi;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret}
  */
  readonly secret?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecret;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#service_account_token DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#service_account_token}
  */
  readonly serviceAccountToken?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesServiceAccountToken;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config_map: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapToTerraform(struct!.configMap),
    downward_api: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiToTerraform(struct!.downwardApi),
    secret: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretToTerraform(struct!.secret),
    service_account_token: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesServiceAccountTokenToTerraform(struct!.serviceAccountToken),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config_map: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapToHclTerraform(struct!.configMap),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMap",
    },
    downward_api: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiToHclTerraform(struct!.downwardApi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApi",
    },
    secret: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretToHclTerraform(struct!.secret),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecret",
    },
    service_account_token: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesServiceAccountTokenToHclTerraform(struct!.serviceAccountToken),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesServiceAccountToken",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configMap?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.configMap = this._configMap?.internalValue;
    }
    if (this._downwardApi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.downwardApi = this._downwardApi?.internalValue;
    }
    if (this._secret?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret?.internalValue;
    }
    if (this._serviceAccountToken?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountToken = this._serviceAccountToken?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configMap.internalValue = undefined;
      this._downwardApi.internalValue = undefined;
      this._secret.internalValue = undefined;
      this._serviceAccountToken.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configMap.internalValue = value.configMap;
      this._downwardApi.internalValue = value.downwardApi;
      this._secret.internalValue = value.secret;
      this._serviceAccountToken.internalValue = value.serviceAccountToken;
    }
  }

  // config_map - computed: false, optional: true, required: false
  private _configMap = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMapOutputReference(this, "config_map");
  public get configMap() {
    return this._configMap;
  }
  public putConfigMap(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesConfigMap) {
    this._configMap.internalValue = value;
  }
  public resetConfigMap() {
    this._configMap.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configMapInput() {
    return this._configMap.internalValue;
  }

  // downward_api - computed: false, optional: true, required: false
  private _downwardApi = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApiOutputReference(this, "downward_api");
  public get downwardApi() {
    return this._downwardApi;
  }
  public putDownwardApi(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesDownwardApi) {
    this._downwardApi.internalValue = value;
  }
  public resetDownwardApi() {
    this._downwardApi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get downwardApiInput() {
    return this._downwardApi.internalValue;
  }

  // secret - computed: false, optional: true, required: false
  private _secret = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecretOutputReference(this, "secret");
  public get secret() {
    return this._secret;
  }
  public putSecret(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesSecret) {
    this._secret.internalValue = value;
  }
  public resetSecret() {
    this._secret.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret.internalValue;
  }

  // service_account_token - computed: false, optional: true, required: false
  private _serviceAccountToken = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesServiceAccountTokenOutputReference(this, "service_account_token");
  public get serviceAccountToken() {
    return this._serviceAccountToken;
  }
  public putServiceAccountToken(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesServiceAccountToken) {
    this._serviceAccountToken.internalValue = value;
  }
  public resetServiceAccountToken() {
    this._serviceAccountToken.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountTokenInput() {
    return this._serviceAccountToken.internalValue;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSources[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjected {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#default_mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#default_mode}
  */
  readonly defaultMode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#sources DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#sources}
  */
  readonly sources?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSources[] | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjected | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_mode: cdktf.numberToTerraform(struct!.defaultMode),
    sources: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesToTerraform, false)(struct!.sources),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjected | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_mode: {
      value: cdktf.numberToHclTerraform(struct!.defaultMode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    sources: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesToHclTerraform, false)(struct!.sources),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjected | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultMode = this._defaultMode;
    }
    if (this._sources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sources = this._sources?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjected | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultMode = undefined;
      this._sources.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultMode = value.defaultMode;
      this._sources.internalValue = value.sources;
    }
  }

  // default_mode - computed: false, optional: true, required: false
  private _defaultMode?: number; 
  public get defaultMode() {
    return this.getNumberAttribute('default_mode');
  }
  public set defaultMode(value: number) {
    this._defaultMode = value;
  }
  public resetDefaultMode() {
    this._defaultMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultModeInput() {
    return this._defaultMode;
  }

  // sources - computed: false, optional: true, required: false
  private _sources = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSourcesList(this, "sources", false);
  public get sources() {
    return this._sources;
  }
  public putSources(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedSources[] | cdktf.IResolvable) {
    this._sources.internalValue = value;
  }
  public resetSources() {
    this._sources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourcesInput() {
    return this._sources.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceQuobyte {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#group DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#group}
  */
  readonly group?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#registry DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#registry}
  */
  readonly registry?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#tenant DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#tenant}
  */
  readonly tenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#user DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#user}
  */
  readonly user?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume}
  */
  readonly volume?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceQuobyteToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceQuobyte | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    group: cdktf.stringToTerraform(struct!.group),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    registry: cdktf.stringToTerraform(struct!.registry),
    tenant: cdktf.stringToTerraform(struct!.tenant),
    user: cdktf.stringToTerraform(struct!.user),
    volume: cdktf.stringToTerraform(struct!.volume),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceQuobyteToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceQuobyte | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    group: {
      value: cdktf.stringToHclTerraform(struct!.group),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    registry: {
      value: cdktf.stringToHclTerraform(struct!.registry),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tenant: {
      value: cdktf.stringToHclTerraform(struct!.tenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume: {
      value: cdktf.stringToHclTerraform(struct!.volume),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceQuobyteOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceQuobyte | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._group !== undefined) {
      hasAnyValues = true;
      internalValueResult.group = this._group;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._registry !== undefined) {
      hasAnyValues = true;
      internalValueResult.registry = this._registry;
    }
    if (this._tenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.tenant = this._tenant;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    if (this._volume !== undefined) {
      hasAnyValues = true;
      internalValueResult.volume = this._volume;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceQuobyte | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._group = undefined;
      this._readOnly = undefined;
      this._registry = undefined;
      this._tenant = undefined;
      this._user = undefined;
      this._volume = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._group = value.group;
      this._readOnly = value.readOnly;
      this._registry = value.registry;
      this._tenant = value.tenant;
      this._user = value.user;
      this._volume = value.volume;
    }
  }

  // group - computed: false, optional: true, required: false
  private _group?: string; 
  public get group() {
    return this.getStringAttribute('group');
  }
  public set group(value: string) {
    this._group = value;
  }
  public resetGroup() {
    this._group = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupInput() {
    return this._group;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // registry - computed: false, optional: true, required: false
  private _registry?: string; 
  public get registry() {
    return this.getStringAttribute('registry');
  }
  public set registry(value: string) {
    this._registry = value;
  }
  public resetRegistry() {
    this._registry = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get registryInput() {
    return this._registry;
  }

  // tenant - computed: false, optional: true, required: false
  private _tenant?: string; 
  public get tenant() {
    return this.getStringAttribute('tenant');
  }
  public set tenant(value: string) {
    this._tenant = value;
  }
  public resetTenant() {
    this._tenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tenantInput() {
    return this._tenant;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }

  // volume - computed: false, optional: true, required: false
  private _volume?: string; 
  public get volume() {
    return this.getStringAttribute('volume');
  }
  public set volume(value: string) {
    this._volume = value;
  }
  public resetVolume() {
    this._volume = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeInput() {
    return this._volume;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbd {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#image DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#keyring DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#keyring}
  */
  readonly keyring?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#monitors DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#monitors}
  */
  readonly monitors?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pool DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pool}
  */
  readonly pool?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdSecretRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#user DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#user}
  */
  readonly user?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    image: cdktf.stringToTerraform(struct!.image),
    keyring: cdktf.stringToTerraform(struct!.keyring),
    monitors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitors),
    pool: cdktf.stringToTerraform(struct!.pool),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdSecretRefToTerraform(struct!.secretRef),
    user: cdktf.stringToTerraform(struct!.user),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keyring: {
      value: cdktf.stringToHclTerraform(struct!.keyring),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    monitors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pool: {
      value: cdktf.stringToHclTerraform(struct!.pool),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdSecretRef",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbd | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._keyring !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyring = this._keyring;
    }
    if (this._monitors !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitors = this._monitors;
    }
    if (this._pool !== undefined) {
      hasAnyValues = true;
      internalValueResult.pool = this._pool;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbd | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._image = undefined;
      this._keyring = undefined;
      this._monitors = undefined;
      this._pool = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
      this._user = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._image = value.image;
      this._keyring = value.keyring;
      this._monitors = value.monitors;
      this._pool = value.pool;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
      this._user = value.user;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // keyring - computed: false, optional: true, required: false
  private _keyring?: string; 
  public get keyring() {
    return this.getStringAttribute('keyring');
  }
  public set keyring(value: string) {
    this._keyring = value;
  }
  public resetKeyring() {
    this._keyring = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyringInput() {
    return this._keyring;
  }

  // monitors - computed: false, optional: true, required: false
  private _monitors?: string[]; 
  public get monitors() {
    return this.getListAttribute('monitors');
  }
  public set monitors(value: string[]) {
    this._monitors = value;
  }
  public resetMonitors() {
    this._monitors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get monitorsInput() {
    return this._monitors;
  }

  // pool - computed: false, optional: true, required: false
  private _pool?: string; 
  public get pool() {
    return this.getStringAttribute('pool');
  }
  public set pool(value: string) {
    this._pool = value;
  }
  public resetPool() {
    this._pool = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get poolInput() {
    return this._pool;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIo {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#gateway DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#gateway}
  */
  readonly gateway?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#protection_domain DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#protection_domain}
  */
  readonly protectionDomain?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoSecretRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#ssl_enabled DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#ssl_enabled}
  */
  readonly sslEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#storage_mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#storage_mode}
  */
  readonly storageMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#storage_pool DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#storage_pool}
  */
  readonly storagePool?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#system DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#system}
  */
  readonly systemAttribute?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_name}
  */
  readonly volumeName?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    gateway: cdktf.stringToTerraform(struct!.gateway),
    protection_domain: cdktf.stringToTerraform(struct!.protectionDomain),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoSecretRefToTerraform(struct!.secretRef),
    ssl_enabled: cdktf.booleanToTerraform(struct!.sslEnabled),
    storage_mode: cdktf.stringToTerraform(struct!.storageMode),
    storage_pool: cdktf.stringToTerraform(struct!.storagePool),
    system: cdktf.stringToTerraform(struct!.systemAttribute),
    volume_name: cdktf.stringToTerraform(struct!.volumeName),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    gateway: {
      value: cdktf.stringToHclTerraform(struct!.gateway),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protection_domain: {
      value: cdktf.stringToHclTerraform(struct!.protectionDomain),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoSecretRef",
    },
    ssl_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.sslEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    storage_mode: {
      value: cdktf.stringToHclTerraform(struct!.storageMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    storage_pool: {
      value: cdktf.stringToHclTerraform(struct!.storagePool),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    system: {
      value: cdktf.stringToHclTerraform(struct!.systemAttribute),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_name: {
      value: cdktf.stringToHclTerraform(struct!.volumeName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIo | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._gateway !== undefined) {
      hasAnyValues = true;
      internalValueResult.gateway = this._gateway;
    }
    if (this._protectionDomain !== undefined) {
      hasAnyValues = true;
      internalValueResult.protectionDomain = this._protectionDomain;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._sslEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.sslEnabled = this._sslEnabled;
    }
    if (this._storageMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.storageMode = this._storageMode;
    }
    if (this._storagePool !== undefined) {
      hasAnyValues = true;
      internalValueResult.storagePool = this._storagePool;
    }
    if (this._system !== undefined) {
      hasAnyValues = true;
      internalValueResult.systemAttribute = this._system;
    }
    if (this._volumeName !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeName = this._volumeName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIo | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._gateway = undefined;
      this._protectionDomain = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
      this._sslEnabled = undefined;
      this._storageMode = undefined;
      this._storagePool = undefined;
      this._system = undefined;
      this._volumeName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._gateway = value.gateway;
      this._protectionDomain = value.protectionDomain;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
      this._sslEnabled = value.sslEnabled;
      this._storageMode = value.storageMode;
      this._storagePool = value.storagePool;
      this._system = value.systemAttribute;
      this._volumeName = value.volumeName;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // gateway - computed: false, optional: true, required: false
  private _gateway?: string; 
  public get gateway() {
    return this.getStringAttribute('gateway');
  }
  public set gateway(value: string) {
    this._gateway = value;
  }
  public resetGateway() {
    this._gateway = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gatewayInput() {
    return this._gateway;
  }

  // protection_domain - computed: false, optional: true, required: false
  private _protectionDomain?: string; 
  public get protectionDomain() {
    return this.getStringAttribute('protection_domain');
  }
  public set protectionDomain(value: string) {
    this._protectionDomain = value;
  }
  public resetProtectionDomain() {
    this._protectionDomain = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protectionDomainInput() {
    return this._protectionDomain;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // ssl_enabled - computed: false, optional: true, required: false
  private _sslEnabled?: boolean | cdktf.IResolvable; 
  public get sslEnabled() {
    return this.getBooleanAttribute('ssl_enabled');
  }
  public set sslEnabled(value: boolean | cdktf.IResolvable) {
    this._sslEnabled = value;
  }
  public resetSslEnabled() {
    this._sslEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sslEnabledInput() {
    return this._sslEnabled;
  }

  // storage_mode - computed: false, optional: true, required: false
  private _storageMode?: string; 
  public get storageMode() {
    return this.getStringAttribute('storage_mode');
  }
  public set storageMode(value: string) {
    this._storageMode = value;
  }
  public resetStorageMode() {
    this._storageMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storageModeInput() {
    return this._storageMode;
  }

  // storage_pool - computed: false, optional: true, required: false
  private _storagePool?: string; 
  public get storagePool() {
    return this.getStringAttribute('storage_pool');
  }
  public set storagePool(value: string) {
    this._storagePool = value;
  }
  public resetStoragePool() {
    this._storagePool = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storagePoolInput() {
    return this._storagePool;
  }

  // system - computed: false, optional: true, required: false
  private _system?: string; 
  public get systemAttribute() {
    return this.getStringAttribute('system');
  }
  public set systemAttribute(value: string) {
    this._system = value;
  }
  public resetSystemAttribute() {
    this._system = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get systemAttributeInput() {
    return this._system;
  }

  // volume_name - computed: false, optional: true, required: false
  private _volumeName?: string; 
  public get volumeName() {
    return this.getStringAttribute('volume_name');
  }
  public set volumeName(value: string) {
    this._volumeName = value;
  }
  public resetVolumeName() {
    this._volumeName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNameInput() {
    return this._volumeName;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItems {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#path}
  */
  readonly path?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItemsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItemsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._mode = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._mode = value.mode;
      this._path = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItemsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecret {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#default_mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#default_mode}
  */
  readonly defaultMode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#items DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItems[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#optional DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_name}
  */
  readonly secretName?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_mode: cdktf.numberToTerraform(struct!.defaultMode),
    items: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItemsToTerraform, false)(struct!.items),
    optional: cdktf.booleanToTerraform(struct!.optional),
    secret_name: cdktf.stringToTerraform(struct!.secretName),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_mode: {
      value: cdktf.numberToHclTerraform(struct!.defaultMode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    items: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItemsList",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecret | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultMode = this._defaultMode;
    }
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecret | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultMode = undefined;
      this._items.internalValue = undefined;
      this._optional = undefined;
      this._secretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultMode = value.defaultMode;
      this._items.internalValue = value.items;
      this._optional = value.optional;
      this._secretName = value.secretName;
    }
  }

  // default_mode - computed: false, optional: true, required: false
  private _defaultMode?: number; 
  public get defaultMode() {
    return this.getNumberAttribute('default_mode');
  }
  public set defaultMode(value: number) {
    this._defaultMode = value;
  }
  public resetDefaultMode() {
    this._defaultMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultModeInput() {
    return this._defaultMode;
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }

  // secret_name - computed: false, optional: true, required: false
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  public resetSecretName() {
    this._secretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosSecretRefToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosSecretRefToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageos {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#read_only DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret_ref DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosSecretRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_name}
  */
  readonly volumeName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_namespace DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_namespace}
  */
  readonly volumeNamespace?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosSecretRefToTerraform(struct!.secretRef),
    volume_name: cdktf.stringToTerraform(struct!.volumeName),
    volume_namespace: cdktf.stringToTerraform(struct!.volumeNamespace),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosSecretRef",
    },
    volume_name: {
      value: cdktf.stringToHclTerraform(struct!.volumeName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_namespace: {
      value: cdktf.stringToHclTerraform(struct!.volumeNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._volumeName !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeName = this._volumeName;
    }
    if (this._volumeNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeNamespace = this._volumeNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
      this._volumeName = undefined;
      this._volumeNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
      this._volumeName = value.volumeName;
      this._volumeNamespace = value.volumeNamespace;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // volume_name - computed: false, optional: true, required: false
  private _volumeName?: string; 
  public get volumeName() {
    return this.getStringAttribute('volume_name');
  }
  public set volumeName(value: string) {
    this._volumeName = value;
  }
  public resetVolumeName() {
    this._volumeName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNameInput() {
    return this._volumeName;
  }

  // volume_namespace - computed: false, optional: true, required: false
  private _volumeNamespace?: string; 
  public get volumeNamespace() {
    return this.getStringAttribute('volume_namespace');
  }
  public set volumeNamespace(value: string) {
    this._volumeNamespace = value;
  }
  public resetVolumeNamespace() {
    this._volumeNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNamespaceInput() {
    return this._volumeNamespace;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceVsphereVolume {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fs_type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#storage_policy_id DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#storage_policy_id}
  */
  readonly storagePolicyId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#storage_policy_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#storage_policy_name}
  */
  readonly storagePolicyName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_path}
  */
  readonly volumePath?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceVsphereVolumeToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceVsphereVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    storage_policy_id: cdktf.stringToTerraform(struct!.storagePolicyId),
    storage_policy_name: cdktf.stringToTerraform(struct!.storagePolicyName),
    volume_path: cdktf.stringToTerraform(struct!.volumePath),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceVsphereVolumeToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceVsphereVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    storage_policy_id: {
      value: cdktf.stringToHclTerraform(struct!.storagePolicyId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    storage_policy_name: {
      value: cdktf.stringToHclTerraform(struct!.storagePolicyName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_path: {
      value: cdktf.stringToHclTerraform(struct!.volumePath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceVsphereVolumeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceVsphereVolume | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._storagePolicyId !== undefined) {
      hasAnyValues = true;
      internalValueResult.storagePolicyId = this._storagePolicyId;
    }
    if (this._storagePolicyName !== undefined) {
      hasAnyValues = true;
      internalValueResult.storagePolicyName = this._storagePolicyName;
    }
    if (this._volumePath !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumePath = this._volumePath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceVsphereVolume | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._storagePolicyId = undefined;
      this._storagePolicyName = undefined;
      this._volumePath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._storagePolicyId = value.storagePolicyId;
      this._storagePolicyName = value.storagePolicyName;
      this._volumePath = value.volumePath;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // storage_policy_id - computed: false, optional: true, required: false
  private _storagePolicyId?: string; 
  public get storagePolicyId() {
    return this.getStringAttribute('storage_policy_id');
  }
  public set storagePolicyId(value: string) {
    this._storagePolicyId = value;
  }
  public resetStoragePolicyId() {
    this._storagePolicyId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storagePolicyIdInput() {
    return this._storagePolicyId;
  }

  // storage_policy_name - computed: false, optional: true, required: false
  private _storagePolicyName?: string; 
  public get storagePolicyName() {
    return this.getStringAttribute('storage_policy_name');
  }
  public set storagePolicyName(value: string) {
    this._storagePolicyName = value;
  }
  public resetStoragePolicyName() {
    this._storagePolicyName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storagePolicyNameInput() {
    return this._storagePolicyName;
  }

  // volume_path - computed: false, optional: true, required: false
  private _volumePath?: string; 
  public get volumePath() {
    return this.getStringAttribute('volume_path');
  }
  public set volumePath(value: string) {
    this._volumePath = value;
  }
  public resetVolumePath() {
    this._volumePath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumePathInput() {
    return this._volumePath;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSource {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#aws_elastic_block_store DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#aws_elastic_block_store}
  */
  readonly awsElasticBlockStore?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAwsElasticBlockStore;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#azure_disk DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#azure_disk}
  */
  readonly azureDisk?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureDisk;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#azure_file DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#azure_file}
  */
  readonly azureFile?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureFile;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#cephfs DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#cephfs}
  */
  readonly cephfs?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfs;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#cinder DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#cinder}
  */
  readonly cinder?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinder;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#config_map DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#config_map}
  */
  readonly configMap?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMap;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#csi DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#csi}
  */
  readonly csi?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsi;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#downward_api DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#downward_api}
  */
  readonly downwardApi?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApi;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#empty_dir DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#empty_dir}
  */
  readonly emptyDir?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEmptyDir;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#ephemeral DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#ephemeral}
  */
  readonly ephemeral?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeral;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#fc DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#fc}
  */
  readonly fc?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFc;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#flex_volume DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#flex_volume}
  */
  readonly flexVolume?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolume;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#flocker DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#flocker}
  */
  readonly flocker?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlocker;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#gce_persistent_disk DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#gce_persistent_disk}
  */
  readonly gcePersistentDisk?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGcePersistentDisk;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#git_repo DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#git_repo}
  */
  readonly gitRepo?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGitRepo;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#glusterfs DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#glusterfs}
  */
  readonly glusterfs?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGlusterfs;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#host_path DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#host_path}
  */
  readonly hostPath?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceHostPath;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#iscsi DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#iscsi}
  */
  readonly iscsi?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsi;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#nfs DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#nfs}
  */
  readonly nfs?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceNfs;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#persistent_volume_claim DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#persistent_volume_claim}
  */
  readonly persistentVolumeClaim?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePersistentVolumeClaim;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#photon_persistent_disk DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#photon_persistent_disk}
  */
  readonly photonPersistentDisk?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePhotonPersistentDisk;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#portworx_volume DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#portworx_volume}
  */
  readonly portworxVolume?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePortworxVolume;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#projected DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#projected}
  */
  readonly projected?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjected;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#quobyte DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#quobyte}
  */
  readonly quobyte?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceQuobyte;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#rbd DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#rbd}
  */
  readonly rbd?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbd;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#scale_io DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#scale_io}
  */
  readonly scaleIo?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIo;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#secret DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#secret}
  */
  readonly secret?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecret;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#storageos DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#storageos}
  */
  readonly storageos?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageos;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#vsphere_volume DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#vsphere_volume}
  */
  readonly vsphereVolume?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceVsphereVolume;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    aws_elastic_block_store: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAwsElasticBlockStoreToTerraform(struct!.awsElasticBlockStore),
    azure_disk: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureDiskToTerraform(struct!.azureDisk),
    azure_file: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureFileToTerraform(struct!.azureFile),
    cephfs: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsToTerraform(struct!.cephfs),
    cinder: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderToTerraform(struct!.cinder),
    config_map: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapToTerraform(struct!.configMap),
    csi: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiToTerraform(struct!.csi),
    downward_api: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiToTerraform(struct!.downwardApi),
    empty_dir: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEmptyDirToTerraform(struct!.emptyDir),
    ephemeral: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralToTerraform(struct!.ephemeral),
    fc: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFcToTerraform(struct!.fc),
    flex_volume: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeToTerraform(struct!.flexVolume),
    flocker: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlockerToTerraform(struct!.flocker),
    gce_persistent_disk: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGcePersistentDiskToTerraform(struct!.gcePersistentDisk),
    git_repo: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGitRepoToTerraform(struct!.gitRepo),
    glusterfs: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGlusterfsToTerraform(struct!.glusterfs),
    host_path: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceHostPathToTerraform(struct!.hostPath),
    iscsi: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiToTerraform(struct!.iscsi),
    nfs: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceNfsToTerraform(struct!.nfs),
    persistent_volume_claim: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePersistentVolumeClaimToTerraform(struct!.persistentVolumeClaim),
    photon_persistent_disk: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePhotonPersistentDiskToTerraform(struct!.photonPersistentDisk),
    portworx_volume: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePortworxVolumeToTerraform(struct!.portworxVolume),
    projected: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedToTerraform(struct!.projected),
    quobyte: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceQuobyteToTerraform(struct!.quobyte),
    rbd: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdToTerraform(struct!.rbd),
    scale_io: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoToTerraform(struct!.scaleIo),
    secret: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretToTerraform(struct!.secret),
    storageos: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosToTerraform(struct!.storageos),
    vsphere_volume: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceVsphereVolumeToTerraform(struct!.vsphereVolume),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    aws_elastic_block_store: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAwsElasticBlockStoreToHclTerraform(struct!.awsElasticBlockStore),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAwsElasticBlockStore",
    },
    azure_disk: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureDiskToHclTerraform(struct!.azureDisk),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureDisk",
    },
    azure_file: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureFileToHclTerraform(struct!.azureFile),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureFile",
    },
    cephfs: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsToHclTerraform(struct!.cephfs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfs",
    },
    cinder: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderToHclTerraform(struct!.cinder),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinder",
    },
    config_map: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapToHclTerraform(struct!.configMap),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMap",
    },
    csi: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiToHclTerraform(struct!.csi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsi",
    },
    downward_api: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiToHclTerraform(struct!.downwardApi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApi",
    },
    empty_dir: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEmptyDirToHclTerraform(struct!.emptyDir),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEmptyDir",
    },
    ephemeral: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralToHclTerraform(struct!.ephemeral),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeral",
    },
    fc: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFcToHclTerraform(struct!.fc),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFc",
    },
    flex_volume: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeToHclTerraform(struct!.flexVolume),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolume",
    },
    flocker: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlockerToHclTerraform(struct!.flocker),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlocker",
    },
    gce_persistent_disk: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGcePersistentDiskToHclTerraform(struct!.gcePersistentDisk),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGcePersistentDisk",
    },
    git_repo: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGitRepoToHclTerraform(struct!.gitRepo),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGitRepo",
    },
    glusterfs: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGlusterfsToHclTerraform(struct!.glusterfs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGlusterfs",
    },
    host_path: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceHostPathToHclTerraform(struct!.hostPath),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceHostPath",
    },
    iscsi: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiToHclTerraform(struct!.iscsi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsi",
    },
    nfs: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceNfsToHclTerraform(struct!.nfs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceNfs",
    },
    persistent_volume_claim: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePersistentVolumeClaimToHclTerraform(struct!.persistentVolumeClaim),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePersistentVolumeClaim",
    },
    photon_persistent_disk: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePhotonPersistentDiskToHclTerraform(struct!.photonPersistentDisk),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePhotonPersistentDisk",
    },
    portworx_volume: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePortworxVolumeToHclTerraform(struct!.portworxVolume),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePortworxVolume",
    },
    projected: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedToHclTerraform(struct!.projected),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjected",
    },
    quobyte: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceQuobyteToHclTerraform(struct!.quobyte),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceQuobyte",
    },
    rbd: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdToHclTerraform(struct!.rbd),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbd",
    },
    scale_io: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoToHclTerraform(struct!.scaleIo),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIo",
    },
    secret: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretToHclTerraform(struct!.secret),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecret",
    },
    storageos: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosToHclTerraform(struct!.storageos),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageos",
    },
    vsphere_volume: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceVsphereVolumeToHclTerraform(struct!.vsphereVolume),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceVsphereVolume",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._awsElasticBlockStore?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.awsElasticBlockStore = this._awsElasticBlockStore?.internalValue;
    }
    if (this._azureDisk?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.azureDisk = this._azureDisk?.internalValue;
    }
    if (this._azureFile?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.azureFile = this._azureFile?.internalValue;
    }
    if (this._cephfs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cephfs = this._cephfs?.internalValue;
    }
    if (this._cinder?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cinder = this._cinder?.internalValue;
    }
    if (this._configMap?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.configMap = this._configMap?.internalValue;
    }
    if (this._csi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.csi = this._csi?.internalValue;
    }
    if (this._downwardApi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.downwardApi = this._downwardApi?.internalValue;
    }
    if (this._emptyDir?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.emptyDir = this._emptyDir?.internalValue;
    }
    if (this._ephemeral?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ephemeral = this._ephemeral?.internalValue;
    }
    if (this._fc?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fc = this._fc?.internalValue;
    }
    if (this._flexVolume?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.flexVolume = this._flexVolume?.internalValue;
    }
    if (this._flocker?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.flocker = this._flocker?.internalValue;
    }
    if (this._gcePersistentDisk?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.gcePersistentDisk = this._gcePersistentDisk?.internalValue;
    }
    if (this._gitRepo?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.gitRepo = this._gitRepo?.internalValue;
    }
    if (this._glusterfs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.glusterfs = this._glusterfs?.internalValue;
    }
    if (this._hostPath?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostPath = this._hostPath?.internalValue;
    }
    if (this._iscsi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.iscsi = this._iscsi?.internalValue;
    }
    if (this._nfs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nfs = this._nfs?.internalValue;
    }
    if (this._persistentVolumeClaim?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.persistentVolumeClaim = this._persistentVolumeClaim?.internalValue;
    }
    if (this._photonPersistentDisk?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.photonPersistentDisk = this._photonPersistentDisk?.internalValue;
    }
    if (this._portworxVolume?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.portworxVolume = this._portworxVolume?.internalValue;
    }
    if (this._projected?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.projected = this._projected?.internalValue;
    }
    if (this._quobyte?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.quobyte = this._quobyte?.internalValue;
    }
    if (this._rbd?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rbd = this._rbd?.internalValue;
    }
    if (this._scaleIo?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scaleIo = this._scaleIo?.internalValue;
    }
    if (this._secret?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret?.internalValue;
    }
    if (this._storageos?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.storageos = this._storageos?.internalValue;
    }
    if (this._vsphereVolume?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vsphereVolume = this._vsphereVolume?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._awsElasticBlockStore.internalValue = undefined;
      this._azureDisk.internalValue = undefined;
      this._azureFile.internalValue = undefined;
      this._cephfs.internalValue = undefined;
      this._cinder.internalValue = undefined;
      this._configMap.internalValue = undefined;
      this._csi.internalValue = undefined;
      this._downwardApi.internalValue = undefined;
      this._emptyDir.internalValue = undefined;
      this._ephemeral.internalValue = undefined;
      this._fc.internalValue = undefined;
      this._flexVolume.internalValue = undefined;
      this._flocker.internalValue = undefined;
      this._gcePersistentDisk.internalValue = undefined;
      this._gitRepo.internalValue = undefined;
      this._glusterfs.internalValue = undefined;
      this._hostPath.internalValue = undefined;
      this._iscsi.internalValue = undefined;
      this._nfs.internalValue = undefined;
      this._persistentVolumeClaim.internalValue = undefined;
      this._photonPersistentDisk.internalValue = undefined;
      this._portworxVolume.internalValue = undefined;
      this._projected.internalValue = undefined;
      this._quobyte.internalValue = undefined;
      this._rbd.internalValue = undefined;
      this._scaleIo.internalValue = undefined;
      this._secret.internalValue = undefined;
      this._storageos.internalValue = undefined;
      this._vsphereVolume.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._awsElasticBlockStore.internalValue = value.awsElasticBlockStore;
      this._azureDisk.internalValue = value.azureDisk;
      this._azureFile.internalValue = value.azureFile;
      this._cephfs.internalValue = value.cephfs;
      this._cinder.internalValue = value.cinder;
      this._configMap.internalValue = value.configMap;
      this._csi.internalValue = value.csi;
      this._downwardApi.internalValue = value.downwardApi;
      this._emptyDir.internalValue = value.emptyDir;
      this._ephemeral.internalValue = value.ephemeral;
      this._fc.internalValue = value.fc;
      this._flexVolume.internalValue = value.flexVolume;
      this._flocker.internalValue = value.flocker;
      this._gcePersistentDisk.internalValue = value.gcePersistentDisk;
      this._gitRepo.internalValue = value.gitRepo;
      this._glusterfs.internalValue = value.glusterfs;
      this._hostPath.internalValue = value.hostPath;
      this._iscsi.internalValue = value.iscsi;
      this._nfs.internalValue = value.nfs;
      this._persistentVolumeClaim.internalValue = value.persistentVolumeClaim;
      this._photonPersistentDisk.internalValue = value.photonPersistentDisk;
      this._portworxVolume.internalValue = value.portworxVolume;
      this._projected.internalValue = value.projected;
      this._quobyte.internalValue = value.quobyte;
      this._rbd.internalValue = value.rbd;
      this._scaleIo.internalValue = value.scaleIo;
      this._secret.internalValue = value.secret;
      this._storageos.internalValue = value.storageos;
      this._vsphereVolume.internalValue = value.vsphereVolume;
    }
  }

  // aws_elastic_block_store - computed: false, optional: true, required: false
  private _awsElasticBlockStore = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAwsElasticBlockStoreOutputReference(this, "aws_elastic_block_store");
  public get awsElasticBlockStore() {
    return this._awsElasticBlockStore;
  }
  public putAwsElasticBlockStore(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAwsElasticBlockStore) {
    this._awsElasticBlockStore.internalValue = value;
  }
  public resetAwsElasticBlockStore() {
    this._awsElasticBlockStore.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get awsElasticBlockStoreInput() {
    return this._awsElasticBlockStore.internalValue;
  }

  // azure_disk - computed: false, optional: true, required: false
  private _azureDisk = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureDiskOutputReference(this, "azure_disk");
  public get azureDisk() {
    return this._azureDisk;
  }
  public putAzureDisk(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureDisk) {
    this._azureDisk.internalValue = value;
  }
  public resetAzureDisk() {
    this._azureDisk.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get azureDiskInput() {
    return this._azureDisk.internalValue;
  }

  // azure_file - computed: false, optional: true, required: false
  private _azureFile = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureFileOutputReference(this, "azure_file");
  public get azureFile() {
    return this._azureFile;
  }
  public putAzureFile(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceAzureFile) {
    this._azureFile.internalValue = value;
  }
  public resetAzureFile() {
    this._azureFile.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get azureFileInput() {
    return this._azureFile.internalValue;
  }

  // cephfs - computed: false, optional: true, required: false
  private _cephfs = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfsOutputReference(this, "cephfs");
  public get cephfs() {
    return this._cephfs;
  }
  public putCephfs(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCephfs) {
    this._cephfs.internalValue = value;
  }
  public resetCephfs() {
    this._cephfs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cephfsInput() {
    return this._cephfs.internalValue;
  }

  // cinder - computed: false, optional: true, required: false
  private _cinder = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinderOutputReference(this, "cinder");
  public get cinder() {
    return this._cinder;
  }
  public putCinder(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCinder) {
    this._cinder.internalValue = value;
  }
  public resetCinder() {
    this._cinder.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cinderInput() {
    return this._cinder.internalValue;
  }

  // config_map - computed: false, optional: true, required: false
  private _configMap = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMapOutputReference(this, "config_map");
  public get configMap() {
    return this._configMap;
  }
  public putConfigMap(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceConfigMap) {
    this._configMap.internalValue = value;
  }
  public resetConfigMap() {
    this._configMap.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configMapInput() {
    return this._configMap.internalValue;
  }

  // csi - computed: false, optional: true, required: false
  private _csi = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsiOutputReference(this, "csi");
  public get csi() {
    return this._csi;
  }
  public putCsi(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceCsi) {
    this._csi.internalValue = value;
  }
  public resetCsi() {
    this._csi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get csiInput() {
    return this._csi.internalValue;
  }

  // downward_api - computed: false, optional: true, required: false
  private _downwardApi = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApiOutputReference(this, "downward_api");
  public get downwardApi() {
    return this._downwardApi;
  }
  public putDownwardApi(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceDownwardApi) {
    this._downwardApi.internalValue = value;
  }
  public resetDownwardApi() {
    this._downwardApi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get downwardApiInput() {
    return this._downwardApi.internalValue;
  }

  // empty_dir - computed: false, optional: true, required: false
  private _emptyDir = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEmptyDirOutputReference(this, "empty_dir");
  public get emptyDir() {
    return this._emptyDir;
  }
  public putEmptyDir(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEmptyDir) {
    this._emptyDir.internalValue = value;
  }
  public resetEmptyDir() {
    this._emptyDir.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emptyDirInput() {
    return this._emptyDir.internalValue;
  }

  // ephemeral - computed: false, optional: true, required: false
  private _ephemeral = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeralOutputReference(this, "ephemeral");
  public get ephemeral() {
    return this._ephemeral;
  }
  public putEphemeral(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceEphemeral) {
    this._ephemeral.internalValue = value;
  }
  public resetEphemeral() {
    this._ephemeral.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ephemeralInput() {
    return this._ephemeral.internalValue;
  }

  // fc - computed: false, optional: true, required: false
  private _fc = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFcOutputReference(this, "fc");
  public get fc() {
    return this._fc;
  }
  public putFc(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFc) {
    this._fc.internalValue = value;
  }
  public resetFc() {
    this._fc.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fcInput() {
    return this._fc.internalValue;
  }

  // flex_volume - computed: false, optional: true, required: false
  private _flexVolume = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolumeOutputReference(this, "flex_volume");
  public get flexVolume() {
    return this._flexVolume;
  }
  public putFlexVolume(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlexVolume) {
    this._flexVolume.internalValue = value;
  }
  public resetFlexVolume() {
    this._flexVolume.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get flexVolumeInput() {
    return this._flexVolume.internalValue;
  }

  // flocker - computed: false, optional: true, required: false
  private _flocker = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlockerOutputReference(this, "flocker");
  public get flocker() {
    return this._flocker;
  }
  public putFlocker(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceFlocker) {
    this._flocker.internalValue = value;
  }
  public resetFlocker() {
    this._flocker.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get flockerInput() {
    return this._flocker.internalValue;
  }

  // gce_persistent_disk - computed: false, optional: true, required: false
  private _gcePersistentDisk = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGcePersistentDiskOutputReference(this, "gce_persistent_disk");
  public get gcePersistentDisk() {
    return this._gcePersistentDisk;
  }
  public putGcePersistentDisk(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGcePersistentDisk) {
    this._gcePersistentDisk.internalValue = value;
  }
  public resetGcePersistentDisk() {
    this._gcePersistentDisk.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gcePersistentDiskInput() {
    return this._gcePersistentDisk.internalValue;
  }

  // git_repo - computed: false, optional: true, required: false
  private _gitRepo = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGitRepoOutputReference(this, "git_repo");
  public get gitRepo() {
    return this._gitRepo;
  }
  public putGitRepo(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGitRepo) {
    this._gitRepo.internalValue = value;
  }
  public resetGitRepo() {
    this._gitRepo.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gitRepoInput() {
    return this._gitRepo.internalValue;
  }

  // glusterfs - computed: false, optional: true, required: false
  private _glusterfs = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGlusterfsOutputReference(this, "glusterfs");
  public get glusterfs() {
    return this._glusterfs;
  }
  public putGlusterfs(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceGlusterfs) {
    this._glusterfs.internalValue = value;
  }
  public resetGlusterfs() {
    this._glusterfs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get glusterfsInput() {
    return this._glusterfs.internalValue;
  }

  // host_path - computed: false, optional: true, required: false
  private _hostPath = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceHostPathOutputReference(this, "host_path");
  public get hostPath() {
    return this._hostPath;
  }
  public putHostPath(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceHostPath) {
    this._hostPath.internalValue = value;
  }
  public resetHostPath() {
    this._hostPath.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostPathInput() {
    return this._hostPath.internalValue;
  }

  // iscsi - computed: false, optional: true, required: false
  private _iscsi = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsiOutputReference(this, "iscsi");
  public get iscsi() {
    return this._iscsi;
  }
  public putIscsi(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceIscsi) {
    this._iscsi.internalValue = value;
  }
  public resetIscsi() {
    this._iscsi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iscsiInput() {
    return this._iscsi.internalValue;
  }

  // nfs - computed: false, optional: true, required: false
  private _nfs = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceNfsOutputReference(this, "nfs");
  public get nfs() {
    return this._nfs;
  }
  public putNfs(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceNfs) {
    this._nfs.internalValue = value;
  }
  public resetNfs() {
    this._nfs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nfsInput() {
    return this._nfs.internalValue;
  }

  // persistent_volume_claim - computed: false, optional: true, required: false
  private _persistentVolumeClaim = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePersistentVolumeClaimOutputReference(this, "persistent_volume_claim");
  public get persistentVolumeClaim() {
    return this._persistentVolumeClaim;
  }
  public putPersistentVolumeClaim(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePersistentVolumeClaim) {
    this._persistentVolumeClaim.internalValue = value;
  }
  public resetPersistentVolumeClaim() {
    this._persistentVolumeClaim.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get persistentVolumeClaimInput() {
    return this._persistentVolumeClaim.internalValue;
  }

  // photon_persistent_disk - computed: false, optional: true, required: false
  private _photonPersistentDisk = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePhotonPersistentDiskOutputReference(this, "photon_persistent_disk");
  public get photonPersistentDisk() {
    return this._photonPersistentDisk;
  }
  public putPhotonPersistentDisk(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePhotonPersistentDisk) {
    this._photonPersistentDisk.internalValue = value;
  }
  public resetPhotonPersistentDisk() {
    this._photonPersistentDisk.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get photonPersistentDiskInput() {
    return this._photonPersistentDisk.internalValue;
  }

  // portworx_volume - computed: false, optional: true, required: false
  private _portworxVolume = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePortworxVolumeOutputReference(this, "portworx_volume");
  public get portworxVolume() {
    return this._portworxVolume;
  }
  public putPortworxVolume(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourcePortworxVolume) {
    this._portworxVolume.internalValue = value;
  }
  public resetPortworxVolume() {
    this._portworxVolume.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portworxVolumeInput() {
    return this._portworxVolume.internalValue;
  }

  // projected - computed: false, optional: true, required: false
  private _projected = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjectedOutputReference(this, "projected");
  public get projected() {
    return this._projected;
  }
  public putProjected(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceProjected) {
    this._projected.internalValue = value;
  }
  public resetProjected() {
    this._projected.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectedInput() {
    return this._projected.internalValue;
  }

  // quobyte - computed: false, optional: true, required: false
  private _quobyte = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceQuobyteOutputReference(this, "quobyte");
  public get quobyte() {
    return this._quobyte;
  }
  public putQuobyte(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceQuobyte) {
    this._quobyte.internalValue = value;
  }
  public resetQuobyte() {
    this._quobyte.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get quobyteInput() {
    return this._quobyte.internalValue;
  }

  // rbd - computed: false, optional: true, required: false
  private _rbd = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbdOutputReference(this, "rbd");
  public get rbd() {
    return this._rbd;
  }
  public putRbd(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceRbd) {
    this._rbd.internalValue = value;
  }
  public resetRbd() {
    this._rbd.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rbdInput() {
    return this._rbd.internalValue;
  }

  // scale_io - computed: false, optional: true, required: false
  private _scaleIo = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIoOutputReference(this, "scale_io");
  public get scaleIo() {
    return this._scaleIo;
  }
  public putScaleIo(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceScaleIo) {
    this._scaleIo.internalValue = value;
  }
  public resetScaleIo() {
    this._scaleIo.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scaleIoInput() {
    return this._scaleIo.internalValue;
  }

  // secret - computed: false, optional: true, required: false
  private _secret = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecretOutputReference(this, "secret");
  public get secret() {
    return this._secret;
  }
  public putSecret(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceSecret) {
    this._secret.internalValue = value;
  }
  public resetSecret() {
    this._secret.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret.internalValue;
  }

  // storageos - computed: false, optional: true, required: false
  private _storageos = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageosOutputReference(this, "storageos");
  public get storageos() {
    return this._storageos;
  }
  public putStorageos(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceStorageos) {
    this._storageos.internalValue = value;
  }
  public resetStorageos() {
    this._storageos.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storageosInput() {
    return this._storageos.internalValue;
  }

  // vsphere_volume - computed: false, optional: true, required: false
  private _vsphereVolume = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceVsphereVolumeOutputReference(this, "vsphere_volume");
  public get vsphereVolume() {
    return this._vsphereVolume;
  }
  public putVsphereVolume(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceVsphereVolume) {
    this._vsphereVolume.internalValue = value;
  }
  public resetVsphereVolume() {
    this._vsphereVolume.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vsphereVolumeInput() {
    return this._vsphereVolume.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumes {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_source DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_source}
  */
  readonly volumeSource?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSource;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    volume_source: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceToTerraform(struct!.volumeSource),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_source: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceToHclTerraform(struct!.volumeSource),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSource",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._volumeSource?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeSource = this._volumeSource?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._volumeSource.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._volumeSource.internalValue = value.volumeSource;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // volume_source - computed: false, optional: true, required: false
  private _volumeSource = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSourceOutputReference(this, "volume_source");
  public get volumeSource() {
    return this._volumeSource;
  }
  public putVolumeSource(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesVolumeSource) {
    this._volumeSource.internalValue = value;
  }
  public resetVolumeSource() {
    this._volumeSource.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeSourceInput() {
    return this._volumeSource.internalValue;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumes[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeployment {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#affinity DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#affinity}
  */
  readonly affinity?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#deployment_strategy DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#deployment_strategy}
  */
  readonly deploymentStrategy?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#env DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#env}
  */
  readonly env?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnv[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#image DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#image_pull_policy DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#image_pull_policy}
  */
  readonly imagePullPolicy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#image_pull_secrets DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecrets[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#liveness_probe DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#liveness_probe}
  */
  readonly livenessProbe?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbe;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#metadata DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#node_selector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pod_disruption_budget DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pod_disruption_budget}
  */
  readonly podDisruptionBudget?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudget;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pod_metadata DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pod_metadata}
  */
  readonly podMetadata?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#pod_security_context DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#pod_security_context}
  */
  readonly podSecurityContext?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContext;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#priority_class_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#priority_class_name}
  */
  readonly priorityClassName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#readiness_probe DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#readiness_probe}
  */
  readonly readinessProbe?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbe;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#replicas DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#replicas}
  */
  readonly replicas?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReplicas;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#resources DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#resources}
  */
  readonly resources?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentResources;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#security_context DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#security_context}
  */
  readonly securityContext?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContext;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#tolerations DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerations[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#topology_spread_constraints DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#topology_spread_constraints}
  */
  readonly topologySpreadConstraints?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraints[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volume_mounts DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volume_mounts}
  */
  readonly volumeMounts?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMounts[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#volumes DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#volumes}
  */
  readonly volumes?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumes[] | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeployment | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    affinity: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityToTerraform(struct!.affinity),
    deployment_strategy: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyToTerraform(struct!.deploymentStrategy),
    env: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvToTerraform, false)(struct!.env),
    image: cdktf.stringToTerraform(struct!.image),
    image_pull_policy: cdktf.stringToTerraform(struct!.imagePullPolicy),
    image_pull_secrets: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecretsToTerraform, false)(struct!.imagePullSecrets),
    liveness_probe: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeToTerraform(struct!.livenessProbe),
    metadata: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadataToTerraform(struct!.metadata),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    pod_disruption_budget: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudgetToTerraform(struct!.podDisruptionBudget),
    pod_metadata: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadataToTerraform(struct!.podMetadata),
    pod_security_context: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextToTerraform(struct!.podSecurityContext),
    priority_class_name: cdktf.stringToTerraform(struct!.priorityClassName),
    readiness_probe: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeToTerraform(struct!.readinessProbe),
    replicas: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReplicasToTerraform(struct!.replicas),
    resources: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentResourcesToTerraform(struct!.resources),
    security_context: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextToTerraform(struct!.securityContext),
    tolerations: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerationsToTerraform, false)(struct!.tolerations),
    topology_spread_constraints: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsToTerraform, false)(struct!.topologySpreadConstraints),
    volume_mounts: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMountsToTerraform, false)(struct!.volumeMounts),
    volumes: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesToTerraform, false)(struct!.volumes),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeployment | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    affinity: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityToHclTerraform(struct!.affinity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinity",
    },
    deployment_strategy: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyToHclTerraform(struct!.deploymentStrategy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategy",
    },
    env: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvToHclTerraform, false)(struct!.env),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_policy: {
      value: cdktf.stringToHclTerraform(struct!.imagePullPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecretsToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecretsList",
    },
    liveness_probe: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeToHclTerraform(struct!.livenessProbe),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbe",
    },
    metadata: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadata",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    pod_disruption_budget: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudgetToHclTerraform(struct!.podDisruptionBudget),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudget",
    },
    pod_metadata: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadataToHclTerraform(struct!.podMetadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadata",
    },
    pod_security_context: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextToHclTerraform(struct!.podSecurityContext),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContext",
    },
    priority_class_name: {
      value: cdktf.stringToHclTerraform(struct!.priorityClassName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    readiness_probe: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeToHclTerraform(struct!.readinessProbe),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbe",
    },
    replicas: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReplicasToHclTerraform(struct!.replicas),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReplicas",
    },
    resources: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentResourcesToHclTerraform(struct!.resources),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentResources",
    },
    security_context: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextToHclTerraform(struct!.securityContext),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContext",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerationsList",
    },
    topology_spread_constraints: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsToHclTerraform, false)(struct!.topologySpreadConstraints),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsList",
    },
    volume_mounts: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMountsToHclTerraform, false)(struct!.volumeMounts),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMountsList",
    },
    volumes: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesToHclTerraform, false)(struct!.volumes),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeployment | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._affinity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.affinity = this._affinity?.internalValue;
    }
    if (this._deploymentStrategy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.deploymentStrategy = this._deploymentStrategy?.internalValue;
    }
    if (this._env?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.env = this._env?.internalValue;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._imagePullPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullPolicy = this._imagePullPolicy;
    }
    if (this._imagePullSecrets?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets?.internalValue;
    }
    if (this._livenessProbe?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.livenessProbe = this._livenessProbe?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._podDisruptionBudget?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podDisruptionBudget = this._podDisruptionBudget?.internalValue;
    }
    if (this._podMetadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podMetadata = this._podMetadata?.internalValue;
    }
    if (this._podSecurityContext?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podSecurityContext = this._podSecurityContext?.internalValue;
    }
    if (this._priorityClassName !== undefined) {
      hasAnyValues = true;
      internalValueResult.priorityClassName = this._priorityClassName;
    }
    if (this._readinessProbe?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.readinessProbe = this._readinessProbe?.internalValue;
    }
    if (this._replicas?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.replicas = this._replicas?.internalValue;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._securityContext?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.securityContext = this._securityContext?.internalValue;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    if (this._topologySpreadConstraints?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologySpreadConstraints = this._topologySpreadConstraints?.internalValue;
    }
    if (this._volumeMounts?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeMounts = this._volumeMounts?.internalValue;
    }
    if (this._volumes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumes = this._volumes?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeployment | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._affinity.internalValue = undefined;
      this._deploymentStrategy.internalValue = undefined;
      this._env.internalValue = undefined;
      this._image = undefined;
      this._imagePullPolicy = undefined;
      this._imagePullSecrets.internalValue = undefined;
      this._livenessProbe.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._nodeSelector = undefined;
      this._podDisruptionBudget.internalValue = undefined;
      this._podMetadata.internalValue = undefined;
      this._podSecurityContext.internalValue = undefined;
      this._priorityClassName = undefined;
      this._readinessProbe.internalValue = undefined;
      this._replicas.internalValue = undefined;
      this._resources.internalValue = undefined;
      this._securityContext.internalValue = undefined;
      this._tolerations.internalValue = undefined;
      this._topologySpreadConstraints.internalValue = undefined;
      this._volumeMounts.internalValue = undefined;
      this._volumes.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._affinity.internalValue = value.affinity;
      this._deploymentStrategy.internalValue = value.deploymentStrategy;
      this._env.internalValue = value.env;
      this._image = value.image;
      this._imagePullPolicy = value.imagePullPolicy;
      this._imagePullSecrets.internalValue = value.imagePullSecrets;
      this._livenessProbe.internalValue = value.livenessProbe;
      this._metadata.internalValue = value.metadata;
      this._nodeSelector = value.nodeSelector;
      this._podDisruptionBudget.internalValue = value.podDisruptionBudget;
      this._podMetadata.internalValue = value.podMetadata;
      this._podSecurityContext.internalValue = value.podSecurityContext;
      this._priorityClassName = value.priorityClassName;
      this._readinessProbe.internalValue = value.readinessProbe;
      this._replicas.internalValue = value.replicas;
      this._resources.internalValue = value.resources;
      this._securityContext.internalValue = value.securityContext;
      this._tolerations.internalValue = value.tolerations;
      this._topologySpreadConstraints.internalValue = value.topologySpreadConstraints;
      this._volumeMounts.internalValue = value.volumeMounts;
      this._volumes.internalValue = value.volumes;
    }
  }

  // affinity - computed: false, optional: true, required: false
  private _affinity = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinityOutputReference(this, "affinity");
  public get affinity() {
    return this._affinity;
  }
  public putAffinity(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentAffinity) {
    this._affinity.internalValue = value;
  }
  public resetAffinity() {
    this._affinity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get affinityInput() {
    return this._affinity.internalValue;
  }

  // deployment_strategy - computed: false, optional: true, required: false
  private _deploymentStrategy = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategyOutputReference(this, "deployment_strategy");
  public get deploymentStrategy() {
    return this._deploymentStrategy;
  }
  public putDeploymentStrategy(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentDeploymentStrategy) {
    this._deploymentStrategy.internalValue = value;
  }
  public resetDeploymentStrategy() {
    this._deploymentStrategy.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deploymentStrategyInput() {
    return this._deploymentStrategy.internalValue;
  }

  // env - computed: false, optional: true, required: false
  private _env = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnvList(this, "env", false);
  public get env() {
    return this._env;
  }
  public putEnv(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentEnv[] | cdktf.IResolvable) {
    this._env.internalValue = value;
  }
  public resetEnv() {
    this._env.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get envInput() {
    return this._env.internalValue;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // image_pull_policy - computed: false, optional: true, required: false
  private _imagePullPolicy?: string; 
  public get imagePullPolicy() {
    return this.getStringAttribute('image_pull_policy');
  }
  public set imagePullPolicy(value: string) {
    this._imagePullPolicy = value;
  }
  public resetImagePullPolicy() {
    this._imagePullPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullPolicyInput() {
    return this._imagePullPolicy;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecretsList(this, "image_pull_secrets", false);
  public get imagePullSecrets() {
    return this._imagePullSecrets;
  }
  public putImagePullSecrets(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentImagePullSecrets[] | cdktf.IResolvable) {
    this._imagePullSecrets.internalValue = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets.internalValue;
  }

  // liveness_probe - computed: false, optional: true, required: false
  private _livenessProbe = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbeOutputReference(this, "liveness_probe");
  public get livenessProbe() {
    return this._livenessProbe;
  }
  public putLivenessProbe(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentLivenessProbe) {
    this._livenessProbe.internalValue = value;
  }
  public resetLivenessProbe() {
    this._livenessProbe.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get livenessProbeInput() {
    return this._livenessProbe.internalValue;
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // pod_disruption_budget - computed: false, optional: true, required: false
  private _podDisruptionBudget = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudgetOutputReference(this, "pod_disruption_budget");
  public get podDisruptionBudget() {
    return this._podDisruptionBudget;
  }
  public putPodDisruptionBudget(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodDisruptionBudget) {
    this._podDisruptionBudget.internalValue = value;
  }
  public resetPodDisruptionBudget() {
    this._podDisruptionBudget.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podDisruptionBudgetInput() {
    return this._podDisruptionBudget.internalValue;
  }

  // pod_metadata - computed: false, optional: true, required: false
  private _podMetadata = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadataOutputReference(this, "pod_metadata");
  public get podMetadata() {
    return this._podMetadata;
  }
  public putPodMetadata(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodMetadata) {
    this._podMetadata.internalValue = value;
  }
  public resetPodMetadata() {
    this._podMetadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podMetadataInput() {
    return this._podMetadata.internalValue;
  }

  // pod_security_context - computed: false, optional: true, required: false
  private _podSecurityContext = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContextOutputReference(this, "pod_security_context");
  public get podSecurityContext() {
    return this._podSecurityContext;
  }
  public putPodSecurityContext(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentPodSecurityContext) {
    this._podSecurityContext.internalValue = value;
  }
  public resetPodSecurityContext() {
    this._podSecurityContext.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podSecurityContextInput() {
    return this._podSecurityContext.internalValue;
  }

  // priority_class_name - computed: false, optional: true, required: false
  private _priorityClassName?: string; 
  public get priorityClassName() {
    return this.getStringAttribute('priority_class_name');
  }
  public set priorityClassName(value: string) {
    this._priorityClassName = value;
  }
  public resetPriorityClassName() {
    this._priorityClassName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityClassNameInput() {
    return this._priorityClassName;
  }

  // readiness_probe - computed: false, optional: true, required: false
  private _readinessProbe = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbeOutputReference(this, "readiness_probe");
  public get readinessProbe() {
    return this._readinessProbe;
  }
  public putReadinessProbe(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReadinessProbe) {
    this._readinessProbe.internalValue = value;
  }
  public resetReadinessProbe() {
    this._readinessProbe.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readinessProbeInput() {
    return this._readinessProbe.internalValue;
  }

  // replicas - computed: false, optional: true, required: false
  private _replicas = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReplicasOutputReference(this, "replicas");
  public get replicas() {
    return this._replicas;
  }
  public putReplicas(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentReplicas) {
    this._replicas.internalValue = value;
  }
  public resetReplicas() {
    this._replicas.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get replicasInput() {
    return this._replicas.internalValue;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentResourcesOutputReference(this, "resources");
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentResources) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // security_context - computed: false, optional: true, required: false
  private _securityContext = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContextOutputReference(this, "security_context");
  public get securityContext() {
    return this._securityContext;
  }
  public putSecurityContext(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentSecurityContext) {
    this._securityContext.internalValue = value;
  }
  public resetSecurityContext() {
    this._securityContext.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get securityContextInput() {
    return this._securityContext.internalValue;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }

  // topology_spread_constraints - computed: false, optional: true, required: false
  private _topologySpreadConstraints = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraintsList(this, "topology_spread_constraints", false);
  public get topologySpreadConstraints() {
    return this._topologySpreadConstraints;
  }
  public putTopologySpreadConstraints(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentTopologySpreadConstraints[] | cdktf.IResolvable) {
    this._topologySpreadConstraints.internalValue = value;
  }
  public resetTopologySpreadConstraints() {
    this._topologySpreadConstraints.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologySpreadConstraintsInput() {
    return this._topologySpreadConstraints.internalValue;
  }

  // volume_mounts - computed: false, optional: true, required: false
  private _volumeMounts = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMountsList(this, "volume_mounts", false);
  public get volumeMounts() {
    return this._volumeMounts;
  }
  public putVolumeMounts(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumeMounts[] | cdktf.IResolvable) {
    this._volumeMounts.internalValue = value;
  }
  public resetVolumeMounts() {
    this._volumeMounts.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeMountsInput() {
    return this._volumeMounts.internalValue;
  }

  // volumes - computed: false, optional: true, required: false
  private _volumes = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumesList(this, "volumes", false);
  public get volumes() {
    return this._volumes;
  }
  public putVolumes(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentVolumes[] | cdktf.IResolvable) {
    this._volumes.internalValue = value;
  }
  public resetVolumes() {
    this._volumes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumesInput() {
    return this._volumes.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#annotations DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#labels DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceMetadataToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceMetadataToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._labels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._labels = value.labels;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePorts {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#node_port DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#node_port}
  */
  readonly nodePort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#port DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#port}
  */
  readonly port: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#protocol DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#protocol}
  */
  readonly protocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#target_port DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#target_port}
  */
  readonly targetPort?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePortsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePorts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    node_port: cdktf.numberToTerraform(struct!.nodePort),
    port: cdktf.numberToTerraform(struct!.port),
    protocol: cdktf.stringToTerraform(struct!.protocol),
    target_port: cdktf.stringToTerraform(struct!.targetPort),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePortsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePorts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_port: {
      value: cdktf.numberToHclTerraform(struct!.nodePort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    protocol: {
      value: cdktf.stringToHclTerraform(struct!.protocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    target_port: {
      value: cdktf.stringToHclTerraform(struct!.targetPort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePortsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePorts | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._nodePort !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodePort = this._nodePort;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._protocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocol = this._protocol;
    }
    if (this._targetPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetPort = this._targetPort;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePorts | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._nodePort = undefined;
      this._port = undefined;
      this._protocol = undefined;
      this._targetPort = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._nodePort = value.nodePort;
      this._port = value.port;
      this._protocol = value.protocol;
      this._targetPort = value.targetPort;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // node_port - computed: false, optional: true, required: false
  private _nodePort?: number; 
  public get nodePort() {
    return this.getNumberAttribute('node_port');
  }
  public set nodePort(value: number) {
    this._nodePort = value;
  }
  public resetNodePort() {
    this._nodePort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodePortInput() {
    return this._nodePort;
  }

  // port - computed: false, optional: false, required: true
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // protocol - computed: false, optional: true, required: false
  private _protocol?: string; 
  public get protocol() {
    return this.getStringAttribute('protocol');
  }
  public set protocol(value: string) {
    this._protocol = value;
  }
  public resetProtocol() {
    this._protocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolInput() {
    return this._protocol;
  }

  // target_port - computed: false, optional: true, required: false
  private _targetPort?: string; 
  public get targetPort() {
    return this.getStringAttribute('target_port');
  }
  public set targetPort(value: string) {
    this._targetPort = value;
  }
  public resetTargetPort() {
    this._targetPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetPortInput() {
    return this._targetPort;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePortsList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePorts[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePortsOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePortsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigClientIp {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#timeout_seconds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#timeout_seconds}
  */
  readonly timeoutSeconds?: number;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigClientIpToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigClientIp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    timeout_seconds: cdktf.numberToTerraform(struct!.timeoutSeconds),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigClientIpToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigClientIp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    timeout_seconds: {
      value: cdktf.numberToHclTerraform(struct!.timeoutSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigClientIpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigClientIp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._timeoutSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeoutSeconds = this._timeoutSeconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigClientIp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._timeoutSeconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._timeoutSeconds = value.timeoutSeconds;
    }
  }

  // timeout_seconds - computed: false, optional: true, required: false
  private _timeoutSeconds?: number; 
  public get timeoutSeconds() {
    return this.getNumberAttribute('timeout_seconds');
  }
  public set timeoutSeconds(value: number) {
    this._timeoutSeconds = value;
  }
  public resetTimeoutSeconds() {
    this._timeoutSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeoutSecondsInput() {
    return this._timeoutSeconds;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#client_ip DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#client_ip}
  */
  readonly clientIp?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigClientIp;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    client_ip: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigClientIpToTerraform(struct!.clientIp),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    client_ip: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigClientIpToHclTerraform(struct!.clientIp),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigClientIp",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clientIp?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientIp = this._clientIp?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clientIp.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clientIp.internalValue = value.clientIp;
    }
  }

  // client_ip - computed: false, optional: true, required: false
  private _clientIp = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigClientIpOutputReference(this, "client_ip");
  public get clientIp() {
    return this._clientIp;
  }
  public putClientIp(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigClientIp) {
    this._clientIp.internalValue = value;
  }
  public resetClientIp() {
    this._clientIp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientIpInput() {
    return this._clientIp.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorService {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#cluster_ip DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#cluster_ip}
  */
  readonly clusterIp?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#external_i_ps DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#external_i_ps}
  */
  readonly externalIPs?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#external_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#external_name}
  */
  readonly externalName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#external_traffic_policy DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#external_traffic_policy}
  */
  readonly externalTrafficPolicy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#health_check_node_port DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#health_check_node_port}
  */
  readonly healthCheckNodePort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#ip_family DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#ip_family}
  */
  readonly ipFamily?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#load_balancer_ip DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#load_balancer_ip}
  */
  readonly loadBalancerIp?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#load_balancer_source_ranges DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#load_balancer_source_ranges}
  */
  readonly loadBalancerSourceRanges?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#metadata DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#ports DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#ports}
  */
  readonly ports: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePorts[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#publish_not_ready_addresses DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#publish_not_ready_addresses}
  */
  readonly publishNotReadyAddresses?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#selector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#selector}
  */
  readonly selector?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#session_affinity DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#session_affinity}
  */
  readonly sessionAffinity?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#session_affinity_config DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#session_affinity_config}
  */
  readonly sessionAffinityConfig?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfig;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#type DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#type}
  */
  readonly type: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorService | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cluster_ip: cdktf.stringToTerraform(struct!.clusterIp),
    external_i_ps: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.externalIPs),
    external_name: cdktf.stringToTerraform(struct!.externalName),
    external_traffic_policy: cdktf.stringToTerraform(struct!.externalTrafficPolicy),
    health_check_node_port: cdktf.numberToTerraform(struct!.healthCheckNodePort),
    ip_family: cdktf.stringToTerraform(struct!.ipFamily),
    load_balancer_ip: cdktf.stringToTerraform(struct!.loadBalancerIp),
    load_balancer_source_ranges: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.loadBalancerSourceRanges),
    metadata: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceMetadataToTerraform(struct!.metadata),
    ports: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePortsToTerraform, false)(struct!.ports),
    publish_not_ready_addresses: cdktf.booleanToTerraform(struct!.publishNotReadyAddresses),
    selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.selector),
    session_affinity: cdktf.stringToTerraform(struct!.sessionAffinity),
    session_affinity_config: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigToTerraform(struct!.sessionAffinityConfig),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorService | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cluster_ip: {
      value: cdktf.stringToHclTerraform(struct!.clusterIp),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    external_i_ps: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.externalIPs),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    external_name: {
      value: cdktf.stringToHclTerraform(struct!.externalName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    external_traffic_policy: {
      value: cdktf.stringToHclTerraform(struct!.externalTrafficPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    health_check_node_port: {
      value: cdktf.numberToHclTerraform(struct!.healthCheckNodePort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ip_family: {
      value: cdktf.stringToHclTerraform(struct!.ipFamily),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    load_balancer_ip: {
      value: cdktf.stringToHclTerraform(struct!.loadBalancerIp),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    load_balancer_source_ranges: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.loadBalancerSourceRanges),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    metadata: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceMetadata",
    },
    ports: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePortsToHclTerraform, false)(struct!.ports),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePortsList",
    },
    publish_not_ready_addresses: {
      value: cdktf.booleanToHclTerraform(struct!.publishNotReadyAddresses),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.selector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    session_affinity: {
      value: cdktf.stringToHclTerraform(struct!.sessionAffinity),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    session_affinity_config: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigToHclTerraform(struct!.sessionAffinityConfig),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfig",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorService | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clusterIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterIp = this._clusterIp;
    }
    if (this._externalIPs !== undefined) {
      hasAnyValues = true;
      internalValueResult.externalIPs = this._externalIPs;
    }
    if (this._externalName !== undefined) {
      hasAnyValues = true;
      internalValueResult.externalName = this._externalName;
    }
    if (this._externalTrafficPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.externalTrafficPolicy = this._externalTrafficPolicy;
    }
    if (this._healthCheckNodePort !== undefined) {
      hasAnyValues = true;
      internalValueResult.healthCheckNodePort = this._healthCheckNodePort;
    }
    if (this._ipFamily !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipFamily = this._ipFamily;
    }
    if (this._loadBalancerIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.loadBalancerIp = this._loadBalancerIp;
    }
    if (this._loadBalancerSourceRanges !== undefined) {
      hasAnyValues = true;
      internalValueResult.loadBalancerSourceRanges = this._loadBalancerSourceRanges;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._ports?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ports = this._ports?.internalValue;
    }
    if (this._publishNotReadyAddresses !== undefined) {
      hasAnyValues = true;
      internalValueResult.publishNotReadyAddresses = this._publishNotReadyAddresses;
    }
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._sessionAffinity !== undefined) {
      hasAnyValues = true;
      internalValueResult.sessionAffinity = this._sessionAffinity;
    }
    if (this._sessionAffinityConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sessionAffinityConfig = this._sessionAffinityConfig?.internalValue;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorService | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clusterIp = undefined;
      this._externalIPs = undefined;
      this._externalName = undefined;
      this._externalTrafficPolicy = undefined;
      this._healthCheckNodePort = undefined;
      this._ipFamily = undefined;
      this._loadBalancerIp = undefined;
      this._loadBalancerSourceRanges = undefined;
      this._metadata.internalValue = undefined;
      this._ports.internalValue = undefined;
      this._publishNotReadyAddresses = undefined;
      this._selector = undefined;
      this._sessionAffinity = undefined;
      this._sessionAffinityConfig.internalValue = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clusterIp = value.clusterIp;
      this._externalIPs = value.externalIPs;
      this._externalName = value.externalName;
      this._externalTrafficPolicy = value.externalTrafficPolicy;
      this._healthCheckNodePort = value.healthCheckNodePort;
      this._ipFamily = value.ipFamily;
      this._loadBalancerIp = value.loadBalancerIp;
      this._loadBalancerSourceRanges = value.loadBalancerSourceRanges;
      this._metadata.internalValue = value.metadata;
      this._ports.internalValue = value.ports;
      this._publishNotReadyAddresses = value.publishNotReadyAddresses;
      this._selector = value.selector;
      this._sessionAffinity = value.sessionAffinity;
      this._sessionAffinityConfig.internalValue = value.sessionAffinityConfig;
      this._type = value.type;
    }
  }

  // cluster_ip - computed: false, optional: true, required: false
  private _clusterIp?: string; 
  public get clusterIp() {
    return this.getStringAttribute('cluster_ip');
  }
  public set clusterIp(value: string) {
    this._clusterIp = value;
  }
  public resetClusterIp() {
    this._clusterIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterIpInput() {
    return this._clusterIp;
  }

  // external_i_ps - computed: false, optional: true, required: false
  private _externalIPs?: string[]; 
  public get externalIPs() {
    return this.getListAttribute('external_i_ps');
  }
  public set externalIPs(value: string[]) {
    this._externalIPs = value;
  }
  public resetExternalIPs() {
    this._externalIPs = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get externalIPsInput() {
    return this._externalIPs;
  }

  // external_name - computed: false, optional: true, required: false
  private _externalName?: string; 
  public get externalName() {
    return this.getStringAttribute('external_name');
  }
  public set externalName(value: string) {
    this._externalName = value;
  }
  public resetExternalName() {
    this._externalName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get externalNameInput() {
    return this._externalName;
  }

  // external_traffic_policy - computed: false, optional: true, required: false
  private _externalTrafficPolicy?: string; 
  public get externalTrafficPolicy() {
    return this.getStringAttribute('external_traffic_policy');
  }
  public set externalTrafficPolicy(value: string) {
    this._externalTrafficPolicy = value;
  }
  public resetExternalTrafficPolicy() {
    this._externalTrafficPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get externalTrafficPolicyInput() {
    return this._externalTrafficPolicy;
  }

  // health_check_node_port - computed: false, optional: true, required: false
  private _healthCheckNodePort?: number; 
  public get healthCheckNodePort() {
    return this.getNumberAttribute('health_check_node_port');
  }
  public set healthCheckNodePort(value: number) {
    this._healthCheckNodePort = value;
  }
  public resetHealthCheckNodePort() {
    this._healthCheckNodePort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get healthCheckNodePortInput() {
    return this._healthCheckNodePort;
  }

  // ip_family - computed: false, optional: true, required: false
  private _ipFamily?: string; 
  public get ipFamily() {
    return this.getStringAttribute('ip_family');
  }
  public set ipFamily(value: string) {
    this._ipFamily = value;
  }
  public resetIpFamily() {
    this._ipFamily = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipFamilyInput() {
    return this._ipFamily;
  }

  // load_balancer_ip - computed: false, optional: true, required: false
  private _loadBalancerIp?: string; 
  public get loadBalancerIp() {
    return this.getStringAttribute('load_balancer_ip');
  }
  public set loadBalancerIp(value: string) {
    this._loadBalancerIp = value;
  }
  public resetLoadBalancerIp() {
    this._loadBalancerIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get loadBalancerIpInput() {
    return this._loadBalancerIp;
  }

  // load_balancer_source_ranges - computed: false, optional: true, required: false
  private _loadBalancerSourceRanges?: string[]; 
  public get loadBalancerSourceRanges() {
    return this.getListAttribute('load_balancer_source_ranges');
  }
  public set loadBalancerSourceRanges(value: string[]) {
    this._loadBalancerSourceRanges = value;
  }
  public resetLoadBalancerSourceRanges() {
    this._loadBalancerSourceRanges = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get loadBalancerSourceRangesInput() {
    return this._loadBalancerSourceRanges;
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // ports - computed: false, optional: false, required: true
  private _ports = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePortsList(this, "ports", false);
  public get ports() {
    return this._ports;
  }
  public putPorts(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServicePorts[] | cdktf.IResolvable) {
    this._ports.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get portsInput() {
    return this._ports.internalValue;
  }

  // publish_not_ready_addresses - computed: false, optional: true, required: false
  private _publishNotReadyAddresses?: boolean | cdktf.IResolvable; 
  public get publishNotReadyAddresses() {
    return this.getBooleanAttribute('publish_not_ready_addresses');
  }
  public set publishNotReadyAddresses(value: boolean | cdktf.IResolvable) {
    this._publishNotReadyAddresses = value;
  }
  public resetPublishNotReadyAddresses() {
    this._publishNotReadyAddresses = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get publishNotReadyAddressesInput() {
    return this._publishNotReadyAddresses;
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: { [key: string]: string }; 
  public get selector() {
    return this.getStringMapAttribute('selector');
  }
  public set selector(value: { [key: string]: string }) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // session_affinity - computed: false, optional: true, required: false
  private _sessionAffinity?: string; 
  public get sessionAffinity() {
    return this.getStringAttribute('session_affinity');
  }
  public set sessionAffinity(value: string) {
    this._sessionAffinity = value;
  }
  public resetSessionAffinity() {
    this._sessionAffinity = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sessionAffinityInput() {
    return this._sessionAffinity;
  }

  // session_affinity_config - computed: false, optional: true, required: false
  private _sessionAffinityConfig = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfigOutputReference(this, "session_affinity_config");
  public get sessionAffinityConfig() {
    return this._sessionAffinityConfig;
  }
  public putSessionAffinityConfig(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceSessionAffinityConfig) {
    this._sessionAffinityConfig.internalValue = value;
  }
  public resetSessionAffinityConfig() {
    this._sessionAffinityConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sessionAffinityConfigInput() {
    return this._sessionAffinityConfig.internalValue;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplates {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#template DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#template}
  */
  readonly template?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplatesToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplates | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    template: cdktf.stringToTerraform(struct!.template),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplatesToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplates | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    template: {
      value: cdktf.stringToHclTerraform(struct!.template),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplatesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplates | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._template !== undefined) {
      hasAnyValues = true;
      internalValueResult.template = this._template;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplates | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._template = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._template = value.template;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // template - computed: false, optional: true, required: false
  private _template?: string; 
  public get template() {
    return this.getStringAttribute('template');
  }
  public set template(value: string) {
    this._template = value;
  }
  public resetTemplate() {
    this._template = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get templateInput() {
    return this._template;
  }
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplatesList extends cdktf.ComplexList {
  public internalValue? : DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplates[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplatesOutputReference {
    return new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplatesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplates {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#custom_templates DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#custom_templates}
  */
  readonly customTemplates?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplates[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#gateway DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#gateway}
  */
  readonly gateway?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#sidecar DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#sidecar}
  */
  readonly sidecar?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplates | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_templates: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplatesToTerraform, false)(struct!.customTemplates),
    gateway: cdktf.stringToTerraform(struct!.gateway),
    sidecar: cdktf.stringToTerraform(struct!.sidecar),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplates | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_templates: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplatesToHclTerraform, false)(struct!.customTemplates),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplatesList",
    },
    gateway: {
      value: cdktf.stringToHclTerraform(struct!.gateway),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sidecar: {
      value: cdktf.stringToHclTerraform(struct!.sidecar),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplates | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customTemplates?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.customTemplates = this._customTemplates?.internalValue;
    }
    if (this._gateway !== undefined) {
      hasAnyValues = true;
      internalValueResult.gateway = this._gateway;
    }
    if (this._sidecar !== undefined) {
      hasAnyValues = true;
      internalValueResult.sidecar = this._sidecar;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplates | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customTemplates.internalValue = undefined;
      this._gateway = undefined;
      this._sidecar = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customTemplates.internalValue = value.customTemplates;
      this._gateway = value.gateway;
      this._sidecar = value.sidecar;
    }
  }

  // custom_templates - computed: false, optional: true, required: false
  private _customTemplates = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplatesList(this, "custom_templates", false);
  public get customTemplates() {
    return this._customTemplates;
  }
  public putCustomTemplates(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesCustomTemplates[] | cdktf.IResolvable) {
    this._customTemplates.internalValue = value;
  }
  public resetCustomTemplates() {
    this._customTemplates.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customTemplatesInput() {
    return this._customTemplates.internalValue;
  }

  // gateway - computed: false, optional: true, required: false
  private _gateway?: string; 
  public get gateway() {
    return this.getStringAttribute('gateway');
  }
  public set gateway(value: string) {
    this._gateway = value;
  }
  public resetGateway() {
    this._gateway = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gatewayInput() {
    return this._gateway;
  }

  // sidecar - computed: false, optional: true, required: false
  private _sidecar?: string; 
  public get sidecar() {
    return this.getStringAttribute('sidecar');
  }
  public set sidecar(value: string) {
    this._sidecar = value;
  }
  public resetSidecar() {
    this._sidecar = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sidecarInput() {
    return this._sidecar;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#deployment DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#deployment}
  */
  readonly deployment?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeployment;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#service DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#service}
  */
  readonly service?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorService;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#templates DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#templates}
  */
  readonly templates?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplates;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    deployment: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentToTerraform(struct!.deployment),
    service: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceToTerraform(struct!.service),
    templates: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesToTerraform(struct!.templates),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    deployment: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentToHclTerraform(struct!.deployment),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeployment",
    },
    service: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceToHclTerraform(struct!.service),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorService",
    },
    templates: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesToHclTerraform(struct!.templates),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplates",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._deployment?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.deployment = this._deployment?.internalValue;
    }
    if (this._service?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.service = this._service?.internalValue;
    }
    if (this._templates?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.templates = this._templates?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._deployment.internalValue = undefined;
      this._service.internalValue = undefined;
      this._templates.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._deployment.internalValue = value.deployment;
      this._service.internalValue = value.service;
      this._templates.internalValue = value.templates;
    }
  }

  // deployment - computed: false, optional: true, required: false
  private _deployment = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeploymentOutputReference(this, "deployment");
  public get deployment() {
    return this._deployment;
  }
  public putDeployment(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorDeployment) {
    this._deployment.internalValue = value;
  }
  public resetDeployment() {
    this._deployment.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deploymentInput() {
    return this._deployment.internalValue;
  }

  // service - computed: false, optional: true, required: false
  private _service = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorServiceOutputReference(this, "service");
  public get service() {
    return this._service;
  }
  public putService(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorService) {
    this._service.internalValue = value;
  }
  public resetService() {
    this._service.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceInput() {
    return this._service.internalValue;
  }

  // templates - computed: false, optional: true, required: false
  private _templates = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplatesOutputReference(this, "templates");
  public get templates() {
    return this._templates;
  }
  public putTemplates(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorTemplates) {
    this._templates.internalValue = value;
  }
  public resetTemplates() {
    this._templates.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get templatesInput() {
    return this._templates.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTelemetryV2 {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#enabled DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTelemetryV2ToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTelemetryV2 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTelemetryV2ToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTelemetryV2 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTelemetryV2OutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTelemetryV2 | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTelemetryV2 | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._enabled = value.enabled;
    }
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsEnvironment {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#default_value DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#default_value}
  */
  readonly defaultValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsEnvironmentToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsEnvironment | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_value: cdktf.stringToTerraform(struct!.defaultValue),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsEnvironmentToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsEnvironment | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_value: {
      value: cdktf.stringToHclTerraform(struct!.defaultValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsEnvironmentOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsEnvironment | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultValue = this._defaultValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsEnvironment | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultValue = value.defaultValue;
      this._name = value.name;
    }
  }

  // default_value - computed: false, optional: true, required: false
  private _defaultValue?: string; 
  public get defaultValue() {
    return this.getStringAttribute('default_value');
  }
  public set defaultValue(value: string) {
    this._defaultValue = value;
  }
  public resetDefaultValue() {
    this._defaultValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultValueInput() {
    return this._defaultValue;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsHeader {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#default_value DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#default_value}
  */
  readonly defaultValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsHeaderToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_value: cdktf.stringToTerraform(struct!.defaultValue),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsHeaderToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_value: {
      value: cdktf.stringToHclTerraform(struct!.defaultValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsHeaderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsHeader | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultValue = this._defaultValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsHeader | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultValue = value.defaultValue;
      this._name = value.name;
    }
  }

  // default_value - computed: false, optional: true, required: false
  private _defaultValue?: string; 
  public get defaultValue() {
    return this.getStringAttribute('default_value');
  }
  public set defaultValue(value: string) {
    this._defaultValue = value;
  }
  public resetDefaultValue() {
    this._defaultValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultValueInput() {
    return this._defaultValue;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsLiteral {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#value DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsLiteralToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsLiteral | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsLiteralToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsLiteral | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsLiteralOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsLiteral | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsLiteral | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTags {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#environment DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#environment}
  */
  readonly environment?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsEnvironment;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#header DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#header}
  */
  readonly header?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsHeader;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#literal DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#literal}
  */
  readonly literal?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsLiteral;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    environment: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsEnvironmentToTerraform(struct!.environment),
    header: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsHeaderToTerraform(struct!.header),
    literal: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsLiteralToTerraform(struct!.literal),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTags | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    environment: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsEnvironmentToHclTerraform(struct!.environment),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsEnvironment",
    },
    header: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsHeaderToHclTerraform(struct!.header),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsHeader",
    },
    literal: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsLiteralToHclTerraform(struct!.literal),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsLiteral",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTags | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._environment?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.environment = this._environment?.internalValue;
    }
    if (this._header?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.header = this._header?.internalValue;
    }
    if (this._literal?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.literal = this._literal?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTags | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._environment.internalValue = undefined;
      this._header.internalValue = undefined;
      this._literal.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._environment.internalValue = value.environment;
      this._header.internalValue = value.header;
      this._literal.internalValue = value.literal;
    }
  }

  // environment - computed: false, optional: true, required: false
  private _environment = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsEnvironmentOutputReference(this, "environment");
  public get environment() {
    return this._environment;
  }
  public putEnvironment(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsEnvironment) {
    this._environment.internalValue = value;
  }
  public resetEnvironment() {
    this._environment.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get environmentInput() {
    return this._environment.internalValue;
  }

  // header - computed: false, optional: true, required: false
  private _header = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsHeaderOutputReference(this, "header");
  public get header() {
    return this._header;
  }
  public putHeader(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsHeader) {
    this._header.internalValue = value;
  }
  public resetHeader() {
    this._header.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerInput() {
    return this._header.internalValue;
  }

  // literal - computed: false, optional: true, required: false
  private _literal = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsLiteralOutputReference(this, "literal");
  public get literal() {
    return this._literal;
  }
  public putLiteral(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsLiteral) {
    this._literal.internalValue = value;
  }
  public resetLiteral() {
    this._literal.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get literalInput() {
    return this._literal.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerDatadog {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#address DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#address}
  */
  readonly address?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerDatadogToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerDatadog | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerDatadogToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerDatadog | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerDatadogOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerDatadog | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerDatadog | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerLightstep {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#access_token DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#access_token}
  */
  readonly accessToken?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#address DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#address}
  */
  readonly address?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerLightstepToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerLightstep | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_token: cdktf.stringToTerraform(struct!.accessToken),
    address: cdktf.stringToTerraform(struct!.address),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerLightstepToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerLightstep | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_token: {
      value: cdktf.stringToHclTerraform(struct!.accessToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerLightstepOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerLightstep | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessToken = this._accessToken;
    }
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerLightstep | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessToken = undefined;
      this._address = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessToken = value.accessToken;
      this._address = value.address;
    }
  }

  // access_token - computed: false, optional: true, required: false
  private _accessToken?: string; 
  public get accessToken() {
    return this.getStringAttribute('access_token');
  }
  public set accessToken(value: string) {
    this._accessToken = value;
  }
  public resetAccessToken() {
    this._accessToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessTokenInput() {
    return this._accessToken;
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOpenCensusAgent {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#address DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#context DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#context}
  */
  readonly context?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOpenCensusAgentToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOpenCensusAgent | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    context: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.context),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOpenCensusAgentToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOpenCensusAgent | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    context: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.context),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOpenCensusAgentOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOpenCensusAgent | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._context !== undefined) {
      hasAnyValues = true;
      internalValueResult.context = this._context;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOpenCensusAgent | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._context = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._context = value.context;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // context - computed: false, optional: true, required: false
  private _context?: string[]; 
  public get context() {
    return this.getListAttribute('context');
  }
  public set context(value: string[]) {
    this._context = value;
  }
  public resetContext() {
    this._context = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get contextInput() {
    return this._context;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerStackdriver {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#debug DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#debug}
  */
  readonly debug?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#max_number_of_annotations DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#max_number_of_annotations}
  */
  readonly maxNumberOfAnnotations?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#max_number_of_attributes DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#max_number_of_attributes}
  */
  readonly maxNumberOfAttributes?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#max_number_of_message_events DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#max_number_of_message_events}
  */
  readonly maxNumberOfMessageEvents?: number;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerStackdriverToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerStackdriver | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    debug: cdktf.booleanToTerraform(struct!.debug),
    max_number_of_annotations: cdktf.numberToTerraform(struct!.maxNumberOfAnnotations),
    max_number_of_attributes: cdktf.numberToTerraform(struct!.maxNumberOfAttributes),
    max_number_of_message_events: cdktf.numberToTerraform(struct!.maxNumberOfMessageEvents),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerStackdriverToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerStackdriver | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    debug: {
      value: cdktf.booleanToHclTerraform(struct!.debug),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    max_number_of_annotations: {
      value: cdktf.numberToHclTerraform(struct!.maxNumberOfAnnotations),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_number_of_attributes: {
      value: cdktf.numberToHclTerraform(struct!.maxNumberOfAttributes),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_number_of_message_events: {
      value: cdktf.numberToHclTerraform(struct!.maxNumberOfMessageEvents),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerStackdriverOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerStackdriver | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._debug !== undefined) {
      hasAnyValues = true;
      internalValueResult.debug = this._debug;
    }
    if (this._maxNumberOfAnnotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxNumberOfAnnotations = this._maxNumberOfAnnotations;
    }
    if (this._maxNumberOfAttributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxNumberOfAttributes = this._maxNumberOfAttributes;
    }
    if (this._maxNumberOfMessageEvents !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxNumberOfMessageEvents = this._maxNumberOfMessageEvents;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerStackdriver | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._debug = undefined;
      this._maxNumberOfAnnotations = undefined;
      this._maxNumberOfAttributes = undefined;
      this._maxNumberOfMessageEvents = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._debug = value.debug;
      this._maxNumberOfAnnotations = value.maxNumberOfAnnotations;
      this._maxNumberOfAttributes = value.maxNumberOfAttributes;
      this._maxNumberOfMessageEvents = value.maxNumberOfMessageEvents;
    }
  }

  // debug - computed: false, optional: true, required: false
  private _debug?: boolean | cdktf.IResolvable; 
  public get debug() {
    return this.getBooleanAttribute('debug');
  }
  public set debug(value: boolean | cdktf.IResolvable) {
    this._debug = value;
  }
  public resetDebug() {
    this._debug = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get debugInput() {
    return this._debug;
  }

  // max_number_of_annotations - computed: false, optional: true, required: false
  private _maxNumberOfAnnotations?: number; 
  public get maxNumberOfAnnotations() {
    return this.getNumberAttribute('max_number_of_annotations');
  }
  public set maxNumberOfAnnotations(value: number) {
    this._maxNumberOfAnnotations = value;
  }
  public resetMaxNumberOfAnnotations() {
    this._maxNumberOfAnnotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxNumberOfAnnotationsInput() {
    return this._maxNumberOfAnnotations;
  }

  // max_number_of_attributes - computed: false, optional: true, required: false
  private _maxNumberOfAttributes?: number; 
  public get maxNumberOfAttributes() {
    return this.getNumberAttribute('max_number_of_attributes');
  }
  public set maxNumberOfAttributes(value: number) {
    this._maxNumberOfAttributes = value;
  }
  public resetMaxNumberOfAttributes() {
    this._maxNumberOfAttributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxNumberOfAttributesInput() {
    return this._maxNumberOfAttributes;
  }

  // max_number_of_message_events - computed: false, optional: true, required: false
  private _maxNumberOfMessageEvents?: number; 
  public get maxNumberOfMessageEvents() {
    return this.getNumberAttribute('max_number_of_message_events');
  }
  public set maxNumberOfMessageEvents(value: number) {
    this._maxNumberOfMessageEvents = value;
  }
  public resetMaxNumberOfMessageEvents() {
    this._maxNumberOfMessageEvents = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxNumberOfMessageEventsInput() {
    return this._maxNumberOfMessageEvents;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerTlsSettings {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#ca_certificates DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#ca_certificates}
  */
  readonly caCertificates?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#client_certificate DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#client_certificate}
  */
  readonly clientCertificate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#credential_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#credential_name}
  */
  readonly credentialName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#insecure_skip_verify DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#insecure_skip_verify}
  */
  readonly insecureSkipVerify?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#private_key DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#private_key}
  */
  readonly privateKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#sni DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#sni}
  */
  readonly sni?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#subject_alt_names DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#subject_alt_names}
  */
  readonly subjectAltNames?: string[];
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerTlsSettingsToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerTlsSettings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ca_certificates: cdktf.stringToTerraform(struct!.caCertificates),
    client_certificate: cdktf.stringToTerraform(struct!.clientCertificate),
    credential_name: cdktf.stringToTerraform(struct!.credentialName),
    insecure_skip_verify: cdktf.booleanToTerraform(struct!.insecureSkipVerify),
    mode: cdktf.stringToTerraform(struct!.mode),
    private_key: cdktf.stringToTerraform(struct!.privateKey),
    sni: cdktf.stringToTerraform(struct!.sni),
    subject_alt_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.subjectAltNames),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerTlsSettingsToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerTlsSettings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ca_certificates: {
      value: cdktf.stringToHclTerraform(struct!.caCertificates),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_certificate: {
      value: cdktf.stringToHclTerraform(struct!.clientCertificate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    credential_name: {
      value: cdktf.stringToHclTerraform(struct!.credentialName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure_skip_verify: {
      value: cdktf.booleanToHclTerraform(struct!.insecureSkipVerify),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    private_key: {
      value: cdktf.stringToHclTerraform(struct!.privateKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sni: {
      value: cdktf.stringToHclTerraform(struct!.sni),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    subject_alt_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.subjectAltNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerTlsSettingsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerTlsSettings | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._caCertificates !== undefined) {
      hasAnyValues = true;
      internalValueResult.caCertificates = this._caCertificates;
    }
    if (this._clientCertificate !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientCertificate = this._clientCertificate;
    }
    if (this._credentialName !== undefined) {
      hasAnyValues = true;
      internalValueResult.credentialName = this._credentialName;
    }
    if (this._insecureSkipVerify !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecureSkipVerify = this._insecureSkipVerify;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._privateKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.privateKey = this._privateKey;
    }
    if (this._sni !== undefined) {
      hasAnyValues = true;
      internalValueResult.sni = this._sni;
    }
    if (this._subjectAltNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.subjectAltNames = this._subjectAltNames;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerTlsSettings | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._caCertificates = undefined;
      this._clientCertificate = undefined;
      this._credentialName = undefined;
      this._insecureSkipVerify = undefined;
      this._mode = undefined;
      this._privateKey = undefined;
      this._sni = undefined;
      this._subjectAltNames = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._caCertificates = value.caCertificates;
      this._clientCertificate = value.clientCertificate;
      this._credentialName = value.credentialName;
      this._insecureSkipVerify = value.insecureSkipVerify;
      this._mode = value.mode;
      this._privateKey = value.privateKey;
      this._sni = value.sni;
      this._subjectAltNames = value.subjectAltNames;
    }
  }

  // ca_certificates - computed: false, optional: true, required: false
  private _caCertificates?: string; 
  public get caCertificates() {
    return this.getStringAttribute('ca_certificates');
  }
  public set caCertificates(value: string) {
    this._caCertificates = value;
  }
  public resetCaCertificates() {
    this._caCertificates = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get caCertificatesInput() {
    return this._caCertificates;
  }

  // client_certificate - computed: false, optional: true, required: false
  private _clientCertificate?: string; 
  public get clientCertificate() {
    return this.getStringAttribute('client_certificate');
  }
  public set clientCertificate(value: string) {
    this._clientCertificate = value;
  }
  public resetClientCertificate() {
    this._clientCertificate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientCertificateInput() {
    return this._clientCertificate;
  }

  // credential_name - computed: false, optional: true, required: false
  private _credentialName?: string; 
  public get credentialName() {
    return this.getStringAttribute('credential_name');
  }
  public set credentialName(value: string) {
    this._credentialName = value;
  }
  public resetCredentialName() {
    this._credentialName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get credentialNameInput() {
    return this._credentialName;
  }

  // insecure_skip_verify - computed: false, optional: true, required: false
  private _insecureSkipVerify?: boolean | cdktf.IResolvable; 
  public get insecureSkipVerify() {
    return this.getBooleanAttribute('insecure_skip_verify');
  }
  public set insecureSkipVerify(value: boolean | cdktf.IResolvable) {
    this._insecureSkipVerify = value;
  }
  public resetInsecureSkipVerify() {
    this._insecureSkipVerify = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureSkipVerifyInput() {
    return this._insecureSkipVerify;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // private_key - computed: false, optional: true, required: false
  private _privateKey?: string; 
  public get privateKey() {
    return this.getStringAttribute('private_key');
  }
  public set privateKey(value: string) {
    this._privateKey = value;
  }
  public resetPrivateKey() {
    this._privateKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get privateKeyInput() {
    return this._privateKey;
  }

  // sni - computed: false, optional: true, required: false
  private _sni?: string; 
  public get sni() {
    return this.getStringAttribute('sni');
  }
  public set sni(value: string) {
    this._sni = value;
  }
  public resetSni() {
    this._sni = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sniInput() {
    return this._sni;
  }

  // subject_alt_names - computed: false, optional: true, required: false
  private _subjectAltNames?: string[]; 
  public get subjectAltNames() {
    return this.getListAttribute('subject_alt_names');
  }
  public set subjectAltNames(value: string[]) {
    this._subjectAltNames = value;
  }
  public resetSubjectAltNames() {
    this._subjectAltNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subjectAltNamesInput() {
    return this._subjectAltNames;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerZipkin {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#address DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#address}
  */
  readonly address?: string;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerZipkinToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerZipkin | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerZipkinToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerZipkin | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerZipkinOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerZipkin | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerZipkin | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracer {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#custom_tags DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#custom_tags}
  */
  readonly customTags?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTags;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#datadog DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#datadog}
  */
  readonly datadog?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerDatadog;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#lightstep DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#lightstep}
  */
  readonly lightstep?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerLightstep;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#max_path_tag_length DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#max_path_tag_length}
  */
  readonly maxPathTagLength?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#open_census_agent DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#open_census_agent}
  */
  readonly openCensusAgent?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOpenCensusAgent;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#sampling DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#sampling}
  */
  readonly sampling?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#stackdriver DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#stackdriver}
  */
  readonly stackdriver?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerStackdriver;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#tls_settings DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#tls_settings}
  */
  readonly tlsSettings?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerTlsSettings;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#zipkin DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#zipkin}
  */
  readonly zipkin?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerZipkin;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_tags: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsToTerraform(struct!.customTags),
    datadog: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerDatadogToTerraform(struct!.datadog),
    lightstep: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerLightstepToTerraform(struct!.lightstep),
    max_path_tag_length: cdktf.numberToTerraform(struct!.maxPathTagLength),
    open_census_agent: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOpenCensusAgentToTerraform(struct!.openCensusAgent),
    sampling: cdktf.numberToTerraform(struct!.sampling),
    stackdriver: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerStackdriverToTerraform(struct!.stackdriver),
    tls_settings: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerTlsSettingsToTerraform(struct!.tlsSettings),
    zipkin: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerZipkinToTerraform(struct!.zipkin),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_tags: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsToHclTerraform(struct!.customTags),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTags",
    },
    datadog: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerDatadogToHclTerraform(struct!.datadog),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerDatadog",
    },
    lightstep: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerLightstepToHclTerraform(struct!.lightstep),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerLightstep",
    },
    max_path_tag_length: {
      value: cdktf.numberToHclTerraform(struct!.maxPathTagLength),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    open_census_agent: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOpenCensusAgentToHclTerraform(struct!.openCensusAgent),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOpenCensusAgent",
    },
    sampling: {
      value: cdktf.numberToHclTerraform(struct!.sampling),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    stackdriver: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerStackdriverToHclTerraform(struct!.stackdriver),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerStackdriver",
    },
    tls_settings: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerTlsSettingsToHclTerraform(struct!.tlsSettings),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerTlsSettings",
    },
    zipkin: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerZipkinToHclTerraform(struct!.zipkin),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerZipkin",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracer | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customTags?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.customTags = this._customTags?.internalValue;
    }
    if (this._datadog?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.datadog = this._datadog?.internalValue;
    }
    if (this._lightstep?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.lightstep = this._lightstep?.internalValue;
    }
    if (this._maxPathTagLength !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxPathTagLength = this._maxPathTagLength;
    }
    if (this._openCensusAgent?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.openCensusAgent = this._openCensusAgent?.internalValue;
    }
    if (this._sampling !== undefined) {
      hasAnyValues = true;
      internalValueResult.sampling = this._sampling;
    }
    if (this._stackdriver?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.stackdriver = this._stackdriver?.internalValue;
    }
    if (this._tlsSettings?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tlsSettings = this._tlsSettings?.internalValue;
    }
    if (this._zipkin?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.zipkin = this._zipkin?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracer | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customTags.internalValue = undefined;
      this._datadog.internalValue = undefined;
      this._lightstep.internalValue = undefined;
      this._maxPathTagLength = undefined;
      this._openCensusAgent.internalValue = undefined;
      this._sampling = undefined;
      this._stackdriver.internalValue = undefined;
      this._tlsSettings.internalValue = undefined;
      this._zipkin.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customTags.internalValue = value.customTags;
      this._datadog.internalValue = value.datadog;
      this._lightstep.internalValue = value.lightstep;
      this._maxPathTagLength = value.maxPathTagLength;
      this._openCensusAgent.internalValue = value.openCensusAgent;
      this._sampling = value.sampling;
      this._stackdriver.internalValue = value.stackdriver;
      this._tlsSettings.internalValue = value.tlsSettings;
      this._zipkin.internalValue = value.zipkin;
    }
  }

  // custom_tags - computed: false, optional: true, required: false
  private _customTags = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTagsOutputReference(this, "custom_tags");
  public get customTags() {
    return this._customTags;
  }
  public putCustomTags(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerCustomTags) {
    this._customTags.internalValue = value;
  }
  public resetCustomTags() {
    this._customTags.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customTagsInput() {
    return this._customTags.internalValue;
  }

  // datadog - computed: false, optional: true, required: false
  private _datadog = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerDatadogOutputReference(this, "datadog");
  public get datadog() {
    return this._datadog;
  }
  public putDatadog(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerDatadog) {
    this._datadog.internalValue = value;
  }
  public resetDatadog() {
    this._datadog.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get datadogInput() {
    return this._datadog.internalValue;
  }

  // lightstep - computed: false, optional: true, required: false
  private _lightstep = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerLightstepOutputReference(this, "lightstep");
  public get lightstep() {
    return this._lightstep;
  }
  public putLightstep(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerLightstep) {
    this._lightstep.internalValue = value;
  }
  public resetLightstep() {
    this._lightstep.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lightstepInput() {
    return this._lightstep.internalValue;
  }

  // max_path_tag_length - computed: false, optional: true, required: false
  private _maxPathTagLength?: number; 
  public get maxPathTagLength() {
    return this.getNumberAttribute('max_path_tag_length');
  }
  public set maxPathTagLength(value: number) {
    this._maxPathTagLength = value;
  }
  public resetMaxPathTagLength() {
    this._maxPathTagLength = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxPathTagLengthInput() {
    return this._maxPathTagLength;
  }

  // open_census_agent - computed: false, optional: true, required: false
  private _openCensusAgent = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOpenCensusAgentOutputReference(this, "open_census_agent");
  public get openCensusAgent() {
    return this._openCensusAgent;
  }
  public putOpenCensusAgent(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOpenCensusAgent) {
    this._openCensusAgent.internalValue = value;
  }
  public resetOpenCensusAgent() {
    this._openCensusAgent.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get openCensusAgentInput() {
    return this._openCensusAgent.internalValue;
  }

  // sampling - computed: false, optional: true, required: false
  private _sampling?: number; 
  public get sampling() {
    return this.getNumberAttribute('sampling');
  }
  public set sampling(value: number) {
    this._sampling = value;
  }
  public resetSampling() {
    this._sampling = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get samplingInput() {
    return this._sampling;
  }

  // stackdriver - computed: false, optional: true, required: false
  private _stackdriver = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerStackdriverOutputReference(this, "stackdriver");
  public get stackdriver() {
    return this._stackdriver;
  }
  public putStackdriver(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerStackdriver) {
    this._stackdriver.internalValue = value;
  }
  public resetStackdriver() {
    this._stackdriver.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stackdriverInput() {
    return this._stackdriver.internalValue;
  }

  // tls_settings - computed: false, optional: true, required: false
  private _tlsSettings = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerTlsSettingsOutputReference(this, "tls_settings");
  public get tlsSettings() {
    return this._tlsSettings;
  }
  public putTlsSettings(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerTlsSettings) {
    this._tlsSettings.internalValue = value;
  }
  public resetTlsSettings() {
    this._tlsSettings.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlsSettingsInput() {
    return this._tlsSettings.internalValue;
  }

  // zipkin - computed: false, optional: true, required: false
  private _zipkin = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerZipkinOutputReference(this, "zipkin");
  public get zipkin() {
    return this._zipkin;
  }
  public putZipkin(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerZipkin) {
    this._zipkin.internalValue = value;
  }
  public resetZipkin() {
    this._zipkin.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get zipkinInput() {
    return this._zipkin.internalValue;
  }
}
export interface DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpec {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#ca_address DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#ca_address}
  */
  readonly caAddress?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#ca_provider DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#ca_provider}
  */
  readonly caProvider?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#cluster_id DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#cluster_id}
  */
  readonly clusterId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#container_image_configuration DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#container_image_configuration}
  */
  readonly containerImageConfiguration?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecContainerImageConfiguration;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#distribution DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#distribution}
  */
  readonly distribution?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#http_proxy_envs DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#http_proxy_envs}
  */
  readonly httpProxyEnvs?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecHttpProxyEnvs;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#istiod DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#istiod}
  */
  readonly istiod?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecIstiod;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#jwt_policy DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#jwt_policy}
  */
  readonly jwtPolicy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#k8s_resource_overlays DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#k8s_resource_overlays}
  */
  readonly k8SResourceOverlays?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecK8SResourceOverlays[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#logging DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#logging}
  */
  readonly logging?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecLogging;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mesh_config DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mesh_config}
  */
  readonly meshConfig?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshConfig;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mesh_expansion DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mesh_expansion}
  */
  readonly meshExpansion?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshExpansion;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mesh_id DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mesh_id}
  */
  readonly meshId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mode DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#mount_mtls_certs DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#mount_mtls_certs}
  */
  readonly mountMtlsCerts?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#network_name DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#network_name}
  */
  readonly networkName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#proxy DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#proxy}
  */
  readonly proxy?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#proxy_init DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#proxy_init}
  */
  readonly proxyInit?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInit;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#proxy_wasm DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#proxy_wasm}
  */
  readonly proxyWasm?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#sds DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#sds}
  */
  readonly sds?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSds;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#sidecar_injector DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#sidecar_injector}
  */
  readonly sidecarInjector?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#telemetry_v2 DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#telemetry_v2}
  */
  readonly telemetryV2?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTelemetryV2;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#tracer DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#tracer}
  */
  readonly tracer?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracer;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#version DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#version}
  */
  readonly version: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/servicemesh_cisco_com_peer_istio_control_plane_v1alpha1_manifest#watch_one_namespace DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1Manifest#watch_one_namespace}
  */
  readonly watchOneNamespace?: boolean | cdktf.IResolvable;
}

export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecToTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ca_address: cdktf.stringToTerraform(struct!.caAddress),
    ca_provider: cdktf.stringToTerraform(struct!.caProvider),
    cluster_id: cdktf.stringToTerraform(struct!.clusterId),
    container_image_configuration: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecContainerImageConfigurationToTerraform(struct!.containerImageConfiguration),
    distribution: cdktf.stringToTerraform(struct!.distribution),
    http_proxy_envs: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecHttpProxyEnvsToTerraform(struct!.httpProxyEnvs),
    istiod: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecIstiodToTerraform(struct!.istiod),
    jwt_policy: cdktf.stringToTerraform(struct!.jwtPolicy),
    k8s_resource_overlays: cdktf.listMapper(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecK8SResourceOverlaysToTerraform, false)(struct!.k8SResourceOverlays),
    logging: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecLoggingToTerraform(struct!.logging),
    mesh_config: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshConfigToTerraform(struct!.meshConfig),
    mesh_expansion: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshExpansionToTerraform(struct!.meshExpansion),
    mesh_id: cdktf.stringToTerraform(struct!.meshId),
    mode: cdktf.stringToTerraform(struct!.mode),
    mount_mtls_certs: cdktf.booleanToTerraform(struct!.mountMtlsCerts),
    network_name: cdktf.stringToTerraform(struct!.networkName),
    proxy: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyToTerraform(struct!.proxy),
    proxy_init: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitToTerraform(struct!.proxyInit),
    proxy_wasm: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasmToTerraform(struct!.proxyWasm),
    sds: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSdsToTerraform(struct!.sds),
    sidecar_injector: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorToTerraform(struct!.sidecarInjector),
    telemetry_v2: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTelemetryV2ToTerraform(struct!.telemetryV2),
    tracer: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerToTerraform(struct!.tracer),
    version: cdktf.stringToTerraform(struct!.version),
    watch_one_namespace: cdktf.booleanToTerraform(struct!.watchOneNamespace),
  }
}


export function dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecToHclTerraform(struct?: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ca_address: {
      value: cdktf.stringToHclTerraform(struct!.caAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ca_provider: {
      value: cdktf.stringToHclTerraform(struct!.caProvider),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    cluster_id: {
      value: cdktf.stringToHclTerraform(struct!.clusterId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    container_image_configuration: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecContainerImageConfigurationToHclTerraform(struct!.containerImageConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecContainerImageConfiguration",
    },
    distribution: {
      value: cdktf.stringToHclTerraform(struct!.distribution),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    http_proxy_envs: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecHttpProxyEnvsToHclTerraform(struct!.httpProxyEnvs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecHttpProxyEnvs",
    },
    istiod: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecIstiodToHclTerraform(struct!.istiod),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecIstiod",
    },
    jwt_policy: {
      value: cdktf.stringToHclTerraform(struct!.jwtPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    k8s_resource_overlays: {
      value: cdktf.listMapperHcl(dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecK8SResourceOverlaysToHclTerraform, false)(struct!.k8SResourceOverlays),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecK8SResourceOverlaysList",
    },
    logging: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecLoggingToHclTerraform(struct!.logging),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecLogging",
    },
    mesh_config: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshConfigToHclTerraform(struct!.meshConfig),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshConfig",
    },
    mesh_expansion: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshExpansionToHclTerraform(struct!.meshExpansion),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshExpansion",
    },
    mesh_id: {
      value: cdktf.stringToHclTerraform(struct!.meshId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mount_mtls_certs: {
      value: cdktf.booleanToHclTerraform(struct!.mountMtlsCerts),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    network_name: {
      value: cdktf.stringToHclTerraform(struct!.networkName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    proxy: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyToHclTerraform(struct!.proxy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxy",
    },
    proxy_init: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitToHclTerraform(struct!.proxyInit),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInit",
    },
    proxy_wasm: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasmToHclTerraform(struct!.proxyWasm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasm",
    },
    sds: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSdsToHclTerraform(struct!.sds),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSds",
    },
    sidecar_injector: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorToHclTerraform(struct!.sidecarInjector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjector",
    },
    telemetry_v2: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTelemetryV2ToHclTerraform(struct!.telemetryV2),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTelemetryV2",
    },
    tracer: {
      value: dataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerToHclTerraform(struct!.tracer),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracer",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    watch_one_namespace: {
      value: cdktf.booleanToHclTerraform(struct!.watchOneNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._caAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.caAddress = this._caAddress;
    }
    if (this._caProvider !== undefined) {
      hasAnyValues = true;
      internalValueResult.caProvider = this._caProvider;
    }
    if (this._clusterId !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterId = this._clusterId;
    }
    if (this._containerImageConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerImageConfiguration = this._containerImageConfiguration?.internalValue;
    }
    if (this._distribution !== undefined) {
      hasAnyValues = true;
      internalValueResult.distribution = this._distribution;
    }
    if (this._httpProxyEnvs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpProxyEnvs = this._httpProxyEnvs?.internalValue;
    }
    if (this._istiod?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.istiod = this._istiod?.internalValue;
    }
    if (this._jwtPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.jwtPolicy = this._jwtPolicy;
    }
    if (this._k8SResourceOverlays?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.k8SResourceOverlays = this._k8SResourceOverlays?.internalValue;
    }
    if (this._logging?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.logging = this._logging?.internalValue;
    }
    if (this._meshConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.meshConfig = this._meshConfig?.internalValue;
    }
    if (this._meshExpansion?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.meshExpansion = this._meshExpansion?.internalValue;
    }
    if (this._meshId !== undefined) {
      hasAnyValues = true;
      internalValueResult.meshId = this._meshId;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._mountMtlsCerts !== undefined) {
      hasAnyValues = true;
      internalValueResult.mountMtlsCerts = this._mountMtlsCerts;
    }
    if (this._networkName !== undefined) {
      hasAnyValues = true;
      internalValueResult.networkName = this._networkName;
    }
    if (this._proxy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.proxy = this._proxy?.internalValue;
    }
    if (this._proxyInit?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.proxyInit = this._proxyInit?.internalValue;
    }
    if (this._proxyWasm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.proxyWasm = this._proxyWasm?.internalValue;
    }
    if (this._sds?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sds = this._sds?.internalValue;
    }
    if (this._sidecarInjector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sidecarInjector = this._sidecarInjector?.internalValue;
    }
    if (this._telemetryV2?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.telemetryV2 = this._telemetryV2?.internalValue;
    }
    if (this._tracer?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tracer = this._tracer?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    if (this._watchOneNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.watchOneNamespace = this._watchOneNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._caAddress = undefined;
      this._caProvider = undefined;
      this._clusterId = undefined;
      this._containerImageConfiguration.internalValue = undefined;
      this._distribution = undefined;
      this._httpProxyEnvs.internalValue = undefined;
      this._istiod.internalValue = undefined;
      this._jwtPolicy = undefined;
      this._k8SResourceOverlays.internalValue = undefined;
      this._logging.internalValue = undefined;
      this._meshConfig.internalValue = undefined;
      this._meshExpansion.internalValue = undefined;
      this._meshId = undefined;
      this._mode = undefined;
      this._mountMtlsCerts = undefined;
      this._networkName = undefined;
      this._proxy.internalValue = undefined;
      this._proxyInit.internalValue = undefined;
      this._proxyWasm.internalValue = undefined;
      this._sds.internalValue = undefined;
      this._sidecarInjector.internalValue = undefined;
      this._telemetryV2.internalValue = undefined;
      this._tracer.internalValue = undefined;
      this._version = undefined;
      this._watchOneNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._caAddress = value.caAddress;
      this._caProvider = value.caProvider;
      this._clusterId = value.clusterId;
      this._containerImageConfiguration.internalValue = value.containerImageConfiguration;
      this._distribution = value.distribution;
      this._httpProxyEnvs.internalValue = value.httpProxyEnvs;
      this._istiod.internalValue = value.istiod;
      this._jwtPolicy = value.jwtPolicy;
      this._k8SResourceOverlays.internalValue = value.k8SResourceOverlays;
      this._logging.internalValue = value.logging;
      this._meshConfig.internalValue = value.meshConfig;
      this._meshExpansion.internalValue = value.meshExpansion;
      this._meshId = value.meshId;
      this._mode = value.mode;
      this._mountMtlsCerts = value.mountMtlsCerts;
      this._networkName = value.networkName;
      this._proxy.internalValue = value.proxy;
      this._proxyInit.internalValue = value.proxyInit;
      this._proxyWasm.internalValue = value.proxyWasm;
      this._sds.internalValue = value.sds;
      this._sidecarInjector.internalValue = value.sidecarInjector;
      this._telemetryV2.internalValue = value.telemetryV2;
      this._tracer.internalValue = value.tracer;
      this._version = value.version;
      this._watchOneNamespace = value.watchOneNamespace;
    }
  }

  // ca_address - computed: false, optional: true, required: false
  private _caAddress?: string; 
  public get caAddress() {
    return this.getStringAttribute('ca_address');
  }
  public set caAddress(value: string) {
    this._caAddress = value;
  }
  public resetCaAddress() {
    this._caAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get caAddressInput() {
    return this._caAddress;
  }

  // ca_provider - computed: false, optional: true, required: false
  private _caProvider?: string; 
  public get caProvider() {
    return this.getStringAttribute('ca_provider');
  }
  public set caProvider(value: string) {
    this._caProvider = value;
  }
  public resetCaProvider() {
    this._caProvider = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get caProviderInput() {
    return this._caProvider;
  }

  // cluster_id - computed: false, optional: true, required: false
  private _clusterId?: string; 
  public get clusterId() {
    return this.getStringAttribute('cluster_id');
  }
  public set clusterId(value: string) {
    this._clusterId = value;
  }
  public resetClusterId() {
    this._clusterId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterIdInput() {
    return this._clusterId;
  }

  // container_image_configuration - computed: false, optional: true, required: false
  private _containerImageConfiguration = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecContainerImageConfigurationOutputReference(this, "container_image_configuration");
  public get containerImageConfiguration() {
    return this._containerImageConfiguration;
  }
  public putContainerImageConfiguration(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecContainerImageConfiguration) {
    this._containerImageConfiguration.internalValue = value;
  }
  public resetContainerImageConfiguration() {
    this._containerImageConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerImageConfigurationInput() {
    return this._containerImageConfiguration.internalValue;
  }

  // distribution - computed: false, optional: true, required: false
  private _distribution?: string; 
  public get distribution() {
    return this.getStringAttribute('distribution');
  }
  public set distribution(value: string) {
    this._distribution = value;
  }
  public resetDistribution() {
    this._distribution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionInput() {
    return this._distribution;
  }

  // http_proxy_envs - computed: false, optional: true, required: false
  private _httpProxyEnvs = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecHttpProxyEnvsOutputReference(this, "http_proxy_envs");
  public get httpProxyEnvs() {
    return this._httpProxyEnvs;
  }
  public putHttpProxyEnvs(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecHttpProxyEnvs) {
    this._httpProxyEnvs.internalValue = value;
  }
  public resetHttpProxyEnvs() {
    this._httpProxyEnvs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpProxyEnvsInput() {
    return this._httpProxyEnvs.internalValue;
  }

  // istiod - computed: false, optional: true, required: false
  private _istiod = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecIstiodOutputReference(this, "istiod");
  public get istiod() {
    return this._istiod;
  }
  public putIstiod(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecIstiod) {
    this._istiod.internalValue = value;
  }
  public resetIstiod() {
    this._istiod.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get istiodInput() {
    return this._istiod.internalValue;
  }

  // jwt_policy - computed: false, optional: true, required: false
  private _jwtPolicy?: string; 
  public get jwtPolicy() {
    return this.getStringAttribute('jwt_policy');
  }
  public set jwtPolicy(value: string) {
    this._jwtPolicy = value;
  }
  public resetJwtPolicy() {
    this._jwtPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jwtPolicyInput() {
    return this._jwtPolicy;
  }

  // k8s_resource_overlays - computed: false, optional: true, required: false
  private _k8SResourceOverlays = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecK8SResourceOverlaysList(this, "k8s_resource_overlays", false);
  public get k8SResourceOverlays() {
    return this._k8SResourceOverlays;
  }
  public putK8SResourceOverlays(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecK8SResourceOverlays[] | cdktf.IResolvable) {
    this._k8SResourceOverlays.internalValue = value;
  }
  public resetK8SResourceOverlays() {
    this._k8SResourceOverlays.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get k8SResourceOverlaysInput() {
    return this._k8SResourceOverlays.internalValue;
  }

  // logging - computed: false, optional: true, required: false
  private _logging = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecLoggingOutputReference(this, "logging");
  public get logging() {
    return this._logging;
  }
  public putLogging(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecLogging) {
    this._logging.internalValue = value;
  }
  public resetLogging() {
    this._logging.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get loggingInput() {
    return this._logging.internalValue;
  }

  // mesh_config - computed: false, optional: true, required: false
  private _meshConfig = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshConfigOutputReference(this, "mesh_config");
  public get meshConfig() {
    return this._meshConfig;
  }
  public putMeshConfig(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshConfig) {
    this._meshConfig.internalValue = value;
  }
  public resetMeshConfig() {
    this._meshConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get meshConfigInput() {
    return this._meshConfig.internalValue;
  }

  // mesh_expansion - computed: false, optional: true, required: false
  private _meshExpansion = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshExpansionOutputReference(this, "mesh_expansion");
  public get meshExpansion() {
    return this._meshExpansion;
  }
  public putMeshExpansion(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecMeshExpansion) {
    this._meshExpansion.internalValue = value;
  }
  public resetMeshExpansion() {
    this._meshExpansion.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get meshExpansionInput() {
    return this._meshExpansion.internalValue;
  }

  // mesh_id - computed: false, optional: true, required: false
  private _meshId?: string; 
  public get meshId() {
    return this.getStringAttribute('mesh_id');
  }
  public set meshId(value: string) {
    this._meshId = value;
  }
  public resetMeshId() {
    this._meshId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get meshIdInput() {
    return this._meshId;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // mount_mtls_certs - computed: false, optional: true, required: false
  private _mountMtlsCerts?: boolean | cdktf.IResolvable; 
  public get mountMtlsCerts() {
    return this.getBooleanAttribute('mount_mtls_certs');
  }
  public set mountMtlsCerts(value: boolean | cdktf.IResolvable) {
    this._mountMtlsCerts = value;
  }
  public resetMountMtlsCerts() {
    this._mountMtlsCerts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mountMtlsCertsInput() {
    return this._mountMtlsCerts;
  }

  // network_name - computed: false, optional: true, required: false
  private _networkName?: string; 
  public get networkName() {
    return this.getStringAttribute('network_name');
  }
  public set networkName(value: string) {
    this._networkName = value;
  }
  public resetNetworkName() {
    this._networkName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get networkNameInput() {
    return this._networkName;
  }

  // proxy - computed: false, optional: true, required: false
  private _proxy = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyOutputReference(this, "proxy");
  public get proxy() {
    return this._proxy;
  }
  public putProxy(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxy) {
    this._proxy.internalValue = value;
  }
  public resetProxy() {
    this._proxy.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get proxyInput() {
    return this._proxy.internalValue;
  }

  // proxy_init - computed: false, optional: true, required: false
  private _proxyInit = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInitOutputReference(this, "proxy_init");
  public get proxyInit() {
    return this._proxyInit;
  }
  public putProxyInit(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyInit) {
    this._proxyInit.internalValue = value;
  }
  public resetProxyInit() {
    this._proxyInit.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get proxyInitInput() {
    return this._proxyInit.internalValue;
  }

  // proxy_wasm - computed: false, optional: true, required: false
  private _proxyWasm = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasmOutputReference(this, "proxy_wasm");
  public get proxyWasm() {
    return this._proxyWasm;
  }
  public putProxyWasm(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecProxyWasm) {
    this._proxyWasm.internalValue = value;
  }
  public resetProxyWasm() {
    this._proxyWasm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get proxyWasmInput() {
    return this._proxyWasm.internalValue;
  }

  // sds - computed: false, optional: true, required: false
  private _sds = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSdsOutputReference(this, "sds");
  public get sds() {
    return this._sds;
  }
  public putSds(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSds) {
    this._sds.internalValue = value;
  }
  public resetSds() {
    this._sds.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sdsInput() {
    return this._sds.internalValue;
  }

  // sidecar_injector - computed: false, optional: true, required: false
  private _sidecarInjector = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjectorOutputReference(this, "sidecar_injector");
  public get sidecarInjector() {
    return this._sidecarInjector;
  }
  public putSidecarInjector(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecSidecarInjector) {
    this._sidecarInjector.internalValue = value;
  }
  public resetSidecarInjector() {
    this._sidecarInjector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sidecarInjectorInput() {
    return this._sidecarInjector.internalValue;
  }

  // telemetry_v2 - computed: false, optional: true, required: false
  private _telemetryV2 = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTelemetryV2OutputReference(this, "telemetry_v2");
  public get telemetryV2() {
    return this._telemetryV2;
  }
  public putTelemetryV2(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTelemetryV2) {
    this._telemetryV2.internalValue = value;
  }
  public resetTelemetryV2() {
    this._telemetryV2.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get telemetryV2Input() {
    return this._telemetryV2.internalValue;
  }

  // tracer - computed: false, optional: true, required: false
  private _tracer = new DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracerOutputReference(this, "tracer");
  public get tracer() {
    return this._tracer;
  }
  public putTracer(value: DataK8SServicemeshCiscoComPeerIstioControlPlaneV1Alpha1ManifestSpecTracer) {
    this._tracer.internalValue = value;
  }
  public resetTracer() {
    this._tracer.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tracerInput() {
    return this._tracer.internalValue;
  }

  // version - computed: false, optional: false, required: true
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }

  // watch_one_namespace - computed: false, optional: true, required: false
  private _watchOneNamespace?: boolean | cdktf.IResolvable; 
  public get watchOneNamespace() {
    return this.getBooleanAttribute('watch_one_namespace');
  }
  public set watchOneNamespace(value: boolean | cdktf.IResolvable) {
    this._watchOneNamespace = value;
  }
  public resetWatchOneNamespace() {
    this._watchOneNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get watchOneNamespaceInput() {
    return this._watchOneNamespace;
  }
}
