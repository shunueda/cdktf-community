// https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestConfig extends cdktf.TerraformMetaArguments {
  /**
  * Data that helps uniquely identify this object. See https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#metadata DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#metadata}
  */
  readonly metadata: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#spec DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#spec}
  */
  readonly spec?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpec;
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestMetadata {
  /**
  * Keys and values that can be used by external tooling to store and retrieve arbitrary metadata about this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#annotations DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Keys and values that can be used to organize and categorize objects. See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#labels DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Unique identifier for this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * Namespaces provides a mechanism for isolating groups of resources within a single cluster. See https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#namespace DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#namespace}
  */
  readonly namespace: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestMetadataToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestMetadataToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._labels = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._labels = value.labels;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: false, required: true
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOwner {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOwnerToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOwner | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOwnerToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOwner | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOwnerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOwner | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOwner | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopes {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopes[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesData {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#_id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#owner DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#owner}
  */
  readonly owner?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOwner;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#owner_managed_access DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#owner_managed_access}
  */
  readonly ownerManagedAccess?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scopes}
  */
  readonly scopes?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopes[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#uris DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#uris}
  */
  readonly uris?: string[];
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    _id: cdktf.stringToTerraform(struct!.id),
    attributes: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.attributes),
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    name: cdktf.stringToTerraform(struct!.name),
    owner: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOwnerToTerraform(struct!.owner),
    owner_managed_access: cdktf.booleanToTerraform(struct!.ownerManagedAccess),
    scopes: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopesToTerraform, false)(struct!.scopes),
    type: cdktf.stringToTerraform(struct!.type),
    uris: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.uris),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    _id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    owner: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOwnerToHclTerraform(struct!.owner),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOwner",
    },
    owner_managed_access: {
      value: cdktf.booleanToHclTerraform(struct!.ownerManagedAccess),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    scopes: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopesToHclTerraform, false)(struct!.scopes),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopesList",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uris: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.uris),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesData | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._owner?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.owner = this._owner?.internalValue;
    }
    if (this._ownerManagedAccess !== undefined) {
      hasAnyValues = true;
      internalValueResult.ownerManagedAccess = this._ownerManagedAccess;
    }
    if (this._scopes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes?.internalValue;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._uris !== undefined) {
      hasAnyValues = true;
      internalValueResult.uris = this._uris;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesData | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._id = undefined;
      this._attributes = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._name = undefined;
      this._owner.internalValue = undefined;
      this._ownerManagedAccess = undefined;
      this._scopes.internalValue = undefined;
      this._type = undefined;
      this._uris = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._id = value.id;
      this._attributes = value.attributes;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._name = value.name;
      this._owner.internalValue = value.owner;
      this._ownerManagedAccess = value.ownerManagedAccess;
      this._scopes.internalValue = value.scopes;
      this._type = value.type;
      this._uris = value.uris;
    }
  }

  // _id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('_id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get attributes() {
    return this.interpolationForAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // owner - computed: false, optional: true, required: false
  private _owner = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOwnerOutputReference(this, "owner");
  public get owner() {
    return this._owner;
  }
  public putOwner(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOwner) {
    this._owner.internalValue = value;
  }
  public resetOwner() {
    this._owner.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerInput() {
    return this._owner.internalValue;
  }

  // owner_managed_access - computed: false, optional: true, required: false
  private _ownerManagedAccess?: boolean | cdktf.IResolvable; 
  public get ownerManagedAccess() {
    return this.getBooleanAttribute('owner_managed_access');
  }
  public set ownerManagedAccess(value: boolean | cdktf.IResolvable) {
    this._ownerManagedAccess = value;
  }
  public resetOwnerManagedAccess() {
    this._ownerManagedAccess = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerManagedAccessInput() {
    return this._ownerManagedAccess;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopesList(this, "scopes", false);
  public get scopes() {
    return this._scopes;
  }
  public putScopes(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataScopes[] | cdktf.IResolvable) {
    this._scopes.internalValue = value;
  }
  public resetScopes() {
    this._scopes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes.internalValue;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // uris - computed: false, optional: true, required: false
  private _uris?: string[]; 
  public get uris() {
    return this.getListAttribute('uris');
  }
  public set uris(value: string[]) {
    this._uris = value;
  }
  public resetUris() {
    this._uris = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urisInput() {
    return this._uris;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesData[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesData {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesDataToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesDataToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesDataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesData | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesData | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesDataList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesData[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesDataOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesDataOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPolicies {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#decision_strategy DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#decision_strategy}
  */
  readonly decisionStrategy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#description DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#logic DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#logic}
  */
  readonly logic?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#owner DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#owner}
  */
  readonly owner?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#policies DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#policies}
  */
  readonly policies?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#resources DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#resources}
  */
  readonly resources?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#resources_data DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#resources_data}
  */
  readonly resourcesData?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesData[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scopes}
  */
  readonly scopes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scopes_data DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scopes_data}
  */
  readonly scopesData?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesData[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPolicies | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.config),
    decision_strategy: cdktf.stringToTerraform(struct!.decisionStrategy),
    description: cdktf.stringToTerraform(struct!.description),
    id: cdktf.stringToTerraform(struct!.id),
    logic: cdktf.stringToTerraform(struct!.logic),
    name: cdktf.stringToTerraform(struct!.name),
    owner: cdktf.stringToTerraform(struct!.owner),
    policies: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.policies),
    resources: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.resources),
    resources_data: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataToTerraform, false)(struct!.resourcesData),
    scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.scopes),
    scopes_data: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesDataToTerraform, false)(struct!.scopesData),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPolicies | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    decision_strategy: {
      value: cdktf.stringToHclTerraform(struct!.decisionStrategy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    logic: {
      value: cdktf.stringToHclTerraform(struct!.logic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    owner: {
      value: cdktf.stringToHclTerraform(struct!.owner),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    policies: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.policies),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    resources: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.resources),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    resources_data: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataToHclTerraform, false)(struct!.resourcesData),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataList",
    },
    scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.scopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    scopes_data: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesDataToHclTerraform, false)(struct!.scopesData),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesDataList",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPolicies | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._decisionStrategy !== undefined) {
      hasAnyValues = true;
      internalValueResult.decisionStrategy = this._decisionStrategy;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._logic !== undefined) {
      hasAnyValues = true;
      internalValueResult.logic = this._logic;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._owner !== undefined) {
      hasAnyValues = true;
      internalValueResult.owner = this._owner;
    }
    if (this._policies !== undefined) {
      hasAnyValues = true;
      internalValueResult.policies = this._policies;
    }
    if (this._resources !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources;
    }
    if (this._resourcesData?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourcesData = this._resourcesData?.internalValue;
    }
    if (this._scopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes;
    }
    if (this._scopesData?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopesData = this._scopesData?.internalValue;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPolicies | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._config = undefined;
      this._decisionStrategy = undefined;
      this._description = undefined;
      this._id = undefined;
      this._logic = undefined;
      this._name = undefined;
      this._owner = undefined;
      this._policies = undefined;
      this._resources = undefined;
      this._resourcesData.internalValue = undefined;
      this._scopes = undefined;
      this._scopesData.internalValue = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._config = value.config;
      this._decisionStrategy = value.decisionStrategy;
      this._description = value.description;
      this._id = value.id;
      this._logic = value.logic;
      this._name = value.name;
      this._owner = value.owner;
      this._policies = value.policies;
      this._resources = value.resources;
      this._resourcesData.internalValue = value.resourcesData;
      this._scopes = value.scopes;
      this._scopesData.internalValue = value.scopesData;
      this._type = value.type;
    }
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string }; 
  public get config() {
    return this.getStringMapAttribute('config');
  }
  public set config(value: { [key: string]: string }) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // decision_strategy - computed: false, optional: true, required: false
  private _decisionStrategy?: string; 
  public get decisionStrategy() {
    return this.getStringAttribute('decision_strategy');
  }
  public set decisionStrategy(value: string) {
    this._decisionStrategy = value;
  }
  public resetDecisionStrategy() {
    this._decisionStrategy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get decisionStrategyInput() {
    return this._decisionStrategy;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // logic - computed: false, optional: true, required: false
  private _logic?: string; 
  public get logic() {
    return this.getStringAttribute('logic');
  }
  public set logic(value: string) {
    this._logic = value;
  }
  public resetLogic() {
    this._logic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logicInput() {
    return this._logic;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // owner - computed: false, optional: true, required: false
  private _owner?: string; 
  public get owner() {
    return this.getStringAttribute('owner');
  }
  public set owner(value: string) {
    this._owner = value;
  }
  public resetOwner() {
    this._owner = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerInput() {
    return this._owner;
  }

  // policies - computed: false, optional: true, required: false
  private _policies?: string[]; 
  public get policies() {
    return this.getListAttribute('policies');
  }
  public set policies(value: string[]) {
    this._policies = value;
  }
  public resetPolicies() {
    this._policies = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get policiesInput() {
    return this._policies;
  }

  // resources - computed: false, optional: true, required: false
  private _resources?: string[]; 
  public get resources() {
    return this.getListAttribute('resources');
  }
  public set resources(value: string[]) {
    this._resources = value;
  }
  public resetResources() {
    this._resources = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources;
  }

  // resources_data - computed: false, optional: true, required: false
  private _resourcesData = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesDataList(this, "resources_data", false);
  public get resourcesData() {
    return this._resourcesData;
  }
  public putResourcesData(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesResourcesData[] | cdktf.IResolvable) {
    this._resourcesData.internalValue = value;
  }
  public resetResourcesData() {
    this._resourcesData.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesDataInput() {
    return this._resourcesData.internalValue;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes?: string[]; 
  public get scopes() {
    return this.getListAttribute('scopes');
  }
  public set scopes(value: string[]) {
    this._scopes = value;
  }
  public resetScopes() {
    this._scopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes;
  }

  // scopes_data - computed: false, optional: true, required: false
  private _scopesData = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesDataList(this, "scopes_data", false);
  public get scopesData() {
    return this._scopesData;
  }
  public putScopesData(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesScopesData[] | cdktf.IResolvable) {
    this._scopesData.internalValue = value;
  }
  public resetScopesData() {
    this._scopesData.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesDataInput() {
    return this._scopesData.internalValue;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPolicies[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOwner {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOwnerToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOwner | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOwnerToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOwner | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOwnerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOwner | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOwner | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopes {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopes[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResources {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#_id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#owner DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#owner}
  */
  readonly owner?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOwner;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#owner_managed_access DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#owner_managed_access}
  */
  readonly ownerManagedAccess?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scopes}
  */
  readonly scopes?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopes[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#uris DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#uris}
  */
  readonly uris?: string[];
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    _id: cdktf.stringToTerraform(struct!.id),
    attributes: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.attributes),
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    name: cdktf.stringToTerraform(struct!.name),
    owner: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOwnerToTerraform(struct!.owner),
    owner_managed_access: cdktf.booleanToTerraform(struct!.ownerManagedAccess),
    scopes: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopesToTerraform, false)(struct!.scopes),
    type: cdktf.stringToTerraform(struct!.type),
    uris: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.uris),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    _id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    owner: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOwnerToHclTerraform(struct!.owner),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOwner",
    },
    owner_managed_access: {
      value: cdktf.booleanToHclTerraform(struct!.ownerManagedAccess),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    scopes: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopesToHclTerraform, false)(struct!.scopes),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopesList",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uris: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.uris),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._owner?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.owner = this._owner?.internalValue;
    }
    if (this._ownerManagedAccess !== undefined) {
      hasAnyValues = true;
      internalValueResult.ownerManagedAccess = this._ownerManagedAccess;
    }
    if (this._scopes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes?.internalValue;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._uris !== undefined) {
      hasAnyValues = true;
      internalValueResult.uris = this._uris;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._id = undefined;
      this._attributes = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._name = undefined;
      this._owner.internalValue = undefined;
      this._ownerManagedAccess = undefined;
      this._scopes.internalValue = undefined;
      this._type = undefined;
      this._uris = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._id = value.id;
      this._attributes = value.attributes;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._name = value.name;
      this._owner.internalValue = value.owner;
      this._ownerManagedAccess = value.ownerManagedAccess;
      this._scopes.internalValue = value.scopes;
      this._type = value.type;
      this._uris = value.uris;
    }
  }

  // _id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('_id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get attributes() {
    return this.interpolationForAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // owner - computed: false, optional: true, required: false
  private _owner = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOwnerOutputReference(this, "owner");
  public get owner() {
    return this._owner;
  }
  public putOwner(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOwner) {
    this._owner.internalValue = value;
  }
  public resetOwner() {
    this._owner.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerInput() {
    return this._owner.internalValue;
  }

  // owner_managed_access - computed: false, optional: true, required: false
  private _ownerManagedAccess?: boolean | cdktf.IResolvable; 
  public get ownerManagedAccess() {
    return this.getBooleanAttribute('owner_managed_access');
  }
  public set ownerManagedAccess(value: boolean | cdktf.IResolvable) {
    this._ownerManagedAccess = value;
  }
  public resetOwnerManagedAccess() {
    this._ownerManagedAccess = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerManagedAccessInput() {
    return this._ownerManagedAccess;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopesList(this, "scopes", false);
  public get scopes() {
    return this._scopes;
  }
  public putScopes(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesScopes[] | cdktf.IResolvable) {
    this._scopes.internalValue = value;
  }
  public resetScopes() {
    this._scopes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes.internalValue;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // uris - computed: false, optional: true, required: false
  private _uris?: string[]; 
  public get uris() {
    return this.getListAttribute('uris');
  }
  public set uris(value: string[]) {
    this._uris = value;
  }
  public resetUris() {
    this._uris = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urisInput() {
    return this._uris;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResources[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopes {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopes[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettings {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#allow_remote_resource_management DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#allow_remote_resource_management}
  */
  readonly allowRemoteResourceManagement?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_id}
  */
  readonly clientId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#decision_strategy DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#decision_strategy}
  */
  readonly decisionStrategy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#policies DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#policies}
  */
  readonly policies?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPolicies[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#policy_enforcement_mode DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#policy_enforcement_mode}
  */
  readonly policyEnforcementMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#resources DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#resources}
  */
  readonly resources?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResources[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scopes}
  */
  readonly scopes?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopes[] | cdktf.IResolvable;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_remote_resource_management: cdktf.booleanToTerraform(struct!.allowRemoteResourceManagement),
    client_id: cdktf.stringToTerraform(struct!.clientId),
    decision_strategy: cdktf.stringToTerraform(struct!.decisionStrategy),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
    policies: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesToTerraform, false)(struct!.policies),
    policy_enforcement_mode: cdktf.stringToTerraform(struct!.policyEnforcementMode),
    resources: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesToTerraform, false)(struct!.resources),
    scopes: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopesToTerraform, false)(struct!.scopes),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_remote_resource_management: {
      value: cdktf.booleanToHclTerraform(struct!.allowRemoteResourceManagement),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    client_id: {
      value: cdktf.stringToHclTerraform(struct!.clientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    decision_strategy: {
      value: cdktf.stringToHclTerraform(struct!.decisionStrategy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    policies: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesToHclTerraform, false)(struct!.policies),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesList",
    },
    policy_enforcement_mode: {
      value: cdktf.stringToHclTerraform(struct!.policyEnforcementMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resources: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesToHclTerraform, false)(struct!.resources),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesList",
    },
    scopes: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopesToHclTerraform, false)(struct!.scopes),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettings | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowRemoteResourceManagement !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowRemoteResourceManagement = this._allowRemoteResourceManagement;
    }
    if (this._clientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientId = this._clientId;
    }
    if (this._decisionStrategy !== undefined) {
      hasAnyValues = true;
      internalValueResult.decisionStrategy = this._decisionStrategy;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._policies?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.policies = this._policies?.internalValue;
    }
    if (this._policyEnforcementMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.policyEnforcementMode = this._policyEnforcementMode;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._scopes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettings | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowRemoteResourceManagement = undefined;
      this._clientId = undefined;
      this._decisionStrategy = undefined;
      this._id = undefined;
      this._name = undefined;
      this._policies.internalValue = undefined;
      this._policyEnforcementMode = undefined;
      this._resources.internalValue = undefined;
      this._scopes.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowRemoteResourceManagement = value.allowRemoteResourceManagement;
      this._clientId = value.clientId;
      this._decisionStrategy = value.decisionStrategy;
      this._id = value.id;
      this._name = value.name;
      this._policies.internalValue = value.policies;
      this._policyEnforcementMode = value.policyEnforcementMode;
      this._resources.internalValue = value.resources;
      this._scopes.internalValue = value.scopes;
    }
  }

  // allow_remote_resource_management - computed: false, optional: true, required: false
  private _allowRemoteResourceManagement?: boolean | cdktf.IResolvable; 
  public get allowRemoteResourceManagement() {
    return this.getBooleanAttribute('allow_remote_resource_management');
  }
  public set allowRemoteResourceManagement(value: boolean | cdktf.IResolvable) {
    this._allowRemoteResourceManagement = value;
  }
  public resetAllowRemoteResourceManagement() {
    this._allowRemoteResourceManagement = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowRemoteResourceManagementInput() {
    return this._allowRemoteResourceManagement;
  }

  // client_id - computed: false, optional: true, required: false
  private _clientId?: string; 
  public get clientId() {
    return this.getStringAttribute('client_id');
  }
  public set clientId(value: string) {
    this._clientId = value;
  }
  public resetClientId() {
    this._clientId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientIdInput() {
    return this._clientId;
  }

  // decision_strategy - computed: false, optional: true, required: false
  private _decisionStrategy?: string; 
  public get decisionStrategy() {
    return this.getStringAttribute('decision_strategy');
  }
  public set decisionStrategy(value: string) {
    this._decisionStrategy = value;
  }
  public resetDecisionStrategy() {
    this._decisionStrategy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get decisionStrategyInput() {
    return this._decisionStrategy;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // policies - computed: false, optional: true, required: false
  private _policies = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPoliciesList(this, "policies", false);
  public get policies() {
    return this._policies;
  }
  public putPolicies(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsPolicies[] | cdktf.IResolvable) {
    this._policies.internalValue = value;
  }
  public resetPolicies() {
    this._policies.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get policiesInput() {
    return this._policies.internalValue;
  }

  // policy_enforcement_mode - computed: false, optional: true, required: false
  private _policyEnforcementMode?: string; 
  public get policyEnforcementMode() {
    return this.getStringAttribute('policy_enforcement_mode');
  }
  public set policyEnforcementMode(value: string) {
    this._policyEnforcementMode = value;
  }
  public resetPolicyEnforcementMode() {
    this._policyEnforcementMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get policyEnforcementModeInput() {
    return this._policyEnforcementMode;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResourcesList(this, "resources", false);
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsResources[] | cdktf.IResolvable) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopesList(this, "scopes", false);
  public get scopes() {
    return this._scopes;
  }
  public putScopes(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsScopes[] | cdktf.IResolvable) {
    this._scopes.internalValue = value;
  }
  public resetScopes() {
    this._scopes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes.internalValue;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsClaims {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#address DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#address}
  */
  readonly address?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#email DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#email}
  */
  readonly email?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#gender DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#gender}
  */
  readonly gender?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#locale DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#locale}
  */
  readonly locale?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#phone DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#phone}
  */
  readonly phone?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#picture DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#picture}
  */
  readonly picture?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#profile DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#profile}
  */
  readonly profile?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#username DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#username}
  */
  readonly username?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#website DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#website}
  */
  readonly website?: boolean | cdktf.IResolvable;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsClaimsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.booleanToTerraform(struct!.address),
    email: cdktf.booleanToTerraform(struct!.email),
    gender: cdktf.booleanToTerraform(struct!.gender),
    locale: cdktf.booleanToTerraform(struct!.locale),
    name: cdktf.booleanToTerraform(struct!.name),
    phone: cdktf.booleanToTerraform(struct!.phone),
    picture: cdktf.booleanToTerraform(struct!.picture),
    profile: cdktf.booleanToTerraform(struct!.profile),
    username: cdktf.booleanToTerraform(struct!.username),
    website: cdktf.booleanToTerraform(struct!.website),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsClaimsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.booleanToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    email: {
      value: cdktf.booleanToHclTerraform(struct!.email),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    gender: {
      value: cdktf.booleanToHclTerraform(struct!.gender),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    locale: {
      value: cdktf.booleanToHclTerraform(struct!.locale),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.booleanToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    phone: {
      value: cdktf.booleanToHclTerraform(struct!.phone),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    picture: {
      value: cdktf.booleanToHclTerraform(struct!.picture),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    profile: {
      value: cdktf.booleanToHclTerraform(struct!.profile),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    username: {
      value: cdktf.booleanToHclTerraform(struct!.username),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    website: {
      value: cdktf.booleanToHclTerraform(struct!.website),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsClaimsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsClaims | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._email !== undefined) {
      hasAnyValues = true;
      internalValueResult.email = this._email;
    }
    if (this._gender !== undefined) {
      hasAnyValues = true;
      internalValueResult.gender = this._gender;
    }
    if (this._locale !== undefined) {
      hasAnyValues = true;
      internalValueResult.locale = this._locale;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._phone !== undefined) {
      hasAnyValues = true;
      internalValueResult.phone = this._phone;
    }
    if (this._picture !== undefined) {
      hasAnyValues = true;
      internalValueResult.picture = this._picture;
    }
    if (this._profile !== undefined) {
      hasAnyValues = true;
      internalValueResult.profile = this._profile;
    }
    if (this._username !== undefined) {
      hasAnyValues = true;
      internalValueResult.username = this._username;
    }
    if (this._website !== undefined) {
      hasAnyValues = true;
      internalValueResult.website = this._website;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsClaims | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._email = undefined;
      this._gender = undefined;
      this._locale = undefined;
      this._name = undefined;
      this._phone = undefined;
      this._picture = undefined;
      this._profile = undefined;
      this._username = undefined;
      this._website = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._email = value.email;
      this._gender = value.gender;
      this._locale = value.locale;
      this._name = value.name;
      this._phone = value.phone;
      this._picture = value.picture;
      this._profile = value.profile;
      this._username = value.username;
      this._website = value.website;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: boolean | cdktf.IResolvable; 
  public get address() {
    return this.getBooleanAttribute('address');
  }
  public set address(value: boolean | cdktf.IResolvable) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // email - computed: false, optional: true, required: false
  private _email?: boolean | cdktf.IResolvable; 
  public get email() {
    return this.getBooleanAttribute('email');
  }
  public set email(value: boolean | cdktf.IResolvable) {
    this._email = value;
  }
  public resetEmail() {
    this._email = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emailInput() {
    return this._email;
  }

  // gender - computed: false, optional: true, required: false
  private _gender?: boolean | cdktf.IResolvable; 
  public get gender() {
    return this.getBooleanAttribute('gender');
  }
  public set gender(value: boolean | cdktf.IResolvable) {
    this._gender = value;
  }
  public resetGender() {
    this._gender = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get genderInput() {
    return this._gender;
  }

  // locale - computed: false, optional: true, required: false
  private _locale?: boolean | cdktf.IResolvable; 
  public get locale() {
    return this.getBooleanAttribute('locale');
  }
  public set locale(value: boolean | cdktf.IResolvable) {
    this._locale = value;
  }
  public resetLocale() {
    this._locale = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localeInput() {
    return this._locale;
  }

  // name - computed: false, optional: true, required: false
  private _name?: boolean | cdktf.IResolvable; 
  public get name() {
    return this.getBooleanAttribute('name');
  }
  public set name(value: boolean | cdktf.IResolvable) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // phone - computed: false, optional: true, required: false
  private _phone?: boolean | cdktf.IResolvable; 
  public get phone() {
    return this.getBooleanAttribute('phone');
  }
  public set phone(value: boolean | cdktf.IResolvable) {
    this._phone = value;
  }
  public resetPhone() {
    this._phone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get phoneInput() {
    return this._phone;
  }

  // picture - computed: false, optional: true, required: false
  private _picture?: boolean | cdktf.IResolvable; 
  public get picture() {
    return this.getBooleanAttribute('picture');
  }
  public set picture(value: boolean | cdktf.IResolvable) {
    this._picture = value;
  }
  public resetPicture() {
    this._picture = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pictureInput() {
    return this._picture;
  }

  // profile - computed: false, optional: true, required: false
  private _profile?: boolean | cdktf.IResolvable; 
  public get profile() {
    return this.getBooleanAttribute('profile');
  }
  public set profile(value: boolean | cdktf.IResolvable) {
    this._profile = value;
  }
  public resetProfile() {
    this._profile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get profileInput() {
    return this._profile;
  }

  // username - computed: false, optional: true, required: false
  private _username?: boolean | cdktf.IResolvable; 
  public get username() {
    return this.getBooleanAttribute('username');
  }
  public set username(value: boolean | cdktf.IResolvable) {
    this._username = value;
  }
  public resetUsername() {
    this._username = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usernameInput() {
    return this._username;
  }

  // website - computed: false, optional: true, required: false
  private _website?: boolean | cdktf.IResolvable; 
  public get website() {
    return this.getBooleanAttribute('website');
  }
  public set website(value: boolean | cdktf.IResolvable) {
    this._website = value;
  }
  public resetWebsite() {
    this._website = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get websiteInput() {
    return this._website;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_required}
  */
  readonly consentRequired?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_text DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_text}
  */
  readonly consentText?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol}
  */
  readonly protocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol_mapper DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol_mapper}
  */
  readonly protocolMapper?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappersToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.config),
    consent_required: cdktf.booleanToTerraform(struct!.consentRequired),
    consent_text: cdktf.stringToTerraform(struct!.consentText),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
    protocol: cdktf.stringToTerraform(struct!.protocol),
    protocol_mapper: cdktf.stringToTerraform(struct!.protocolMapper),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappersToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    consent_required: {
      value: cdktf.booleanToHclTerraform(struct!.consentRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    consent_text: {
      value: cdktf.stringToHclTerraform(struct!.consentText),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol: {
      value: cdktf.stringToHclTerraform(struct!.protocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol_mapper: {
      value: cdktf.stringToHclTerraform(struct!.protocolMapper),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._consentRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentRequired = this._consentRequired;
    }
    if (this._consentText !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentText = this._consentText;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._protocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocol = this._protocol;
    }
    if (this._protocolMapper !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocolMapper = this._protocolMapper;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._config = undefined;
      this._consentRequired = undefined;
      this._consentText = undefined;
      this._id = undefined;
      this._name = undefined;
      this._protocol = undefined;
      this._protocolMapper = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._config = value.config;
      this._consentRequired = value.consentRequired;
      this._consentText = value.consentText;
      this._id = value.id;
      this._name = value.name;
      this._protocol = value.protocol;
      this._protocolMapper = value.protocolMapper;
    }
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string }; 
  public get config() {
    return this.getStringMapAttribute('config');
  }
  public set config(value: { [key: string]: string }) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // consent_required - computed: false, optional: true, required: false
  private _consentRequired?: boolean | cdktf.IResolvable; 
  public get consentRequired() {
    return this.getBooleanAttribute('consent_required');
  }
  public set consentRequired(value: boolean | cdktf.IResolvable) {
    this._consentRequired = value;
  }
  public resetConsentRequired() {
    this._consentRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentRequiredInput() {
    return this._consentRequired;
  }

  // consent_text - computed: false, optional: true, required: false
  private _consentText?: string; 
  public get consentText() {
    return this.getStringAttribute('consent_text');
  }
  public set consentText(value: string) {
    this._consentText = value;
  }
  public resetConsentText() {
    this._consentText = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentTextInput() {
    return this._consentText;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // protocol - computed: false, optional: true, required: false
  private _protocol?: string; 
  public get protocol() {
    return this.getStringAttribute('protocol');
  }
  public set protocol(value: string) {
    this._protocol = value;
  }
  public resetProtocol() {
    this._protocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolInput() {
    return this._protocol;
  }

  // protocol_mapper - computed: false, optional: true, required: false
  private _protocolMapper?: string; 
  public get protocolMapper() {
    return this.getStringAttribute('protocol_mapper');
  }
  public set protocolMapper(value: string) {
    this._protocolMapper = value;
  }
  public resetProtocolMapper() {
    this._protocolMapper = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolMapperInput() {
    return this._protocolMapper;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappersList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappersOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplications {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#access DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#access}
  */
  readonly access?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#admin_url DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#admin_url}
  */
  readonly adminUrl?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#always_display_in_console DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#always_display_in_console}
  */
  readonly alwaysDisplayInConsole?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authentication_flow_binding_overrides DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authentication_flow_binding_overrides}
  */
  readonly authenticationFlowBindingOverrides?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authorization_services_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authorization_services_enabled}
  */
  readonly authorizationServicesEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authorization_settings DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authorization_settings}
  */
  readonly authorizationSettings?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettings;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#base_url DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#base_url}
  */
  readonly baseUrl?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#bearer_only DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#bearer_only}
  */
  readonly bearerOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#claims DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#claims}
  */
  readonly claims?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsClaims;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_authenticator_type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_authenticator_type}
  */
  readonly clientAuthenticatorType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_id}
  */
  readonly clientId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_template DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_template}
  */
  readonly clientTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_required}
  */
  readonly consentRequired?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#default_client_scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#default_client_scopes}
  */
  readonly defaultClientScopes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#default_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#default_roles}
  */
  readonly defaultRoles?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#description DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#direct_access_grants_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#direct_access_grants_enabled}
  */
  readonly directAccessGrantsEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#direct_grants_only DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#direct_grants_only}
  */
  readonly directGrantsOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#frontchannel_logout DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#frontchannel_logout}
  */
  readonly frontchannelLogout?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#full_scope_allowed DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#full_scope_allowed}
  */
  readonly fullScopeAllowed?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#implicit_flow_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#implicit_flow_enabled}
  */
  readonly implicitFlowEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#node_re_registration_timeout DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#node_re_registration_timeout}
  */
  readonly nodeReRegistrationTimeout?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#not_before DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#not_before}
  */
  readonly notBefore?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#oauth2_device_authorization_grant_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#oauth2_device_authorization_grant_enabled}
  */
  readonly oauth2DeviceAuthorizationGrantEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#optional_client_scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#optional_client_scopes}
  */
  readonly optionalClientScopes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#origin DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#origin}
  */
  readonly origin?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol}
  */
  readonly protocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol_mappers DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol_mappers}
  */
  readonly protocolMappers?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#public_client DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#public_client}
  */
  readonly publicClient?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#redirect_uris DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#redirect_uris}
  */
  readonly redirectUris?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#registered_nodes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#registered_nodes}
  */
  readonly registeredNodes?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#registration_access_token DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#registration_access_token}
  */
  readonly registrationAccessToken?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#root_url DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#root_url}
  */
  readonly rootUrl?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#secret DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#secret}
  */
  readonly secret?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#service_accounts_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#service_accounts_enabled}
  */
  readonly serviceAccountsEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#standard_flow_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#standard_flow_enabled}
  */
  readonly standardFlowEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#surrogate_auth_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#surrogate_auth_required}
  */
  readonly surrogateAuthRequired?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#use_template_config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#use_template_config}
  */
  readonly useTemplateConfig?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#use_template_mappers DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#use_template_mappers}
  */
  readonly useTemplateMappers?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#use_template_scope DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#use_template_scope}
  */
  readonly useTemplateScope?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_origins DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_origins}
  */
  readonly webOrigins?: string[];
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplications | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.access),
    admin_url: cdktf.stringToTerraform(struct!.adminUrl),
    always_display_in_console: cdktf.booleanToTerraform(struct!.alwaysDisplayInConsole),
    attributes: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.attributes),
    authentication_flow_binding_overrides: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.authenticationFlowBindingOverrides),
    authorization_services_enabled: cdktf.booleanToTerraform(struct!.authorizationServicesEnabled),
    authorization_settings: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsToTerraform(struct!.authorizationSettings),
    base_url: cdktf.stringToTerraform(struct!.baseUrl),
    bearer_only: cdktf.booleanToTerraform(struct!.bearerOnly),
    claims: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsClaimsToTerraform(struct!.claims),
    client_authenticator_type: cdktf.stringToTerraform(struct!.clientAuthenticatorType),
    client_id: cdktf.stringToTerraform(struct!.clientId),
    client_template: cdktf.stringToTerraform(struct!.clientTemplate),
    consent_required: cdktf.booleanToTerraform(struct!.consentRequired),
    default_client_scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.defaultClientScopes),
    default_roles: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.defaultRoles),
    description: cdktf.stringToTerraform(struct!.description),
    direct_access_grants_enabled: cdktf.booleanToTerraform(struct!.directAccessGrantsEnabled),
    direct_grants_only: cdktf.booleanToTerraform(struct!.directGrantsOnly),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    frontchannel_logout: cdktf.booleanToTerraform(struct!.frontchannelLogout),
    full_scope_allowed: cdktf.booleanToTerraform(struct!.fullScopeAllowed),
    id: cdktf.stringToTerraform(struct!.id),
    implicit_flow_enabled: cdktf.booleanToTerraform(struct!.implicitFlowEnabled),
    name: cdktf.stringToTerraform(struct!.name),
    node_re_registration_timeout: cdktf.numberToTerraform(struct!.nodeReRegistrationTimeout),
    not_before: cdktf.numberToTerraform(struct!.notBefore),
    oauth2_device_authorization_grant_enabled: cdktf.booleanToTerraform(struct!.oauth2DeviceAuthorizationGrantEnabled),
    optional_client_scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.optionalClientScopes),
    origin: cdktf.stringToTerraform(struct!.origin),
    protocol: cdktf.stringToTerraform(struct!.protocol),
    protocol_mappers: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappersToTerraform, false)(struct!.protocolMappers),
    public_client: cdktf.booleanToTerraform(struct!.publicClient),
    redirect_uris: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.redirectUris),
    registered_nodes: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.registeredNodes),
    registration_access_token: cdktf.stringToTerraform(struct!.registrationAccessToken),
    root_url: cdktf.stringToTerraform(struct!.rootUrl),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_accounts_enabled: cdktf.booleanToTerraform(struct!.serviceAccountsEnabled),
    standard_flow_enabled: cdktf.booleanToTerraform(struct!.standardFlowEnabled),
    surrogate_auth_required: cdktf.booleanToTerraform(struct!.surrogateAuthRequired),
    use_template_config: cdktf.booleanToTerraform(struct!.useTemplateConfig),
    use_template_mappers: cdktf.booleanToTerraform(struct!.useTemplateMappers),
    use_template_scope: cdktf.booleanToTerraform(struct!.useTemplateScope),
    web_origins: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.webOrigins),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplications | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.access),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    admin_url: {
      value: cdktf.stringToHclTerraform(struct!.adminUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    always_display_in_console: {
      value: cdktf.booleanToHclTerraform(struct!.alwaysDisplayInConsole),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    authentication_flow_binding_overrides: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.authenticationFlowBindingOverrides),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    authorization_services_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.authorizationServicesEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    authorization_settings: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsToHclTerraform(struct!.authorizationSettings),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettings",
    },
    base_url: {
      value: cdktf.stringToHclTerraform(struct!.baseUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    bearer_only: {
      value: cdktf.booleanToHclTerraform(struct!.bearerOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    claims: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsClaimsToHclTerraform(struct!.claims),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsClaims",
    },
    client_authenticator_type: {
      value: cdktf.stringToHclTerraform(struct!.clientAuthenticatorType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_id: {
      value: cdktf.stringToHclTerraform(struct!.clientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_template: {
      value: cdktf.stringToHclTerraform(struct!.clientTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    consent_required: {
      value: cdktf.booleanToHclTerraform(struct!.consentRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    default_client_scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.defaultClientScopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    default_roles: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.defaultRoles),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    direct_access_grants_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.directAccessGrantsEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    direct_grants_only: {
      value: cdktf.booleanToHclTerraform(struct!.directGrantsOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    frontchannel_logout: {
      value: cdktf.booleanToHclTerraform(struct!.frontchannelLogout),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    full_scope_allowed: {
      value: cdktf.booleanToHclTerraform(struct!.fullScopeAllowed),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    implicit_flow_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.implicitFlowEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_re_registration_timeout: {
      value: cdktf.numberToHclTerraform(struct!.nodeReRegistrationTimeout),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    not_before: {
      value: cdktf.numberToHclTerraform(struct!.notBefore),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    oauth2_device_authorization_grant_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.oauth2DeviceAuthorizationGrantEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    optional_client_scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.optionalClientScopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    origin: {
      value: cdktf.stringToHclTerraform(struct!.origin),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol: {
      value: cdktf.stringToHclTerraform(struct!.protocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol_mappers: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappersToHclTerraform, false)(struct!.protocolMappers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappersList",
    },
    public_client: {
      value: cdktf.booleanToHclTerraform(struct!.publicClient),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    redirect_uris: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.redirectUris),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    registered_nodes: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.registeredNodes),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    registration_access_token: {
      value: cdktf.stringToHclTerraform(struct!.registrationAccessToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    root_url: {
      value: cdktf.stringToHclTerraform(struct!.rootUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_accounts_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.serviceAccountsEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    standard_flow_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.standardFlowEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    surrogate_auth_required: {
      value: cdktf.booleanToHclTerraform(struct!.surrogateAuthRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_template_config: {
      value: cdktf.booleanToHclTerraform(struct!.useTemplateConfig),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_template_mappers: {
      value: cdktf.booleanToHclTerraform(struct!.useTemplateMappers),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_template_scope: {
      value: cdktf.booleanToHclTerraform(struct!.useTemplateScope),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    web_origins: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.webOrigins),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplications | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._access !== undefined) {
      hasAnyValues = true;
      internalValueResult.access = this._access;
    }
    if (this._adminUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUrl = this._adminUrl;
    }
    if (this._alwaysDisplayInConsole !== undefined) {
      hasAnyValues = true;
      internalValueResult.alwaysDisplayInConsole = this._alwaysDisplayInConsole;
    }
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._authenticationFlowBindingOverrides !== undefined) {
      hasAnyValues = true;
      internalValueResult.authenticationFlowBindingOverrides = this._authenticationFlowBindingOverrides;
    }
    if (this._authorizationServicesEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.authorizationServicesEnabled = this._authorizationServicesEnabled;
    }
    if (this._authorizationSettings?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authorizationSettings = this._authorizationSettings?.internalValue;
    }
    if (this._baseUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.baseUrl = this._baseUrl;
    }
    if (this._bearerOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.bearerOnly = this._bearerOnly;
    }
    if (this._claims?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.claims = this._claims?.internalValue;
    }
    if (this._clientAuthenticatorType !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientAuthenticatorType = this._clientAuthenticatorType;
    }
    if (this._clientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientId = this._clientId;
    }
    if (this._clientTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientTemplate = this._clientTemplate;
    }
    if (this._consentRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentRequired = this._consentRequired;
    }
    if (this._defaultClientScopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultClientScopes = this._defaultClientScopes;
    }
    if (this._defaultRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultRoles = this._defaultRoles;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._directAccessGrantsEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.directAccessGrantsEnabled = this._directAccessGrantsEnabled;
    }
    if (this._directGrantsOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.directGrantsOnly = this._directGrantsOnly;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._frontchannelLogout !== undefined) {
      hasAnyValues = true;
      internalValueResult.frontchannelLogout = this._frontchannelLogout;
    }
    if (this._fullScopeAllowed !== undefined) {
      hasAnyValues = true;
      internalValueResult.fullScopeAllowed = this._fullScopeAllowed;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._implicitFlowEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.implicitFlowEnabled = this._implicitFlowEnabled;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._nodeReRegistrationTimeout !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeReRegistrationTimeout = this._nodeReRegistrationTimeout;
    }
    if (this._notBefore !== undefined) {
      hasAnyValues = true;
      internalValueResult.notBefore = this._notBefore;
    }
    if (this._oauth2DeviceAuthorizationGrantEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.oauth2DeviceAuthorizationGrantEnabled = this._oauth2DeviceAuthorizationGrantEnabled;
    }
    if (this._optionalClientScopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.optionalClientScopes = this._optionalClientScopes;
    }
    if (this._origin !== undefined) {
      hasAnyValues = true;
      internalValueResult.origin = this._origin;
    }
    if (this._protocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocol = this._protocol;
    }
    if (this._protocolMappers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocolMappers = this._protocolMappers?.internalValue;
    }
    if (this._publicClient !== undefined) {
      hasAnyValues = true;
      internalValueResult.publicClient = this._publicClient;
    }
    if (this._redirectUris !== undefined) {
      hasAnyValues = true;
      internalValueResult.redirectUris = this._redirectUris;
    }
    if (this._registeredNodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.registeredNodes = this._registeredNodes;
    }
    if (this._registrationAccessToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.registrationAccessToken = this._registrationAccessToken;
    }
    if (this._rootUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.rootUrl = this._rootUrl;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccountsEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountsEnabled = this._serviceAccountsEnabled;
    }
    if (this._standardFlowEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.standardFlowEnabled = this._standardFlowEnabled;
    }
    if (this._surrogateAuthRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.surrogateAuthRequired = this._surrogateAuthRequired;
    }
    if (this._useTemplateConfig !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTemplateConfig = this._useTemplateConfig;
    }
    if (this._useTemplateMappers !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTemplateMappers = this._useTemplateMappers;
    }
    if (this._useTemplateScope !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTemplateScope = this._useTemplateScope;
    }
    if (this._webOrigins !== undefined) {
      hasAnyValues = true;
      internalValueResult.webOrigins = this._webOrigins;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplications | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._access = undefined;
      this._adminUrl = undefined;
      this._alwaysDisplayInConsole = undefined;
      this._attributes = undefined;
      this._authenticationFlowBindingOverrides = undefined;
      this._authorizationServicesEnabled = undefined;
      this._authorizationSettings.internalValue = undefined;
      this._baseUrl = undefined;
      this._bearerOnly = undefined;
      this._claims.internalValue = undefined;
      this._clientAuthenticatorType = undefined;
      this._clientId = undefined;
      this._clientTemplate = undefined;
      this._consentRequired = undefined;
      this._defaultClientScopes = undefined;
      this._defaultRoles = undefined;
      this._description = undefined;
      this._directAccessGrantsEnabled = undefined;
      this._directGrantsOnly = undefined;
      this._enabled = undefined;
      this._frontchannelLogout = undefined;
      this._fullScopeAllowed = undefined;
      this._id = undefined;
      this._implicitFlowEnabled = undefined;
      this._name = undefined;
      this._nodeReRegistrationTimeout = undefined;
      this._notBefore = undefined;
      this._oauth2DeviceAuthorizationGrantEnabled = undefined;
      this._optionalClientScopes = undefined;
      this._origin = undefined;
      this._protocol = undefined;
      this._protocolMappers.internalValue = undefined;
      this._publicClient = undefined;
      this._redirectUris = undefined;
      this._registeredNodes = undefined;
      this._registrationAccessToken = undefined;
      this._rootUrl = undefined;
      this._secret = undefined;
      this._serviceAccountsEnabled = undefined;
      this._standardFlowEnabled = undefined;
      this._surrogateAuthRequired = undefined;
      this._useTemplateConfig = undefined;
      this._useTemplateMappers = undefined;
      this._useTemplateScope = undefined;
      this._webOrigins = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._access = value.access;
      this._adminUrl = value.adminUrl;
      this._alwaysDisplayInConsole = value.alwaysDisplayInConsole;
      this._attributes = value.attributes;
      this._authenticationFlowBindingOverrides = value.authenticationFlowBindingOverrides;
      this._authorizationServicesEnabled = value.authorizationServicesEnabled;
      this._authorizationSettings.internalValue = value.authorizationSettings;
      this._baseUrl = value.baseUrl;
      this._bearerOnly = value.bearerOnly;
      this._claims.internalValue = value.claims;
      this._clientAuthenticatorType = value.clientAuthenticatorType;
      this._clientId = value.clientId;
      this._clientTemplate = value.clientTemplate;
      this._consentRequired = value.consentRequired;
      this._defaultClientScopes = value.defaultClientScopes;
      this._defaultRoles = value.defaultRoles;
      this._description = value.description;
      this._directAccessGrantsEnabled = value.directAccessGrantsEnabled;
      this._directGrantsOnly = value.directGrantsOnly;
      this._enabled = value.enabled;
      this._frontchannelLogout = value.frontchannelLogout;
      this._fullScopeAllowed = value.fullScopeAllowed;
      this._id = value.id;
      this._implicitFlowEnabled = value.implicitFlowEnabled;
      this._name = value.name;
      this._nodeReRegistrationTimeout = value.nodeReRegistrationTimeout;
      this._notBefore = value.notBefore;
      this._oauth2DeviceAuthorizationGrantEnabled = value.oauth2DeviceAuthorizationGrantEnabled;
      this._optionalClientScopes = value.optionalClientScopes;
      this._origin = value.origin;
      this._protocol = value.protocol;
      this._protocolMappers.internalValue = value.protocolMappers;
      this._publicClient = value.publicClient;
      this._redirectUris = value.redirectUris;
      this._registeredNodes = value.registeredNodes;
      this._registrationAccessToken = value.registrationAccessToken;
      this._rootUrl = value.rootUrl;
      this._secret = value.secret;
      this._serviceAccountsEnabled = value.serviceAccountsEnabled;
      this._standardFlowEnabled = value.standardFlowEnabled;
      this._surrogateAuthRequired = value.surrogateAuthRequired;
      this._useTemplateConfig = value.useTemplateConfig;
      this._useTemplateMappers = value.useTemplateMappers;
      this._useTemplateScope = value.useTemplateScope;
      this._webOrigins = value.webOrigins;
    }
  }

  // access - computed: false, optional: true, required: false
  private _access?: { [key: string]: string }; 
  public get access() {
    return this.getStringMapAttribute('access');
  }
  public set access(value: { [key: string]: string }) {
    this._access = value;
  }
  public resetAccess() {
    this._access = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessInput() {
    return this._access;
  }

  // admin_url - computed: false, optional: true, required: false
  private _adminUrl?: string; 
  public get adminUrl() {
    return this.getStringAttribute('admin_url');
  }
  public set adminUrl(value: string) {
    this._adminUrl = value;
  }
  public resetAdminUrl() {
    this._adminUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUrlInput() {
    return this._adminUrl;
  }

  // always_display_in_console - computed: false, optional: true, required: false
  private _alwaysDisplayInConsole?: boolean | cdktf.IResolvable; 
  public get alwaysDisplayInConsole() {
    return this.getBooleanAttribute('always_display_in_console');
  }
  public set alwaysDisplayInConsole(value: boolean | cdktf.IResolvable) {
    this._alwaysDisplayInConsole = value;
  }
  public resetAlwaysDisplayInConsole() {
    this._alwaysDisplayInConsole = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get alwaysDisplayInConsoleInput() {
    return this._alwaysDisplayInConsole;
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string }; 
  public get attributes() {
    return this.getStringMapAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string }) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // authentication_flow_binding_overrides - computed: false, optional: true, required: false
  private _authenticationFlowBindingOverrides?: { [key: string]: string }; 
  public get authenticationFlowBindingOverrides() {
    return this.getStringMapAttribute('authentication_flow_binding_overrides');
  }
  public set authenticationFlowBindingOverrides(value: { [key: string]: string }) {
    this._authenticationFlowBindingOverrides = value;
  }
  public resetAuthenticationFlowBindingOverrides() {
    this._authenticationFlowBindingOverrides = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authenticationFlowBindingOverridesInput() {
    return this._authenticationFlowBindingOverrides;
  }

  // authorization_services_enabled - computed: false, optional: true, required: false
  private _authorizationServicesEnabled?: boolean | cdktf.IResolvable; 
  public get authorizationServicesEnabled() {
    return this.getBooleanAttribute('authorization_services_enabled');
  }
  public set authorizationServicesEnabled(value: boolean | cdktf.IResolvable) {
    this._authorizationServicesEnabled = value;
  }
  public resetAuthorizationServicesEnabled() {
    this._authorizationServicesEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authorizationServicesEnabledInput() {
    return this._authorizationServicesEnabled;
  }

  // authorization_settings - computed: false, optional: true, required: false
  private _authorizationSettings = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettingsOutputReference(this, "authorization_settings");
  public get authorizationSettings() {
    return this._authorizationSettings;
  }
  public putAuthorizationSettings(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsAuthorizationSettings) {
    this._authorizationSettings.internalValue = value;
  }
  public resetAuthorizationSettings() {
    this._authorizationSettings.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authorizationSettingsInput() {
    return this._authorizationSettings.internalValue;
  }

  // base_url - computed: false, optional: true, required: false
  private _baseUrl?: string; 
  public get baseUrl() {
    return this.getStringAttribute('base_url');
  }
  public set baseUrl(value: string) {
    this._baseUrl = value;
  }
  public resetBaseUrl() {
    this._baseUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get baseUrlInput() {
    return this._baseUrl;
  }

  // bearer_only - computed: false, optional: true, required: false
  private _bearerOnly?: boolean | cdktf.IResolvable; 
  public get bearerOnly() {
    return this.getBooleanAttribute('bearer_only');
  }
  public set bearerOnly(value: boolean | cdktf.IResolvable) {
    this._bearerOnly = value;
  }
  public resetBearerOnly() {
    this._bearerOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bearerOnlyInput() {
    return this._bearerOnly;
  }

  // claims - computed: false, optional: true, required: false
  private _claims = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsClaimsOutputReference(this, "claims");
  public get claims() {
    return this._claims;
  }
  public putClaims(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsClaims) {
    this._claims.internalValue = value;
  }
  public resetClaims() {
    this._claims.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get claimsInput() {
    return this._claims.internalValue;
  }

  // client_authenticator_type - computed: false, optional: true, required: false
  private _clientAuthenticatorType?: string; 
  public get clientAuthenticatorType() {
    return this.getStringAttribute('client_authenticator_type');
  }
  public set clientAuthenticatorType(value: string) {
    this._clientAuthenticatorType = value;
  }
  public resetClientAuthenticatorType() {
    this._clientAuthenticatorType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientAuthenticatorTypeInput() {
    return this._clientAuthenticatorType;
  }

  // client_id - computed: false, optional: true, required: false
  private _clientId?: string; 
  public get clientId() {
    return this.getStringAttribute('client_id');
  }
  public set clientId(value: string) {
    this._clientId = value;
  }
  public resetClientId() {
    this._clientId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientIdInput() {
    return this._clientId;
  }

  // client_template - computed: false, optional: true, required: false
  private _clientTemplate?: string; 
  public get clientTemplate() {
    return this.getStringAttribute('client_template');
  }
  public set clientTemplate(value: string) {
    this._clientTemplate = value;
  }
  public resetClientTemplate() {
    this._clientTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientTemplateInput() {
    return this._clientTemplate;
  }

  // consent_required - computed: false, optional: true, required: false
  private _consentRequired?: boolean | cdktf.IResolvable; 
  public get consentRequired() {
    return this.getBooleanAttribute('consent_required');
  }
  public set consentRequired(value: boolean | cdktf.IResolvable) {
    this._consentRequired = value;
  }
  public resetConsentRequired() {
    this._consentRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentRequiredInput() {
    return this._consentRequired;
  }

  // default_client_scopes - computed: false, optional: true, required: false
  private _defaultClientScopes?: string[]; 
  public get defaultClientScopes() {
    return this.getListAttribute('default_client_scopes');
  }
  public set defaultClientScopes(value: string[]) {
    this._defaultClientScopes = value;
  }
  public resetDefaultClientScopes() {
    this._defaultClientScopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultClientScopesInput() {
    return this._defaultClientScopes;
  }

  // default_roles - computed: false, optional: true, required: false
  private _defaultRoles?: string[]; 
  public get defaultRoles() {
    return this.getListAttribute('default_roles');
  }
  public set defaultRoles(value: string[]) {
    this._defaultRoles = value;
  }
  public resetDefaultRoles() {
    this._defaultRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultRolesInput() {
    return this._defaultRoles;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // direct_access_grants_enabled - computed: false, optional: true, required: false
  private _directAccessGrantsEnabled?: boolean | cdktf.IResolvable; 
  public get directAccessGrantsEnabled() {
    return this.getBooleanAttribute('direct_access_grants_enabled');
  }
  public set directAccessGrantsEnabled(value: boolean | cdktf.IResolvable) {
    this._directAccessGrantsEnabled = value;
  }
  public resetDirectAccessGrantsEnabled() {
    this._directAccessGrantsEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directAccessGrantsEnabledInput() {
    return this._directAccessGrantsEnabled;
  }

  // direct_grants_only - computed: false, optional: true, required: false
  private _directGrantsOnly?: boolean | cdktf.IResolvable; 
  public get directGrantsOnly() {
    return this.getBooleanAttribute('direct_grants_only');
  }
  public set directGrantsOnly(value: boolean | cdktf.IResolvable) {
    this._directGrantsOnly = value;
  }
  public resetDirectGrantsOnly() {
    this._directGrantsOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directGrantsOnlyInput() {
    return this._directGrantsOnly;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // frontchannel_logout - computed: false, optional: true, required: false
  private _frontchannelLogout?: boolean | cdktf.IResolvable; 
  public get frontchannelLogout() {
    return this.getBooleanAttribute('frontchannel_logout');
  }
  public set frontchannelLogout(value: boolean | cdktf.IResolvable) {
    this._frontchannelLogout = value;
  }
  public resetFrontchannelLogout() {
    this._frontchannelLogout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get frontchannelLogoutInput() {
    return this._frontchannelLogout;
  }

  // full_scope_allowed - computed: false, optional: true, required: false
  private _fullScopeAllowed?: boolean | cdktf.IResolvable; 
  public get fullScopeAllowed() {
    return this.getBooleanAttribute('full_scope_allowed');
  }
  public set fullScopeAllowed(value: boolean | cdktf.IResolvable) {
    this._fullScopeAllowed = value;
  }
  public resetFullScopeAllowed() {
    this._fullScopeAllowed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fullScopeAllowedInput() {
    return this._fullScopeAllowed;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // implicit_flow_enabled - computed: false, optional: true, required: false
  private _implicitFlowEnabled?: boolean | cdktf.IResolvable; 
  public get implicitFlowEnabled() {
    return this.getBooleanAttribute('implicit_flow_enabled');
  }
  public set implicitFlowEnabled(value: boolean | cdktf.IResolvable) {
    this._implicitFlowEnabled = value;
  }
  public resetImplicitFlowEnabled() {
    this._implicitFlowEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get implicitFlowEnabledInput() {
    return this._implicitFlowEnabled;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // node_re_registration_timeout - computed: false, optional: true, required: false
  private _nodeReRegistrationTimeout?: number; 
  public get nodeReRegistrationTimeout() {
    return this.getNumberAttribute('node_re_registration_timeout');
  }
  public set nodeReRegistrationTimeout(value: number) {
    this._nodeReRegistrationTimeout = value;
  }
  public resetNodeReRegistrationTimeout() {
    this._nodeReRegistrationTimeout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeReRegistrationTimeoutInput() {
    return this._nodeReRegistrationTimeout;
  }

  // not_before - computed: false, optional: true, required: false
  private _notBefore?: number; 
  public get notBefore() {
    return this.getNumberAttribute('not_before');
  }
  public set notBefore(value: number) {
    this._notBefore = value;
  }
  public resetNotBefore() {
    this._notBefore = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get notBeforeInput() {
    return this._notBefore;
  }

  // oauth2_device_authorization_grant_enabled - computed: false, optional: true, required: false
  private _oauth2DeviceAuthorizationGrantEnabled?: boolean | cdktf.IResolvable; 
  public get oauth2DeviceAuthorizationGrantEnabled() {
    return this.getBooleanAttribute('oauth2_device_authorization_grant_enabled');
  }
  public set oauth2DeviceAuthorizationGrantEnabled(value: boolean | cdktf.IResolvable) {
    this._oauth2DeviceAuthorizationGrantEnabled = value;
  }
  public resetOauth2DeviceAuthorizationGrantEnabled() {
    this._oauth2DeviceAuthorizationGrantEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get oauth2DeviceAuthorizationGrantEnabledInput() {
    return this._oauth2DeviceAuthorizationGrantEnabled;
  }

  // optional_client_scopes - computed: false, optional: true, required: false
  private _optionalClientScopes?: string[]; 
  public get optionalClientScopes() {
    return this.getListAttribute('optional_client_scopes');
  }
  public set optionalClientScopes(value: string[]) {
    this._optionalClientScopes = value;
  }
  public resetOptionalClientScopes() {
    this._optionalClientScopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalClientScopesInput() {
    return this._optionalClientScopes;
  }

  // origin - computed: false, optional: true, required: false
  private _origin?: string; 
  public get origin() {
    return this.getStringAttribute('origin');
  }
  public set origin(value: string) {
    this._origin = value;
  }
  public resetOrigin() {
    this._origin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get originInput() {
    return this._origin;
  }

  // protocol - computed: false, optional: true, required: false
  private _protocol?: string; 
  public get protocol() {
    return this.getStringAttribute('protocol');
  }
  public set protocol(value: string) {
    this._protocol = value;
  }
  public resetProtocol() {
    this._protocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolInput() {
    return this._protocol;
  }

  // protocol_mappers - computed: false, optional: true, required: false
  private _protocolMappers = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappersList(this, "protocol_mappers", false);
  public get protocolMappers() {
    return this._protocolMappers;
  }
  public putProtocolMappers(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsProtocolMappers[] | cdktf.IResolvable) {
    this._protocolMappers.internalValue = value;
  }
  public resetProtocolMappers() {
    this._protocolMappers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolMappersInput() {
    return this._protocolMappers.internalValue;
  }

  // public_client - computed: false, optional: true, required: false
  private _publicClient?: boolean | cdktf.IResolvable; 
  public get publicClient() {
    return this.getBooleanAttribute('public_client');
  }
  public set publicClient(value: boolean | cdktf.IResolvable) {
    this._publicClient = value;
  }
  public resetPublicClient() {
    this._publicClient = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get publicClientInput() {
    return this._publicClient;
  }

  // redirect_uris - computed: false, optional: true, required: false
  private _redirectUris?: string[]; 
  public get redirectUris() {
    return this.getListAttribute('redirect_uris');
  }
  public set redirectUris(value: string[]) {
    this._redirectUris = value;
  }
  public resetRedirectUris() {
    this._redirectUris = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get redirectUrisInput() {
    return this._redirectUris;
  }

  // registered_nodes - computed: false, optional: true, required: false
  private _registeredNodes?: { [key: string]: string }; 
  public get registeredNodes() {
    return this.getStringMapAttribute('registered_nodes');
  }
  public set registeredNodes(value: { [key: string]: string }) {
    this._registeredNodes = value;
  }
  public resetRegisteredNodes() {
    this._registeredNodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get registeredNodesInput() {
    return this._registeredNodes;
  }

  // registration_access_token - computed: false, optional: true, required: false
  private _registrationAccessToken?: string; 
  public get registrationAccessToken() {
    return this.getStringAttribute('registration_access_token');
  }
  public set registrationAccessToken(value: string) {
    this._registrationAccessToken = value;
  }
  public resetRegistrationAccessToken() {
    this._registrationAccessToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get registrationAccessTokenInput() {
    return this._registrationAccessToken;
  }

  // root_url - computed: false, optional: true, required: false
  private _rootUrl?: string; 
  public get rootUrl() {
    return this.getStringAttribute('root_url');
  }
  public set rootUrl(value: string) {
    this._rootUrl = value;
  }
  public resetRootUrl() {
    this._rootUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rootUrlInput() {
    return this._rootUrl;
  }

  // secret - computed: false, optional: true, required: false
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  public resetSecret() {
    this._secret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_accounts_enabled - computed: false, optional: true, required: false
  private _serviceAccountsEnabled?: boolean | cdktf.IResolvable; 
  public get serviceAccountsEnabled() {
    return this.getBooleanAttribute('service_accounts_enabled');
  }
  public set serviceAccountsEnabled(value: boolean | cdktf.IResolvable) {
    this._serviceAccountsEnabled = value;
  }
  public resetServiceAccountsEnabled() {
    this._serviceAccountsEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountsEnabledInput() {
    return this._serviceAccountsEnabled;
  }

  // standard_flow_enabled - computed: false, optional: true, required: false
  private _standardFlowEnabled?: boolean | cdktf.IResolvable; 
  public get standardFlowEnabled() {
    return this.getBooleanAttribute('standard_flow_enabled');
  }
  public set standardFlowEnabled(value: boolean | cdktf.IResolvable) {
    this._standardFlowEnabled = value;
  }
  public resetStandardFlowEnabled() {
    this._standardFlowEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get standardFlowEnabledInput() {
    return this._standardFlowEnabled;
  }

  // surrogate_auth_required - computed: false, optional: true, required: false
  private _surrogateAuthRequired?: boolean | cdktf.IResolvable; 
  public get surrogateAuthRequired() {
    return this.getBooleanAttribute('surrogate_auth_required');
  }
  public set surrogateAuthRequired(value: boolean | cdktf.IResolvable) {
    this._surrogateAuthRequired = value;
  }
  public resetSurrogateAuthRequired() {
    this._surrogateAuthRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get surrogateAuthRequiredInput() {
    return this._surrogateAuthRequired;
  }

  // use_template_config - computed: false, optional: true, required: false
  private _useTemplateConfig?: boolean | cdktf.IResolvable; 
  public get useTemplateConfig() {
    return this.getBooleanAttribute('use_template_config');
  }
  public set useTemplateConfig(value: boolean | cdktf.IResolvable) {
    this._useTemplateConfig = value;
  }
  public resetUseTemplateConfig() {
    this._useTemplateConfig = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTemplateConfigInput() {
    return this._useTemplateConfig;
  }

  // use_template_mappers - computed: false, optional: true, required: false
  private _useTemplateMappers?: boolean | cdktf.IResolvable; 
  public get useTemplateMappers() {
    return this.getBooleanAttribute('use_template_mappers');
  }
  public set useTemplateMappers(value: boolean | cdktf.IResolvable) {
    this._useTemplateMappers = value;
  }
  public resetUseTemplateMappers() {
    this._useTemplateMappers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTemplateMappersInput() {
    return this._useTemplateMappers;
  }

  // use_template_scope - computed: false, optional: true, required: false
  private _useTemplateScope?: boolean | cdktf.IResolvable; 
  public get useTemplateScope() {
    return this.getBooleanAttribute('use_template_scope');
  }
  public set useTemplateScope(value: boolean | cdktf.IResolvable) {
    this._useTemplateScope = value;
  }
  public resetUseTemplateScope() {
    this._useTemplateScope = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTemplateScopeInput() {
    return this._useTemplateScope;
  }

  // web_origins - computed: false, optional: true, required: false
  private _webOrigins?: string[]; 
  public get webOrigins() {
    return this.getListAttribute('web_origins');
  }
  public set webOrigins(value: string[]) {
    this._webOrigins = value;
  }
  public resetWebOrigins() {
    this._webOrigins = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webOriginsInput() {
    return this._webOrigins;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplications[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authenticator DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authenticator}
  */
  readonly authenticator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authenticator_config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authenticator_config}
  */
  readonly authenticatorConfig?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authenticator_flow DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authenticator_flow}
  */
  readonly authenticatorFlow?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#autheticator_flow DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#autheticator_flow}
  */
  readonly autheticatorFlow?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#flow_alias DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#flow_alias}
  */
  readonly flowAlias?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#priority DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#requirement DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#requirement}
  */
  readonly requirement?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#user_setup_allowed DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#user_setup_allowed}
  */
  readonly userSetupAllowed?: boolean | cdktf.IResolvable;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutionsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    authenticator: cdktf.stringToTerraform(struct!.authenticator),
    authenticator_config: cdktf.stringToTerraform(struct!.authenticatorConfig),
    authenticator_flow: cdktf.booleanToTerraform(struct!.authenticatorFlow),
    autheticator_flow: cdktf.booleanToTerraform(struct!.autheticatorFlow),
    flow_alias: cdktf.stringToTerraform(struct!.flowAlias),
    priority: cdktf.numberToTerraform(struct!.priority),
    requirement: cdktf.stringToTerraform(struct!.requirement),
    user_setup_allowed: cdktf.booleanToTerraform(struct!.userSetupAllowed),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutionsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    authenticator: {
      value: cdktf.stringToHclTerraform(struct!.authenticator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    authenticator_config: {
      value: cdktf.stringToHclTerraform(struct!.authenticatorConfig),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    authenticator_flow: {
      value: cdktf.booleanToHclTerraform(struct!.authenticatorFlow),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    autheticator_flow: {
      value: cdktf.booleanToHclTerraform(struct!.autheticatorFlow),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    flow_alias: {
      value: cdktf.stringToHclTerraform(struct!.flowAlias),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    requirement: {
      value: cdktf.stringToHclTerraform(struct!.requirement),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_setup_allowed: {
      value: cdktf.booleanToHclTerraform(struct!.userSetupAllowed),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authenticator !== undefined) {
      hasAnyValues = true;
      internalValueResult.authenticator = this._authenticator;
    }
    if (this._authenticatorConfig !== undefined) {
      hasAnyValues = true;
      internalValueResult.authenticatorConfig = this._authenticatorConfig;
    }
    if (this._authenticatorFlow !== undefined) {
      hasAnyValues = true;
      internalValueResult.authenticatorFlow = this._authenticatorFlow;
    }
    if (this._autheticatorFlow !== undefined) {
      hasAnyValues = true;
      internalValueResult.autheticatorFlow = this._autheticatorFlow;
    }
    if (this._flowAlias !== undefined) {
      hasAnyValues = true;
      internalValueResult.flowAlias = this._flowAlias;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._requirement !== undefined) {
      hasAnyValues = true;
      internalValueResult.requirement = this._requirement;
    }
    if (this._userSetupAllowed !== undefined) {
      hasAnyValues = true;
      internalValueResult.userSetupAllowed = this._userSetupAllowed;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authenticator = undefined;
      this._authenticatorConfig = undefined;
      this._authenticatorFlow = undefined;
      this._autheticatorFlow = undefined;
      this._flowAlias = undefined;
      this._priority = undefined;
      this._requirement = undefined;
      this._userSetupAllowed = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authenticator = value.authenticator;
      this._authenticatorConfig = value.authenticatorConfig;
      this._authenticatorFlow = value.authenticatorFlow;
      this._autheticatorFlow = value.autheticatorFlow;
      this._flowAlias = value.flowAlias;
      this._priority = value.priority;
      this._requirement = value.requirement;
      this._userSetupAllowed = value.userSetupAllowed;
    }
  }

  // authenticator - computed: false, optional: true, required: false
  private _authenticator?: string; 
  public get authenticator() {
    return this.getStringAttribute('authenticator');
  }
  public set authenticator(value: string) {
    this._authenticator = value;
  }
  public resetAuthenticator() {
    this._authenticator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authenticatorInput() {
    return this._authenticator;
  }

  // authenticator_config - computed: false, optional: true, required: false
  private _authenticatorConfig?: string; 
  public get authenticatorConfig() {
    return this.getStringAttribute('authenticator_config');
  }
  public set authenticatorConfig(value: string) {
    this._authenticatorConfig = value;
  }
  public resetAuthenticatorConfig() {
    this._authenticatorConfig = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authenticatorConfigInput() {
    return this._authenticatorConfig;
  }

  // authenticator_flow - computed: false, optional: true, required: false
  private _authenticatorFlow?: boolean | cdktf.IResolvable; 
  public get authenticatorFlow() {
    return this.getBooleanAttribute('authenticator_flow');
  }
  public set authenticatorFlow(value: boolean | cdktf.IResolvable) {
    this._authenticatorFlow = value;
  }
  public resetAuthenticatorFlow() {
    this._authenticatorFlow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authenticatorFlowInput() {
    return this._authenticatorFlow;
  }

  // autheticator_flow - computed: false, optional: true, required: false
  private _autheticatorFlow?: boolean | cdktf.IResolvable; 
  public get autheticatorFlow() {
    return this.getBooleanAttribute('autheticator_flow');
  }
  public set autheticatorFlow(value: boolean | cdktf.IResolvable) {
    this._autheticatorFlow = value;
  }
  public resetAutheticatorFlow() {
    this._autheticatorFlow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autheticatorFlowInput() {
    return this._autheticatorFlow;
  }

  // flow_alias - computed: false, optional: true, required: false
  private _flowAlias?: string; 
  public get flowAlias() {
    return this.getStringAttribute('flow_alias');
  }
  public set flowAlias(value: string) {
    this._flowAlias = value;
  }
  public resetFlowAlias() {
    this._flowAlias = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get flowAliasInput() {
    return this._flowAlias;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // requirement - computed: false, optional: true, required: false
  private _requirement?: string; 
  public get requirement() {
    return this.getStringAttribute('requirement');
  }
  public set requirement(value: string) {
    this._requirement = value;
  }
  public resetRequirement() {
    this._requirement = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requirementInput() {
    return this._requirement;
  }

  // user_setup_allowed - computed: false, optional: true, required: false
  private _userSetupAllowed?: boolean | cdktf.IResolvable; 
  public get userSetupAllowed() {
    return this.getBooleanAttribute('user_setup_allowed');
  }
  public set userSetupAllowed(value: boolean | cdktf.IResolvable) {
    this._userSetupAllowed = value;
  }
  public resetUserSetupAllowed() {
    this._userSetupAllowed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userSetupAllowedInput() {
    return this._userSetupAllowed;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutionsOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlows {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#alias DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#alias}
  */
  readonly alias?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authentication_executions DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authentication_executions}
  */
  readonly authenticationExecutions?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#built_in DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#built_in}
  */
  readonly builtIn?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#description DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#provider_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#provider_id}
  */
  readonly providerId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#top_level DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#top_level}
  */
  readonly topLevel?: boolean | cdktf.IResolvable;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlows | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    alias: cdktf.stringToTerraform(struct!.alias),
    authentication_executions: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutionsToTerraform, false)(struct!.authenticationExecutions),
    built_in: cdktf.booleanToTerraform(struct!.builtIn),
    description: cdktf.stringToTerraform(struct!.description),
    id: cdktf.stringToTerraform(struct!.id),
    provider_id: cdktf.stringToTerraform(struct!.providerId),
    top_level: cdktf.booleanToTerraform(struct!.topLevel),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlows | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    alias: {
      value: cdktf.stringToHclTerraform(struct!.alias),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    authentication_executions: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutionsToHclTerraform, false)(struct!.authenticationExecutions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutionsList",
    },
    built_in: {
      value: cdktf.booleanToHclTerraform(struct!.builtIn),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    provider_id: {
      value: cdktf.stringToHclTerraform(struct!.providerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    top_level: {
      value: cdktf.booleanToHclTerraform(struct!.topLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlows | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._alias !== undefined) {
      hasAnyValues = true;
      internalValueResult.alias = this._alias;
    }
    if (this._authenticationExecutions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authenticationExecutions = this._authenticationExecutions?.internalValue;
    }
    if (this._builtIn !== undefined) {
      hasAnyValues = true;
      internalValueResult.builtIn = this._builtIn;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._providerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.providerId = this._providerId;
    }
    if (this._topLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.topLevel = this._topLevel;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlows | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._alias = undefined;
      this._authenticationExecutions.internalValue = undefined;
      this._builtIn = undefined;
      this._description = undefined;
      this._id = undefined;
      this._providerId = undefined;
      this._topLevel = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._alias = value.alias;
      this._authenticationExecutions.internalValue = value.authenticationExecutions;
      this._builtIn = value.builtIn;
      this._description = value.description;
      this._id = value.id;
      this._providerId = value.providerId;
      this._topLevel = value.topLevel;
    }
  }

  // alias - computed: false, optional: true, required: false
  private _alias?: string; 
  public get alias() {
    return this.getStringAttribute('alias');
  }
  public set alias(value: string) {
    this._alias = value;
  }
  public resetAlias() {
    this._alias = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aliasInput() {
    return this._alias;
  }

  // authentication_executions - computed: false, optional: true, required: false
  private _authenticationExecutions = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutionsList(this, "authentication_executions", false);
  public get authenticationExecutions() {
    return this._authenticationExecutions;
  }
  public putAuthenticationExecutions(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsAuthenticationExecutions[] | cdktf.IResolvable) {
    this._authenticationExecutions.internalValue = value;
  }
  public resetAuthenticationExecutions() {
    this._authenticationExecutions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authenticationExecutionsInput() {
    return this._authenticationExecutions.internalValue;
  }

  // built_in - computed: false, optional: true, required: false
  private _builtIn?: boolean | cdktf.IResolvable; 
  public get builtIn() {
    return this.getBooleanAttribute('built_in');
  }
  public set builtIn(value: boolean | cdktf.IResolvable) {
    this._builtIn = value;
  }
  public resetBuiltIn() {
    this._builtIn = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get builtInInput() {
    return this._builtIn;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // provider_id - computed: false, optional: true, required: false
  private _providerId?: string; 
  public get providerId() {
    return this.getStringAttribute('provider_id');
  }
  public set providerId(value: string) {
    this._providerId = value;
  }
  public resetProviderId() {
    this._providerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get providerIdInput() {
    return this._providerId;
  }

  // top_level - computed: false, optional: true, required: false
  private _topLevel?: boolean | cdktf.IResolvable; 
  public get topLevel() {
    return this.getBooleanAttribute('top_level');
  }
  public set topLevel(value: boolean | cdktf.IResolvable) {
    this._topLevel = value;
  }
  public resetTopLevel() {
    this._topLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topLevelInput() {
    return this._topLevel;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlows[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#alias DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#alias}
  */
  readonly alias?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfigToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    alias: cdktf.stringToTerraform(struct!.alias),
    config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.config),
    id: cdktf.stringToTerraform(struct!.id),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfigToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    alias: {
      value: cdktf.stringToHclTerraform(struct!.alias),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._alias !== undefined) {
      hasAnyValues = true;
      internalValueResult.alias = this._alias;
    }
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._alias = undefined;
      this._config = undefined;
      this._id = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._alias = value.alias;
      this._config = value.config;
      this._id = value.id;
    }
  }

  // alias - computed: false, optional: true, required: false
  private _alias?: string; 
  public get alias() {
    return this.getStringAttribute('alias');
  }
  public set alias(value: string) {
    this._alias = value;
  }
  public resetAlias() {
    this._alias = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aliasInput() {
    return this._alias;
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string }; 
  public get config() {
    return this.getStringMapAttribute('config');
  }
  public set config(value: { [key: string]: string }) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfigList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfig[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfigOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfigOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_required}
  */
  readonly consentRequired?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_text DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_text}
  */
  readonly consentText?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol}
  */
  readonly protocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol_mapper DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol_mapper}
  */
  readonly protocolMapper?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappersToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.config),
    consent_required: cdktf.booleanToTerraform(struct!.consentRequired),
    consent_text: cdktf.stringToTerraform(struct!.consentText),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
    protocol: cdktf.stringToTerraform(struct!.protocol),
    protocol_mapper: cdktf.stringToTerraform(struct!.protocolMapper),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappersToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    consent_required: {
      value: cdktf.booleanToHclTerraform(struct!.consentRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    consent_text: {
      value: cdktf.stringToHclTerraform(struct!.consentText),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol: {
      value: cdktf.stringToHclTerraform(struct!.protocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol_mapper: {
      value: cdktf.stringToHclTerraform(struct!.protocolMapper),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._consentRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentRequired = this._consentRequired;
    }
    if (this._consentText !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentText = this._consentText;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._protocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocol = this._protocol;
    }
    if (this._protocolMapper !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocolMapper = this._protocolMapper;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._config = undefined;
      this._consentRequired = undefined;
      this._consentText = undefined;
      this._id = undefined;
      this._name = undefined;
      this._protocol = undefined;
      this._protocolMapper = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._config = value.config;
      this._consentRequired = value.consentRequired;
      this._consentText = value.consentText;
      this._id = value.id;
      this._name = value.name;
      this._protocol = value.protocol;
      this._protocolMapper = value.protocolMapper;
    }
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string }; 
  public get config() {
    return this.getStringMapAttribute('config');
  }
  public set config(value: { [key: string]: string }) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // consent_required - computed: false, optional: true, required: false
  private _consentRequired?: boolean | cdktf.IResolvable; 
  public get consentRequired() {
    return this.getBooleanAttribute('consent_required');
  }
  public set consentRequired(value: boolean | cdktf.IResolvable) {
    this._consentRequired = value;
  }
  public resetConsentRequired() {
    this._consentRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentRequiredInput() {
    return this._consentRequired;
  }

  // consent_text - computed: false, optional: true, required: false
  private _consentText?: string; 
  public get consentText() {
    return this.getStringAttribute('consent_text');
  }
  public set consentText(value: string) {
    this._consentText = value;
  }
  public resetConsentText() {
    this._consentText = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentTextInput() {
    return this._consentText;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // protocol - computed: false, optional: true, required: false
  private _protocol?: string; 
  public get protocol() {
    return this.getStringAttribute('protocol');
  }
  public set protocol(value: string) {
    this._protocol = value;
  }
  public resetProtocol() {
    this._protocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolInput() {
    return this._protocol;
  }

  // protocol_mapper - computed: false, optional: true, required: false
  private _protocolMapper?: string; 
  public get protocolMapper() {
    return this.getStringAttribute('protocol_mapper');
  }
  public set protocolMapper(value: string) {
    this._protocolMapper = value;
  }
  public resetProtocolMapper() {
    this._protocolMapper = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolMapperInput() {
    return this._protocolMapper;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappersList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappersOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopes {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#description DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol}
  */
  readonly protocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol_mappers DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol_mappers}
  */
  readonly protocolMappers?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappers[] | cdktf.IResolvable;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    attributes: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.attributes),
    description: cdktf.stringToTerraform(struct!.description),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
    protocol: cdktf.stringToTerraform(struct!.protocol),
    protocol_mappers: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappersToTerraform, false)(struct!.protocolMappers),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol: {
      value: cdktf.stringToHclTerraform(struct!.protocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol_mappers: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappersToHclTerraform, false)(struct!.protocolMappers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappersList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._protocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocol = this._protocol;
    }
    if (this._protocolMappers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocolMappers = this._protocolMappers?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._attributes = undefined;
      this._description = undefined;
      this._id = undefined;
      this._name = undefined;
      this._protocol = undefined;
      this._protocolMappers.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._attributes = value.attributes;
      this._description = value.description;
      this._id = value.id;
      this._name = value.name;
      this._protocol = value.protocol;
      this._protocolMappers.internalValue = value.protocolMappers;
    }
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string }; 
  public get attributes() {
    return this.getStringMapAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string }) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // protocol - computed: false, optional: true, required: false
  private _protocol?: string; 
  public get protocol() {
    return this.getStringAttribute('protocol');
  }
  public set protocol(value: string) {
    this._protocol = value;
  }
  public resetProtocol() {
    this._protocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolInput() {
    return this._protocol;
  }

  // protocol_mappers - computed: false, optional: true, required: false
  private _protocolMappers = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappersList(this, "protocol_mappers", false);
  public get protocolMappers() {
    return this._protocolMappers;
  }
  public putProtocolMappers(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesProtocolMappers[] | cdktf.IResolvable) {
    this._protocolMappers.internalValue = value;
  }
  public resetProtocolMappers() {
    this._protocolMappers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolMappersInput() {
    return this._protocolMappers.internalValue;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopes[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_required}
  */
  readonly consentRequired?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_text DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_text}
  */
  readonly consentText?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol}
  */
  readonly protocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol_mapper DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol_mapper}
  */
  readonly protocolMapper?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappersToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.config),
    consent_required: cdktf.booleanToTerraform(struct!.consentRequired),
    consent_text: cdktf.stringToTerraform(struct!.consentText),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
    protocol: cdktf.stringToTerraform(struct!.protocol),
    protocol_mapper: cdktf.stringToTerraform(struct!.protocolMapper),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappersToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    consent_required: {
      value: cdktf.booleanToHclTerraform(struct!.consentRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    consent_text: {
      value: cdktf.stringToHclTerraform(struct!.consentText),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol: {
      value: cdktf.stringToHclTerraform(struct!.protocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol_mapper: {
      value: cdktf.stringToHclTerraform(struct!.protocolMapper),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._consentRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentRequired = this._consentRequired;
    }
    if (this._consentText !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentText = this._consentText;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._protocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocol = this._protocol;
    }
    if (this._protocolMapper !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocolMapper = this._protocolMapper;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._config = undefined;
      this._consentRequired = undefined;
      this._consentText = undefined;
      this._id = undefined;
      this._name = undefined;
      this._protocol = undefined;
      this._protocolMapper = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._config = value.config;
      this._consentRequired = value.consentRequired;
      this._consentText = value.consentText;
      this._id = value.id;
      this._name = value.name;
      this._protocol = value.protocol;
      this._protocolMapper = value.protocolMapper;
    }
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string }; 
  public get config() {
    return this.getStringMapAttribute('config');
  }
  public set config(value: { [key: string]: string }) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // consent_required - computed: false, optional: true, required: false
  private _consentRequired?: boolean | cdktf.IResolvable; 
  public get consentRequired() {
    return this.getBooleanAttribute('consent_required');
  }
  public set consentRequired(value: boolean | cdktf.IResolvable) {
    this._consentRequired = value;
  }
  public resetConsentRequired() {
    this._consentRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentRequiredInput() {
    return this._consentRequired;
  }

  // consent_text - computed: false, optional: true, required: false
  private _consentText?: string; 
  public get consentText() {
    return this.getStringAttribute('consent_text');
  }
  public set consentText(value: string) {
    this._consentText = value;
  }
  public resetConsentText() {
    this._consentText = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentTextInput() {
    return this._consentText;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // protocol - computed: false, optional: true, required: false
  private _protocol?: string; 
  public get protocol() {
    return this.getStringAttribute('protocol');
  }
  public set protocol(value: string) {
    this._protocol = value;
  }
  public resetProtocol() {
    this._protocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolInput() {
    return this._protocol;
  }

  // protocol_mapper - computed: false, optional: true, required: false
  private _protocolMapper?: string; 
  public get protocolMapper() {
    return this.getStringAttribute('protocol_mapper');
  }
  public set protocolMapper(value: string) {
    this._protocolMapper = value;
  }
  public resetProtocolMapper() {
    this._protocolMapper = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolMapperInput() {
    return this._protocolMapper;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappersList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappersOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplates {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#bearer_only DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#bearer_only}
  */
  readonly bearerOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_required}
  */
  readonly consentRequired?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#description DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#direct_access_grants_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#direct_access_grants_enabled}
  */
  readonly directAccessGrantsEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#frontchannel_logout DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#frontchannel_logout}
  */
  readonly frontchannelLogout?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#full_scope_allowed DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#full_scope_allowed}
  */
  readonly fullScopeAllowed?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#implicit_flow_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#implicit_flow_enabled}
  */
  readonly implicitFlowEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol}
  */
  readonly protocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol_mappers DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol_mappers}
  */
  readonly protocolMappers?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#public_client DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#public_client}
  */
  readonly publicClient?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#service_accounts_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#service_accounts_enabled}
  */
  readonly serviceAccountsEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#standard_flow_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#standard_flow_enabled}
  */
  readonly standardFlowEnabled?: boolean | cdktf.IResolvable;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplates | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    attributes: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.attributes),
    bearer_only: cdktf.booleanToTerraform(struct!.bearerOnly),
    consent_required: cdktf.booleanToTerraform(struct!.consentRequired),
    description: cdktf.stringToTerraform(struct!.description),
    direct_access_grants_enabled: cdktf.booleanToTerraform(struct!.directAccessGrantsEnabled),
    frontchannel_logout: cdktf.booleanToTerraform(struct!.frontchannelLogout),
    full_scope_allowed: cdktf.booleanToTerraform(struct!.fullScopeAllowed),
    id: cdktf.stringToTerraform(struct!.id),
    implicit_flow_enabled: cdktf.booleanToTerraform(struct!.implicitFlowEnabled),
    name: cdktf.stringToTerraform(struct!.name),
    protocol: cdktf.stringToTerraform(struct!.protocol),
    protocol_mappers: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappersToTerraform, false)(struct!.protocolMappers),
    public_client: cdktf.booleanToTerraform(struct!.publicClient),
    service_accounts_enabled: cdktf.booleanToTerraform(struct!.serviceAccountsEnabled),
    standard_flow_enabled: cdktf.booleanToTerraform(struct!.standardFlowEnabled),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplates | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    bearer_only: {
      value: cdktf.booleanToHclTerraform(struct!.bearerOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    consent_required: {
      value: cdktf.booleanToHclTerraform(struct!.consentRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    direct_access_grants_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.directAccessGrantsEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    frontchannel_logout: {
      value: cdktf.booleanToHclTerraform(struct!.frontchannelLogout),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    full_scope_allowed: {
      value: cdktf.booleanToHclTerraform(struct!.fullScopeAllowed),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    implicit_flow_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.implicitFlowEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol: {
      value: cdktf.stringToHclTerraform(struct!.protocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol_mappers: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappersToHclTerraform, false)(struct!.protocolMappers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappersList",
    },
    public_client: {
      value: cdktf.booleanToHclTerraform(struct!.publicClient),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    service_accounts_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.serviceAccountsEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    standard_flow_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.standardFlowEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplates | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._bearerOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.bearerOnly = this._bearerOnly;
    }
    if (this._consentRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentRequired = this._consentRequired;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._directAccessGrantsEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.directAccessGrantsEnabled = this._directAccessGrantsEnabled;
    }
    if (this._frontchannelLogout !== undefined) {
      hasAnyValues = true;
      internalValueResult.frontchannelLogout = this._frontchannelLogout;
    }
    if (this._fullScopeAllowed !== undefined) {
      hasAnyValues = true;
      internalValueResult.fullScopeAllowed = this._fullScopeAllowed;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._implicitFlowEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.implicitFlowEnabled = this._implicitFlowEnabled;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._protocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocol = this._protocol;
    }
    if (this._protocolMappers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocolMappers = this._protocolMappers?.internalValue;
    }
    if (this._publicClient !== undefined) {
      hasAnyValues = true;
      internalValueResult.publicClient = this._publicClient;
    }
    if (this._serviceAccountsEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountsEnabled = this._serviceAccountsEnabled;
    }
    if (this._standardFlowEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.standardFlowEnabled = this._standardFlowEnabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplates | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._attributes = undefined;
      this._bearerOnly = undefined;
      this._consentRequired = undefined;
      this._description = undefined;
      this._directAccessGrantsEnabled = undefined;
      this._frontchannelLogout = undefined;
      this._fullScopeAllowed = undefined;
      this._id = undefined;
      this._implicitFlowEnabled = undefined;
      this._name = undefined;
      this._protocol = undefined;
      this._protocolMappers.internalValue = undefined;
      this._publicClient = undefined;
      this._serviceAccountsEnabled = undefined;
      this._standardFlowEnabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._attributes = value.attributes;
      this._bearerOnly = value.bearerOnly;
      this._consentRequired = value.consentRequired;
      this._description = value.description;
      this._directAccessGrantsEnabled = value.directAccessGrantsEnabled;
      this._frontchannelLogout = value.frontchannelLogout;
      this._fullScopeAllowed = value.fullScopeAllowed;
      this._id = value.id;
      this._implicitFlowEnabled = value.implicitFlowEnabled;
      this._name = value.name;
      this._protocol = value.protocol;
      this._protocolMappers.internalValue = value.protocolMappers;
      this._publicClient = value.publicClient;
      this._serviceAccountsEnabled = value.serviceAccountsEnabled;
      this._standardFlowEnabled = value.standardFlowEnabled;
    }
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string }; 
  public get attributes() {
    return this.getStringMapAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string }) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // bearer_only - computed: false, optional: true, required: false
  private _bearerOnly?: boolean | cdktf.IResolvable; 
  public get bearerOnly() {
    return this.getBooleanAttribute('bearer_only');
  }
  public set bearerOnly(value: boolean | cdktf.IResolvable) {
    this._bearerOnly = value;
  }
  public resetBearerOnly() {
    this._bearerOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bearerOnlyInput() {
    return this._bearerOnly;
  }

  // consent_required - computed: false, optional: true, required: false
  private _consentRequired?: boolean | cdktf.IResolvable; 
  public get consentRequired() {
    return this.getBooleanAttribute('consent_required');
  }
  public set consentRequired(value: boolean | cdktf.IResolvable) {
    this._consentRequired = value;
  }
  public resetConsentRequired() {
    this._consentRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentRequiredInput() {
    return this._consentRequired;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // direct_access_grants_enabled - computed: false, optional: true, required: false
  private _directAccessGrantsEnabled?: boolean | cdktf.IResolvable; 
  public get directAccessGrantsEnabled() {
    return this.getBooleanAttribute('direct_access_grants_enabled');
  }
  public set directAccessGrantsEnabled(value: boolean | cdktf.IResolvable) {
    this._directAccessGrantsEnabled = value;
  }
  public resetDirectAccessGrantsEnabled() {
    this._directAccessGrantsEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directAccessGrantsEnabledInput() {
    return this._directAccessGrantsEnabled;
  }

  // frontchannel_logout - computed: false, optional: true, required: false
  private _frontchannelLogout?: boolean | cdktf.IResolvable; 
  public get frontchannelLogout() {
    return this.getBooleanAttribute('frontchannel_logout');
  }
  public set frontchannelLogout(value: boolean | cdktf.IResolvable) {
    this._frontchannelLogout = value;
  }
  public resetFrontchannelLogout() {
    this._frontchannelLogout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get frontchannelLogoutInput() {
    return this._frontchannelLogout;
  }

  // full_scope_allowed - computed: false, optional: true, required: false
  private _fullScopeAllowed?: boolean | cdktf.IResolvable; 
  public get fullScopeAllowed() {
    return this.getBooleanAttribute('full_scope_allowed');
  }
  public set fullScopeAllowed(value: boolean | cdktf.IResolvable) {
    this._fullScopeAllowed = value;
  }
  public resetFullScopeAllowed() {
    this._fullScopeAllowed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fullScopeAllowedInput() {
    return this._fullScopeAllowed;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // implicit_flow_enabled - computed: false, optional: true, required: false
  private _implicitFlowEnabled?: boolean | cdktf.IResolvable; 
  public get implicitFlowEnabled() {
    return this.getBooleanAttribute('implicit_flow_enabled');
  }
  public set implicitFlowEnabled(value: boolean | cdktf.IResolvable) {
    this._implicitFlowEnabled = value;
  }
  public resetImplicitFlowEnabled() {
    this._implicitFlowEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get implicitFlowEnabledInput() {
    return this._implicitFlowEnabled;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // protocol - computed: false, optional: true, required: false
  private _protocol?: string; 
  public get protocol() {
    return this.getStringAttribute('protocol');
  }
  public set protocol(value: string) {
    this._protocol = value;
  }
  public resetProtocol() {
    this._protocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolInput() {
    return this._protocol;
  }

  // protocol_mappers - computed: false, optional: true, required: false
  private _protocolMappers = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappersList(this, "protocol_mappers", false);
  public get protocolMappers() {
    return this._protocolMappers;
  }
  public putProtocolMappers(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesProtocolMappers[] | cdktf.IResolvable) {
    this._protocolMappers.internalValue = value;
  }
  public resetProtocolMappers() {
    this._protocolMappers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolMappersInput() {
    return this._protocolMappers.internalValue;
  }

  // public_client - computed: false, optional: true, required: false
  private _publicClient?: boolean | cdktf.IResolvable; 
  public get publicClient() {
    return this.getBooleanAttribute('public_client');
  }
  public set publicClient(value: boolean | cdktf.IResolvable) {
    this._publicClient = value;
  }
  public resetPublicClient() {
    this._publicClient = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get publicClientInput() {
    return this._publicClient;
  }

  // service_accounts_enabled - computed: false, optional: true, required: false
  private _serviceAccountsEnabled?: boolean | cdktf.IResolvable; 
  public get serviceAccountsEnabled() {
    return this.getBooleanAttribute('service_accounts_enabled');
  }
  public set serviceAccountsEnabled(value: boolean | cdktf.IResolvable) {
    this._serviceAccountsEnabled = value;
  }
  public resetServiceAccountsEnabled() {
    this._serviceAccountsEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountsEnabledInput() {
    return this._serviceAccountsEnabled;
  }

  // standard_flow_enabled - computed: false, optional: true, required: false
  private _standardFlowEnabled?: boolean | cdktf.IResolvable; 
  public get standardFlowEnabled() {
    return this.getBooleanAttribute('standard_flow_enabled');
  }
  public set standardFlowEnabled(value: boolean | cdktf.IResolvable) {
    this._standardFlowEnabled = value;
  }
  public resetStandardFlowEnabled() {
    this._standardFlowEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get standardFlowEnabledInput() {
    return this._standardFlowEnabled;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplates[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOwner {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOwnerToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOwner | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOwnerToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOwner | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOwnerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOwner | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOwner | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopes {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopes[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesData {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#_id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#owner DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#owner}
  */
  readonly owner?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOwner;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#owner_managed_access DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#owner_managed_access}
  */
  readonly ownerManagedAccess?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scopes}
  */
  readonly scopes?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopes[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#uris DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#uris}
  */
  readonly uris?: string[];
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    _id: cdktf.stringToTerraform(struct!.id),
    attributes: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.attributes),
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    name: cdktf.stringToTerraform(struct!.name),
    owner: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOwnerToTerraform(struct!.owner),
    owner_managed_access: cdktf.booleanToTerraform(struct!.ownerManagedAccess),
    scopes: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopesToTerraform, false)(struct!.scopes),
    type: cdktf.stringToTerraform(struct!.type),
    uris: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.uris),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    _id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    owner: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOwnerToHclTerraform(struct!.owner),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOwner",
    },
    owner_managed_access: {
      value: cdktf.booleanToHclTerraform(struct!.ownerManagedAccess),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    scopes: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopesToHclTerraform, false)(struct!.scopes),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopesList",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uris: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.uris),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesData | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._owner?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.owner = this._owner?.internalValue;
    }
    if (this._ownerManagedAccess !== undefined) {
      hasAnyValues = true;
      internalValueResult.ownerManagedAccess = this._ownerManagedAccess;
    }
    if (this._scopes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes?.internalValue;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._uris !== undefined) {
      hasAnyValues = true;
      internalValueResult.uris = this._uris;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesData | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._id = undefined;
      this._attributes = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._name = undefined;
      this._owner.internalValue = undefined;
      this._ownerManagedAccess = undefined;
      this._scopes.internalValue = undefined;
      this._type = undefined;
      this._uris = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._id = value.id;
      this._attributes = value.attributes;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._name = value.name;
      this._owner.internalValue = value.owner;
      this._ownerManagedAccess = value.ownerManagedAccess;
      this._scopes.internalValue = value.scopes;
      this._type = value.type;
      this._uris = value.uris;
    }
  }

  // _id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('_id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get attributes() {
    return this.interpolationForAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // owner - computed: false, optional: true, required: false
  private _owner = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOwnerOutputReference(this, "owner");
  public get owner() {
    return this._owner;
  }
  public putOwner(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOwner) {
    this._owner.internalValue = value;
  }
  public resetOwner() {
    this._owner.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerInput() {
    return this._owner.internalValue;
  }

  // owner_managed_access - computed: false, optional: true, required: false
  private _ownerManagedAccess?: boolean | cdktf.IResolvable; 
  public get ownerManagedAccess() {
    return this.getBooleanAttribute('owner_managed_access');
  }
  public set ownerManagedAccess(value: boolean | cdktf.IResolvable) {
    this._ownerManagedAccess = value;
  }
  public resetOwnerManagedAccess() {
    this._ownerManagedAccess = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerManagedAccessInput() {
    return this._ownerManagedAccess;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopesList(this, "scopes", false);
  public get scopes() {
    return this._scopes;
  }
  public putScopes(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataScopes[] | cdktf.IResolvable) {
    this._scopes.internalValue = value;
  }
  public resetScopes() {
    this._scopes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes.internalValue;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // uris - computed: false, optional: true, required: false
  private _uris?: string[]; 
  public get uris() {
    return this.getListAttribute('uris');
  }
  public set uris(value: string[]) {
    this._uris = value;
  }
  public resetUris() {
    this._uris = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urisInput() {
    return this._uris;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesData[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesData {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesDataToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesDataToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesDataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesData | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesData | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesDataList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesData[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesDataOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesDataOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPolicies {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#decision_strategy DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#decision_strategy}
  */
  readonly decisionStrategy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#description DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#logic DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#logic}
  */
  readonly logic?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#owner DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#owner}
  */
  readonly owner?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#policies DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#policies}
  */
  readonly policies?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#resources DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#resources}
  */
  readonly resources?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#resources_data DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#resources_data}
  */
  readonly resourcesData?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesData[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scopes}
  */
  readonly scopes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scopes_data DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scopes_data}
  */
  readonly scopesData?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesData[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPolicies | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.config),
    decision_strategy: cdktf.stringToTerraform(struct!.decisionStrategy),
    description: cdktf.stringToTerraform(struct!.description),
    id: cdktf.stringToTerraform(struct!.id),
    logic: cdktf.stringToTerraform(struct!.logic),
    name: cdktf.stringToTerraform(struct!.name),
    owner: cdktf.stringToTerraform(struct!.owner),
    policies: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.policies),
    resources: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.resources),
    resources_data: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataToTerraform, false)(struct!.resourcesData),
    scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.scopes),
    scopes_data: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesDataToTerraform, false)(struct!.scopesData),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPolicies | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    decision_strategy: {
      value: cdktf.stringToHclTerraform(struct!.decisionStrategy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    logic: {
      value: cdktf.stringToHclTerraform(struct!.logic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    owner: {
      value: cdktf.stringToHclTerraform(struct!.owner),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    policies: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.policies),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    resources: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.resources),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    resources_data: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataToHclTerraform, false)(struct!.resourcesData),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataList",
    },
    scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.scopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    scopes_data: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesDataToHclTerraform, false)(struct!.scopesData),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesDataList",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPolicies | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._decisionStrategy !== undefined) {
      hasAnyValues = true;
      internalValueResult.decisionStrategy = this._decisionStrategy;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._logic !== undefined) {
      hasAnyValues = true;
      internalValueResult.logic = this._logic;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._owner !== undefined) {
      hasAnyValues = true;
      internalValueResult.owner = this._owner;
    }
    if (this._policies !== undefined) {
      hasAnyValues = true;
      internalValueResult.policies = this._policies;
    }
    if (this._resources !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources;
    }
    if (this._resourcesData?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourcesData = this._resourcesData?.internalValue;
    }
    if (this._scopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes;
    }
    if (this._scopesData?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopesData = this._scopesData?.internalValue;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPolicies | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._config = undefined;
      this._decisionStrategy = undefined;
      this._description = undefined;
      this._id = undefined;
      this._logic = undefined;
      this._name = undefined;
      this._owner = undefined;
      this._policies = undefined;
      this._resources = undefined;
      this._resourcesData.internalValue = undefined;
      this._scopes = undefined;
      this._scopesData.internalValue = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._config = value.config;
      this._decisionStrategy = value.decisionStrategy;
      this._description = value.description;
      this._id = value.id;
      this._logic = value.logic;
      this._name = value.name;
      this._owner = value.owner;
      this._policies = value.policies;
      this._resources = value.resources;
      this._resourcesData.internalValue = value.resourcesData;
      this._scopes = value.scopes;
      this._scopesData.internalValue = value.scopesData;
      this._type = value.type;
    }
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string }; 
  public get config() {
    return this.getStringMapAttribute('config');
  }
  public set config(value: { [key: string]: string }) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // decision_strategy - computed: false, optional: true, required: false
  private _decisionStrategy?: string; 
  public get decisionStrategy() {
    return this.getStringAttribute('decision_strategy');
  }
  public set decisionStrategy(value: string) {
    this._decisionStrategy = value;
  }
  public resetDecisionStrategy() {
    this._decisionStrategy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get decisionStrategyInput() {
    return this._decisionStrategy;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // logic - computed: false, optional: true, required: false
  private _logic?: string; 
  public get logic() {
    return this.getStringAttribute('logic');
  }
  public set logic(value: string) {
    this._logic = value;
  }
  public resetLogic() {
    this._logic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logicInput() {
    return this._logic;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // owner - computed: false, optional: true, required: false
  private _owner?: string; 
  public get owner() {
    return this.getStringAttribute('owner');
  }
  public set owner(value: string) {
    this._owner = value;
  }
  public resetOwner() {
    this._owner = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerInput() {
    return this._owner;
  }

  // policies - computed: false, optional: true, required: false
  private _policies?: string[]; 
  public get policies() {
    return this.getListAttribute('policies');
  }
  public set policies(value: string[]) {
    this._policies = value;
  }
  public resetPolicies() {
    this._policies = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get policiesInput() {
    return this._policies;
  }

  // resources - computed: false, optional: true, required: false
  private _resources?: string[]; 
  public get resources() {
    return this.getListAttribute('resources');
  }
  public set resources(value: string[]) {
    this._resources = value;
  }
  public resetResources() {
    this._resources = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources;
  }

  // resources_data - computed: false, optional: true, required: false
  private _resourcesData = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesDataList(this, "resources_data", false);
  public get resourcesData() {
    return this._resourcesData;
  }
  public putResourcesData(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesResourcesData[] | cdktf.IResolvable) {
    this._resourcesData.internalValue = value;
  }
  public resetResourcesData() {
    this._resourcesData.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesDataInput() {
    return this._resourcesData.internalValue;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes?: string[]; 
  public get scopes() {
    return this.getListAttribute('scopes');
  }
  public set scopes(value: string[]) {
    this._scopes = value;
  }
  public resetScopes() {
    this._scopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes;
  }

  // scopes_data - computed: false, optional: true, required: false
  private _scopesData = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesDataList(this, "scopes_data", false);
  public get scopesData() {
    return this._scopesData;
  }
  public putScopesData(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesScopesData[] | cdktf.IResolvable) {
    this._scopesData.internalValue = value;
  }
  public resetScopesData() {
    this._scopesData.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesDataInput() {
    return this._scopesData.internalValue;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPolicies[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOwner {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOwnerToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOwner | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOwnerToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOwner | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOwnerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOwner | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOwner | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopes {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopes[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResources {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#_id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#owner DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#owner}
  */
  readonly owner?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOwner;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#owner_managed_access DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#owner_managed_access}
  */
  readonly ownerManagedAccess?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scopes}
  */
  readonly scopes?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopes[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#uris DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#uris}
  */
  readonly uris?: string[];
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    _id: cdktf.stringToTerraform(struct!.id),
    attributes: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.attributes),
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    name: cdktf.stringToTerraform(struct!.name),
    owner: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOwnerToTerraform(struct!.owner),
    owner_managed_access: cdktf.booleanToTerraform(struct!.ownerManagedAccess),
    scopes: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopesToTerraform, false)(struct!.scopes),
    type: cdktf.stringToTerraform(struct!.type),
    uris: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.uris),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    _id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    owner: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOwnerToHclTerraform(struct!.owner),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOwner",
    },
    owner_managed_access: {
      value: cdktf.booleanToHclTerraform(struct!.ownerManagedAccess),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    scopes: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopesToHclTerraform, false)(struct!.scopes),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopesList",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uris: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.uris),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._owner?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.owner = this._owner?.internalValue;
    }
    if (this._ownerManagedAccess !== undefined) {
      hasAnyValues = true;
      internalValueResult.ownerManagedAccess = this._ownerManagedAccess;
    }
    if (this._scopes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes?.internalValue;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._uris !== undefined) {
      hasAnyValues = true;
      internalValueResult.uris = this._uris;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._id = undefined;
      this._attributes = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._name = undefined;
      this._owner.internalValue = undefined;
      this._ownerManagedAccess = undefined;
      this._scopes.internalValue = undefined;
      this._type = undefined;
      this._uris = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._id = value.id;
      this._attributes = value.attributes;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._name = value.name;
      this._owner.internalValue = value.owner;
      this._ownerManagedAccess = value.ownerManagedAccess;
      this._scopes.internalValue = value.scopes;
      this._type = value.type;
      this._uris = value.uris;
    }
  }

  // _id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('_id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get attributes() {
    return this.interpolationForAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // owner - computed: false, optional: true, required: false
  private _owner = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOwnerOutputReference(this, "owner");
  public get owner() {
    return this._owner;
  }
  public putOwner(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOwner) {
    this._owner.internalValue = value;
  }
  public resetOwner() {
    this._owner.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerInput() {
    return this._owner.internalValue;
  }

  // owner_managed_access - computed: false, optional: true, required: false
  private _ownerManagedAccess?: boolean | cdktf.IResolvable; 
  public get ownerManagedAccess() {
    return this.getBooleanAttribute('owner_managed_access');
  }
  public set ownerManagedAccess(value: boolean | cdktf.IResolvable) {
    this._ownerManagedAccess = value;
  }
  public resetOwnerManagedAccess() {
    this._ownerManagedAccess = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerManagedAccessInput() {
    return this._ownerManagedAccess;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopesList(this, "scopes", false);
  public get scopes() {
    return this._scopes;
  }
  public putScopes(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesScopes[] | cdktf.IResolvable) {
    this._scopes.internalValue = value;
  }
  public resetScopes() {
    this._scopes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes.internalValue;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // uris - computed: false, optional: true, required: false
  private _uris?: string[]; 
  public get uris() {
    return this.getListAttribute('uris');
  }
  public set uris(value: string[]) {
    this._uris = value;
  }
  public resetUris() {
    this._uris = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urisInput() {
    return this._uris;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResources[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopes {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopes[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettings {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#allow_remote_resource_management DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#allow_remote_resource_management}
  */
  readonly allowRemoteResourceManagement?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_id}
  */
  readonly clientId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#decision_strategy DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#decision_strategy}
  */
  readonly decisionStrategy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#policies DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#policies}
  */
  readonly policies?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPolicies[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#policy_enforcement_mode DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#policy_enforcement_mode}
  */
  readonly policyEnforcementMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#resources DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#resources}
  */
  readonly resources?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResources[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scopes}
  */
  readonly scopes?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopes[] | cdktf.IResolvable;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_remote_resource_management: cdktf.booleanToTerraform(struct!.allowRemoteResourceManagement),
    client_id: cdktf.stringToTerraform(struct!.clientId),
    decision_strategy: cdktf.stringToTerraform(struct!.decisionStrategy),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
    policies: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesToTerraform, false)(struct!.policies),
    policy_enforcement_mode: cdktf.stringToTerraform(struct!.policyEnforcementMode),
    resources: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesToTerraform, false)(struct!.resources),
    scopes: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopesToTerraform, false)(struct!.scopes),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_remote_resource_management: {
      value: cdktf.booleanToHclTerraform(struct!.allowRemoteResourceManagement),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    client_id: {
      value: cdktf.stringToHclTerraform(struct!.clientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    decision_strategy: {
      value: cdktf.stringToHclTerraform(struct!.decisionStrategy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    policies: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesToHclTerraform, false)(struct!.policies),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesList",
    },
    policy_enforcement_mode: {
      value: cdktf.stringToHclTerraform(struct!.policyEnforcementMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resources: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesToHclTerraform, false)(struct!.resources),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesList",
    },
    scopes: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopesToHclTerraform, false)(struct!.scopes),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettings | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowRemoteResourceManagement !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowRemoteResourceManagement = this._allowRemoteResourceManagement;
    }
    if (this._clientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientId = this._clientId;
    }
    if (this._decisionStrategy !== undefined) {
      hasAnyValues = true;
      internalValueResult.decisionStrategy = this._decisionStrategy;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._policies?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.policies = this._policies?.internalValue;
    }
    if (this._policyEnforcementMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.policyEnforcementMode = this._policyEnforcementMode;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._scopes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettings | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowRemoteResourceManagement = undefined;
      this._clientId = undefined;
      this._decisionStrategy = undefined;
      this._id = undefined;
      this._name = undefined;
      this._policies.internalValue = undefined;
      this._policyEnforcementMode = undefined;
      this._resources.internalValue = undefined;
      this._scopes.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowRemoteResourceManagement = value.allowRemoteResourceManagement;
      this._clientId = value.clientId;
      this._decisionStrategy = value.decisionStrategy;
      this._id = value.id;
      this._name = value.name;
      this._policies.internalValue = value.policies;
      this._policyEnforcementMode = value.policyEnforcementMode;
      this._resources.internalValue = value.resources;
      this._scopes.internalValue = value.scopes;
    }
  }

  // allow_remote_resource_management - computed: false, optional: true, required: false
  private _allowRemoteResourceManagement?: boolean | cdktf.IResolvable; 
  public get allowRemoteResourceManagement() {
    return this.getBooleanAttribute('allow_remote_resource_management');
  }
  public set allowRemoteResourceManagement(value: boolean | cdktf.IResolvable) {
    this._allowRemoteResourceManagement = value;
  }
  public resetAllowRemoteResourceManagement() {
    this._allowRemoteResourceManagement = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowRemoteResourceManagementInput() {
    return this._allowRemoteResourceManagement;
  }

  // client_id - computed: false, optional: true, required: false
  private _clientId?: string; 
  public get clientId() {
    return this.getStringAttribute('client_id');
  }
  public set clientId(value: string) {
    this._clientId = value;
  }
  public resetClientId() {
    this._clientId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientIdInput() {
    return this._clientId;
  }

  // decision_strategy - computed: false, optional: true, required: false
  private _decisionStrategy?: string; 
  public get decisionStrategy() {
    return this.getStringAttribute('decision_strategy');
  }
  public set decisionStrategy(value: string) {
    this._decisionStrategy = value;
  }
  public resetDecisionStrategy() {
    this._decisionStrategy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get decisionStrategyInput() {
    return this._decisionStrategy;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // policies - computed: false, optional: true, required: false
  private _policies = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPoliciesList(this, "policies", false);
  public get policies() {
    return this._policies;
  }
  public putPolicies(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsPolicies[] | cdktf.IResolvable) {
    this._policies.internalValue = value;
  }
  public resetPolicies() {
    this._policies.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get policiesInput() {
    return this._policies.internalValue;
  }

  // policy_enforcement_mode - computed: false, optional: true, required: false
  private _policyEnforcementMode?: string; 
  public get policyEnforcementMode() {
    return this.getStringAttribute('policy_enforcement_mode');
  }
  public set policyEnforcementMode(value: string) {
    this._policyEnforcementMode = value;
  }
  public resetPolicyEnforcementMode() {
    this._policyEnforcementMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get policyEnforcementModeInput() {
    return this._policyEnforcementMode;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResourcesList(this, "resources", false);
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsResources[] | cdktf.IResolvable) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopesList(this, "scopes", false);
  public get scopes() {
    return this._scopes;
  }
  public putScopes(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsScopes[] | cdktf.IResolvable) {
    this._scopes.internalValue = value;
  }
  public resetScopes() {
    this._scopes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes.internalValue;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_required}
  */
  readonly consentRequired?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_text DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_text}
  */
  readonly consentText?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol}
  */
  readonly protocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol_mapper DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol_mapper}
  */
  readonly protocolMapper?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappersToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.config),
    consent_required: cdktf.booleanToTerraform(struct!.consentRequired),
    consent_text: cdktf.stringToTerraform(struct!.consentText),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
    protocol: cdktf.stringToTerraform(struct!.protocol),
    protocol_mapper: cdktf.stringToTerraform(struct!.protocolMapper),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappersToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    consent_required: {
      value: cdktf.booleanToHclTerraform(struct!.consentRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    consent_text: {
      value: cdktf.stringToHclTerraform(struct!.consentText),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol: {
      value: cdktf.stringToHclTerraform(struct!.protocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol_mapper: {
      value: cdktf.stringToHclTerraform(struct!.protocolMapper),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._consentRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentRequired = this._consentRequired;
    }
    if (this._consentText !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentText = this._consentText;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._protocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocol = this._protocol;
    }
    if (this._protocolMapper !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocolMapper = this._protocolMapper;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._config = undefined;
      this._consentRequired = undefined;
      this._consentText = undefined;
      this._id = undefined;
      this._name = undefined;
      this._protocol = undefined;
      this._protocolMapper = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._config = value.config;
      this._consentRequired = value.consentRequired;
      this._consentText = value.consentText;
      this._id = value.id;
      this._name = value.name;
      this._protocol = value.protocol;
      this._protocolMapper = value.protocolMapper;
    }
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string }; 
  public get config() {
    return this.getStringMapAttribute('config');
  }
  public set config(value: { [key: string]: string }) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // consent_required - computed: false, optional: true, required: false
  private _consentRequired?: boolean | cdktf.IResolvable; 
  public get consentRequired() {
    return this.getBooleanAttribute('consent_required');
  }
  public set consentRequired(value: boolean | cdktf.IResolvable) {
    this._consentRequired = value;
  }
  public resetConsentRequired() {
    this._consentRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentRequiredInput() {
    return this._consentRequired;
  }

  // consent_text - computed: false, optional: true, required: false
  private _consentText?: string; 
  public get consentText() {
    return this.getStringAttribute('consent_text');
  }
  public set consentText(value: string) {
    this._consentText = value;
  }
  public resetConsentText() {
    this._consentText = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentTextInput() {
    return this._consentText;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // protocol - computed: false, optional: true, required: false
  private _protocol?: string; 
  public get protocol() {
    return this.getStringAttribute('protocol');
  }
  public set protocol(value: string) {
    this._protocol = value;
  }
  public resetProtocol() {
    this._protocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolInput() {
    return this._protocol;
  }

  // protocol_mapper - computed: false, optional: true, required: false
  private _protocolMapper?: string; 
  public get protocolMapper() {
    return this.getStringAttribute('protocol_mapper');
  }
  public set protocolMapper(value: string) {
    this._protocolMapper = value;
  }
  public resetProtocolMapper() {
    this._protocolMapper = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolMapperInput() {
    return this._protocolMapper;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappersList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappersOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClients {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#access DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#access}
  */
  readonly access?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#admin_url DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#admin_url}
  */
  readonly adminUrl?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#always_display_in_console DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#always_display_in_console}
  */
  readonly alwaysDisplayInConsole?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authentication_flow_binding_overrides DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authentication_flow_binding_overrides}
  */
  readonly authenticationFlowBindingOverrides?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authorization_services_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authorization_services_enabled}
  */
  readonly authorizationServicesEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authorization_settings DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authorization_settings}
  */
  readonly authorizationSettings?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettings;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#base_url DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#base_url}
  */
  readonly baseUrl?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#bearer_only DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#bearer_only}
  */
  readonly bearerOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_authenticator_type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_authenticator_type}
  */
  readonly clientAuthenticatorType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_id}
  */
  readonly clientId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_template DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_template}
  */
  readonly clientTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_required}
  */
  readonly consentRequired?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#default_client_scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#default_client_scopes}
  */
  readonly defaultClientScopes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#default_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#default_roles}
  */
  readonly defaultRoles?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#description DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#direct_access_grants_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#direct_access_grants_enabled}
  */
  readonly directAccessGrantsEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#direct_grants_only DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#direct_grants_only}
  */
  readonly directGrantsOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#frontchannel_logout DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#frontchannel_logout}
  */
  readonly frontchannelLogout?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#full_scope_allowed DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#full_scope_allowed}
  */
  readonly fullScopeAllowed?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#implicit_flow_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#implicit_flow_enabled}
  */
  readonly implicitFlowEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#node_re_registration_timeout DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#node_re_registration_timeout}
  */
  readonly nodeReRegistrationTimeout?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#not_before DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#not_before}
  */
  readonly notBefore?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#oauth2_device_authorization_grant_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#oauth2_device_authorization_grant_enabled}
  */
  readonly oauth2DeviceAuthorizationGrantEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#optional_client_scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#optional_client_scopes}
  */
  readonly optionalClientScopes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#origin DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#origin}
  */
  readonly origin?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol}
  */
  readonly protocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol_mappers DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol_mappers}
  */
  readonly protocolMappers?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#public_client DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#public_client}
  */
  readonly publicClient?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#redirect_uris DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#redirect_uris}
  */
  readonly redirectUris?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#registered_nodes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#registered_nodes}
  */
  readonly registeredNodes?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#registration_access_token DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#registration_access_token}
  */
  readonly registrationAccessToken?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#root_url DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#root_url}
  */
  readonly rootUrl?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#secret DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#secret}
  */
  readonly secret?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#service_accounts_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#service_accounts_enabled}
  */
  readonly serviceAccountsEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#standard_flow_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#standard_flow_enabled}
  */
  readonly standardFlowEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#surrogate_auth_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#surrogate_auth_required}
  */
  readonly surrogateAuthRequired?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#use_template_config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#use_template_config}
  */
  readonly useTemplateConfig?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#use_template_mappers DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#use_template_mappers}
  */
  readonly useTemplateMappers?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#use_template_scope DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#use_template_scope}
  */
  readonly useTemplateScope?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_origins DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_origins}
  */
  readonly webOrigins?: string[];
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClients | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.access),
    admin_url: cdktf.stringToTerraform(struct!.adminUrl),
    always_display_in_console: cdktf.booleanToTerraform(struct!.alwaysDisplayInConsole),
    attributes: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.attributes),
    authentication_flow_binding_overrides: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.authenticationFlowBindingOverrides),
    authorization_services_enabled: cdktf.booleanToTerraform(struct!.authorizationServicesEnabled),
    authorization_settings: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsToTerraform(struct!.authorizationSettings),
    base_url: cdktf.stringToTerraform(struct!.baseUrl),
    bearer_only: cdktf.booleanToTerraform(struct!.bearerOnly),
    client_authenticator_type: cdktf.stringToTerraform(struct!.clientAuthenticatorType),
    client_id: cdktf.stringToTerraform(struct!.clientId),
    client_template: cdktf.stringToTerraform(struct!.clientTemplate),
    consent_required: cdktf.booleanToTerraform(struct!.consentRequired),
    default_client_scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.defaultClientScopes),
    default_roles: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.defaultRoles),
    description: cdktf.stringToTerraform(struct!.description),
    direct_access_grants_enabled: cdktf.booleanToTerraform(struct!.directAccessGrantsEnabled),
    direct_grants_only: cdktf.booleanToTerraform(struct!.directGrantsOnly),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    frontchannel_logout: cdktf.booleanToTerraform(struct!.frontchannelLogout),
    full_scope_allowed: cdktf.booleanToTerraform(struct!.fullScopeAllowed),
    id: cdktf.stringToTerraform(struct!.id),
    implicit_flow_enabled: cdktf.booleanToTerraform(struct!.implicitFlowEnabled),
    name: cdktf.stringToTerraform(struct!.name),
    node_re_registration_timeout: cdktf.numberToTerraform(struct!.nodeReRegistrationTimeout),
    not_before: cdktf.numberToTerraform(struct!.notBefore),
    oauth2_device_authorization_grant_enabled: cdktf.booleanToTerraform(struct!.oauth2DeviceAuthorizationGrantEnabled),
    optional_client_scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.optionalClientScopes),
    origin: cdktf.stringToTerraform(struct!.origin),
    protocol: cdktf.stringToTerraform(struct!.protocol),
    protocol_mappers: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappersToTerraform, false)(struct!.protocolMappers),
    public_client: cdktf.booleanToTerraform(struct!.publicClient),
    redirect_uris: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.redirectUris),
    registered_nodes: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.registeredNodes),
    registration_access_token: cdktf.stringToTerraform(struct!.registrationAccessToken),
    root_url: cdktf.stringToTerraform(struct!.rootUrl),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_accounts_enabled: cdktf.booleanToTerraform(struct!.serviceAccountsEnabled),
    standard_flow_enabled: cdktf.booleanToTerraform(struct!.standardFlowEnabled),
    surrogate_auth_required: cdktf.booleanToTerraform(struct!.surrogateAuthRequired),
    use_template_config: cdktf.booleanToTerraform(struct!.useTemplateConfig),
    use_template_mappers: cdktf.booleanToTerraform(struct!.useTemplateMappers),
    use_template_scope: cdktf.booleanToTerraform(struct!.useTemplateScope),
    web_origins: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.webOrigins),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClients | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.access),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    admin_url: {
      value: cdktf.stringToHclTerraform(struct!.adminUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    always_display_in_console: {
      value: cdktf.booleanToHclTerraform(struct!.alwaysDisplayInConsole),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    authentication_flow_binding_overrides: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.authenticationFlowBindingOverrides),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    authorization_services_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.authorizationServicesEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    authorization_settings: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsToHclTerraform(struct!.authorizationSettings),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettings",
    },
    base_url: {
      value: cdktf.stringToHclTerraform(struct!.baseUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    bearer_only: {
      value: cdktf.booleanToHclTerraform(struct!.bearerOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    client_authenticator_type: {
      value: cdktf.stringToHclTerraform(struct!.clientAuthenticatorType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_id: {
      value: cdktf.stringToHclTerraform(struct!.clientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_template: {
      value: cdktf.stringToHclTerraform(struct!.clientTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    consent_required: {
      value: cdktf.booleanToHclTerraform(struct!.consentRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    default_client_scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.defaultClientScopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    default_roles: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.defaultRoles),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    direct_access_grants_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.directAccessGrantsEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    direct_grants_only: {
      value: cdktf.booleanToHclTerraform(struct!.directGrantsOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    frontchannel_logout: {
      value: cdktf.booleanToHclTerraform(struct!.frontchannelLogout),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    full_scope_allowed: {
      value: cdktf.booleanToHclTerraform(struct!.fullScopeAllowed),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    implicit_flow_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.implicitFlowEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_re_registration_timeout: {
      value: cdktf.numberToHclTerraform(struct!.nodeReRegistrationTimeout),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    not_before: {
      value: cdktf.numberToHclTerraform(struct!.notBefore),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    oauth2_device_authorization_grant_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.oauth2DeviceAuthorizationGrantEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    optional_client_scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.optionalClientScopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    origin: {
      value: cdktf.stringToHclTerraform(struct!.origin),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol: {
      value: cdktf.stringToHclTerraform(struct!.protocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol_mappers: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappersToHclTerraform, false)(struct!.protocolMappers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappersList",
    },
    public_client: {
      value: cdktf.booleanToHclTerraform(struct!.publicClient),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    redirect_uris: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.redirectUris),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    registered_nodes: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.registeredNodes),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    registration_access_token: {
      value: cdktf.stringToHclTerraform(struct!.registrationAccessToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    root_url: {
      value: cdktf.stringToHclTerraform(struct!.rootUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_accounts_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.serviceAccountsEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    standard_flow_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.standardFlowEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    surrogate_auth_required: {
      value: cdktf.booleanToHclTerraform(struct!.surrogateAuthRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_template_config: {
      value: cdktf.booleanToHclTerraform(struct!.useTemplateConfig),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_template_mappers: {
      value: cdktf.booleanToHclTerraform(struct!.useTemplateMappers),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_template_scope: {
      value: cdktf.booleanToHclTerraform(struct!.useTemplateScope),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    web_origins: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.webOrigins),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClients | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._access !== undefined) {
      hasAnyValues = true;
      internalValueResult.access = this._access;
    }
    if (this._adminUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUrl = this._adminUrl;
    }
    if (this._alwaysDisplayInConsole !== undefined) {
      hasAnyValues = true;
      internalValueResult.alwaysDisplayInConsole = this._alwaysDisplayInConsole;
    }
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._authenticationFlowBindingOverrides !== undefined) {
      hasAnyValues = true;
      internalValueResult.authenticationFlowBindingOverrides = this._authenticationFlowBindingOverrides;
    }
    if (this._authorizationServicesEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.authorizationServicesEnabled = this._authorizationServicesEnabled;
    }
    if (this._authorizationSettings?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authorizationSettings = this._authorizationSettings?.internalValue;
    }
    if (this._baseUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.baseUrl = this._baseUrl;
    }
    if (this._bearerOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.bearerOnly = this._bearerOnly;
    }
    if (this._clientAuthenticatorType !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientAuthenticatorType = this._clientAuthenticatorType;
    }
    if (this._clientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientId = this._clientId;
    }
    if (this._clientTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientTemplate = this._clientTemplate;
    }
    if (this._consentRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentRequired = this._consentRequired;
    }
    if (this._defaultClientScopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultClientScopes = this._defaultClientScopes;
    }
    if (this._defaultRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultRoles = this._defaultRoles;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._directAccessGrantsEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.directAccessGrantsEnabled = this._directAccessGrantsEnabled;
    }
    if (this._directGrantsOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.directGrantsOnly = this._directGrantsOnly;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._frontchannelLogout !== undefined) {
      hasAnyValues = true;
      internalValueResult.frontchannelLogout = this._frontchannelLogout;
    }
    if (this._fullScopeAllowed !== undefined) {
      hasAnyValues = true;
      internalValueResult.fullScopeAllowed = this._fullScopeAllowed;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._implicitFlowEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.implicitFlowEnabled = this._implicitFlowEnabled;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._nodeReRegistrationTimeout !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeReRegistrationTimeout = this._nodeReRegistrationTimeout;
    }
    if (this._notBefore !== undefined) {
      hasAnyValues = true;
      internalValueResult.notBefore = this._notBefore;
    }
    if (this._oauth2DeviceAuthorizationGrantEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.oauth2DeviceAuthorizationGrantEnabled = this._oauth2DeviceAuthorizationGrantEnabled;
    }
    if (this._optionalClientScopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.optionalClientScopes = this._optionalClientScopes;
    }
    if (this._origin !== undefined) {
      hasAnyValues = true;
      internalValueResult.origin = this._origin;
    }
    if (this._protocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocol = this._protocol;
    }
    if (this._protocolMappers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocolMappers = this._protocolMappers?.internalValue;
    }
    if (this._publicClient !== undefined) {
      hasAnyValues = true;
      internalValueResult.publicClient = this._publicClient;
    }
    if (this._redirectUris !== undefined) {
      hasAnyValues = true;
      internalValueResult.redirectUris = this._redirectUris;
    }
    if (this._registeredNodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.registeredNodes = this._registeredNodes;
    }
    if (this._registrationAccessToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.registrationAccessToken = this._registrationAccessToken;
    }
    if (this._rootUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.rootUrl = this._rootUrl;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccountsEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountsEnabled = this._serviceAccountsEnabled;
    }
    if (this._standardFlowEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.standardFlowEnabled = this._standardFlowEnabled;
    }
    if (this._surrogateAuthRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.surrogateAuthRequired = this._surrogateAuthRequired;
    }
    if (this._useTemplateConfig !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTemplateConfig = this._useTemplateConfig;
    }
    if (this._useTemplateMappers !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTemplateMappers = this._useTemplateMappers;
    }
    if (this._useTemplateScope !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTemplateScope = this._useTemplateScope;
    }
    if (this._webOrigins !== undefined) {
      hasAnyValues = true;
      internalValueResult.webOrigins = this._webOrigins;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClients | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._access = undefined;
      this._adminUrl = undefined;
      this._alwaysDisplayInConsole = undefined;
      this._attributes = undefined;
      this._authenticationFlowBindingOverrides = undefined;
      this._authorizationServicesEnabled = undefined;
      this._authorizationSettings.internalValue = undefined;
      this._baseUrl = undefined;
      this._bearerOnly = undefined;
      this._clientAuthenticatorType = undefined;
      this._clientId = undefined;
      this._clientTemplate = undefined;
      this._consentRequired = undefined;
      this._defaultClientScopes = undefined;
      this._defaultRoles = undefined;
      this._description = undefined;
      this._directAccessGrantsEnabled = undefined;
      this._directGrantsOnly = undefined;
      this._enabled = undefined;
      this._frontchannelLogout = undefined;
      this._fullScopeAllowed = undefined;
      this._id = undefined;
      this._implicitFlowEnabled = undefined;
      this._name = undefined;
      this._nodeReRegistrationTimeout = undefined;
      this._notBefore = undefined;
      this._oauth2DeviceAuthorizationGrantEnabled = undefined;
      this._optionalClientScopes = undefined;
      this._origin = undefined;
      this._protocol = undefined;
      this._protocolMappers.internalValue = undefined;
      this._publicClient = undefined;
      this._redirectUris = undefined;
      this._registeredNodes = undefined;
      this._registrationAccessToken = undefined;
      this._rootUrl = undefined;
      this._secret = undefined;
      this._serviceAccountsEnabled = undefined;
      this._standardFlowEnabled = undefined;
      this._surrogateAuthRequired = undefined;
      this._useTemplateConfig = undefined;
      this._useTemplateMappers = undefined;
      this._useTemplateScope = undefined;
      this._webOrigins = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._access = value.access;
      this._adminUrl = value.adminUrl;
      this._alwaysDisplayInConsole = value.alwaysDisplayInConsole;
      this._attributes = value.attributes;
      this._authenticationFlowBindingOverrides = value.authenticationFlowBindingOverrides;
      this._authorizationServicesEnabled = value.authorizationServicesEnabled;
      this._authorizationSettings.internalValue = value.authorizationSettings;
      this._baseUrl = value.baseUrl;
      this._bearerOnly = value.bearerOnly;
      this._clientAuthenticatorType = value.clientAuthenticatorType;
      this._clientId = value.clientId;
      this._clientTemplate = value.clientTemplate;
      this._consentRequired = value.consentRequired;
      this._defaultClientScopes = value.defaultClientScopes;
      this._defaultRoles = value.defaultRoles;
      this._description = value.description;
      this._directAccessGrantsEnabled = value.directAccessGrantsEnabled;
      this._directGrantsOnly = value.directGrantsOnly;
      this._enabled = value.enabled;
      this._frontchannelLogout = value.frontchannelLogout;
      this._fullScopeAllowed = value.fullScopeAllowed;
      this._id = value.id;
      this._implicitFlowEnabled = value.implicitFlowEnabled;
      this._name = value.name;
      this._nodeReRegistrationTimeout = value.nodeReRegistrationTimeout;
      this._notBefore = value.notBefore;
      this._oauth2DeviceAuthorizationGrantEnabled = value.oauth2DeviceAuthorizationGrantEnabled;
      this._optionalClientScopes = value.optionalClientScopes;
      this._origin = value.origin;
      this._protocol = value.protocol;
      this._protocolMappers.internalValue = value.protocolMappers;
      this._publicClient = value.publicClient;
      this._redirectUris = value.redirectUris;
      this._registeredNodes = value.registeredNodes;
      this._registrationAccessToken = value.registrationAccessToken;
      this._rootUrl = value.rootUrl;
      this._secret = value.secret;
      this._serviceAccountsEnabled = value.serviceAccountsEnabled;
      this._standardFlowEnabled = value.standardFlowEnabled;
      this._surrogateAuthRequired = value.surrogateAuthRequired;
      this._useTemplateConfig = value.useTemplateConfig;
      this._useTemplateMappers = value.useTemplateMappers;
      this._useTemplateScope = value.useTemplateScope;
      this._webOrigins = value.webOrigins;
    }
  }

  // access - computed: false, optional: true, required: false
  private _access?: { [key: string]: string }; 
  public get access() {
    return this.getStringMapAttribute('access');
  }
  public set access(value: { [key: string]: string }) {
    this._access = value;
  }
  public resetAccess() {
    this._access = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessInput() {
    return this._access;
  }

  // admin_url - computed: false, optional: true, required: false
  private _adminUrl?: string; 
  public get adminUrl() {
    return this.getStringAttribute('admin_url');
  }
  public set adminUrl(value: string) {
    this._adminUrl = value;
  }
  public resetAdminUrl() {
    this._adminUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUrlInput() {
    return this._adminUrl;
  }

  // always_display_in_console - computed: false, optional: true, required: false
  private _alwaysDisplayInConsole?: boolean | cdktf.IResolvable; 
  public get alwaysDisplayInConsole() {
    return this.getBooleanAttribute('always_display_in_console');
  }
  public set alwaysDisplayInConsole(value: boolean | cdktf.IResolvable) {
    this._alwaysDisplayInConsole = value;
  }
  public resetAlwaysDisplayInConsole() {
    this._alwaysDisplayInConsole = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get alwaysDisplayInConsoleInput() {
    return this._alwaysDisplayInConsole;
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string }; 
  public get attributes() {
    return this.getStringMapAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string }) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // authentication_flow_binding_overrides - computed: false, optional: true, required: false
  private _authenticationFlowBindingOverrides?: { [key: string]: string }; 
  public get authenticationFlowBindingOverrides() {
    return this.getStringMapAttribute('authentication_flow_binding_overrides');
  }
  public set authenticationFlowBindingOverrides(value: { [key: string]: string }) {
    this._authenticationFlowBindingOverrides = value;
  }
  public resetAuthenticationFlowBindingOverrides() {
    this._authenticationFlowBindingOverrides = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authenticationFlowBindingOverridesInput() {
    return this._authenticationFlowBindingOverrides;
  }

  // authorization_services_enabled - computed: false, optional: true, required: false
  private _authorizationServicesEnabled?: boolean | cdktf.IResolvable; 
  public get authorizationServicesEnabled() {
    return this.getBooleanAttribute('authorization_services_enabled');
  }
  public set authorizationServicesEnabled(value: boolean | cdktf.IResolvable) {
    this._authorizationServicesEnabled = value;
  }
  public resetAuthorizationServicesEnabled() {
    this._authorizationServicesEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authorizationServicesEnabledInput() {
    return this._authorizationServicesEnabled;
  }

  // authorization_settings - computed: false, optional: true, required: false
  private _authorizationSettings = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettingsOutputReference(this, "authorization_settings");
  public get authorizationSettings() {
    return this._authorizationSettings;
  }
  public putAuthorizationSettings(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsAuthorizationSettings) {
    this._authorizationSettings.internalValue = value;
  }
  public resetAuthorizationSettings() {
    this._authorizationSettings.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authorizationSettingsInput() {
    return this._authorizationSettings.internalValue;
  }

  // base_url - computed: false, optional: true, required: false
  private _baseUrl?: string; 
  public get baseUrl() {
    return this.getStringAttribute('base_url');
  }
  public set baseUrl(value: string) {
    this._baseUrl = value;
  }
  public resetBaseUrl() {
    this._baseUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get baseUrlInput() {
    return this._baseUrl;
  }

  // bearer_only - computed: false, optional: true, required: false
  private _bearerOnly?: boolean | cdktf.IResolvable; 
  public get bearerOnly() {
    return this.getBooleanAttribute('bearer_only');
  }
  public set bearerOnly(value: boolean | cdktf.IResolvable) {
    this._bearerOnly = value;
  }
  public resetBearerOnly() {
    this._bearerOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bearerOnlyInput() {
    return this._bearerOnly;
  }

  // client_authenticator_type - computed: false, optional: true, required: false
  private _clientAuthenticatorType?: string; 
  public get clientAuthenticatorType() {
    return this.getStringAttribute('client_authenticator_type');
  }
  public set clientAuthenticatorType(value: string) {
    this._clientAuthenticatorType = value;
  }
  public resetClientAuthenticatorType() {
    this._clientAuthenticatorType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientAuthenticatorTypeInput() {
    return this._clientAuthenticatorType;
  }

  // client_id - computed: false, optional: true, required: false
  private _clientId?: string; 
  public get clientId() {
    return this.getStringAttribute('client_id');
  }
  public set clientId(value: string) {
    this._clientId = value;
  }
  public resetClientId() {
    this._clientId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientIdInput() {
    return this._clientId;
  }

  // client_template - computed: false, optional: true, required: false
  private _clientTemplate?: string; 
  public get clientTemplate() {
    return this.getStringAttribute('client_template');
  }
  public set clientTemplate(value: string) {
    this._clientTemplate = value;
  }
  public resetClientTemplate() {
    this._clientTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientTemplateInput() {
    return this._clientTemplate;
  }

  // consent_required - computed: false, optional: true, required: false
  private _consentRequired?: boolean | cdktf.IResolvable; 
  public get consentRequired() {
    return this.getBooleanAttribute('consent_required');
  }
  public set consentRequired(value: boolean | cdktf.IResolvable) {
    this._consentRequired = value;
  }
  public resetConsentRequired() {
    this._consentRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentRequiredInput() {
    return this._consentRequired;
  }

  // default_client_scopes - computed: false, optional: true, required: false
  private _defaultClientScopes?: string[]; 
  public get defaultClientScopes() {
    return this.getListAttribute('default_client_scopes');
  }
  public set defaultClientScopes(value: string[]) {
    this._defaultClientScopes = value;
  }
  public resetDefaultClientScopes() {
    this._defaultClientScopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultClientScopesInput() {
    return this._defaultClientScopes;
  }

  // default_roles - computed: false, optional: true, required: false
  private _defaultRoles?: string[]; 
  public get defaultRoles() {
    return this.getListAttribute('default_roles');
  }
  public set defaultRoles(value: string[]) {
    this._defaultRoles = value;
  }
  public resetDefaultRoles() {
    this._defaultRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultRolesInput() {
    return this._defaultRoles;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // direct_access_grants_enabled - computed: false, optional: true, required: false
  private _directAccessGrantsEnabled?: boolean | cdktf.IResolvable; 
  public get directAccessGrantsEnabled() {
    return this.getBooleanAttribute('direct_access_grants_enabled');
  }
  public set directAccessGrantsEnabled(value: boolean | cdktf.IResolvable) {
    this._directAccessGrantsEnabled = value;
  }
  public resetDirectAccessGrantsEnabled() {
    this._directAccessGrantsEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directAccessGrantsEnabledInput() {
    return this._directAccessGrantsEnabled;
  }

  // direct_grants_only - computed: false, optional: true, required: false
  private _directGrantsOnly?: boolean | cdktf.IResolvable; 
  public get directGrantsOnly() {
    return this.getBooleanAttribute('direct_grants_only');
  }
  public set directGrantsOnly(value: boolean | cdktf.IResolvable) {
    this._directGrantsOnly = value;
  }
  public resetDirectGrantsOnly() {
    this._directGrantsOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directGrantsOnlyInput() {
    return this._directGrantsOnly;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // frontchannel_logout - computed: false, optional: true, required: false
  private _frontchannelLogout?: boolean | cdktf.IResolvable; 
  public get frontchannelLogout() {
    return this.getBooleanAttribute('frontchannel_logout');
  }
  public set frontchannelLogout(value: boolean | cdktf.IResolvable) {
    this._frontchannelLogout = value;
  }
  public resetFrontchannelLogout() {
    this._frontchannelLogout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get frontchannelLogoutInput() {
    return this._frontchannelLogout;
  }

  // full_scope_allowed - computed: false, optional: true, required: false
  private _fullScopeAllowed?: boolean | cdktf.IResolvable; 
  public get fullScopeAllowed() {
    return this.getBooleanAttribute('full_scope_allowed');
  }
  public set fullScopeAllowed(value: boolean | cdktf.IResolvable) {
    this._fullScopeAllowed = value;
  }
  public resetFullScopeAllowed() {
    this._fullScopeAllowed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fullScopeAllowedInput() {
    return this._fullScopeAllowed;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // implicit_flow_enabled - computed: false, optional: true, required: false
  private _implicitFlowEnabled?: boolean | cdktf.IResolvable; 
  public get implicitFlowEnabled() {
    return this.getBooleanAttribute('implicit_flow_enabled');
  }
  public set implicitFlowEnabled(value: boolean | cdktf.IResolvable) {
    this._implicitFlowEnabled = value;
  }
  public resetImplicitFlowEnabled() {
    this._implicitFlowEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get implicitFlowEnabledInput() {
    return this._implicitFlowEnabled;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // node_re_registration_timeout - computed: false, optional: true, required: false
  private _nodeReRegistrationTimeout?: number; 
  public get nodeReRegistrationTimeout() {
    return this.getNumberAttribute('node_re_registration_timeout');
  }
  public set nodeReRegistrationTimeout(value: number) {
    this._nodeReRegistrationTimeout = value;
  }
  public resetNodeReRegistrationTimeout() {
    this._nodeReRegistrationTimeout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeReRegistrationTimeoutInput() {
    return this._nodeReRegistrationTimeout;
  }

  // not_before - computed: false, optional: true, required: false
  private _notBefore?: number; 
  public get notBefore() {
    return this.getNumberAttribute('not_before');
  }
  public set notBefore(value: number) {
    this._notBefore = value;
  }
  public resetNotBefore() {
    this._notBefore = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get notBeforeInput() {
    return this._notBefore;
  }

  // oauth2_device_authorization_grant_enabled - computed: false, optional: true, required: false
  private _oauth2DeviceAuthorizationGrantEnabled?: boolean | cdktf.IResolvable; 
  public get oauth2DeviceAuthorizationGrantEnabled() {
    return this.getBooleanAttribute('oauth2_device_authorization_grant_enabled');
  }
  public set oauth2DeviceAuthorizationGrantEnabled(value: boolean | cdktf.IResolvable) {
    this._oauth2DeviceAuthorizationGrantEnabled = value;
  }
  public resetOauth2DeviceAuthorizationGrantEnabled() {
    this._oauth2DeviceAuthorizationGrantEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get oauth2DeviceAuthorizationGrantEnabledInput() {
    return this._oauth2DeviceAuthorizationGrantEnabled;
  }

  // optional_client_scopes - computed: false, optional: true, required: false
  private _optionalClientScopes?: string[]; 
  public get optionalClientScopes() {
    return this.getListAttribute('optional_client_scopes');
  }
  public set optionalClientScopes(value: string[]) {
    this._optionalClientScopes = value;
  }
  public resetOptionalClientScopes() {
    this._optionalClientScopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalClientScopesInput() {
    return this._optionalClientScopes;
  }

  // origin - computed: false, optional: true, required: false
  private _origin?: string; 
  public get origin() {
    return this.getStringAttribute('origin');
  }
  public set origin(value: string) {
    this._origin = value;
  }
  public resetOrigin() {
    this._origin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get originInput() {
    return this._origin;
  }

  // protocol - computed: false, optional: true, required: false
  private _protocol?: string; 
  public get protocol() {
    return this.getStringAttribute('protocol');
  }
  public set protocol(value: string) {
    this._protocol = value;
  }
  public resetProtocol() {
    this._protocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolInput() {
    return this._protocol;
  }

  // protocol_mappers - computed: false, optional: true, required: false
  private _protocolMappers = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappersList(this, "protocol_mappers", false);
  public get protocolMappers() {
    return this._protocolMappers;
  }
  public putProtocolMappers(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsProtocolMappers[] | cdktf.IResolvable) {
    this._protocolMappers.internalValue = value;
  }
  public resetProtocolMappers() {
    this._protocolMappers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolMappersInput() {
    return this._protocolMappers.internalValue;
  }

  // public_client - computed: false, optional: true, required: false
  private _publicClient?: boolean | cdktf.IResolvable; 
  public get publicClient() {
    return this.getBooleanAttribute('public_client');
  }
  public set publicClient(value: boolean | cdktf.IResolvable) {
    this._publicClient = value;
  }
  public resetPublicClient() {
    this._publicClient = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get publicClientInput() {
    return this._publicClient;
  }

  // redirect_uris - computed: false, optional: true, required: false
  private _redirectUris?: string[]; 
  public get redirectUris() {
    return this.getListAttribute('redirect_uris');
  }
  public set redirectUris(value: string[]) {
    this._redirectUris = value;
  }
  public resetRedirectUris() {
    this._redirectUris = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get redirectUrisInput() {
    return this._redirectUris;
  }

  // registered_nodes - computed: false, optional: true, required: false
  private _registeredNodes?: { [key: string]: string }; 
  public get registeredNodes() {
    return this.getStringMapAttribute('registered_nodes');
  }
  public set registeredNodes(value: { [key: string]: string }) {
    this._registeredNodes = value;
  }
  public resetRegisteredNodes() {
    this._registeredNodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get registeredNodesInput() {
    return this._registeredNodes;
  }

  // registration_access_token - computed: false, optional: true, required: false
  private _registrationAccessToken?: string; 
  public get registrationAccessToken() {
    return this.getStringAttribute('registration_access_token');
  }
  public set registrationAccessToken(value: string) {
    this._registrationAccessToken = value;
  }
  public resetRegistrationAccessToken() {
    this._registrationAccessToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get registrationAccessTokenInput() {
    return this._registrationAccessToken;
  }

  // root_url - computed: false, optional: true, required: false
  private _rootUrl?: string; 
  public get rootUrl() {
    return this.getStringAttribute('root_url');
  }
  public set rootUrl(value: string) {
    this._rootUrl = value;
  }
  public resetRootUrl() {
    this._rootUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rootUrlInput() {
    return this._rootUrl;
  }

  // secret - computed: false, optional: true, required: false
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  public resetSecret() {
    this._secret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_accounts_enabled - computed: false, optional: true, required: false
  private _serviceAccountsEnabled?: boolean | cdktf.IResolvable; 
  public get serviceAccountsEnabled() {
    return this.getBooleanAttribute('service_accounts_enabled');
  }
  public set serviceAccountsEnabled(value: boolean | cdktf.IResolvable) {
    this._serviceAccountsEnabled = value;
  }
  public resetServiceAccountsEnabled() {
    this._serviceAccountsEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountsEnabledInput() {
    return this._serviceAccountsEnabled;
  }

  // standard_flow_enabled - computed: false, optional: true, required: false
  private _standardFlowEnabled?: boolean | cdktf.IResolvable; 
  public get standardFlowEnabled() {
    return this.getBooleanAttribute('standard_flow_enabled');
  }
  public set standardFlowEnabled(value: boolean | cdktf.IResolvable) {
    this._standardFlowEnabled = value;
  }
  public resetStandardFlowEnabled() {
    this._standardFlowEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get standardFlowEnabledInput() {
    return this._standardFlowEnabled;
  }

  // surrogate_auth_required - computed: false, optional: true, required: false
  private _surrogateAuthRequired?: boolean | cdktf.IResolvable; 
  public get surrogateAuthRequired() {
    return this.getBooleanAttribute('surrogate_auth_required');
  }
  public set surrogateAuthRequired(value: boolean | cdktf.IResolvable) {
    this._surrogateAuthRequired = value;
  }
  public resetSurrogateAuthRequired() {
    this._surrogateAuthRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get surrogateAuthRequiredInput() {
    return this._surrogateAuthRequired;
  }

  // use_template_config - computed: false, optional: true, required: false
  private _useTemplateConfig?: boolean | cdktf.IResolvable; 
  public get useTemplateConfig() {
    return this.getBooleanAttribute('use_template_config');
  }
  public set useTemplateConfig(value: boolean | cdktf.IResolvable) {
    this._useTemplateConfig = value;
  }
  public resetUseTemplateConfig() {
    this._useTemplateConfig = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTemplateConfigInput() {
    return this._useTemplateConfig;
  }

  // use_template_mappers - computed: false, optional: true, required: false
  private _useTemplateMappers?: boolean | cdktf.IResolvable; 
  public get useTemplateMappers() {
    return this.getBooleanAttribute('use_template_mappers');
  }
  public set useTemplateMappers(value: boolean | cdktf.IResolvable) {
    this._useTemplateMappers = value;
  }
  public resetUseTemplateMappers() {
    this._useTemplateMappers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTemplateMappersInput() {
    return this._useTemplateMappers;
  }

  // use_template_scope - computed: false, optional: true, required: false
  private _useTemplateScope?: boolean | cdktf.IResolvable; 
  public get useTemplateScope() {
    return this.getBooleanAttribute('use_template_scope');
  }
  public set useTemplateScope(value: boolean | cdktf.IResolvable) {
    this._useTemplateScope = value;
  }
  public resetUseTemplateScope() {
    this._useTemplateScope = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTemplateScopeInput() {
    return this._useTemplateScope;
  }

  // web_origins - computed: false, optional: true, required: false
  private _webOrigins?: string[]; 
  public get webOrigins() {
    return this.getListAttribute('web_origins');
  }
  public set webOrigins(value: string[]) {
    this._webOrigins = value;
  }
  public resetWebOrigins() {
    this._webOrigins = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webOriginsInput() {
    return this._webOrigins;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClients[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleComposites {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#application DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#application}
  */
  readonly application?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client}
  */
  readonly client?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#realm DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#realm}
  */
  readonly realm?: string[];
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleCompositesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleComposites | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    application: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.application),
    client: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.client),
    realm: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.realm),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleCompositesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleComposites | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    application: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.application),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    client: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.client),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    realm: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.realm),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleCompositesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleComposites | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._application !== undefined) {
      hasAnyValues = true;
      internalValueResult.application = this._application;
    }
    if (this._client !== undefined) {
      hasAnyValues = true;
      internalValueResult.client = this._client;
    }
    if (this._realm !== undefined) {
      hasAnyValues = true;
      internalValueResult.realm = this._realm;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleComposites | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._application = undefined;
      this._client = undefined;
      this._realm = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._application = value.application;
      this._client = value.client;
      this._realm = value.realm;
    }
  }

  // application - computed: false, optional: true, required: false
  private _application?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get application() {
    return this.interpolationForAttribute('application');
  }
  public set application(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._application = value;
  }
  public resetApplication() {
    this._application = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get applicationInput() {
    return this._application;
  }

  // client - computed: false, optional: true, required: false
  private _client?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get client() {
    return this.interpolationForAttribute('client');
  }
  public set client(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._client = value;
  }
  public resetClient() {
    this._client = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientInput() {
    return this._client;
  }

  // realm - computed: false, optional: true, required: false
  private _realm?: string[]; 
  public get realm() {
    return this.getListAttribute('realm');
  }
  public set realm(value: string[]) {
    this._realm = value;
  }
  public resetRealm() {
    this._realm = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get realmInput() {
    return this._realm;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRole {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_role DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_role}
  */
  readonly clientRole?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#composite DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#composite}
  */
  readonly composite?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#composites DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#composites}
  */
  readonly composites?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleComposites;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#container_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#container_id}
  */
  readonly containerId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#description DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scope_param_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scope_param_required}
  */
  readonly scopeParamRequired?: boolean | cdktf.IResolvable;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRole | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    attributes: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.attributes),
    client_role: cdktf.booleanToTerraform(struct!.clientRole),
    composite: cdktf.booleanToTerraform(struct!.composite),
    composites: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleCompositesToTerraform(struct!.composites),
    container_id: cdktf.stringToTerraform(struct!.containerId),
    description: cdktf.stringToTerraform(struct!.description),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
    scope_param_required: cdktf.booleanToTerraform(struct!.scopeParamRequired),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRole | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    client_role: {
      value: cdktf.booleanToHclTerraform(struct!.clientRole),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    composite: {
      value: cdktf.booleanToHclTerraform(struct!.composite),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    composites: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleCompositesToHclTerraform(struct!.composites),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleComposites",
    },
    container_id: {
      value: cdktf.stringToHclTerraform(struct!.containerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scope_param_required: {
      value: cdktf.booleanToHclTerraform(struct!.scopeParamRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRole | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._clientRole !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientRole = this._clientRole;
    }
    if (this._composite !== undefined) {
      hasAnyValues = true;
      internalValueResult.composite = this._composite;
    }
    if (this._composites?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.composites = this._composites?.internalValue;
    }
    if (this._containerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerId = this._containerId;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._scopeParamRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopeParamRequired = this._scopeParamRequired;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRole | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._attributes = undefined;
      this._clientRole = undefined;
      this._composite = undefined;
      this._composites.internalValue = undefined;
      this._containerId = undefined;
      this._description = undefined;
      this._id = undefined;
      this._name = undefined;
      this._scopeParamRequired = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._attributes = value.attributes;
      this._clientRole = value.clientRole;
      this._composite = value.composite;
      this._composites.internalValue = value.composites;
      this._containerId = value.containerId;
      this._description = value.description;
      this._id = value.id;
      this._name = value.name;
      this._scopeParamRequired = value.scopeParamRequired;
    }
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get attributes() {
    return this.interpolationForAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // client_role - computed: false, optional: true, required: false
  private _clientRole?: boolean | cdktf.IResolvable; 
  public get clientRole() {
    return this.getBooleanAttribute('client_role');
  }
  public set clientRole(value: boolean | cdktf.IResolvable) {
    this._clientRole = value;
  }
  public resetClientRole() {
    this._clientRole = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientRoleInput() {
    return this._clientRole;
  }

  // composite - computed: false, optional: true, required: false
  private _composite?: boolean | cdktf.IResolvable; 
  public get composite() {
    return this.getBooleanAttribute('composite');
  }
  public set composite(value: boolean | cdktf.IResolvable) {
    this._composite = value;
  }
  public resetComposite() {
    this._composite = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compositeInput() {
    return this._composite;
  }

  // composites - computed: false, optional: true, required: false
  private _composites = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleCompositesOutputReference(this, "composites");
  public get composites() {
    return this._composites;
  }
  public putComposites(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleComposites) {
    this._composites.internalValue = value;
  }
  public resetComposites() {
    this._composites.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compositesInput() {
    return this._composites.internalValue;
  }

  // container_id - computed: false, optional: true, required: false
  private _containerId?: string; 
  public get containerId() {
    return this.getStringAttribute('container_id');
  }
  public set containerId(value: string) {
    this._containerId = value;
  }
  public resetContainerId() {
    this._containerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerIdInput() {
    return this._containerId;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // scope_param_required - computed: false, optional: true, required: false
  private _scopeParamRequired?: boolean | cdktf.IResolvable; 
  public get scopeParamRequired() {
    return this.getBooleanAttribute('scope_param_required');
  }
  public set scopeParamRequired(value: boolean | cdktf.IResolvable) {
    this._scopeParamRequired = value;
  }
  public resetScopeParamRequired() {
    this._scopeParamRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopeParamRequiredInput() {
    return this._scopeParamRequired;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsents {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_id}
  */
  readonly clientId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#created_date DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#created_date}
  */
  readonly createdDate?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#granted_client_scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#granted_client_scopes}
  */
  readonly grantedClientScopes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#granted_realm_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#granted_realm_roles}
  */
  readonly grantedRealmRoles?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#last_updated_date DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#last_updated_date}
  */
  readonly lastUpdatedDate?: number;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsentsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    client_id: cdktf.stringToTerraform(struct!.clientId),
    created_date: cdktf.numberToTerraform(struct!.createdDate),
    granted_client_scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.grantedClientScopes),
    granted_realm_roles: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.grantedRealmRoles),
    last_updated_date: cdktf.numberToTerraform(struct!.lastUpdatedDate),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsentsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    client_id: {
      value: cdktf.stringToHclTerraform(struct!.clientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    created_date: {
      value: cdktf.numberToHclTerraform(struct!.createdDate),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    granted_client_scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.grantedClientScopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    granted_realm_roles: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.grantedRealmRoles),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    last_updated_date: {
      value: cdktf.numberToHclTerraform(struct!.lastUpdatedDate),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientId = this._clientId;
    }
    if (this._createdDate !== undefined) {
      hasAnyValues = true;
      internalValueResult.createdDate = this._createdDate;
    }
    if (this._grantedClientScopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.grantedClientScopes = this._grantedClientScopes;
    }
    if (this._grantedRealmRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.grantedRealmRoles = this._grantedRealmRoles;
    }
    if (this._lastUpdatedDate !== undefined) {
      hasAnyValues = true;
      internalValueResult.lastUpdatedDate = this._lastUpdatedDate;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clientId = undefined;
      this._createdDate = undefined;
      this._grantedClientScopes = undefined;
      this._grantedRealmRoles = undefined;
      this._lastUpdatedDate = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clientId = value.clientId;
      this._createdDate = value.createdDate;
      this._grantedClientScopes = value.grantedClientScopes;
      this._grantedRealmRoles = value.grantedRealmRoles;
      this._lastUpdatedDate = value.lastUpdatedDate;
    }
  }

  // client_id - computed: false, optional: true, required: false
  private _clientId?: string; 
  public get clientId() {
    return this.getStringAttribute('client_id');
  }
  public set clientId(value: string) {
    this._clientId = value;
  }
  public resetClientId() {
    this._clientId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientIdInput() {
    return this._clientId;
  }

  // created_date - computed: false, optional: true, required: false
  private _createdDate?: number; 
  public get createdDate() {
    return this.getNumberAttribute('created_date');
  }
  public set createdDate(value: number) {
    this._createdDate = value;
  }
  public resetCreatedDate() {
    this._createdDate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get createdDateInput() {
    return this._createdDate;
  }

  // granted_client_scopes - computed: false, optional: true, required: false
  private _grantedClientScopes?: string[]; 
  public get grantedClientScopes() {
    return this.getListAttribute('granted_client_scopes');
  }
  public set grantedClientScopes(value: string[]) {
    this._grantedClientScopes = value;
  }
  public resetGrantedClientScopes() {
    this._grantedClientScopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get grantedClientScopesInput() {
    return this._grantedClientScopes;
  }

  // granted_realm_roles - computed: false, optional: true, required: false
  private _grantedRealmRoles?: string[]; 
  public get grantedRealmRoles() {
    return this.getListAttribute('granted_realm_roles');
  }
  public set grantedRealmRoles(value: string[]) {
    this._grantedRealmRoles = value;
  }
  public resetGrantedRealmRoles() {
    this._grantedRealmRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get grantedRealmRolesInput() {
    return this._grantedRealmRoles;
  }

  // last_updated_date - computed: false, optional: true, required: false
  private _lastUpdatedDate?: number; 
  public get lastUpdatedDate() {
    return this.getNumberAttribute('last_updated_date');
  }
  public set lastUpdatedDate(value: number) {
    this._lastUpdatedDate = value;
  }
  public resetLastUpdatedDate() {
    this._lastUpdatedDate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lastUpdatedDateInput() {
    return this._lastUpdatedDate;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsentsList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsents[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsentsOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsentsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentials {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#algorithm DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#algorithm}
  */
  readonly algorithm?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#counter DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#counter}
  */
  readonly counter?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#created_date DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#created_date}
  */
  readonly createdDate?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#credential_data DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#credential_data}
  */
  readonly credentialData?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#device DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#device}
  */
  readonly device?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#digits DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#digits}
  */
  readonly digits?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#hash_iterations DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#hash_iterations}
  */
  readonly hashIterations?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#hashed_salted_value DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#hashed_salted_value}
  */
  readonly hashedSaltedValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#period DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#period}
  */
  readonly period?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#priority DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#salt DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#salt}
  */
  readonly salt?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#secret_data DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#secret_data}
  */
  readonly secretData?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#temporary DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#temporary}
  */
  readonly temporary?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#user_label DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#user_label}
  */
  readonly userLabel?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#value DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentialsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    algorithm: cdktf.stringToTerraform(struct!.algorithm),
    config: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.config),
    counter: cdktf.numberToTerraform(struct!.counter),
    created_date: cdktf.numberToTerraform(struct!.createdDate),
    credential_data: cdktf.stringToTerraform(struct!.credentialData),
    device: cdktf.stringToTerraform(struct!.device),
    digits: cdktf.numberToTerraform(struct!.digits),
    hash_iterations: cdktf.numberToTerraform(struct!.hashIterations),
    hashed_salted_value: cdktf.stringToTerraform(struct!.hashedSaltedValue),
    id: cdktf.stringToTerraform(struct!.id),
    period: cdktf.numberToTerraform(struct!.period),
    priority: cdktf.numberToTerraform(struct!.priority),
    salt: cdktf.stringToTerraform(struct!.salt),
    secret_data: cdktf.stringToTerraform(struct!.secretData),
    temporary: cdktf.booleanToTerraform(struct!.temporary),
    type: cdktf.stringToTerraform(struct!.type),
    user_label: cdktf.stringToTerraform(struct!.userLabel),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentialsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    algorithm: {
      value: cdktf.stringToHclTerraform(struct!.algorithm),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    config: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    counter: {
      value: cdktf.numberToHclTerraform(struct!.counter),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    created_date: {
      value: cdktf.numberToHclTerraform(struct!.createdDate),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    credential_data: {
      value: cdktf.stringToHclTerraform(struct!.credentialData),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device: {
      value: cdktf.stringToHclTerraform(struct!.device),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    digits: {
      value: cdktf.numberToHclTerraform(struct!.digits),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    hash_iterations: {
      value: cdktf.numberToHclTerraform(struct!.hashIterations),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    hashed_salted_value: {
      value: cdktf.stringToHclTerraform(struct!.hashedSaltedValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    period: {
      value: cdktf.numberToHclTerraform(struct!.period),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    salt: {
      value: cdktf.stringToHclTerraform(struct!.salt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_data: {
      value: cdktf.stringToHclTerraform(struct!.secretData),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    temporary: {
      value: cdktf.booleanToHclTerraform(struct!.temporary),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_label: {
      value: cdktf.stringToHclTerraform(struct!.userLabel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentialsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentials | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._algorithm !== undefined) {
      hasAnyValues = true;
      internalValueResult.algorithm = this._algorithm;
    }
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._counter !== undefined) {
      hasAnyValues = true;
      internalValueResult.counter = this._counter;
    }
    if (this._createdDate !== undefined) {
      hasAnyValues = true;
      internalValueResult.createdDate = this._createdDate;
    }
    if (this._credentialData !== undefined) {
      hasAnyValues = true;
      internalValueResult.credentialData = this._credentialData;
    }
    if (this._device !== undefined) {
      hasAnyValues = true;
      internalValueResult.device = this._device;
    }
    if (this._digits !== undefined) {
      hasAnyValues = true;
      internalValueResult.digits = this._digits;
    }
    if (this._hashIterations !== undefined) {
      hasAnyValues = true;
      internalValueResult.hashIterations = this._hashIterations;
    }
    if (this._hashedSaltedValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.hashedSaltedValue = this._hashedSaltedValue;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._period !== undefined) {
      hasAnyValues = true;
      internalValueResult.period = this._period;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._salt !== undefined) {
      hasAnyValues = true;
      internalValueResult.salt = this._salt;
    }
    if (this._secretData !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretData = this._secretData;
    }
    if (this._temporary !== undefined) {
      hasAnyValues = true;
      internalValueResult.temporary = this._temporary;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._userLabel !== undefined) {
      hasAnyValues = true;
      internalValueResult.userLabel = this._userLabel;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentials | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._algorithm = undefined;
      this._config = undefined;
      this._counter = undefined;
      this._createdDate = undefined;
      this._credentialData = undefined;
      this._device = undefined;
      this._digits = undefined;
      this._hashIterations = undefined;
      this._hashedSaltedValue = undefined;
      this._id = undefined;
      this._period = undefined;
      this._priority = undefined;
      this._salt = undefined;
      this._secretData = undefined;
      this._temporary = undefined;
      this._type = undefined;
      this._userLabel = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._algorithm = value.algorithm;
      this._config = value.config;
      this._counter = value.counter;
      this._createdDate = value.createdDate;
      this._credentialData = value.credentialData;
      this._device = value.device;
      this._digits = value.digits;
      this._hashIterations = value.hashIterations;
      this._hashedSaltedValue = value.hashedSaltedValue;
      this._id = value.id;
      this._period = value.period;
      this._priority = value.priority;
      this._salt = value.salt;
      this._secretData = value.secretData;
      this._temporary = value.temporary;
      this._type = value.type;
      this._userLabel = value.userLabel;
      this._value = value.value;
    }
  }

  // algorithm - computed: false, optional: true, required: false
  private _algorithm?: string; 
  public get algorithm() {
    return this.getStringAttribute('algorithm');
  }
  public set algorithm(value: string) {
    this._algorithm = value;
  }
  public resetAlgorithm() {
    this._algorithm = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get algorithmInput() {
    return this._algorithm;
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get config() {
    return this.interpolationForAttribute('config');
  }
  public set config(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // counter - computed: false, optional: true, required: false
  private _counter?: number; 
  public get counter() {
    return this.getNumberAttribute('counter');
  }
  public set counter(value: number) {
    this._counter = value;
  }
  public resetCounter() {
    this._counter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get counterInput() {
    return this._counter;
  }

  // created_date - computed: false, optional: true, required: false
  private _createdDate?: number; 
  public get createdDate() {
    return this.getNumberAttribute('created_date');
  }
  public set createdDate(value: number) {
    this._createdDate = value;
  }
  public resetCreatedDate() {
    this._createdDate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get createdDateInput() {
    return this._createdDate;
  }

  // credential_data - computed: false, optional: true, required: false
  private _credentialData?: string; 
  public get credentialData() {
    return this.getStringAttribute('credential_data');
  }
  public set credentialData(value: string) {
    this._credentialData = value;
  }
  public resetCredentialData() {
    this._credentialData = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get credentialDataInput() {
    return this._credentialData;
  }

  // device - computed: false, optional: true, required: false
  private _device?: string; 
  public get device() {
    return this.getStringAttribute('device');
  }
  public set device(value: string) {
    this._device = value;
  }
  public resetDevice() {
    this._device = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceInput() {
    return this._device;
  }

  // digits - computed: false, optional: true, required: false
  private _digits?: number; 
  public get digits() {
    return this.getNumberAttribute('digits');
  }
  public set digits(value: number) {
    this._digits = value;
  }
  public resetDigits() {
    this._digits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get digitsInput() {
    return this._digits;
  }

  // hash_iterations - computed: false, optional: true, required: false
  private _hashIterations?: number; 
  public get hashIterations() {
    return this.getNumberAttribute('hash_iterations');
  }
  public set hashIterations(value: number) {
    this._hashIterations = value;
  }
  public resetHashIterations() {
    this._hashIterations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hashIterationsInput() {
    return this._hashIterations;
  }

  // hashed_salted_value - computed: false, optional: true, required: false
  private _hashedSaltedValue?: string; 
  public get hashedSaltedValue() {
    return this.getStringAttribute('hashed_salted_value');
  }
  public set hashedSaltedValue(value: string) {
    this._hashedSaltedValue = value;
  }
  public resetHashedSaltedValue() {
    this._hashedSaltedValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hashedSaltedValueInput() {
    return this._hashedSaltedValue;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // period - computed: false, optional: true, required: false
  private _period?: number; 
  public get period() {
    return this.getNumberAttribute('period');
  }
  public set period(value: number) {
    this._period = value;
  }
  public resetPeriod() {
    this._period = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get periodInput() {
    return this._period;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // salt - computed: false, optional: true, required: false
  private _salt?: string; 
  public get salt() {
    return this.getStringAttribute('salt');
  }
  public set salt(value: string) {
    this._salt = value;
  }
  public resetSalt() {
    this._salt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get saltInput() {
    return this._salt;
  }

  // secret_data - computed: false, optional: true, required: false
  private _secretData?: string; 
  public get secretData() {
    return this.getStringAttribute('secret_data');
  }
  public set secretData(value: string) {
    this._secretData = value;
  }
  public resetSecretData() {
    this._secretData = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretDataInput() {
    return this._secretData;
  }

  // temporary - computed: false, optional: true, required: false
  private _temporary?: boolean | cdktf.IResolvable; 
  public get temporary() {
    return this.getBooleanAttribute('temporary');
  }
  public set temporary(value: boolean | cdktf.IResolvable) {
    this._temporary = value;
  }
  public resetTemporary() {
    this._temporary = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get temporaryInput() {
    return this._temporary;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // user_label - computed: false, optional: true, required: false
  private _userLabel?: string; 
  public get userLabel() {
    return this.getStringAttribute('user_label');
  }
  public set userLabel(value: string) {
    this._userLabel = value;
  }
  public resetUserLabel() {
    this._userLabel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userLabelInput() {
    return this._userLabel;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentialsList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentials[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentialsOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentialsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentities {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#identity_provider DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#identity_provider}
  */
  readonly identityProvider?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#user_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#user_id}
  */
  readonly userId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#user_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#user_name}
  */
  readonly userName?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentitiesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentities | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    identity_provider: cdktf.stringToTerraform(struct!.identityProvider),
    user_id: cdktf.stringToTerraform(struct!.userId),
    user_name: cdktf.stringToTerraform(struct!.userName),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentitiesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentities | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    identity_provider: {
      value: cdktf.stringToHclTerraform(struct!.identityProvider),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_id: {
      value: cdktf.stringToHclTerraform(struct!.userId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_name: {
      value: cdktf.stringToHclTerraform(struct!.userName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentitiesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentities | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._identityProvider !== undefined) {
      hasAnyValues = true;
      internalValueResult.identityProvider = this._identityProvider;
    }
    if (this._userId !== undefined) {
      hasAnyValues = true;
      internalValueResult.userId = this._userId;
    }
    if (this._userName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userName = this._userName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentities | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._identityProvider = undefined;
      this._userId = undefined;
      this._userName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._identityProvider = value.identityProvider;
      this._userId = value.userId;
      this._userName = value.userName;
    }
  }

  // identity_provider - computed: false, optional: true, required: false
  private _identityProvider?: string; 
  public get identityProvider() {
    return this.getStringAttribute('identity_provider');
  }
  public set identityProvider(value: string) {
    this._identityProvider = value;
  }
  public resetIdentityProvider() {
    this._identityProvider = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get identityProviderInput() {
    return this._identityProvider;
  }

  // user_id - computed: false, optional: true, required: false
  private _userId?: string; 
  public get userId() {
    return this.getStringAttribute('user_id');
  }
  public set userId(value: string) {
    this._userId = value;
  }
  public resetUserId() {
    this._userId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userIdInput() {
    return this._userId;
  }

  // user_name - computed: false, optional: true, required: false
  private _userName?: string; 
  public get userName() {
    return this.getStringAttribute('user_name');
  }
  public set userName(value: string) {
    this._userName = value;
  }
  public resetUserName() {
    this._userName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userNameInput() {
    return this._userName;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentitiesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentities[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentitiesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentitiesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinks {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#social_provider DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#social_provider}
  */
  readonly socialProvider?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#social_user_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#social_user_id}
  */
  readonly socialUserId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#social_username DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#social_username}
  */
  readonly socialUsername?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinksToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    social_provider: cdktf.stringToTerraform(struct!.socialProvider),
    social_user_id: cdktf.stringToTerraform(struct!.socialUserId),
    social_username: cdktf.stringToTerraform(struct!.socialUsername),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinksToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    social_provider: {
      value: cdktf.stringToHclTerraform(struct!.socialProvider),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    social_user_id: {
      value: cdktf.stringToHclTerraform(struct!.socialUserId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    social_username: {
      value: cdktf.stringToHclTerraform(struct!.socialUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinksOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinks | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._socialProvider !== undefined) {
      hasAnyValues = true;
      internalValueResult.socialProvider = this._socialProvider;
    }
    if (this._socialUserId !== undefined) {
      hasAnyValues = true;
      internalValueResult.socialUserId = this._socialUserId;
    }
    if (this._socialUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.socialUsername = this._socialUsername;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinks | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._socialProvider = undefined;
      this._socialUserId = undefined;
      this._socialUsername = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._socialProvider = value.socialProvider;
      this._socialUserId = value.socialUserId;
      this._socialUsername = value.socialUsername;
    }
  }

  // social_provider - computed: false, optional: true, required: false
  private _socialProvider?: string; 
  public get socialProvider() {
    return this.getStringAttribute('social_provider');
  }
  public set socialProvider(value: string) {
    this._socialProvider = value;
  }
  public resetSocialProvider() {
    this._socialProvider = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get socialProviderInput() {
    return this._socialProvider;
  }

  // social_user_id - computed: false, optional: true, required: false
  private _socialUserId?: string; 
  public get socialUserId() {
    return this.getStringAttribute('social_user_id');
  }
  public set socialUserId(value: string) {
    this._socialUserId = value;
  }
  public resetSocialUserId() {
    this._socialUserId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get socialUserIdInput() {
    return this._socialUserId;
  }

  // social_username - computed: false, optional: true, required: false
  private _socialUsername?: string; 
  public get socialUsername() {
    return this.getStringAttribute('social_username');
  }
  public set socialUsername(value: string) {
    this._socialUsername = value;
  }
  public resetSocialUsername() {
    this._socialUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get socialUsernameInput() {
    return this._socialUsername;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinksList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinks[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinksOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinksOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#access DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#access}
  */
  readonly access?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#application_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#application_roles}
  */
  readonly applicationRoles?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_consents DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_consents}
  */
  readonly clientConsents?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsents[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_roles}
  */
  readonly clientRoles?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#created_timestamp DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#created_timestamp}
  */
  readonly createdTimestamp?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#credentials DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#credentials}
  */
  readonly credentials?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentials[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#disableable_credential_types DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#disableable_credential_types}
  */
  readonly disableableCredentialTypes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#email DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#email}
  */
  readonly email?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#email_verified DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#email_verified}
  */
  readonly emailVerified?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#federated_identities DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#federated_identities}
  */
  readonly federatedIdentities?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentities[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#federation_link DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#federation_link}
  */
  readonly federationLink?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#first_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#first_name}
  */
  readonly firstName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#groups DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#groups}
  */
  readonly groups?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#last_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#last_name}
  */
  readonly lastName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#not_before DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#not_before}
  */
  readonly notBefore?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#origin DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#origin}
  */
  readonly origin?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#realm_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#realm_roles}
  */
  readonly realmRoles?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#required_actions DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#required_actions}
  */
  readonly requiredActions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#self DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#self}
  */
  readonly selfAttribute?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#service_account_client_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#service_account_client_id}
  */
  readonly serviceAccountClientId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#social_links DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#social_links}
  */
  readonly socialLinks?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinks[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#totp DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#totp}
  */
  readonly totp?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#username DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#username}
  */
  readonly username?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.access),
    application_roles: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.applicationRoles),
    attributes: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.attributes),
    client_consents: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsentsToTerraform, false)(struct!.clientConsents),
    client_roles: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.clientRoles),
    created_timestamp: cdktf.numberToTerraform(struct!.createdTimestamp),
    credentials: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentialsToTerraform, false)(struct!.credentials),
    disableable_credential_types: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.disableableCredentialTypes),
    email: cdktf.stringToTerraform(struct!.email),
    email_verified: cdktf.booleanToTerraform(struct!.emailVerified),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    federated_identities: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentitiesToTerraform, false)(struct!.federatedIdentities),
    federation_link: cdktf.stringToTerraform(struct!.federationLink),
    first_name: cdktf.stringToTerraform(struct!.firstName),
    groups: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.groups),
    id: cdktf.stringToTerraform(struct!.id),
    last_name: cdktf.stringToTerraform(struct!.lastName),
    not_before: cdktf.numberToTerraform(struct!.notBefore),
    origin: cdktf.stringToTerraform(struct!.origin),
    realm_roles: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.realmRoles),
    required_actions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.requiredActions),
    self: cdktf.stringToTerraform(struct!.selfAttribute),
    service_account_client_id: cdktf.stringToTerraform(struct!.serviceAccountClientId),
    social_links: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinksToTerraform, false)(struct!.socialLinks),
    totp: cdktf.booleanToTerraform(struct!.totp),
    username: cdktf.stringToTerraform(struct!.username),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.access),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    application_roles: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.applicationRoles),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    client_consents: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsentsToHclTerraform, false)(struct!.clientConsents),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsentsList",
    },
    client_roles: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.clientRoles),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    created_timestamp: {
      value: cdktf.numberToHclTerraform(struct!.createdTimestamp),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    credentials: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentialsToHclTerraform, false)(struct!.credentials),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentialsList",
    },
    disableable_credential_types: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.disableableCredentialTypes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    email: {
      value: cdktf.stringToHclTerraform(struct!.email),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    email_verified: {
      value: cdktf.booleanToHclTerraform(struct!.emailVerified),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    federated_identities: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentitiesToHclTerraform, false)(struct!.federatedIdentities),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentitiesList",
    },
    federation_link: {
      value: cdktf.stringToHclTerraform(struct!.federationLink),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    first_name: {
      value: cdktf.stringToHclTerraform(struct!.firstName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    groups: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.groups),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    last_name: {
      value: cdktf.stringToHclTerraform(struct!.lastName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    not_before: {
      value: cdktf.numberToHclTerraform(struct!.notBefore),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    origin: {
      value: cdktf.stringToHclTerraform(struct!.origin),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    realm_roles: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.realmRoles),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    required_actions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.requiredActions),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    self: {
      value: cdktf.stringToHclTerraform(struct!.selfAttribute),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_client_id: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountClientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    social_links: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinksToHclTerraform, false)(struct!.socialLinks),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinksList",
    },
    totp: {
      value: cdktf.booleanToHclTerraform(struct!.totp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    username: {
      value: cdktf.stringToHclTerraform(struct!.username),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._access !== undefined) {
      hasAnyValues = true;
      internalValueResult.access = this._access;
    }
    if (this._applicationRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.applicationRoles = this._applicationRoles;
    }
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._clientConsents?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientConsents = this._clientConsents?.internalValue;
    }
    if (this._clientRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientRoles = this._clientRoles;
    }
    if (this._createdTimestamp !== undefined) {
      hasAnyValues = true;
      internalValueResult.createdTimestamp = this._createdTimestamp;
    }
    if (this._credentials?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.credentials = this._credentials?.internalValue;
    }
    if (this._disableableCredentialTypes !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableableCredentialTypes = this._disableableCredentialTypes;
    }
    if (this._email !== undefined) {
      hasAnyValues = true;
      internalValueResult.email = this._email;
    }
    if (this._emailVerified !== undefined) {
      hasAnyValues = true;
      internalValueResult.emailVerified = this._emailVerified;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._federatedIdentities?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.federatedIdentities = this._federatedIdentities?.internalValue;
    }
    if (this._federationLink !== undefined) {
      hasAnyValues = true;
      internalValueResult.federationLink = this._federationLink;
    }
    if (this._firstName !== undefined) {
      hasAnyValues = true;
      internalValueResult.firstName = this._firstName;
    }
    if (this._groups !== undefined) {
      hasAnyValues = true;
      internalValueResult.groups = this._groups;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._lastName !== undefined) {
      hasAnyValues = true;
      internalValueResult.lastName = this._lastName;
    }
    if (this._notBefore !== undefined) {
      hasAnyValues = true;
      internalValueResult.notBefore = this._notBefore;
    }
    if (this._origin !== undefined) {
      hasAnyValues = true;
      internalValueResult.origin = this._origin;
    }
    if (this._realmRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.realmRoles = this._realmRoles;
    }
    if (this._requiredActions !== undefined) {
      hasAnyValues = true;
      internalValueResult.requiredActions = this._requiredActions;
    }
    if (this._self !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfAttribute = this._self;
    }
    if (this._serviceAccountClientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountClientId = this._serviceAccountClientId;
    }
    if (this._socialLinks?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.socialLinks = this._socialLinks?.internalValue;
    }
    if (this._totp !== undefined) {
      hasAnyValues = true;
      internalValueResult.totp = this._totp;
    }
    if (this._username !== undefined) {
      hasAnyValues = true;
      internalValueResult.username = this._username;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._access = undefined;
      this._applicationRoles = undefined;
      this._attributes = undefined;
      this._clientConsents.internalValue = undefined;
      this._clientRoles = undefined;
      this._createdTimestamp = undefined;
      this._credentials.internalValue = undefined;
      this._disableableCredentialTypes = undefined;
      this._email = undefined;
      this._emailVerified = undefined;
      this._enabled = undefined;
      this._federatedIdentities.internalValue = undefined;
      this._federationLink = undefined;
      this._firstName = undefined;
      this._groups = undefined;
      this._id = undefined;
      this._lastName = undefined;
      this._notBefore = undefined;
      this._origin = undefined;
      this._realmRoles = undefined;
      this._requiredActions = undefined;
      this._self = undefined;
      this._serviceAccountClientId = undefined;
      this._socialLinks.internalValue = undefined;
      this._totp = undefined;
      this._username = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._access = value.access;
      this._applicationRoles = value.applicationRoles;
      this._attributes = value.attributes;
      this._clientConsents.internalValue = value.clientConsents;
      this._clientRoles = value.clientRoles;
      this._createdTimestamp = value.createdTimestamp;
      this._credentials.internalValue = value.credentials;
      this._disableableCredentialTypes = value.disableableCredentialTypes;
      this._email = value.email;
      this._emailVerified = value.emailVerified;
      this._enabled = value.enabled;
      this._federatedIdentities.internalValue = value.federatedIdentities;
      this._federationLink = value.federationLink;
      this._firstName = value.firstName;
      this._groups = value.groups;
      this._id = value.id;
      this._lastName = value.lastName;
      this._notBefore = value.notBefore;
      this._origin = value.origin;
      this._realmRoles = value.realmRoles;
      this._requiredActions = value.requiredActions;
      this._self = value.selfAttribute;
      this._serviceAccountClientId = value.serviceAccountClientId;
      this._socialLinks.internalValue = value.socialLinks;
      this._totp = value.totp;
      this._username = value.username;
    }
  }

  // access - computed: false, optional: true, required: false
  private _access?: { [key: string]: string }; 
  public get access() {
    return this.getStringMapAttribute('access');
  }
  public set access(value: { [key: string]: string }) {
    this._access = value;
  }
  public resetAccess() {
    this._access = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessInput() {
    return this._access;
  }

  // application_roles - computed: false, optional: true, required: false
  private _applicationRoles?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get applicationRoles() {
    return this.interpolationForAttribute('application_roles');
  }
  public set applicationRoles(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._applicationRoles = value;
  }
  public resetApplicationRoles() {
    this._applicationRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get applicationRolesInput() {
    return this._applicationRoles;
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get attributes() {
    return this.interpolationForAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // client_consents - computed: false, optional: true, required: false
  private _clientConsents = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsentsList(this, "client_consents", false);
  public get clientConsents() {
    return this._clientConsents;
  }
  public putClientConsents(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersClientConsents[] | cdktf.IResolvable) {
    this._clientConsents.internalValue = value;
  }
  public resetClientConsents() {
    this._clientConsents.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientConsentsInput() {
    return this._clientConsents.internalValue;
  }

  // client_roles - computed: false, optional: true, required: false
  private _clientRoles?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get clientRoles() {
    return this.interpolationForAttribute('client_roles');
  }
  public set clientRoles(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._clientRoles = value;
  }
  public resetClientRoles() {
    this._clientRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientRolesInput() {
    return this._clientRoles;
  }

  // created_timestamp - computed: false, optional: true, required: false
  private _createdTimestamp?: number; 
  public get createdTimestamp() {
    return this.getNumberAttribute('created_timestamp');
  }
  public set createdTimestamp(value: number) {
    this._createdTimestamp = value;
  }
  public resetCreatedTimestamp() {
    this._createdTimestamp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get createdTimestampInput() {
    return this._createdTimestamp;
  }

  // credentials - computed: false, optional: true, required: false
  private _credentials = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentialsList(this, "credentials", false);
  public get credentials() {
    return this._credentials;
  }
  public putCredentials(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersCredentials[] | cdktf.IResolvable) {
    this._credentials.internalValue = value;
  }
  public resetCredentials() {
    this._credentials.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get credentialsInput() {
    return this._credentials.internalValue;
  }

  // disableable_credential_types - computed: false, optional: true, required: false
  private _disableableCredentialTypes?: string[]; 
  public get disableableCredentialTypes() {
    return this.getListAttribute('disableable_credential_types');
  }
  public set disableableCredentialTypes(value: string[]) {
    this._disableableCredentialTypes = value;
  }
  public resetDisableableCredentialTypes() {
    this._disableableCredentialTypes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableableCredentialTypesInput() {
    return this._disableableCredentialTypes;
  }

  // email - computed: false, optional: true, required: false
  private _email?: string; 
  public get email() {
    return this.getStringAttribute('email');
  }
  public set email(value: string) {
    this._email = value;
  }
  public resetEmail() {
    this._email = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emailInput() {
    return this._email;
  }

  // email_verified - computed: false, optional: true, required: false
  private _emailVerified?: boolean | cdktf.IResolvable; 
  public get emailVerified() {
    return this.getBooleanAttribute('email_verified');
  }
  public set emailVerified(value: boolean | cdktf.IResolvable) {
    this._emailVerified = value;
  }
  public resetEmailVerified() {
    this._emailVerified = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emailVerifiedInput() {
    return this._emailVerified;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // federated_identities - computed: false, optional: true, required: false
  private _federatedIdentities = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentitiesList(this, "federated_identities", false);
  public get federatedIdentities() {
    return this._federatedIdentities;
  }
  public putFederatedIdentities(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersFederatedIdentities[] | cdktf.IResolvable) {
    this._federatedIdentities.internalValue = value;
  }
  public resetFederatedIdentities() {
    this._federatedIdentities.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get federatedIdentitiesInput() {
    return this._federatedIdentities.internalValue;
  }

  // federation_link - computed: false, optional: true, required: false
  private _federationLink?: string; 
  public get federationLink() {
    return this.getStringAttribute('federation_link');
  }
  public set federationLink(value: string) {
    this._federationLink = value;
  }
  public resetFederationLink() {
    this._federationLink = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get federationLinkInput() {
    return this._federationLink;
  }

  // first_name - computed: false, optional: true, required: false
  private _firstName?: string; 
  public get firstName() {
    return this.getStringAttribute('first_name');
  }
  public set firstName(value: string) {
    this._firstName = value;
  }
  public resetFirstName() {
    this._firstName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get firstNameInput() {
    return this._firstName;
  }

  // groups - computed: false, optional: true, required: false
  private _groups?: string[]; 
  public get groups() {
    return this.getListAttribute('groups');
  }
  public set groups(value: string[]) {
    this._groups = value;
  }
  public resetGroups() {
    this._groups = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupsInput() {
    return this._groups;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // last_name - computed: false, optional: true, required: false
  private _lastName?: string; 
  public get lastName() {
    return this.getStringAttribute('last_name');
  }
  public set lastName(value: string) {
    this._lastName = value;
  }
  public resetLastName() {
    this._lastName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lastNameInput() {
    return this._lastName;
  }

  // not_before - computed: false, optional: true, required: false
  private _notBefore?: number; 
  public get notBefore() {
    return this.getNumberAttribute('not_before');
  }
  public set notBefore(value: number) {
    this._notBefore = value;
  }
  public resetNotBefore() {
    this._notBefore = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get notBeforeInput() {
    return this._notBefore;
  }

  // origin - computed: false, optional: true, required: false
  private _origin?: string; 
  public get origin() {
    return this.getStringAttribute('origin');
  }
  public set origin(value: string) {
    this._origin = value;
  }
  public resetOrigin() {
    this._origin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get originInput() {
    return this._origin;
  }

  // realm_roles - computed: false, optional: true, required: false
  private _realmRoles?: string[]; 
  public get realmRoles() {
    return this.getListAttribute('realm_roles');
  }
  public set realmRoles(value: string[]) {
    this._realmRoles = value;
  }
  public resetRealmRoles() {
    this._realmRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get realmRolesInput() {
    return this._realmRoles;
  }

  // required_actions - computed: false, optional: true, required: false
  private _requiredActions?: string[]; 
  public get requiredActions() {
    return this.getListAttribute('required_actions');
  }
  public set requiredActions(value: string[]) {
    this._requiredActions = value;
  }
  public resetRequiredActions() {
    this._requiredActions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredActionsInput() {
    return this._requiredActions;
  }

  // self - computed: false, optional: true, required: false
  private _self?: string; 
  public get selfAttribute() {
    return this.getStringAttribute('self');
  }
  public set selfAttribute(value: string) {
    this._self = value;
  }
  public resetSelfAttribute() {
    this._self = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfAttributeInput() {
    return this._self;
  }

  // service_account_client_id - computed: false, optional: true, required: false
  private _serviceAccountClientId?: string; 
  public get serviceAccountClientId() {
    return this.getStringAttribute('service_account_client_id');
  }
  public set serviceAccountClientId(value: string) {
    this._serviceAccountClientId = value;
  }
  public resetServiceAccountClientId() {
    this._serviceAccountClientId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountClientIdInput() {
    return this._serviceAccountClientId;
  }

  // social_links - computed: false, optional: true, required: false
  private _socialLinks = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinksList(this, "social_links", false);
  public get socialLinks() {
    return this._socialLinks;
  }
  public putSocialLinks(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersSocialLinks[] | cdktf.IResolvable) {
    this._socialLinks.internalValue = value;
  }
  public resetSocialLinks() {
    this._socialLinks.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get socialLinksInput() {
    return this._socialLinks.internalValue;
  }

  // totp - computed: false, optional: true, required: false
  private _totp?: boolean | cdktf.IResolvable; 
  public get totp() {
    return this.getBooleanAttribute('totp');
  }
  public set totp(value: boolean | cdktf.IResolvable) {
    this._totp = value;
  }
  public resetTotp() {
    this._totp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get totpInput() {
    return this._totp;
  }

  // username - computed: false, optional: true, required: false
  private _username?: string; 
  public get username() {
    return this.getStringAttribute('username');
  }
  public set username(value: string) {
    this._username = value;
  }
  public resetUsername() {
    this._username = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usernameInput() {
    return this._username;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroups {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#access DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#access}
  */
  readonly access?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_roles}
  */
  readonly clientRoles?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#path DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#realm_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#realm_roles}
  */
  readonly realmRoles?: string[];
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroupsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroups | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.access),
    attributes: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.attributes),
    client_roles: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.clientRoles),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
    path: cdktf.stringToTerraform(struct!.path),
    realm_roles: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.realmRoles),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroupsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroups | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.access),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    client_roles: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.clientRoles),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    realm_roles: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.realmRoles),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroupsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroups | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._access !== undefined) {
      hasAnyValues = true;
      internalValueResult.access = this._access;
    }
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._clientRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientRoles = this._clientRoles;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._realmRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.realmRoles = this._realmRoles;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroups | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._access = undefined;
      this._attributes = undefined;
      this._clientRoles = undefined;
      this._id = undefined;
      this._name = undefined;
      this._path = undefined;
      this._realmRoles = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._access = value.access;
      this._attributes = value.attributes;
      this._clientRoles = value.clientRoles;
      this._id = value.id;
      this._name = value.name;
      this._path = value.path;
      this._realmRoles = value.realmRoles;
    }
  }

  // access - computed: false, optional: true, required: false
  private _access?: { [key: string]: string }; 
  public get access() {
    return this.getStringMapAttribute('access');
  }
  public set access(value: { [key: string]: string }) {
    this._access = value;
  }
  public resetAccess() {
    this._access = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessInput() {
    return this._access;
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get attributes() {
    return this.interpolationForAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // client_roles - computed: false, optional: true, required: false
  private _clientRoles?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get clientRoles() {
    return this.interpolationForAttribute('client_roles');
  }
  public set clientRoles(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._clientRoles = value;
  }
  public resetClientRoles() {
    this._clientRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientRolesInput() {
    return this._clientRoles;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // realm_roles - computed: false, optional: true, required: false
  private _realmRoles?: string[]; 
  public get realmRoles() {
    return this.getListAttribute('realm_roles');
  }
  public set realmRoles(value: string[]) {
    this._realmRoles = value;
  }
  public resetRealmRoles() {
    this._realmRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get realmRolesInput() {
    return this._realmRoles;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroupsList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroups[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroupsOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroupsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroups {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#access DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#access}
  */
  readonly access?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_roles}
  */
  readonly clientRoles?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#path DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#realm_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#realm_roles}
  */
  readonly realmRoles?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#sub_groups DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#sub_groups}
  */
  readonly subGroups?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroups[] | cdktf.IResolvable;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroups | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.access),
    attributes: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.attributes),
    client_roles: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.clientRoles),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
    path: cdktf.stringToTerraform(struct!.path),
    realm_roles: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.realmRoles),
    sub_groups: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroupsToTerraform, false)(struct!.subGroups),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroups | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.access),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    client_roles: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.clientRoles),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    realm_roles: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.realmRoles),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    sub_groups: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroupsToHclTerraform, false)(struct!.subGroups),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroupsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroups | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._access !== undefined) {
      hasAnyValues = true;
      internalValueResult.access = this._access;
    }
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._clientRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientRoles = this._clientRoles;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._realmRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.realmRoles = this._realmRoles;
    }
    if (this._subGroups?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.subGroups = this._subGroups?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroups | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._access = undefined;
      this._attributes = undefined;
      this._clientRoles = undefined;
      this._id = undefined;
      this._name = undefined;
      this._path = undefined;
      this._realmRoles = undefined;
      this._subGroups.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._access = value.access;
      this._attributes = value.attributes;
      this._clientRoles = value.clientRoles;
      this._id = value.id;
      this._name = value.name;
      this._path = value.path;
      this._realmRoles = value.realmRoles;
      this._subGroups.internalValue = value.subGroups;
    }
  }

  // access - computed: false, optional: true, required: false
  private _access?: { [key: string]: string }; 
  public get access() {
    return this.getStringMapAttribute('access');
  }
  public set access(value: { [key: string]: string }) {
    this._access = value;
  }
  public resetAccess() {
    this._access = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessInput() {
    return this._access;
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get attributes() {
    return this.interpolationForAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // client_roles - computed: false, optional: true, required: false
  private _clientRoles?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get clientRoles() {
    return this.interpolationForAttribute('client_roles');
  }
  public set clientRoles(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._clientRoles = value;
  }
  public resetClientRoles() {
    this._clientRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientRolesInput() {
    return this._clientRoles;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // realm_roles - computed: false, optional: true, required: false
  private _realmRoles?: string[]; 
  public get realmRoles() {
    return this.getListAttribute('realm_roles');
  }
  public set realmRoles(value: string[]) {
    this._realmRoles = value;
  }
  public resetRealmRoles() {
    this._realmRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get realmRolesInput() {
    return this._realmRoles;
  }

  // sub_groups - computed: false, optional: true, required: false
  private _subGroups = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroupsList(this, "sub_groups", false);
  public get subGroups() {
    return this._subGroups;
  }
  public putSubGroups(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsSubGroups[] | cdktf.IResolvable) {
    this._subGroups.internalValue = value;
  }
  public resetSubGroups() {
    this._subGroups.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subGroupsInput() {
    return this._subGroups.internalValue;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroups[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#identity_provider_alias DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#identity_provider_alias}
  */
  readonly identityProviderAlias?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#identity_provider_mapper DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#identity_provider_mapper}
  */
  readonly identityProviderMapper?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappersToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.config),
    id: cdktf.stringToTerraform(struct!.id),
    identity_provider_alias: cdktf.stringToTerraform(struct!.identityProviderAlias),
    identity_provider_mapper: cdktf.stringToTerraform(struct!.identityProviderMapper),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappersToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    identity_provider_alias: {
      value: cdktf.stringToHclTerraform(struct!.identityProviderAlias),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    identity_provider_mapper: {
      value: cdktf.stringToHclTerraform(struct!.identityProviderMapper),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._identityProviderAlias !== undefined) {
      hasAnyValues = true;
      internalValueResult.identityProviderAlias = this._identityProviderAlias;
    }
    if (this._identityProviderMapper !== undefined) {
      hasAnyValues = true;
      internalValueResult.identityProviderMapper = this._identityProviderMapper;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._config = undefined;
      this._id = undefined;
      this._identityProviderAlias = undefined;
      this._identityProviderMapper = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._config = value.config;
      this._id = value.id;
      this._identityProviderAlias = value.identityProviderAlias;
      this._identityProviderMapper = value.identityProviderMapper;
      this._name = value.name;
    }
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string }; 
  public get config() {
    return this.getStringMapAttribute('config');
  }
  public set config(value: { [key: string]: string }) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // identity_provider_alias - computed: false, optional: true, required: false
  private _identityProviderAlias?: string; 
  public get identityProviderAlias() {
    return this.getStringAttribute('identity_provider_alias');
  }
  public set identityProviderAlias(value: string) {
    this._identityProviderAlias = value;
  }
  public resetIdentityProviderAlias() {
    this._identityProviderAlias = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get identityProviderAliasInput() {
    return this._identityProviderAlias;
  }

  // identity_provider_mapper - computed: false, optional: true, required: false
  private _identityProviderMapper?: string; 
  public get identityProviderMapper() {
    return this.getStringAttribute('identity_provider_mapper');
  }
  public set identityProviderMapper(value: string) {
    this._identityProviderMapper = value;
  }
  public resetIdentityProviderMapper() {
    this._identityProviderMapper = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get identityProviderMapperInput() {
    return this._identityProviderMapper;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappersList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappersOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#add_read_token_role_on_create DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#add_read_token_role_on_create}
  */
  readonly addReadTokenRoleOnCreate?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#alias DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#alias}
  */
  readonly alias?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authenticate_by_default DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authenticate_by_default}
  */
  readonly authenticateByDefault?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#first_broker_login_flow_alias DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#first_broker_login_flow_alias}
  */
  readonly firstBrokerLoginFlowAlias?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#internal_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#internal_id}
  */
  readonly internalId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#link_only DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#link_only}
  */
  readonly linkOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#post_broker_login_flow_alias DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#post_broker_login_flow_alias}
  */
  readonly postBrokerLoginFlowAlias?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#provider_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#provider_id}
  */
  readonly providerId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#store_token DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#store_token}
  */
  readonly storeToken?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#trust_email DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#trust_email}
  */
  readonly trustEmail?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#update_profile_first_login_mode DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#update_profile_first_login_mode}
  */
  readonly updateProfileFirstLoginMode?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProvidersToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    add_read_token_role_on_create: cdktf.booleanToTerraform(struct!.addReadTokenRoleOnCreate),
    alias: cdktf.stringToTerraform(struct!.alias),
    authenticate_by_default: cdktf.booleanToTerraform(struct!.authenticateByDefault),
    config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.config),
    display_name: cdktf.stringToTerraform(struct!.displayName),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    first_broker_login_flow_alias: cdktf.stringToTerraform(struct!.firstBrokerLoginFlowAlias),
    internal_id: cdktf.stringToTerraform(struct!.internalId),
    link_only: cdktf.booleanToTerraform(struct!.linkOnly),
    post_broker_login_flow_alias: cdktf.stringToTerraform(struct!.postBrokerLoginFlowAlias),
    provider_id: cdktf.stringToTerraform(struct!.providerId),
    store_token: cdktf.booleanToTerraform(struct!.storeToken),
    trust_email: cdktf.booleanToTerraform(struct!.trustEmail),
    update_profile_first_login_mode: cdktf.stringToTerraform(struct!.updateProfileFirstLoginMode),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProvidersToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    add_read_token_role_on_create: {
      value: cdktf.booleanToHclTerraform(struct!.addReadTokenRoleOnCreate),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    alias: {
      value: cdktf.stringToHclTerraform(struct!.alias),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    authenticate_by_default: {
      value: cdktf.booleanToHclTerraform(struct!.authenticateByDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    first_broker_login_flow_alias: {
      value: cdktf.stringToHclTerraform(struct!.firstBrokerLoginFlowAlias),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    internal_id: {
      value: cdktf.stringToHclTerraform(struct!.internalId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    link_only: {
      value: cdktf.booleanToHclTerraform(struct!.linkOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    post_broker_login_flow_alias: {
      value: cdktf.stringToHclTerraform(struct!.postBrokerLoginFlowAlias),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    provider_id: {
      value: cdktf.stringToHclTerraform(struct!.providerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    store_token: {
      value: cdktf.booleanToHclTerraform(struct!.storeToken),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    trust_email: {
      value: cdktf.booleanToHclTerraform(struct!.trustEmail),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    update_profile_first_login_mode: {
      value: cdktf.stringToHclTerraform(struct!.updateProfileFirstLoginMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProvidersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._addReadTokenRoleOnCreate !== undefined) {
      hasAnyValues = true;
      internalValueResult.addReadTokenRoleOnCreate = this._addReadTokenRoleOnCreate;
    }
    if (this._alias !== undefined) {
      hasAnyValues = true;
      internalValueResult.alias = this._alias;
    }
    if (this._authenticateByDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.authenticateByDefault = this._authenticateByDefault;
    }
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._firstBrokerLoginFlowAlias !== undefined) {
      hasAnyValues = true;
      internalValueResult.firstBrokerLoginFlowAlias = this._firstBrokerLoginFlowAlias;
    }
    if (this._internalId !== undefined) {
      hasAnyValues = true;
      internalValueResult.internalId = this._internalId;
    }
    if (this._linkOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.linkOnly = this._linkOnly;
    }
    if (this._postBrokerLoginFlowAlias !== undefined) {
      hasAnyValues = true;
      internalValueResult.postBrokerLoginFlowAlias = this._postBrokerLoginFlowAlias;
    }
    if (this._providerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.providerId = this._providerId;
    }
    if (this._storeToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.storeToken = this._storeToken;
    }
    if (this._trustEmail !== undefined) {
      hasAnyValues = true;
      internalValueResult.trustEmail = this._trustEmail;
    }
    if (this._updateProfileFirstLoginMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.updateProfileFirstLoginMode = this._updateProfileFirstLoginMode;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._addReadTokenRoleOnCreate = undefined;
      this._alias = undefined;
      this._authenticateByDefault = undefined;
      this._config = undefined;
      this._displayName = undefined;
      this._enabled = undefined;
      this._firstBrokerLoginFlowAlias = undefined;
      this._internalId = undefined;
      this._linkOnly = undefined;
      this._postBrokerLoginFlowAlias = undefined;
      this._providerId = undefined;
      this._storeToken = undefined;
      this._trustEmail = undefined;
      this._updateProfileFirstLoginMode = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._addReadTokenRoleOnCreate = value.addReadTokenRoleOnCreate;
      this._alias = value.alias;
      this._authenticateByDefault = value.authenticateByDefault;
      this._config = value.config;
      this._displayName = value.displayName;
      this._enabled = value.enabled;
      this._firstBrokerLoginFlowAlias = value.firstBrokerLoginFlowAlias;
      this._internalId = value.internalId;
      this._linkOnly = value.linkOnly;
      this._postBrokerLoginFlowAlias = value.postBrokerLoginFlowAlias;
      this._providerId = value.providerId;
      this._storeToken = value.storeToken;
      this._trustEmail = value.trustEmail;
      this._updateProfileFirstLoginMode = value.updateProfileFirstLoginMode;
    }
  }

  // add_read_token_role_on_create - computed: false, optional: true, required: false
  private _addReadTokenRoleOnCreate?: boolean | cdktf.IResolvable; 
  public get addReadTokenRoleOnCreate() {
    return this.getBooleanAttribute('add_read_token_role_on_create');
  }
  public set addReadTokenRoleOnCreate(value: boolean | cdktf.IResolvable) {
    this._addReadTokenRoleOnCreate = value;
  }
  public resetAddReadTokenRoleOnCreate() {
    this._addReadTokenRoleOnCreate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addReadTokenRoleOnCreateInput() {
    return this._addReadTokenRoleOnCreate;
  }

  // alias - computed: false, optional: true, required: false
  private _alias?: string; 
  public get alias() {
    return this.getStringAttribute('alias');
  }
  public set alias(value: string) {
    this._alias = value;
  }
  public resetAlias() {
    this._alias = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aliasInput() {
    return this._alias;
  }

  // authenticate_by_default - computed: false, optional: true, required: false
  private _authenticateByDefault?: boolean | cdktf.IResolvable; 
  public get authenticateByDefault() {
    return this.getBooleanAttribute('authenticate_by_default');
  }
  public set authenticateByDefault(value: boolean | cdktf.IResolvable) {
    this._authenticateByDefault = value;
  }
  public resetAuthenticateByDefault() {
    this._authenticateByDefault = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authenticateByDefaultInput() {
    return this._authenticateByDefault;
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string }; 
  public get config() {
    return this.getStringMapAttribute('config');
  }
  public set config(value: { [key: string]: string }) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // first_broker_login_flow_alias - computed: false, optional: true, required: false
  private _firstBrokerLoginFlowAlias?: string; 
  public get firstBrokerLoginFlowAlias() {
    return this.getStringAttribute('first_broker_login_flow_alias');
  }
  public set firstBrokerLoginFlowAlias(value: string) {
    this._firstBrokerLoginFlowAlias = value;
  }
  public resetFirstBrokerLoginFlowAlias() {
    this._firstBrokerLoginFlowAlias = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get firstBrokerLoginFlowAliasInput() {
    return this._firstBrokerLoginFlowAlias;
  }

  // internal_id - computed: false, optional: true, required: false
  private _internalId?: string; 
  public get internalId() {
    return this.getStringAttribute('internal_id');
  }
  public set internalId(value: string) {
    this._internalId = value;
  }
  public resetInternalId() {
    this._internalId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get internalIdInput() {
    return this._internalId;
  }

  // link_only - computed: false, optional: true, required: false
  private _linkOnly?: boolean | cdktf.IResolvable; 
  public get linkOnly() {
    return this.getBooleanAttribute('link_only');
  }
  public set linkOnly(value: boolean | cdktf.IResolvable) {
    this._linkOnly = value;
  }
  public resetLinkOnly() {
    this._linkOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get linkOnlyInput() {
    return this._linkOnly;
  }

  // post_broker_login_flow_alias - computed: false, optional: true, required: false
  private _postBrokerLoginFlowAlias?: string; 
  public get postBrokerLoginFlowAlias() {
    return this.getStringAttribute('post_broker_login_flow_alias');
  }
  public set postBrokerLoginFlowAlias(value: string) {
    this._postBrokerLoginFlowAlias = value;
  }
  public resetPostBrokerLoginFlowAlias() {
    this._postBrokerLoginFlowAlias = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get postBrokerLoginFlowAliasInput() {
    return this._postBrokerLoginFlowAlias;
  }

  // provider_id - computed: false, optional: true, required: false
  private _providerId?: string; 
  public get providerId() {
    return this.getStringAttribute('provider_id');
  }
  public set providerId(value: string) {
    this._providerId = value;
  }
  public resetProviderId() {
    this._providerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get providerIdInput() {
    return this._providerId;
  }

  // store_token - computed: false, optional: true, required: false
  private _storeToken?: boolean | cdktf.IResolvable; 
  public get storeToken() {
    return this.getBooleanAttribute('store_token');
  }
  public set storeToken(value: boolean | cdktf.IResolvable) {
    this._storeToken = value;
  }
  public resetStoreToken() {
    this._storeToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storeTokenInput() {
    return this._storeToken;
  }

  // trust_email - computed: false, optional: true, required: false
  private _trustEmail?: boolean | cdktf.IResolvable; 
  public get trustEmail() {
    return this.getBooleanAttribute('trust_email');
  }
  public set trustEmail(value: boolean | cdktf.IResolvable) {
    this._trustEmail = value;
  }
  public resetTrustEmail() {
    this._trustEmail = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get trustEmailInput() {
    return this._trustEmail;
  }

  // update_profile_first_login_mode - computed: false, optional: true, required: false
  private _updateProfileFirstLoginMode?: string; 
  public get updateProfileFirstLoginMode() {
    return this.getStringAttribute('update_profile_first_login_mode');
  }
  public set updateProfileFirstLoginMode(value: string) {
    this._updateProfileFirstLoginMode = value;
  }
  public resetUpdateProfileFirstLoginMode() {
    this._updateProfileFirstLoginMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get updateProfileFirstLoginModeInput() {
    return this._updateProfileFirstLoginMode;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProvidersList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProvidersOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProvidersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOwner {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOwnerToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOwner | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOwnerToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOwner | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOwnerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOwner | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOwner | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopes {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopes[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesData {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#_id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#owner DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#owner}
  */
  readonly owner?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOwner;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#owner_managed_access DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#owner_managed_access}
  */
  readonly ownerManagedAccess?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scopes}
  */
  readonly scopes?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopes[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#uris DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#uris}
  */
  readonly uris?: string[];
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    _id: cdktf.stringToTerraform(struct!.id),
    attributes: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.attributes),
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    name: cdktf.stringToTerraform(struct!.name),
    owner: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOwnerToTerraform(struct!.owner),
    owner_managed_access: cdktf.booleanToTerraform(struct!.ownerManagedAccess),
    scopes: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopesToTerraform, false)(struct!.scopes),
    type: cdktf.stringToTerraform(struct!.type),
    uris: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.uris),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    _id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    owner: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOwnerToHclTerraform(struct!.owner),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOwner",
    },
    owner_managed_access: {
      value: cdktf.booleanToHclTerraform(struct!.ownerManagedAccess),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    scopes: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopesToHclTerraform, false)(struct!.scopes),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopesList",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uris: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.uris),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesData | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._owner?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.owner = this._owner?.internalValue;
    }
    if (this._ownerManagedAccess !== undefined) {
      hasAnyValues = true;
      internalValueResult.ownerManagedAccess = this._ownerManagedAccess;
    }
    if (this._scopes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes?.internalValue;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._uris !== undefined) {
      hasAnyValues = true;
      internalValueResult.uris = this._uris;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesData | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._id = undefined;
      this._attributes = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._name = undefined;
      this._owner.internalValue = undefined;
      this._ownerManagedAccess = undefined;
      this._scopes.internalValue = undefined;
      this._type = undefined;
      this._uris = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._id = value.id;
      this._attributes = value.attributes;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._name = value.name;
      this._owner.internalValue = value.owner;
      this._ownerManagedAccess = value.ownerManagedAccess;
      this._scopes.internalValue = value.scopes;
      this._type = value.type;
      this._uris = value.uris;
    }
  }

  // _id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('_id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get attributes() {
    return this.interpolationForAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // owner - computed: false, optional: true, required: false
  private _owner = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOwnerOutputReference(this, "owner");
  public get owner() {
    return this._owner;
  }
  public putOwner(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOwner) {
    this._owner.internalValue = value;
  }
  public resetOwner() {
    this._owner.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerInput() {
    return this._owner.internalValue;
  }

  // owner_managed_access - computed: false, optional: true, required: false
  private _ownerManagedAccess?: boolean | cdktf.IResolvable; 
  public get ownerManagedAccess() {
    return this.getBooleanAttribute('owner_managed_access');
  }
  public set ownerManagedAccess(value: boolean | cdktf.IResolvable) {
    this._ownerManagedAccess = value;
  }
  public resetOwnerManagedAccess() {
    this._ownerManagedAccess = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerManagedAccessInput() {
    return this._ownerManagedAccess;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopesList(this, "scopes", false);
  public get scopes() {
    return this._scopes;
  }
  public putScopes(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataScopes[] | cdktf.IResolvable) {
    this._scopes.internalValue = value;
  }
  public resetScopes() {
    this._scopes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes.internalValue;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // uris - computed: false, optional: true, required: false
  private _uris?: string[]; 
  public get uris() {
    return this.getListAttribute('uris');
  }
  public set uris(value: string[]) {
    this._uris = value;
  }
  public resetUris() {
    this._uris = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urisInput() {
    return this._uris;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesData[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesData {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesDataToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesDataToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesDataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesData | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesData | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesDataList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesData[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesDataOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesDataOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPolicies {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#decision_strategy DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#decision_strategy}
  */
  readonly decisionStrategy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#description DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#logic DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#logic}
  */
  readonly logic?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#owner DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#owner}
  */
  readonly owner?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#policies DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#policies}
  */
  readonly policies?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#resources DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#resources}
  */
  readonly resources?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#resources_data DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#resources_data}
  */
  readonly resourcesData?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesData[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scopes}
  */
  readonly scopes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scopes_data DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scopes_data}
  */
  readonly scopesData?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesData[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPolicies | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.config),
    decision_strategy: cdktf.stringToTerraform(struct!.decisionStrategy),
    description: cdktf.stringToTerraform(struct!.description),
    id: cdktf.stringToTerraform(struct!.id),
    logic: cdktf.stringToTerraform(struct!.logic),
    name: cdktf.stringToTerraform(struct!.name),
    owner: cdktf.stringToTerraform(struct!.owner),
    policies: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.policies),
    resources: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.resources),
    resources_data: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataToTerraform, false)(struct!.resourcesData),
    scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.scopes),
    scopes_data: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesDataToTerraform, false)(struct!.scopesData),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPolicies | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    decision_strategy: {
      value: cdktf.stringToHclTerraform(struct!.decisionStrategy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    logic: {
      value: cdktf.stringToHclTerraform(struct!.logic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    owner: {
      value: cdktf.stringToHclTerraform(struct!.owner),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    policies: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.policies),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    resources: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.resources),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    resources_data: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataToHclTerraform, false)(struct!.resourcesData),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataList",
    },
    scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.scopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    scopes_data: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesDataToHclTerraform, false)(struct!.scopesData),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesDataList",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPolicies | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._decisionStrategy !== undefined) {
      hasAnyValues = true;
      internalValueResult.decisionStrategy = this._decisionStrategy;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._logic !== undefined) {
      hasAnyValues = true;
      internalValueResult.logic = this._logic;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._owner !== undefined) {
      hasAnyValues = true;
      internalValueResult.owner = this._owner;
    }
    if (this._policies !== undefined) {
      hasAnyValues = true;
      internalValueResult.policies = this._policies;
    }
    if (this._resources !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources;
    }
    if (this._resourcesData?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourcesData = this._resourcesData?.internalValue;
    }
    if (this._scopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes;
    }
    if (this._scopesData?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopesData = this._scopesData?.internalValue;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPolicies | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._config = undefined;
      this._decisionStrategy = undefined;
      this._description = undefined;
      this._id = undefined;
      this._logic = undefined;
      this._name = undefined;
      this._owner = undefined;
      this._policies = undefined;
      this._resources = undefined;
      this._resourcesData.internalValue = undefined;
      this._scopes = undefined;
      this._scopesData.internalValue = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._config = value.config;
      this._decisionStrategy = value.decisionStrategy;
      this._description = value.description;
      this._id = value.id;
      this._logic = value.logic;
      this._name = value.name;
      this._owner = value.owner;
      this._policies = value.policies;
      this._resources = value.resources;
      this._resourcesData.internalValue = value.resourcesData;
      this._scopes = value.scopes;
      this._scopesData.internalValue = value.scopesData;
      this._type = value.type;
    }
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string }; 
  public get config() {
    return this.getStringMapAttribute('config');
  }
  public set config(value: { [key: string]: string }) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // decision_strategy - computed: false, optional: true, required: false
  private _decisionStrategy?: string; 
  public get decisionStrategy() {
    return this.getStringAttribute('decision_strategy');
  }
  public set decisionStrategy(value: string) {
    this._decisionStrategy = value;
  }
  public resetDecisionStrategy() {
    this._decisionStrategy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get decisionStrategyInput() {
    return this._decisionStrategy;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // logic - computed: false, optional: true, required: false
  private _logic?: string; 
  public get logic() {
    return this.getStringAttribute('logic');
  }
  public set logic(value: string) {
    this._logic = value;
  }
  public resetLogic() {
    this._logic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logicInput() {
    return this._logic;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // owner - computed: false, optional: true, required: false
  private _owner?: string; 
  public get owner() {
    return this.getStringAttribute('owner');
  }
  public set owner(value: string) {
    this._owner = value;
  }
  public resetOwner() {
    this._owner = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerInput() {
    return this._owner;
  }

  // policies - computed: false, optional: true, required: false
  private _policies?: string[]; 
  public get policies() {
    return this.getListAttribute('policies');
  }
  public set policies(value: string[]) {
    this._policies = value;
  }
  public resetPolicies() {
    this._policies = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get policiesInput() {
    return this._policies;
  }

  // resources - computed: false, optional: true, required: false
  private _resources?: string[]; 
  public get resources() {
    return this.getListAttribute('resources');
  }
  public set resources(value: string[]) {
    this._resources = value;
  }
  public resetResources() {
    this._resources = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources;
  }

  // resources_data - computed: false, optional: true, required: false
  private _resourcesData = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesDataList(this, "resources_data", false);
  public get resourcesData() {
    return this._resourcesData;
  }
  public putResourcesData(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesResourcesData[] | cdktf.IResolvable) {
    this._resourcesData.internalValue = value;
  }
  public resetResourcesData() {
    this._resourcesData.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesDataInput() {
    return this._resourcesData.internalValue;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes?: string[]; 
  public get scopes() {
    return this.getListAttribute('scopes');
  }
  public set scopes(value: string[]) {
    this._scopes = value;
  }
  public resetScopes() {
    this._scopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes;
  }

  // scopes_data - computed: false, optional: true, required: false
  private _scopesData = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesDataList(this, "scopes_data", false);
  public get scopesData() {
    return this._scopesData;
  }
  public putScopesData(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesScopesData[] | cdktf.IResolvable) {
    this._scopesData.internalValue = value;
  }
  public resetScopesData() {
    this._scopesData.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesDataInput() {
    return this._scopesData.internalValue;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPolicies[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOwner {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOwnerToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOwner | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOwnerToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOwner | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOwnerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOwner | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOwner | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopes {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopes[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResources {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#_id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#owner DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#owner}
  */
  readonly owner?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOwner;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#owner_managed_access DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#owner_managed_access}
  */
  readonly ownerManagedAccess?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scopes}
  */
  readonly scopes?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopes[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#uris DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#uris}
  */
  readonly uris?: string[];
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    _id: cdktf.stringToTerraform(struct!.id),
    attributes: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.attributes),
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    name: cdktf.stringToTerraform(struct!.name),
    owner: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOwnerToTerraform(struct!.owner),
    owner_managed_access: cdktf.booleanToTerraform(struct!.ownerManagedAccess),
    scopes: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopesToTerraform, false)(struct!.scopes),
    type: cdktf.stringToTerraform(struct!.type),
    uris: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.uris),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    _id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    owner: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOwnerToHclTerraform(struct!.owner),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOwner",
    },
    owner_managed_access: {
      value: cdktf.booleanToHclTerraform(struct!.ownerManagedAccess),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    scopes: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopesToHclTerraform, false)(struct!.scopes),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopesList",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uris: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.uris),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._owner?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.owner = this._owner?.internalValue;
    }
    if (this._ownerManagedAccess !== undefined) {
      hasAnyValues = true;
      internalValueResult.ownerManagedAccess = this._ownerManagedAccess;
    }
    if (this._scopes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes?.internalValue;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._uris !== undefined) {
      hasAnyValues = true;
      internalValueResult.uris = this._uris;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._id = undefined;
      this._attributes = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._name = undefined;
      this._owner.internalValue = undefined;
      this._ownerManagedAccess = undefined;
      this._scopes.internalValue = undefined;
      this._type = undefined;
      this._uris = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._id = value.id;
      this._attributes = value.attributes;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._name = value.name;
      this._owner.internalValue = value.owner;
      this._ownerManagedAccess = value.ownerManagedAccess;
      this._scopes.internalValue = value.scopes;
      this._type = value.type;
      this._uris = value.uris;
    }
  }

  // _id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('_id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get attributes() {
    return this.interpolationForAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // owner - computed: false, optional: true, required: false
  private _owner = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOwnerOutputReference(this, "owner");
  public get owner() {
    return this._owner;
  }
  public putOwner(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOwner) {
    this._owner.internalValue = value;
  }
  public resetOwner() {
    this._owner.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerInput() {
    return this._owner.internalValue;
  }

  // owner_managed_access - computed: false, optional: true, required: false
  private _ownerManagedAccess?: boolean | cdktf.IResolvable; 
  public get ownerManagedAccess() {
    return this.getBooleanAttribute('owner_managed_access');
  }
  public set ownerManagedAccess(value: boolean | cdktf.IResolvable) {
    this._ownerManagedAccess = value;
  }
  public resetOwnerManagedAccess() {
    this._ownerManagedAccess = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerManagedAccessInput() {
    return this._ownerManagedAccess;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopesList(this, "scopes", false);
  public get scopes() {
    return this._scopes;
  }
  public putScopes(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesScopes[] | cdktf.IResolvable) {
    this._scopes.internalValue = value;
  }
  public resetScopes() {
    this._scopes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes.internalValue;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // uris - computed: false, optional: true, required: false
  private _uris?: string[]; 
  public get uris() {
    return this.getListAttribute('uris');
  }
  public set uris(value: string[]) {
    this._uris = value;
  }
  public resetUris() {
    this._uris = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urisInput() {
    return this._uris;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResources[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopes {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#icon_uri DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#icon_uri}
  */
  readonly iconUri?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    display_name: cdktf.stringToTerraform(struct!.displayName),
    icon_uri: cdktf.stringToTerraform(struct!.iconUri),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    icon_uri: {
      value: cdktf.stringToHclTerraform(struct!.iconUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._iconUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.iconUri = this._iconUri;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._displayName = undefined;
      this._iconUri = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._displayName = value.displayName;
      this._iconUri = value.iconUri;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // icon_uri - computed: false, optional: true, required: false
  private _iconUri?: string; 
  public get iconUri() {
    return this.getStringAttribute('icon_uri');
  }
  public set iconUri(value: string) {
    this._iconUri = value;
  }
  public resetIconUri() {
    this._iconUri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iconUriInput() {
    return this._iconUri;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopes[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettings {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#allow_remote_resource_management DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#allow_remote_resource_management}
  */
  readonly allowRemoteResourceManagement?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_id}
  */
  readonly clientId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#decision_strategy DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#decision_strategy}
  */
  readonly decisionStrategy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#policies DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#policies}
  */
  readonly policies?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPolicies[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#policy_enforcement_mode DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#policy_enforcement_mode}
  */
  readonly policyEnforcementMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#resources DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#resources}
  */
  readonly resources?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResources[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scopes}
  */
  readonly scopes?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopes[] | cdktf.IResolvable;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_remote_resource_management: cdktf.booleanToTerraform(struct!.allowRemoteResourceManagement),
    client_id: cdktf.stringToTerraform(struct!.clientId),
    decision_strategy: cdktf.stringToTerraform(struct!.decisionStrategy),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
    policies: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesToTerraform, false)(struct!.policies),
    policy_enforcement_mode: cdktf.stringToTerraform(struct!.policyEnforcementMode),
    resources: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesToTerraform, false)(struct!.resources),
    scopes: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopesToTerraform, false)(struct!.scopes),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_remote_resource_management: {
      value: cdktf.booleanToHclTerraform(struct!.allowRemoteResourceManagement),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    client_id: {
      value: cdktf.stringToHclTerraform(struct!.clientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    decision_strategy: {
      value: cdktf.stringToHclTerraform(struct!.decisionStrategy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    policies: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesToHclTerraform, false)(struct!.policies),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesList",
    },
    policy_enforcement_mode: {
      value: cdktf.stringToHclTerraform(struct!.policyEnforcementMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resources: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesToHclTerraform, false)(struct!.resources),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesList",
    },
    scopes: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopesToHclTerraform, false)(struct!.scopes),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettings | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowRemoteResourceManagement !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowRemoteResourceManagement = this._allowRemoteResourceManagement;
    }
    if (this._clientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientId = this._clientId;
    }
    if (this._decisionStrategy !== undefined) {
      hasAnyValues = true;
      internalValueResult.decisionStrategy = this._decisionStrategy;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._policies?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.policies = this._policies?.internalValue;
    }
    if (this._policyEnforcementMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.policyEnforcementMode = this._policyEnforcementMode;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._scopes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettings | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowRemoteResourceManagement = undefined;
      this._clientId = undefined;
      this._decisionStrategy = undefined;
      this._id = undefined;
      this._name = undefined;
      this._policies.internalValue = undefined;
      this._policyEnforcementMode = undefined;
      this._resources.internalValue = undefined;
      this._scopes.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowRemoteResourceManagement = value.allowRemoteResourceManagement;
      this._clientId = value.clientId;
      this._decisionStrategy = value.decisionStrategy;
      this._id = value.id;
      this._name = value.name;
      this._policies.internalValue = value.policies;
      this._policyEnforcementMode = value.policyEnforcementMode;
      this._resources.internalValue = value.resources;
      this._scopes.internalValue = value.scopes;
    }
  }

  // allow_remote_resource_management - computed: false, optional: true, required: false
  private _allowRemoteResourceManagement?: boolean | cdktf.IResolvable; 
  public get allowRemoteResourceManagement() {
    return this.getBooleanAttribute('allow_remote_resource_management');
  }
  public set allowRemoteResourceManagement(value: boolean | cdktf.IResolvable) {
    this._allowRemoteResourceManagement = value;
  }
  public resetAllowRemoteResourceManagement() {
    this._allowRemoteResourceManagement = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowRemoteResourceManagementInput() {
    return this._allowRemoteResourceManagement;
  }

  // client_id - computed: false, optional: true, required: false
  private _clientId?: string; 
  public get clientId() {
    return this.getStringAttribute('client_id');
  }
  public set clientId(value: string) {
    this._clientId = value;
  }
  public resetClientId() {
    this._clientId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientIdInput() {
    return this._clientId;
  }

  // decision_strategy - computed: false, optional: true, required: false
  private _decisionStrategy?: string; 
  public get decisionStrategy() {
    return this.getStringAttribute('decision_strategy');
  }
  public set decisionStrategy(value: string) {
    this._decisionStrategy = value;
  }
  public resetDecisionStrategy() {
    this._decisionStrategy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get decisionStrategyInput() {
    return this._decisionStrategy;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // policies - computed: false, optional: true, required: false
  private _policies = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPoliciesList(this, "policies", false);
  public get policies() {
    return this._policies;
  }
  public putPolicies(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsPolicies[] | cdktf.IResolvable) {
    this._policies.internalValue = value;
  }
  public resetPolicies() {
    this._policies.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get policiesInput() {
    return this._policies.internalValue;
  }

  // policy_enforcement_mode - computed: false, optional: true, required: false
  private _policyEnforcementMode?: string; 
  public get policyEnforcementMode() {
    return this.getStringAttribute('policy_enforcement_mode');
  }
  public set policyEnforcementMode(value: string) {
    this._policyEnforcementMode = value;
  }
  public resetPolicyEnforcementMode() {
    this._policyEnforcementMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get policyEnforcementModeInput() {
    return this._policyEnforcementMode;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResourcesList(this, "resources", false);
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsResources[] | cdktf.IResolvable) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopesList(this, "scopes", false);
  public get scopes() {
    return this._scopes;
  }
  public putScopes(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsScopes[] | cdktf.IResolvable) {
    this._scopes.internalValue = value;
  }
  public resetScopes() {
    this._scopes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes.internalValue;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsClaims {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#address DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#address}
  */
  readonly address?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#email DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#email}
  */
  readonly email?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#gender DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#gender}
  */
  readonly gender?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#locale DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#locale}
  */
  readonly locale?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#phone DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#phone}
  */
  readonly phone?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#picture DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#picture}
  */
  readonly picture?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#profile DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#profile}
  */
  readonly profile?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#username DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#username}
  */
  readonly username?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#website DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#website}
  */
  readonly website?: boolean | cdktf.IResolvable;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsClaimsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.booleanToTerraform(struct!.address),
    email: cdktf.booleanToTerraform(struct!.email),
    gender: cdktf.booleanToTerraform(struct!.gender),
    locale: cdktf.booleanToTerraform(struct!.locale),
    name: cdktf.booleanToTerraform(struct!.name),
    phone: cdktf.booleanToTerraform(struct!.phone),
    picture: cdktf.booleanToTerraform(struct!.picture),
    profile: cdktf.booleanToTerraform(struct!.profile),
    username: cdktf.booleanToTerraform(struct!.username),
    website: cdktf.booleanToTerraform(struct!.website),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsClaimsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.booleanToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    email: {
      value: cdktf.booleanToHclTerraform(struct!.email),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    gender: {
      value: cdktf.booleanToHclTerraform(struct!.gender),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    locale: {
      value: cdktf.booleanToHclTerraform(struct!.locale),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.booleanToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    phone: {
      value: cdktf.booleanToHclTerraform(struct!.phone),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    picture: {
      value: cdktf.booleanToHclTerraform(struct!.picture),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    profile: {
      value: cdktf.booleanToHclTerraform(struct!.profile),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    username: {
      value: cdktf.booleanToHclTerraform(struct!.username),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    website: {
      value: cdktf.booleanToHclTerraform(struct!.website),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsClaimsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsClaims | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._email !== undefined) {
      hasAnyValues = true;
      internalValueResult.email = this._email;
    }
    if (this._gender !== undefined) {
      hasAnyValues = true;
      internalValueResult.gender = this._gender;
    }
    if (this._locale !== undefined) {
      hasAnyValues = true;
      internalValueResult.locale = this._locale;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._phone !== undefined) {
      hasAnyValues = true;
      internalValueResult.phone = this._phone;
    }
    if (this._picture !== undefined) {
      hasAnyValues = true;
      internalValueResult.picture = this._picture;
    }
    if (this._profile !== undefined) {
      hasAnyValues = true;
      internalValueResult.profile = this._profile;
    }
    if (this._username !== undefined) {
      hasAnyValues = true;
      internalValueResult.username = this._username;
    }
    if (this._website !== undefined) {
      hasAnyValues = true;
      internalValueResult.website = this._website;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsClaims | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._email = undefined;
      this._gender = undefined;
      this._locale = undefined;
      this._name = undefined;
      this._phone = undefined;
      this._picture = undefined;
      this._profile = undefined;
      this._username = undefined;
      this._website = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._email = value.email;
      this._gender = value.gender;
      this._locale = value.locale;
      this._name = value.name;
      this._phone = value.phone;
      this._picture = value.picture;
      this._profile = value.profile;
      this._username = value.username;
      this._website = value.website;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: boolean | cdktf.IResolvable; 
  public get address() {
    return this.getBooleanAttribute('address');
  }
  public set address(value: boolean | cdktf.IResolvable) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // email - computed: false, optional: true, required: false
  private _email?: boolean | cdktf.IResolvable; 
  public get email() {
    return this.getBooleanAttribute('email');
  }
  public set email(value: boolean | cdktf.IResolvable) {
    this._email = value;
  }
  public resetEmail() {
    this._email = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emailInput() {
    return this._email;
  }

  // gender - computed: false, optional: true, required: false
  private _gender?: boolean | cdktf.IResolvable; 
  public get gender() {
    return this.getBooleanAttribute('gender');
  }
  public set gender(value: boolean | cdktf.IResolvable) {
    this._gender = value;
  }
  public resetGender() {
    this._gender = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get genderInput() {
    return this._gender;
  }

  // locale - computed: false, optional: true, required: false
  private _locale?: boolean | cdktf.IResolvable; 
  public get locale() {
    return this.getBooleanAttribute('locale');
  }
  public set locale(value: boolean | cdktf.IResolvable) {
    this._locale = value;
  }
  public resetLocale() {
    this._locale = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localeInput() {
    return this._locale;
  }

  // name - computed: false, optional: true, required: false
  private _name?: boolean | cdktf.IResolvable; 
  public get name() {
    return this.getBooleanAttribute('name');
  }
  public set name(value: boolean | cdktf.IResolvable) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // phone - computed: false, optional: true, required: false
  private _phone?: boolean | cdktf.IResolvable; 
  public get phone() {
    return this.getBooleanAttribute('phone');
  }
  public set phone(value: boolean | cdktf.IResolvable) {
    this._phone = value;
  }
  public resetPhone() {
    this._phone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get phoneInput() {
    return this._phone;
  }

  // picture - computed: false, optional: true, required: false
  private _picture?: boolean | cdktf.IResolvable; 
  public get picture() {
    return this.getBooleanAttribute('picture');
  }
  public set picture(value: boolean | cdktf.IResolvable) {
    this._picture = value;
  }
  public resetPicture() {
    this._picture = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pictureInput() {
    return this._picture;
  }

  // profile - computed: false, optional: true, required: false
  private _profile?: boolean | cdktf.IResolvable; 
  public get profile() {
    return this.getBooleanAttribute('profile');
  }
  public set profile(value: boolean | cdktf.IResolvable) {
    this._profile = value;
  }
  public resetProfile() {
    this._profile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get profileInput() {
    return this._profile;
  }

  // username - computed: false, optional: true, required: false
  private _username?: boolean | cdktf.IResolvable; 
  public get username() {
    return this.getBooleanAttribute('username');
  }
  public set username(value: boolean | cdktf.IResolvable) {
    this._username = value;
  }
  public resetUsername() {
    this._username = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usernameInput() {
    return this._username;
  }

  // website - computed: false, optional: true, required: false
  private _website?: boolean | cdktf.IResolvable; 
  public get website() {
    return this.getBooleanAttribute('website');
  }
  public set website(value: boolean | cdktf.IResolvable) {
    this._website = value;
  }
  public resetWebsite() {
    this._website = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get websiteInput() {
    return this._website;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_required}
  */
  readonly consentRequired?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_text DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_text}
  */
  readonly consentText?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol}
  */
  readonly protocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol_mapper DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol_mapper}
  */
  readonly protocolMapper?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappersToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.config),
    consent_required: cdktf.booleanToTerraform(struct!.consentRequired),
    consent_text: cdktf.stringToTerraform(struct!.consentText),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
    protocol: cdktf.stringToTerraform(struct!.protocol),
    protocol_mapper: cdktf.stringToTerraform(struct!.protocolMapper),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappersToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    consent_required: {
      value: cdktf.booleanToHclTerraform(struct!.consentRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    consent_text: {
      value: cdktf.stringToHclTerraform(struct!.consentText),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol: {
      value: cdktf.stringToHclTerraform(struct!.protocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol_mapper: {
      value: cdktf.stringToHclTerraform(struct!.protocolMapper),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._consentRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentRequired = this._consentRequired;
    }
    if (this._consentText !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentText = this._consentText;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._protocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocol = this._protocol;
    }
    if (this._protocolMapper !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocolMapper = this._protocolMapper;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._config = undefined;
      this._consentRequired = undefined;
      this._consentText = undefined;
      this._id = undefined;
      this._name = undefined;
      this._protocol = undefined;
      this._protocolMapper = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._config = value.config;
      this._consentRequired = value.consentRequired;
      this._consentText = value.consentText;
      this._id = value.id;
      this._name = value.name;
      this._protocol = value.protocol;
      this._protocolMapper = value.protocolMapper;
    }
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string }; 
  public get config() {
    return this.getStringMapAttribute('config');
  }
  public set config(value: { [key: string]: string }) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // consent_required - computed: false, optional: true, required: false
  private _consentRequired?: boolean | cdktf.IResolvable; 
  public get consentRequired() {
    return this.getBooleanAttribute('consent_required');
  }
  public set consentRequired(value: boolean | cdktf.IResolvable) {
    this._consentRequired = value;
  }
  public resetConsentRequired() {
    this._consentRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentRequiredInput() {
    return this._consentRequired;
  }

  // consent_text - computed: false, optional: true, required: false
  private _consentText?: string; 
  public get consentText() {
    return this.getStringAttribute('consent_text');
  }
  public set consentText(value: string) {
    this._consentText = value;
  }
  public resetConsentText() {
    this._consentText = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentTextInput() {
    return this._consentText;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // protocol - computed: false, optional: true, required: false
  private _protocol?: string; 
  public get protocol() {
    return this.getStringAttribute('protocol');
  }
  public set protocol(value: string) {
    this._protocol = value;
  }
  public resetProtocol() {
    this._protocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolInput() {
    return this._protocol;
  }

  // protocol_mapper - computed: false, optional: true, required: false
  private _protocolMapper?: string; 
  public get protocolMapper() {
    return this.getStringAttribute('protocol_mapper');
  }
  public set protocolMapper(value: string) {
    this._protocolMapper = value;
  }
  public resetProtocolMapper() {
    this._protocolMapper = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolMapperInput() {
    return this._protocolMapper;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappersList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappersOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClients {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#access DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#access}
  */
  readonly access?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#admin_url DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#admin_url}
  */
  readonly adminUrl?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#always_display_in_console DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#always_display_in_console}
  */
  readonly alwaysDisplayInConsole?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authentication_flow_binding_overrides DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authentication_flow_binding_overrides}
  */
  readonly authenticationFlowBindingOverrides?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authorization_services_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authorization_services_enabled}
  */
  readonly authorizationServicesEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authorization_settings DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authorization_settings}
  */
  readonly authorizationSettings?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettings;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#base_url DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#base_url}
  */
  readonly baseUrl?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#bearer_only DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#bearer_only}
  */
  readonly bearerOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#claims DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#claims}
  */
  readonly claims?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsClaims;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_authenticator_type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_authenticator_type}
  */
  readonly clientAuthenticatorType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_id}
  */
  readonly clientId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_template DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_template}
  */
  readonly clientTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_required}
  */
  readonly consentRequired?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#default_client_scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#default_client_scopes}
  */
  readonly defaultClientScopes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#default_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#default_roles}
  */
  readonly defaultRoles?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#description DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#direct_access_grants_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#direct_access_grants_enabled}
  */
  readonly directAccessGrantsEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#direct_grants_only DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#direct_grants_only}
  */
  readonly directGrantsOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#frontchannel_logout DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#frontchannel_logout}
  */
  readonly frontchannelLogout?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#full_scope_allowed DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#full_scope_allowed}
  */
  readonly fullScopeAllowed?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#implicit_flow_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#implicit_flow_enabled}
  */
  readonly implicitFlowEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#node_re_registration_timeout DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#node_re_registration_timeout}
  */
  readonly nodeReRegistrationTimeout?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#not_before DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#not_before}
  */
  readonly notBefore?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#oauth2_device_authorization_grant_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#oauth2_device_authorization_grant_enabled}
  */
  readonly oauth2DeviceAuthorizationGrantEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#optional_client_scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#optional_client_scopes}
  */
  readonly optionalClientScopes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#origin DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#origin}
  */
  readonly origin?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol}
  */
  readonly protocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol_mappers DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol_mappers}
  */
  readonly protocolMappers?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#public_client DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#public_client}
  */
  readonly publicClient?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#redirect_uris DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#redirect_uris}
  */
  readonly redirectUris?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#registered_nodes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#registered_nodes}
  */
  readonly registeredNodes?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#registration_access_token DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#registration_access_token}
  */
  readonly registrationAccessToken?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#root_url DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#root_url}
  */
  readonly rootUrl?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#secret DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#secret}
  */
  readonly secret?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#service_accounts_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#service_accounts_enabled}
  */
  readonly serviceAccountsEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#standard_flow_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#standard_flow_enabled}
  */
  readonly standardFlowEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#surrogate_auth_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#surrogate_auth_required}
  */
  readonly surrogateAuthRequired?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#use_template_config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#use_template_config}
  */
  readonly useTemplateConfig?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#use_template_mappers DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#use_template_mappers}
  */
  readonly useTemplateMappers?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#use_template_scope DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#use_template_scope}
  */
  readonly useTemplateScope?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_origins DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_origins}
  */
  readonly webOrigins?: string[];
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClients | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.access),
    admin_url: cdktf.stringToTerraform(struct!.adminUrl),
    always_display_in_console: cdktf.booleanToTerraform(struct!.alwaysDisplayInConsole),
    attributes: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.attributes),
    authentication_flow_binding_overrides: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.authenticationFlowBindingOverrides),
    authorization_services_enabled: cdktf.booleanToTerraform(struct!.authorizationServicesEnabled),
    authorization_settings: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsToTerraform(struct!.authorizationSettings),
    base_url: cdktf.stringToTerraform(struct!.baseUrl),
    bearer_only: cdktf.booleanToTerraform(struct!.bearerOnly),
    claims: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsClaimsToTerraform(struct!.claims),
    client_authenticator_type: cdktf.stringToTerraform(struct!.clientAuthenticatorType),
    client_id: cdktf.stringToTerraform(struct!.clientId),
    client_template: cdktf.stringToTerraform(struct!.clientTemplate),
    consent_required: cdktf.booleanToTerraform(struct!.consentRequired),
    default_client_scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.defaultClientScopes),
    default_roles: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.defaultRoles),
    description: cdktf.stringToTerraform(struct!.description),
    direct_access_grants_enabled: cdktf.booleanToTerraform(struct!.directAccessGrantsEnabled),
    direct_grants_only: cdktf.booleanToTerraform(struct!.directGrantsOnly),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    frontchannel_logout: cdktf.booleanToTerraform(struct!.frontchannelLogout),
    full_scope_allowed: cdktf.booleanToTerraform(struct!.fullScopeAllowed),
    id: cdktf.stringToTerraform(struct!.id),
    implicit_flow_enabled: cdktf.booleanToTerraform(struct!.implicitFlowEnabled),
    name: cdktf.stringToTerraform(struct!.name),
    node_re_registration_timeout: cdktf.numberToTerraform(struct!.nodeReRegistrationTimeout),
    not_before: cdktf.numberToTerraform(struct!.notBefore),
    oauth2_device_authorization_grant_enabled: cdktf.booleanToTerraform(struct!.oauth2DeviceAuthorizationGrantEnabled),
    optional_client_scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.optionalClientScopes),
    origin: cdktf.stringToTerraform(struct!.origin),
    protocol: cdktf.stringToTerraform(struct!.protocol),
    protocol_mappers: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappersToTerraform, false)(struct!.protocolMappers),
    public_client: cdktf.booleanToTerraform(struct!.publicClient),
    redirect_uris: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.redirectUris),
    registered_nodes: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.registeredNodes),
    registration_access_token: cdktf.stringToTerraform(struct!.registrationAccessToken),
    root_url: cdktf.stringToTerraform(struct!.rootUrl),
    secret: cdktf.stringToTerraform(struct!.secret),
    service_accounts_enabled: cdktf.booleanToTerraform(struct!.serviceAccountsEnabled),
    standard_flow_enabled: cdktf.booleanToTerraform(struct!.standardFlowEnabled),
    surrogate_auth_required: cdktf.booleanToTerraform(struct!.surrogateAuthRequired),
    use_template_config: cdktf.booleanToTerraform(struct!.useTemplateConfig),
    use_template_mappers: cdktf.booleanToTerraform(struct!.useTemplateMappers),
    use_template_scope: cdktf.booleanToTerraform(struct!.useTemplateScope),
    web_origins: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.webOrigins),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClients | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.access),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    admin_url: {
      value: cdktf.stringToHclTerraform(struct!.adminUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    always_display_in_console: {
      value: cdktf.booleanToHclTerraform(struct!.alwaysDisplayInConsole),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    authentication_flow_binding_overrides: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.authenticationFlowBindingOverrides),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    authorization_services_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.authorizationServicesEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    authorization_settings: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsToHclTerraform(struct!.authorizationSettings),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettings",
    },
    base_url: {
      value: cdktf.stringToHclTerraform(struct!.baseUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    bearer_only: {
      value: cdktf.booleanToHclTerraform(struct!.bearerOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    claims: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsClaimsToHclTerraform(struct!.claims),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsClaims",
    },
    client_authenticator_type: {
      value: cdktf.stringToHclTerraform(struct!.clientAuthenticatorType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_id: {
      value: cdktf.stringToHclTerraform(struct!.clientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_template: {
      value: cdktf.stringToHclTerraform(struct!.clientTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    consent_required: {
      value: cdktf.booleanToHclTerraform(struct!.consentRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    default_client_scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.defaultClientScopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    default_roles: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.defaultRoles),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    direct_access_grants_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.directAccessGrantsEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    direct_grants_only: {
      value: cdktf.booleanToHclTerraform(struct!.directGrantsOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    frontchannel_logout: {
      value: cdktf.booleanToHclTerraform(struct!.frontchannelLogout),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    full_scope_allowed: {
      value: cdktf.booleanToHclTerraform(struct!.fullScopeAllowed),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    implicit_flow_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.implicitFlowEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_re_registration_timeout: {
      value: cdktf.numberToHclTerraform(struct!.nodeReRegistrationTimeout),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    not_before: {
      value: cdktf.numberToHclTerraform(struct!.notBefore),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    oauth2_device_authorization_grant_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.oauth2DeviceAuthorizationGrantEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    optional_client_scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.optionalClientScopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    origin: {
      value: cdktf.stringToHclTerraform(struct!.origin),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol: {
      value: cdktf.stringToHclTerraform(struct!.protocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol_mappers: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappersToHclTerraform, false)(struct!.protocolMappers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappersList",
    },
    public_client: {
      value: cdktf.booleanToHclTerraform(struct!.publicClient),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    redirect_uris: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.redirectUris),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    registered_nodes: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.registeredNodes),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    registration_access_token: {
      value: cdktf.stringToHclTerraform(struct!.registrationAccessToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    root_url: {
      value: cdktf.stringToHclTerraform(struct!.rootUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_accounts_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.serviceAccountsEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    standard_flow_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.standardFlowEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    surrogate_auth_required: {
      value: cdktf.booleanToHclTerraform(struct!.surrogateAuthRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_template_config: {
      value: cdktf.booleanToHclTerraform(struct!.useTemplateConfig),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_template_mappers: {
      value: cdktf.booleanToHclTerraform(struct!.useTemplateMappers),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    use_template_scope: {
      value: cdktf.booleanToHclTerraform(struct!.useTemplateScope),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    web_origins: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.webOrigins),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClients | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._access !== undefined) {
      hasAnyValues = true;
      internalValueResult.access = this._access;
    }
    if (this._adminUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUrl = this._adminUrl;
    }
    if (this._alwaysDisplayInConsole !== undefined) {
      hasAnyValues = true;
      internalValueResult.alwaysDisplayInConsole = this._alwaysDisplayInConsole;
    }
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._authenticationFlowBindingOverrides !== undefined) {
      hasAnyValues = true;
      internalValueResult.authenticationFlowBindingOverrides = this._authenticationFlowBindingOverrides;
    }
    if (this._authorizationServicesEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.authorizationServicesEnabled = this._authorizationServicesEnabled;
    }
    if (this._authorizationSettings?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authorizationSettings = this._authorizationSettings?.internalValue;
    }
    if (this._baseUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.baseUrl = this._baseUrl;
    }
    if (this._bearerOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.bearerOnly = this._bearerOnly;
    }
    if (this._claims?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.claims = this._claims?.internalValue;
    }
    if (this._clientAuthenticatorType !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientAuthenticatorType = this._clientAuthenticatorType;
    }
    if (this._clientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientId = this._clientId;
    }
    if (this._clientTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientTemplate = this._clientTemplate;
    }
    if (this._consentRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentRequired = this._consentRequired;
    }
    if (this._defaultClientScopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultClientScopes = this._defaultClientScopes;
    }
    if (this._defaultRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultRoles = this._defaultRoles;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._directAccessGrantsEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.directAccessGrantsEnabled = this._directAccessGrantsEnabled;
    }
    if (this._directGrantsOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.directGrantsOnly = this._directGrantsOnly;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._frontchannelLogout !== undefined) {
      hasAnyValues = true;
      internalValueResult.frontchannelLogout = this._frontchannelLogout;
    }
    if (this._fullScopeAllowed !== undefined) {
      hasAnyValues = true;
      internalValueResult.fullScopeAllowed = this._fullScopeAllowed;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._implicitFlowEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.implicitFlowEnabled = this._implicitFlowEnabled;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._nodeReRegistrationTimeout !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeReRegistrationTimeout = this._nodeReRegistrationTimeout;
    }
    if (this._notBefore !== undefined) {
      hasAnyValues = true;
      internalValueResult.notBefore = this._notBefore;
    }
    if (this._oauth2DeviceAuthorizationGrantEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.oauth2DeviceAuthorizationGrantEnabled = this._oauth2DeviceAuthorizationGrantEnabled;
    }
    if (this._optionalClientScopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.optionalClientScopes = this._optionalClientScopes;
    }
    if (this._origin !== undefined) {
      hasAnyValues = true;
      internalValueResult.origin = this._origin;
    }
    if (this._protocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocol = this._protocol;
    }
    if (this._protocolMappers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocolMappers = this._protocolMappers?.internalValue;
    }
    if (this._publicClient !== undefined) {
      hasAnyValues = true;
      internalValueResult.publicClient = this._publicClient;
    }
    if (this._redirectUris !== undefined) {
      hasAnyValues = true;
      internalValueResult.redirectUris = this._redirectUris;
    }
    if (this._registeredNodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.registeredNodes = this._registeredNodes;
    }
    if (this._registrationAccessToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.registrationAccessToken = this._registrationAccessToken;
    }
    if (this._rootUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.rootUrl = this._rootUrl;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._serviceAccountsEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountsEnabled = this._serviceAccountsEnabled;
    }
    if (this._standardFlowEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.standardFlowEnabled = this._standardFlowEnabled;
    }
    if (this._surrogateAuthRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.surrogateAuthRequired = this._surrogateAuthRequired;
    }
    if (this._useTemplateConfig !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTemplateConfig = this._useTemplateConfig;
    }
    if (this._useTemplateMappers !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTemplateMappers = this._useTemplateMappers;
    }
    if (this._useTemplateScope !== undefined) {
      hasAnyValues = true;
      internalValueResult.useTemplateScope = this._useTemplateScope;
    }
    if (this._webOrigins !== undefined) {
      hasAnyValues = true;
      internalValueResult.webOrigins = this._webOrigins;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClients | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._access = undefined;
      this._adminUrl = undefined;
      this._alwaysDisplayInConsole = undefined;
      this._attributes = undefined;
      this._authenticationFlowBindingOverrides = undefined;
      this._authorizationServicesEnabled = undefined;
      this._authorizationSettings.internalValue = undefined;
      this._baseUrl = undefined;
      this._bearerOnly = undefined;
      this._claims.internalValue = undefined;
      this._clientAuthenticatorType = undefined;
      this._clientId = undefined;
      this._clientTemplate = undefined;
      this._consentRequired = undefined;
      this._defaultClientScopes = undefined;
      this._defaultRoles = undefined;
      this._description = undefined;
      this._directAccessGrantsEnabled = undefined;
      this._directGrantsOnly = undefined;
      this._enabled = undefined;
      this._frontchannelLogout = undefined;
      this._fullScopeAllowed = undefined;
      this._id = undefined;
      this._implicitFlowEnabled = undefined;
      this._name = undefined;
      this._nodeReRegistrationTimeout = undefined;
      this._notBefore = undefined;
      this._oauth2DeviceAuthorizationGrantEnabled = undefined;
      this._optionalClientScopes = undefined;
      this._origin = undefined;
      this._protocol = undefined;
      this._protocolMappers.internalValue = undefined;
      this._publicClient = undefined;
      this._redirectUris = undefined;
      this._registeredNodes = undefined;
      this._registrationAccessToken = undefined;
      this._rootUrl = undefined;
      this._secret = undefined;
      this._serviceAccountsEnabled = undefined;
      this._standardFlowEnabled = undefined;
      this._surrogateAuthRequired = undefined;
      this._useTemplateConfig = undefined;
      this._useTemplateMappers = undefined;
      this._useTemplateScope = undefined;
      this._webOrigins = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._access = value.access;
      this._adminUrl = value.adminUrl;
      this._alwaysDisplayInConsole = value.alwaysDisplayInConsole;
      this._attributes = value.attributes;
      this._authenticationFlowBindingOverrides = value.authenticationFlowBindingOverrides;
      this._authorizationServicesEnabled = value.authorizationServicesEnabled;
      this._authorizationSettings.internalValue = value.authorizationSettings;
      this._baseUrl = value.baseUrl;
      this._bearerOnly = value.bearerOnly;
      this._claims.internalValue = value.claims;
      this._clientAuthenticatorType = value.clientAuthenticatorType;
      this._clientId = value.clientId;
      this._clientTemplate = value.clientTemplate;
      this._consentRequired = value.consentRequired;
      this._defaultClientScopes = value.defaultClientScopes;
      this._defaultRoles = value.defaultRoles;
      this._description = value.description;
      this._directAccessGrantsEnabled = value.directAccessGrantsEnabled;
      this._directGrantsOnly = value.directGrantsOnly;
      this._enabled = value.enabled;
      this._frontchannelLogout = value.frontchannelLogout;
      this._fullScopeAllowed = value.fullScopeAllowed;
      this._id = value.id;
      this._implicitFlowEnabled = value.implicitFlowEnabled;
      this._name = value.name;
      this._nodeReRegistrationTimeout = value.nodeReRegistrationTimeout;
      this._notBefore = value.notBefore;
      this._oauth2DeviceAuthorizationGrantEnabled = value.oauth2DeviceAuthorizationGrantEnabled;
      this._optionalClientScopes = value.optionalClientScopes;
      this._origin = value.origin;
      this._protocol = value.protocol;
      this._protocolMappers.internalValue = value.protocolMappers;
      this._publicClient = value.publicClient;
      this._redirectUris = value.redirectUris;
      this._registeredNodes = value.registeredNodes;
      this._registrationAccessToken = value.registrationAccessToken;
      this._rootUrl = value.rootUrl;
      this._secret = value.secret;
      this._serviceAccountsEnabled = value.serviceAccountsEnabled;
      this._standardFlowEnabled = value.standardFlowEnabled;
      this._surrogateAuthRequired = value.surrogateAuthRequired;
      this._useTemplateConfig = value.useTemplateConfig;
      this._useTemplateMappers = value.useTemplateMappers;
      this._useTemplateScope = value.useTemplateScope;
      this._webOrigins = value.webOrigins;
    }
  }

  // access - computed: false, optional: true, required: false
  private _access?: { [key: string]: string }; 
  public get access() {
    return this.getStringMapAttribute('access');
  }
  public set access(value: { [key: string]: string }) {
    this._access = value;
  }
  public resetAccess() {
    this._access = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessInput() {
    return this._access;
  }

  // admin_url - computed: false, optional: true, required: false
  private _adminUrl?: string; 
  public get adminUrl() {
    return this.getStringAttribute('admin_url');
  }
  public set adminUrl(value: string) {
    this._adminUrl = value;
  }
  public resetAdminUrl() {
    this._adminUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUrlInput() {
    return this._adminUrl;
  }

  // always_display_in_console - computed: false, optional: true, required: false
  private _alwaysDisplayInConsole?: boolean | cdktf.IResolvable; 
  public get alwaysDisplayInConsole() {
    return this.getBooleanAttribute('always_display_in_console');
  }
  public set alwaysDisplayInConsole(value: boolean | cdktf.IResolvable) {
    this._alwaysDisplayInConsole = value;
  }
  public resetAlwaysDisplayInConsole() {
    this._alwaysDisplayInConsole = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get alwaysDisplayInConsoleInput() {
    return this._alwaysDisplayInConsole;
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string }; 
  public get attributes() {
    return this.getStringMapAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string }) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // authentication_flow_binding_overrides - computed: false, optional: true, required: false
  private _authenticationFlowBindingOverrides?: { [key: string]: string }; 
  public get authenticationFlowBindingOverrides() {
    return this.getStringMapAttribute('authentication_flow_binding_overrides');
  }
  public set authenticationFlowBindingOverrides(value: { [key: string]: string }) {
    this._authenticationFlowBindingOverrides = value;
  }
  public resetAuthenticationFlowBindingOverrides() {
    this._authenticationFlowBindingOverrides = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authenticationFlowBindingOverridesInput() {
    return this._authenticationFlowBindingOverrides;
  }

  // authorization_services_enabled - computed: false, optional: true, required: false
  private _authorizationServicesEnabled?: boolean | cdktf.IResolvable; 
  public get authorizationServicesEnabled() {
    return this.getBooleanAttribute('authorization_services_enabled');
  }
  public set authorizationServicesEnabled(value: boolean | cdktf.IResolvable) {
    this._authorizationServicesEnabled = value;
  }
  public resetAuthorizationServicesEnabled() {
    this._authorizationServicesEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authorizationServicesEnabledInput() {
    return this._authorizationServicesEnabled;
  }

  // authorization_settings - computed: false, optional: true, required: false
  private _authorizationSettings = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettingsOutputReference(this, "authorization_settings");
  public get authorizationSettings() {
    return this._authorizationSettings;
  }
  public putAuthorizationSettings(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsAuthorizationSettings) {
    this._authorizationSettings.internalValue = value;
  }
  public resetAuthorizationSettings() {
    this._authorizationSettings.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authorizationSettingsInput() {
    return this._authorizationSettings.internalValue;
  }

  // base_url - computed: false, optional: true, required: false
  private _baseUrl?: string; 
  public get baseUrl() {
    return this.getStringAttribute('base_url');
  }
  public set baseUrl(value: string) {
    this._baseUrl = value;
  }
  public resetBaseUrl() {
    this._baseUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get baseUrlInput() {
    return this._baseUrl;
  }

  // bearer_only - computed: false, optional: true, required: false
  private _bearerOnly?: boolean | cdktf.IResolvable; 
  public get bearerOnly() {
    return this.getBooleanAttribute('bearer_only');
  }
  public set bearerOnly(value: boolean | cdktf.IResolvable) {
    this._bearerOnly = value;
  }
  public resetBearerOnly() {
    this._bearerOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bearerOnlyInput() {
    return this._bearerOnly;
  }

  // claims - computed: false, optional: true, required: false
  private _claims = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsClaimsOutputReference(this, "claims");
  public get claims() {
    return this._claims;
  }
  public putClaims(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsClaims) {
    this._claims.internalValue = value;
  }
  public resetClaims() {
    this._claims.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get claimsInput() {
    return this._claims.internalValue;
  }

  // client_authenticator_type - computed: false, optional: true, required: false
  private _clientAuthenticatorType?: string; 
  public get clientAuthenticatorType() {
    return this.getStringAttribute('client_authenticator_type');
  }
  public set clientAuthenticatorType(value: string) {
    this._clientAuthenticatorType = value;
  }
  public resetClientAuthenticatorType() {
    this._clientAuthenticatorType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientAuthenticatorTypeInput() {
    return this._clientAuthenticatorType;
  }

  // client_id - computed: false, optional: true, required: false
  private _clientId?: string; 
  public get clientId() {
    return this.getStringAttribute('client_id');
  }
  public set clientId(value: string) {
    this._clientId = value;
  }
  public resetClientId() {
    this._clientId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientIdInput() {
    return this._clientId;
  }

  // client_template - computed: false, optional: true, required: false
  private _clientTemplate?: string; 
  public get clientTemplate() {
    return this.getStringAttribute('client_template');
  }
  public set clientTemplate(value: string) {
    this._clientTemplate = value;
  }
  public resetClientTemplate() {
    this._clientTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientTemplateInput() {
    return this._clientTemplate;
  }

  // consent_required - computed: false, optional: true, required: false
  private _consentRequired?: boolean | cdktf.IResolvable; 
  public get consentRequired() {
    return this.getBooleanAttribute('consent_required');
  }
  public set consentRequired(value: boolean | cdktf.IResolvable) {
    this._consentRequired = value;
  }
  public resetConsentRequired() {
    this._consentRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentRequiredInput() {
    return this._consentRequired;
  }

  // default_client_scopes - computed: false, optional: true, required: false
  private _defaultClientScopes?: string[]; 
  public get defaultClientScopes() {
    return this.getListAttribute('default_client_scopes');
  }
  public set defaultClientScopes(value: string[]) {
    this._defaultClientScopes = value;
  }
  public resetDefaultClientScopes() {
    this._defaultClientScopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultClientScopesInput() {
    return this._defaultClientScopes;
  }

  // default_roles - computed: false, optional: true, required: false
  private _defaultRoles?: string[]; 
  public get defaultRoles() {
    return this.getListAttribute('default_roles');
  }
  public set defaultRoles(value: string[]) {
    this._defaultRoles = value;
  }
  public resetDefaultRoles() {
    this._defaultRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultRolesInput() {
    return this._defaultRoles;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // direct_access_grants_enabled - computed: false, optional: true, required: false
  private _directAccessGrantsEnabled?: boolean | cdktf.IResolvable; 
  public get directAccessGrantsEnabled() {
    return this.getBooleanAttribute('direct_access_grants_enabled');
  }
  public set directAccessGrantsEnabled(value: boolean | cdktf.IResolvable) {
    this._directAccessGrantsEnabled = value;
  }
  public resetDirectAccessGrantsEnabled() {
    this._directAccessGrantsEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directAccessGrantsEnabledInput() {
    return this._directAccessGrantsEnabled;
  }

  // direct_grants_only - computed: false, optional: true, required: false
  private _directGrantsOnly?: boolean | cdktf.IResolvable; 
  public get directGrantsOnly() {
    return this.getBooleanAttribute('direct_grants_only');
  }
  public set directGrantsOnly(value: boolean | cdktf.IResolvable) {
    this._directGrantsOnly = value;
  }
  public resetDirectGrantsOnly() {
    this._directGrantsOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directGrantsOnlyInput() {
    return this._directGrantsOnly;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // frontchannel_logout - computed: false, optional: true, required: false
  private _frontchannelLogout?: boolean | cdktf.IResolvable; 
  public get frontchannelLogout() {
    return this.getBooleanAttribute('frontchannel_logout');
  }
  public set frontchannelLogout(value: boolean | cdktf.IResolvable) {
    this._frontchannelLogout = value;
  }
  public resetFrontchannelLogout() {
    this._frontchannelLogout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get frontchannelLogoutInput() {
    return this._frontchannelLogout;
  }

  // full_scope_allowed - computed: false, optional: true, required: false
  private _fullScopeAllowed?: boolean | cdktf.IResolvable; 
  public get fullScopeAllowed() {
    return this.getBooleanAttribute('full_scope_allowed');
  }
  public set fullScopeAllowed(value: boolean | cdktf.IResolvable) {
    this._fullScopeAllowed = value;
  }
  public resetFullScopeAllowed() {
    this._fullScopeAllowed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fullScopeAllowedInput() {
    return this._fullScopeAllowed;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // implicit_flow_enabled - computed: false, optional: true, required: false
  private _implicitFlowEnabled?: boolean | cdktf.IResolvable; 
  public get implicitFlowEnabled() {
    return this.getBooleanAttribute('implicit_flow_enabled');
  }
  public set implicitFlowEnabled(value: boolean | cdktf.IResolvable) {
    this._implicitFlowEnabled = value;
  }
  public resetImplicitFlowEnabled() {
    this._implicitFlowEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get implicitFlowEnabledInput() {
    return this._implicitFlowEnabled;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // node_re_registration_timeout - computed: false, optional: true, required: false
  private _nodeReRegistrationTimeout?: number; 
  public get nodeReRegistrationTimeout() {
    return this.getNumberAttribute('node_re_registration_timeout');
  }
  public set nodeReRegistrationTimeout(value: number) {
    this._nodeReRegistrationTimeout = value;
  }
  public resetNodeReRegistrationTimeout() {
    this._nodeReRegistrationTimeout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeReRegistrationTimeoutInput() {
    return this._nodeReRegistrationTimeout;
  }

  // not_before - computed: false, optional: true, required: false
  private _notBefore?: number; 
  public get notBefore() {
    return this.getNumberAttribute('not_before');
  }
  public set notBefore(value: number) {
    this._notBefore = value;
  }
  public resetNotBefore() {
    this._notBefore = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get notBeforeInput() {
    return this._notBefore;
  }

  // oauth2_device_authorization_grant_enabled - computed: false, optional: true, required: false
  private _oauth2DeviceAuthorizationGrantEnabled?: boolean | cdktf.IResolvable; 
  public get oauth2DeviceAuthorizationGrantEnabled() {
    return this.getBooleanAttribute('oauth2_device_authorization_grant_enabled');
  }
  public set oauth2DeviceAuthorizationGrantEnabled(value: boolean | cdktf.IResolvable) {
    this._oauth2DeviceAuthorizationGrantEnabled = value;
  }
  public resetOauth2DeviceAuthorizationGrantEnabled() {
    this._oauth2DeviceAuthorizationGrantEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get oauth2DeviceAuthorizationGrantEnabledInput() {
    return this._oauth2DeviceAuthorizationGrantEnabled;
  }

  // optional_client_scopes - computed: false, optional: true, required: false
  private _optionalClientScopes?: string[]; 
  public get optionalClientScopes() {
    return this.getListAttribute('optional_client_scopes');
  }
  public set optionalClientScopes(value: string[]) {
    this._optionalClientScopes = value;
  }
  public resetOptionalClientScopes() {
    this._optionalClientScopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalClientScopesInput() {
    return this._optionalClientScopes;
  }

  // origin - computed: false, optional: true, required: false
  private _origin?: string; 
  public get origin() {
    return this.getStringAttribute('origin');
  }
  public set origin(value: string) {
    this._origin = value;
  }
  public resetOrigin() {
    this._origin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get originInput() {
    return this._origin;
  }

  // protocol - computed: false, optional: true, required: false
  private _protocol?: string; 
  public get protocol() {
    return this.getStringAttribute('protocol');
  }
  public set protocol(value: string) {
    this._protocol = value;
  }
  public resetProtocol() {
    this._protocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolInput() {
    return this._protocol;
  }

  // protocol_mappers - computed: false, optional: true, required: false
  private _protocolMappers = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappersList(this, "protocol_mappers", false);
  public get protocolMappers() {
    return this._protocolMappers;
  }
  public putProtocolMappers(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsProtocolMappers[] | cdktf.IResolvable) {
    this._protocolMappers.internalValue = value;
  }
  public resetProtocolMappers() {
    this._protocolMappers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolMappersInput() {
    return this._protocolMappers.internalValue;
  }

  // public_client - computed: false, optional: true, required: false
  private _publicClient?: boolean | cdktf.IResolvable; 
  public get publicClient() {
    return this.getBooleanAttribute('public_client');
  }
  public set publicClient(value: boolean | cdktf.IResolvable) {
    this._publicClient = value;
  }
  public resetPublicClient() {
    this._publicClient = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get publicClientInput() {
    return this._publicClient;
  }

  // redirect_uris - computed: false, optional: true, required: false
  private _redirectUris?: string[]; 
  public get redirectUris() {
    return this.getListAttribute('redirect_uris');
  }
  public set redirectUris(value: string[]) {
    this._redirectUris = value;
  }
  public resetRedirectUris() {
    this._redirectUris = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get redirectUrisInput() {
    return this._redirectUris;
  }

  // registered_nodes - computed: false, optional: true, required: false
  private _registeredNodes?: { [key: string]: string }; 
  public get registeredNodes() {
    return this.getStringMapAttribute('registered_nodes');
  }
  public set registeredNodes(value: { [key: string]: string }) {
    this._registeredNodes = value;
  }
  public resetRegisteredNodes() {
    this._registeredNodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get registeredNodesInput() {
    return this._registeredNodes;
  }

  // registration_access_token - computed: false, optional: true, required: false
  private _registrationAccessToken?: string; 
  public get registrationAccessToken() {
    return this.getStringAttribute('registration_access_token');
  }
  public set registrationAccessToken(value: string) {
    this._registrationAccessToken = value;
  }
  public resetRegistrationAccessToken() {
    this._registrationAccessToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get registrationAccessTokenInput() {
    return this._registrationAccessToken;
  }

  // root_url - computed: false, optional: true, required: false
  private _rootUrl?: string; 
  public get rootUrl() {
    return this.getStringAttribute('root_url');
  }
  public set rootUrl(value: string) {
    this._rootUrl = value;
  }
  public resetRootUrl() {
    this._rootUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rootUrlInput() {
    return this._rootUrl;
  }

  // secret - computed: false, optional: true, required: false
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  public resetSecret() {
    this._secret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // service_accounts_enabled - computed: false, optional: true, required: false
  private _serviceAccountsEnabled?: boolean | cdktf.IResolvable; 
  public get serviceAccountsEnabled() {
    return this.getBooleanAttribute('service_accounts_enabled');
  }
  public set serviceAccountsEnabled(value: boolean | cdktf.IResolvable) {
    this._serviceAccountsEnabled = value;
  }
  public resetServiceAccountsEnabled() {
    this._serviceAccountsEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountsEnabledInput() {
    return this._serviceAccountsEnabled;
  }

  // standard_flow_enabled - computed: false, optional: true, required: false
  private _standardFlowEnabled?: boolean | cdktf.IResolvable; 
  public get standardFlowEnabled() {
    return this.getBooleanAttribute('standard_flow_enabled');
  }
  public set standardFlowEnabled(value: boolean | cdktf.IResolvable) {
    this._standardFlowEnabled = value;
  }
  public resetStandardFlowEnabled() {
    this._standardFlowEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get standardFlowEnabledInput() {
    return this._standardFlowEnabled;
  }

  // surrogate_auth_required - computed: false, optional: true, required: false
  private _surrogateAuthRequired?: boolean | cdktf.IResolvable; 
  public get surrogateAuthRequired() {
    return this.getBooleanAttribute('surrogate_auth_required');
  }
  public set surrogateAuthRequired(value: boolean | cdktf.IResolvable) {
    this._surrogateAuthRequired = value;
  }
  public resetSurrogateAuthRequired() {
    this._surrogateAuthRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get surrogateAuthRequiredInput() {
    return this._surrogateAuthRequired;
  }

  // use_template_config - computed: false, optional: true, required: false
  private _useTemplateConfig?: boolean | cdktf.IResolvable; 
  public get useTemplateConfig() {
    return this.getBooleanAttribute('use_template_config');
  }
  public set useTemplateConfig(value: boolean | cdktf.IResolvable) {
    this._useTemplateConfig = value;
  }
  public resetUseTemplateConfig() {
    this._useTemplateConfig = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTemplateConfigInput() {
    return this._useTemplateConfig;
  }

  // use_template_mappers - computed: false, optional: true, required: false
  private _useTemplateMappers?: boolean | cdktf.IResolvable; 
  public get useTemplateMappers() {
    return this.getBooleanAttribute('use_template_mappers');
  }
  public set useTemplateMappers(value: boolean | cdktf.IResolvable) {
    this._useTemplateMappers = value;
  }
  public resetUseTemplateMappers() {
    this._useTemplateMappers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTemplateMappersInput() {
    return this._useTemplateMappers;
  }

  // use_template_scope - computed: false, optional: true, required: false
  private _useTemplateScope?: boolean | cdktf.IResolvable; 
  public get useTemplateScope() {
    return this.getBooleanAttribute('use_template_scope');
  }
  public set useTemplateScope(value: boolean | cdktf.IResolvable) {
    this._useTemplateScope = value;
  }
  public resetUseTemplateScope() {
    this._useTemplateScope = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useTemplateScopeInput() {
    return this._useTemplateScope;
  }

  // web_origins - computed: false, optional: true, required: false
  private _webOrigins?: string[]; 
  public get webOrigins() {
    return this.getListAttribute('web_origins');
  }
  public set webOrigins(value: string[]) {
    this._webOrigins = value;
  }
  public resetWebOrigins() {
    this._webOrigins = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webOriginsInput() {
    return this._webOrigins;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClients[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_required}
  */
  readonly consentRequired?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#consent_text DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#consent_text}
  */
  readonly consentText?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol}
  */
  readonly protocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol_mapper DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol_mapper}
  */
  readonly protocolMapper?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappersToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.config),
    consent_required: cdktf.booleanToTerraform(struct!.consentRequired),
    consent_text: cdktf.stringToTerraform(struct!.consentText),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
    protocol: cdktf.stringToTerraform(struct!.protocol),
    protocol_mapper: cdktf.stringToTerraform(struct!.protocolMapper),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappersToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    consent_required: {
      value: cdktf.booleanToHclTerraform(struct!.consentRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    consent_text: {
      value: cdktf.stringToHclTerraform(struct!.consentText),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol: {
      value: cdktf.stringToHclTerraform(struct!.protocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol_mapper: {
      value: cdktf.stringToHclTerraform(struct!.protocolMapper),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._consentRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentRequired = this._consentRequired;
    }
    if (this._consentText !== undefined) {
      hasAnyValues = true;
      internalValueResult.consentText = this._consentText;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._protocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocol = this._protocol;
    }
    if (this._protocolMapper !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocolMapper = this._protocolMapper;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._config = undefined;
      this._consentRequired = undefined;
      this._consentText = undefined;
      this._id = undefined;
      this._name = undefined;
      this._protocol = undefined;
      this._protocolMapper = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._config = value.config;
      this._consentRequired = value.consentRequired;
      this._consentText = value.consentText;
      this._id = value.id;
      this._name = value.name;
      this._protocol = value.protocol;
      this._protocolMapper = value.protocolMapper;
    }
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string }; 
  public get config() {
    return this.getStringMapAttribute('config');
  }
  public set config(value: { [key: string]: string }) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // consent_required - computed: false, optional: true, required: false
  private _consentRequired?: boolean | cdktf.IResolvable; 
  public get consentRequired() {
    return this.getBooleanAttribute('consent_required');
  }
  public set consentRequired(value: boolean | cdktf.IResolvable) {
    this._consentRequired = value;
  }
  public resetConsentRequired() {
    this._consentRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentRequiredInput() {
    return this._consentRequired;
  }

  // consent_text - computed: false, optional: true, required: false
  private _consentText?: string; 
  public get consentText() {
    return this.getStringAttribute('consent_text');
  }
  public set consentText(value: string) {
    this._consentText = value;
  }
  public resetConsentText() {
    this._consentText = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get consentTextInput() {
    return this._consentText;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // protocol - computed: false, optional: true, required: false
  private _protocol?: string; 
  public get protocol() {
    return this.getStringAttribute('protocol');
  }
  public set protocol(value: string) {
    this._protocol = value;
  }
  public resetProtocol() {
    this._protocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolInput() {
    return this._protocol;
  }

  // protocol_mapper - computed: false, optional: true, required: false
  private _protocolMapper?: string; 
  public get protocolMapper() {
    return this.getStringAttribute('protocol_mapper');
  }
  public set protocolMapper(value: string) {
    this._protocolMapper = value;
  }
  public resetProtocolMapper() {
    this._protocolMapper = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolMapperInput() {
    return this._protocolMapper;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappersList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappersOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#alias DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#alias}
  */
  readonly alias?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#default_action DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#default_action}
  */
  readonly defaultAction?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#priority DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#provider_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#provider_id}
  */
  readonly providerId?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActionsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    alias: cdktf.stringToTerraform(struct!.alias),
    config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.config),
    default_action: cdktf.booleanToTerraform(struct!.defaultAction),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    name: cdktf.stringToTerraform(struct!.name),
    priority: cdktf.numberToTerraform(struct!.priority),
    provider_id: cdktf.stringToTerraform(struct!.providerId),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActionsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    alias: {
      value: cdktf.stringToHclTerraform(struct!.alias),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    default_action: {
      value: cdktf.booleanToHclTerraform(struct!.defaultAction),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    provider_id: {
      value: cdktf.stringToHclTerraform(struct!.providerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._alias !== undefined) {
      hasAnyValues = true;
      internalValueResult.alias = this._alias;
    }
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._defaultAction !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultAction = this._defaultAction;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._providerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.providerId = this._providerId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._alias = undefined;
      this._config = undefined;
      this._defaultAction = undefined;
      this._enabled = undefined;
      this._name = undefined;
      this._priority = undefined;
      this._providerId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._alias = value.alias;
      this._config = value.config;
      this._defaultAction = value.defaultAction;
      this._enabled = value.enabled;
      this._name = value.name;
      this._priority = value.priority;
      this._providerId = value.providerId;
    }
  }

  // alias - computed: false, optional: true, required: false
  private _alias?: string; 
  public get alias() {
    return this.getStringAttribute('alias');
  }
  public set alias(value: string) {
    this._alias = value;
  }
  public resetAlias() {
    this._alias = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aliasInput() {
    return this._alias;
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string }; 
  public get config() {
    return this.getStringMapAttribute('config');
  }
  public set config(value: { [key: string]: string }) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // default_action - computed: false, optional: true, required: false
  private _defaultAction?: boolean | cdktf.IResolvable; 
  public get defaultAction() {
    return this.getBooleanAttribute('default_action');
  }
  public set defaultAction(value: boolean | cdktf.IResolvable) {
    this._defaultAction = value;
  }
  public resetDefaultAction() {
    this._defaultAction = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultActionInput() {
    return this._defaultAction;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // provider_id - computed: false, optional: true, required: false
  private _providerId?: string; 
  public get providerId() {
    return this.getStringAttribute('provider_id');
  }
  public set providerId(value: string) {
    this._providerId = value;
  }
  public resetProviderId() {
    this._providerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get providerIdInput() {
    return this._providerId;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActionsOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmComposites {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#application DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#application}
  */
  readonly application?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client}
  */
  readonly client?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#realm DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#realm}
  */
  readonly realm?: string[];
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmCompositesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmComposites | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    application: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.application),
    client: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.client),
    realm: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.realm),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmCompositesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmComposites | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    application: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.application),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    client: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.client),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    realm: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.realm),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmCompositesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmComposites | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._application !== undefined) {
      hasAnyValues = true;
      internalValueResult.application = this._application;
    }
    if (this._client !== undefined) {
      hasAnyValues = true;
      internalValueResult.client = this._client;
    }
    if (this._realm !== undefined) {
      hasAnyValues = true;
      internalValueResult.realm = this._realm;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmComposites | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._application = undefined;
      this._client = undefined;
      this._realm = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._application = value.application;
      this._client = value.client;
      this._realm = value.realm;
    }
  }

  // application - computed: false, optional: true, required: false
  private _application?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get application() {
    return this.interpolationForAttribute('application');
  }
  public set application(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._application = value;
  }
  public resetApplication() {
    this._application = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get applicationInput() {
    return this._application;
  }

  // client - computed: false, optional: true, required: false
  private _client?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get client() {
    return this.interpolationForAttribute('client');
  }
  public set client(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._client = value;
  }
  public resetClient() {
    this._client = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientInput() {
    return this._client;
  }

  // realm - computed: false, optional: true, required: false
  private _realm?: string[]; 
  public get realm() {
    return this.getListAttribute('realm');
  }
  public set realm(value: string[]) {
    this._realm = value;
  }
  public resetRealm() {
    this._realm = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get realmInput() {
    return this._realm;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_role DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_role}
  */
  readonly clientRole?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#composite DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#composite}
  */
  readonly composite?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#composites DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#composites}
  */
  readonly composites?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmComposites;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#container_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#container_id}
  */
  readonly containerId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#description DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scope_param_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scope_param_required}
  */
  readonly scopeParamRequired?: boolean | cdktf.IResolvable;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    attributes: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.attributes),
    client_role: cdktf.booleanToTerraform(struct!.clientRole),
    composite: cdktf.booleanToTerraform(struct!.composite),
    composites: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmCompositesToTerraform(struct!.composites),
    container_id: cdktf.stringToTerraform(struct!.containerId),
    description: cdktf.stringToTerraform(struct!.description),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
    scope_param_required: cdktf.booleanToTerraform(struct!.scopeParamRequired),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    client_role: {
      value: cdktf.booleanToHclTerraform(struct!.clientRole),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    composite: {
      value: cdktf.booleanToHclTerraform(struct!.composite),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    composites: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmCompositesToHclTerraform(struct!.composites),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmComposites",
    },
    container_id: {
      value: cdktf.stringToHclTerraform(struct!.containerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scope_param_required: {
      value: cdktf.booleanToHclTerraform(struct!.scopeParamRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._clientRole !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientRole = this._clientRole;
    }
    if (this._composite !== undefined) {
      hasAnyValues = true;
      internalValueResult.composite = this._composite;
    }
    if (this._composites?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.composites = this._composites?.internalValue;
    }
    if (this._containerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerId = this._containerId;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._scopeParamRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopeParamRequired = this._scopeParamRequired;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._attributes = undefined;
      this._clientRole = undefined;
      this._composite = undefined;
      this._composites.internalValue = undefined;
      this._containerId = undefined;
      this._description = undefined;
      this._id = undefined;
      this._name = undefined;
      this._scopeParamRequired = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._attributes = value.attributes;
      this._clientRole = value.clientRole;
      this._composite = value.composite;
      this._composites.internalValue = value.composites;
      this._containerId = value.containerId;
      this._description = value.description;
      this._id = value.id;
      this._name = value.name;
      this._scopeParamRequired = value.scopeParamRequired;
    }
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get attributes() {
    return this.interpolationForAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // client_role - computed: false, optional: true, required: false
  private _clientRole?: boolean | cdktf.IResolvable; 
  public get clientRole() {
    return this.getBooleanAttribute('client_role');
  }
  public set clientRole(value: boolean | cdktf.IResolvable) {
    this._clientRole = value;
  }
  public resetClientRole() {
    this._clientRole = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientRoleInput() {
    return this._clientRole;
  }

  // composite - computed: false, optional: true, required: false
  private _composite?: boolean | cdktf.IResolvable; 
  public get composite() {
    return this.getBooleanAttribute('composite');
  }
  public set composite(value: boolean | cdktf.IResolvable) {
    this._composite = value;
  }
  public resetComposite() {
    this._composite = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compositeInput() {
    return this._composite;
  }

  // composites - computed: false, optional: true, required: false
  private _composites = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmCompositesOutputReference(this, "composites");
  public get composites() {
    return this._composites;
  }
  public putComposites(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmComposites) {
    this._composites.internalValue = value;
  }
  public resetComposites() {
    this._composites.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compositesInput() {
    return this._composites.internalValue;
  }

  // container_id - computed: false, optional: true, required: false
  private _containerId?: string; 
  public get containerId() {
    return this.getStringAttribute('container_id');
  }
  public set containerId(value: string) {
    this._containerId = value;
  }
  public resetContainerId() {
    this._containerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerIdInput() {
    return this._containerId;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // scope_param_required - computed: false, optional: true, required: false
  private _scopeParamRequired?: boolean | cdktf.IResolvable; 
  public get scopeParamRequired() {
    return this.getBooleanAttribute('scope_param_required');
  }
  public set scopeParamRequired(value: boolean | cdktf.IResolvable) {
    this._scopeParamRequired = value;
  }
  public resetScopeParamRequired() {
    this._scopeParamRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopeParamRequiredInput() {
    return this._scopeParamRequired;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealm[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRoles {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#application DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#application}
  */
  readonly application?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client}
  */
  readonly client?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#realm DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#realm}
  */
  readonly realm?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealm[] | cdktf.IResolvable;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRoles | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    application: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.application),
    client: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.client),
    realm: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmToTerraform, false)(struct!.realm),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRoles | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    application: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.application),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    client: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.client),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    realm: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmToHclTerraform, false)(struct!.realm),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRoles | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._application !== undefined) {
      hasAnyValues = true;
      internalValueResult.application = this._application;
    }
    if (this._client !== undefined) {
      hasAnyValues = true;
      internalValueResult.client = this._client;
    }
    if (this._realm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.realm = this._realm?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRoles | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._application = undefined;
      this._client = undefined;
      this._realm.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._application = value.application;
      this._client = value.client;
      this._realm.internalValue = value.realm;
    }
  }

  // application - computed: false, optional: true, required: false
  private _application?: { [key: string]: string }; 
  public get application() {
    return this.getStringMapAttribute('application');
  }
  public set application(value: { [key: string]: string }) {
    this._application = value;
  }
  public resetApplication() {
    this._application = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get applicationInput() {
    return this._application;
  }

  // client - computed: false, optional: true, required: false
  private _client?: { [key: string]: string }; 
  public get client() {
    return this.getStringMapAttribute('client');
  }
  public set client(value: { [key: string]: string }) {
    this._client = value;
  }
  public resetClient() {
    this._client = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientInput() {
    return this._client;
  }

  // realm - computed: false, optional: true, required: false
  private _realm = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealmList(this, "realm", false);
  public get realm() {
    return this._realm;
  }
  public putRealm(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesRealm[] | cdktf.IResolvable) {
    this._realm.internalValue = value;
  }
  public resetRealm() {
    this._realm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get realmInput() {
    return this._realm.internalValue;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappings {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client}
  */
  readonly client?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_scope DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_scope}
  */
  readonly clientScope?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_template DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_template}
  */
  readonly clientTemplate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#roles}
  */
  readonly roles?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#self DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#self}
  */
  readonly selfAttribute?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappingsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    client: cdktf.stringToTerraform(struct!.client),
    client_scope: cdktf.stringToTerraform(struct!.clientScope),
    client_template: cdktf.stringToTerraform(struct!.clientTemplate),
    roles: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.roles),
    self: cdktf.stringToTerraform(struct!.selfAttribute),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappingsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    client: {
      value: cdktf.stringToHclTerraform(struct!.client),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_scope: {
      value: cdktf.stringToHclTerraform(struct!.clientScope),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_template: {
      value: cdktf.stringToHclTerraform(struct!.clientTemplate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    roles: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.roles),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    self: {
      value: cdktf.stringToHclTerraform(struct!.selfAttribute),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappingsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappings | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._client !== undefined) {
      hasAnyValues = true;
      internalValueResult.client = this._client;
    }
    if (this._clientScope !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientScope = this._clientScope;
    }
    if (this._clientTemplate !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientTemplate = this._clientTemplate;
    }
    if (this._roles !== undefined) {
      hasAnyValues = true;
      internalValueResult.roles = this._roles;
    }
    if (this._self !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfAttribute = this._self;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappings | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._client = undefined;
      this._clientScope = undefined;
      this._clientTemplate = undefined;
      this._roles = undefined;
      this._self = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._client = value.client;
      this._clientScope = value.clientScope;
      this._clientTemplate = value.clientTemplate;
      this._roles = value.roles;
      this._self = value.selfAttribute;
    }
  }

  // client - computed: false, optional: true, required: false
  private _client?: string; 
  public get client() {
    return this.getStringAttribute('client');
  }
  public set client(value: string) {
    this._client = value;
  }
  public resetClient() {
    this._client = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientInput() {
    return this._client;
  }

  // client_scope - computed: false, optional: true, required: false
  private _clientScope?: string; 
  public get clientScope() {
    return this.getStringAttribute('client_scope');
  }
  public set clientScope(value: string) {
    this._clientScope = value;
  }
  public resetClientScope() {
    this._clientScope = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientScopeInput() {
    return this._clientScope;
  }

  // client_template - computed: false, optional: true, required: false
  private _clientTemplate?: string; 
  public get clientTemplate() {
    return this.getStringAttribute('client_template');
  }
  public set clientTemplate(value: string) {
    this._clientTemplate = value;
  }
  public resetClientTemplate() {
    this._clientTemplate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientTemplateInput() {
    return this._clientTemplate;
  }

  // roles - computed: false, optional: true, required: false
  private _roles?: string[]; 
  public get roles() {
    return this.getListAttribute('roles');
  }
  public set roles(value: string[]) {
    this._roles = value;
  }
  public resetRoles() {
    this._roles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rolesInput() {
    return this._roles;
  }

  // self - computed: false, optional: true, required: false
  private _self?: string; 
  public get selfAttribute() {
    return this.getStringAttribute('self');
  }
  public set selfAttribute(value: string) {
    this._self = value;
  }
  public resetSelfAttribute() {
    this._self = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfAttributeInput() {
    return this._self;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappingsList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappings[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappingsOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappingsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#federation_mapper_type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#federation_mapper_type}
  */
  readonly federationMapperType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#federation_provider_display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#federation_provider_display_name}
  */
  readonly federationProviderDisplayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappersToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.config),
    federation_mapper_type: cdktf.stringToTerraform(struct!.federationMapperType),
    federation_provider_display_name: cdktf.stringToTerraform(struct!.federationProviderDisplayName),
    id: cdktf.stringToTerraform(struct!.id),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappersToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    federation_mapper_type: {
      value: cdktf.stringToHclTerraform(struct!.federationMapperType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    federation_provider_display_name: {
      value: cdktf.stringToHclTerraform(struct!.federationProviderDisplayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._federationMapperType !== undefined) {
      hasAnyValues = true;
      internalValueResult.federationMapperType = this._federationMapperType;
    }
    if (this._federationProviderDisplayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.federationProviderDisplayName = this._federationProviderDisplayName;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._config = undefined;
      this._federationMapperType = undefined;
      this._federationProviderDisplayName = undefined;
      this._id = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._config = value.config;
      this._federationMapperType = value.federationMapperType;
      this._federationProviderDisplayName = value.federationProviderDisplayName;
      this._id = value.id;
      this._name = value.name;
    }
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string }; 
  public get config() {
    return this.getStringMapAttribute('config');
  }
  public set config(value: { [key: string]: string }) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // federation_mapper_type - computed: false, optional: true, required: false
  private _federationMapperType?: string; 
  public get federationMapperType() {
    return this.getStringAttribute('federation_mapper_type');
  }
  public set federationMapperType(value: string) {
    this._federationMapperType = value;
  }
  public resetFederationMapperType() {
    this._federationMapperType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get federationMapperTypeInput() {
    return this._federationMapperType;
  }

  // federation_provider_display_name - computed: false, optional: true, required: false
  private _federationProviderDisplayName?: string; 
  public get federationProviderDisplayName() {
    return this.getStringAttribute('federation_provider_display_name');
  }
  public set federationProviderDisplayName(value: string) {
    this._federationProviderDisplayName = value;
  }
  public resetFederationProviderDisplayName() {
    this._federationProviderDisplayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get federationProviderDisplayNameInput() {
    return this._federationProviderDisplayName;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappersList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappersOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProviders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#changed_sync_period DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#changed_sync_period}
  */
  readonly changedSyncPeriod?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#full_sync_period DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#full_sync_period}
  */
  readonly fullSyncPeriod?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#last_sync DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#last_sync}
  */
  readonly lastSync?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#priority DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#provider_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#provider_name}
  */
  readonly providerName?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProvidersToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProviders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    changed_sync_period: cdktf.numberToTerraform(struct!.changedSyncPeriod),
    config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.config),
    display_name: cdktf.stringToTerraform(struct!.displayName),
    full_sync_period: cdktf.numberToTerraform(struct!.fullSyncPeriod),
    id: cdktf.stringToTerraform(struct!.id),
    last_sync: cdktf.numberToTerraform(struct!.lastSync),
    priority: cdktf.numberToTerraform(struct!.priority),
    provider_name: cdktf.stringToTerraform(struct!.providerName),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProvidersToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProviders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    changed_sync_period: {
      value: cdktf.numberToHclTerraform(struct!.changedSyncPeriod),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    full_sync_period: {
      value: cdktf.numberToHclTerraform(struct!.fullSyncPeriod),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    last_sync: {
      value: cdktf.numberToHclTerraform(struct!.lastSync),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    provider_name: {
      value: cdktf.stringToHclTerraform(struct!.providerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProvidersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProviders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._changedSyncPeriod !== undefined) {
      hasAnyValues = true;
      internalValueResult.changedSyncPeriod = this._changedSyncPeriod;
    }
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._fullSyncPeriod !== undefined) {
      hasAnyValues = true;
      internalValueResult.fullSyncPeriod = this._fullSyncPeriod;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._lastSync !== undefined) {
      hasAnyValues = true;
      internalValueResult.lastSync = this._lastSync;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._providerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.providerName = this._providerName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProviders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._changedSyncPeriod = undefined;
      this._config = undefined;
      this._displayName = undefined;
      this._fullSyncPeriod = undefined;
      this._id = undefined;
      this._lastSync = undefined;
      this._priority = undefined;
      this._providerName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._changedSyncPeriod = value.changedSyncPeriod;
      this._config = value.config;
      this._displayName = value.displayName;
      this._fullSyncPeriod = value.fullSyncPeriod;
      this._id = value.id;
      this._lastSync = value.lastSync;
      this._priority = value.priority;
      this._providerName = value.providerName;
    }
  }

  // changed_sync_period - computed: false, optional: true, required: false
  private _changedSyncPeriod?: number; 
  public get changedSyncPeriod() {
    return this.getNumberAttribute('changed_sync_period');
  }
  public set changedSyncPeriod(value: number) {
    this._changedSyncPeriod = value;
  }
  public resetChangedSyncPeriod() {
    this._changedSyncPeriod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get changedSyncPeriodInput() {
    return this._changedSyncPeriod;
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string }; 
  public get config() {
    return this.getStringMapAttribute('config');
  }
  public set config(value: { [key: string]: string }) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // full_sync_period - computed: false, optional: true, required: false
  private _fullSyncPeriod?: number; 
  public get fullSyncPeriod() {
    return this.getNumberAttribute('full_sync_period');
  }
  public set fullSyncPeriod(value: number) {
    this._fullSyncPeriod = value;
  }
  public resetFullSyncPeriod() {
    this._fullSyncPeriod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fullSyncPeriodInput() {
    return this._fullSyncPeriod;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // last_sync - computed: false, optional: true, required: false
  private _lastSync?: number; 
  public get lastSync() {
    return this.getNumberAttribute('last_sync');
  }
  public set lastSync(value: number) {
    this._lastSync = value;
  }
  public resetLastSync() {
    this._lastSync = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lastSyncInput() {
    return this._lastSync;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // provider_name - computed: false, optional: true, required: false
  private _providerName?: string; 
  public get providerName() {
    return this.getStringAttribute('provider_name');
  }
  public set providerName(value: string) {
    this._providerName = value;
  }
  public resetProviderName() {
    this._providerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get providerNameInput() {
    return this._providerName;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProvidersList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProviders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProvidersOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProvidersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsents {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_id}
  */
  readonly clientId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#created_date DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#created_date}
  */
  readonly createdDate?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#granted_client_scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#granted_client_scopes}
  */
  readonly grantedClientScopes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#granted_realm_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#granted_realm_roles}
  */
  readonly grantedRealmRoles?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#last_updated_date DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#last_updated_date}
  */
  readonly lastUpdatedDate?: number;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsentsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    client_id: cdktf.stringToTerraform(struct!.clientId),
    created_date: cdktf.numberToTerraform(struct!.createdDate),
    granted_client_scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.grantedClientScopes),
    granted_realm_roles: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.grantedRealmRoles),
    last_updated_date: cdktf.numberToTerraform(struct!.lastUpdatedDate),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsentsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    client_id: {
      value: cdktf.stringToHclTerraform(struct!.clientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    created_date: {
      value: cdktf.numberToHclTerraform(struct!.createdDate),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    granted_client_scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.grantedClientScopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    granted_realm_roles: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.grantedRealmRoles),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    last_updated_date: {
      value: cdktf.numberToHclTerraform(struct!.lastUpdatedDate),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientId = this._clientId;
    }
    if (this._createdDate !== undefined) {
      hasAnyValues = true;
      internalValueResult.createdDate = this._createdDate;
    }
    if (this._grantedClientScopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.grantedClientScopes = this._grantedClientScopes;
    }
    if (this._grantedRealmRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.grantedRealmRoles = this._grantedRealmRoles;
    }
    if (this._lastUpdatedDate !== undefined) {
      hasAnyValues = true;
      internalValueResult.lastUpdatedDate = this._lastUpdatedDate;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clientId = undefined;
      this._createdDate = undefined;
      this._grantedClientScopes = undefined;
      this._grantedRealmRoles = undefined;
      this._lastUpdatedDate = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clientId = value.clientId;
      this._createdDate = value.createdDate;
      this._grantedClientScopes = value.grantedClientScopes;
      this._grantedRealmRoles = value.grantedRealmRoles;
      this._lastUpdatedDate = value.lastUpdatedDate;
    }
  }

  // client_id - computed: false, optional: true, required: false
  private _clientId?: string; 
  public get clientId() {
    return this.getStringAttribute('client_id');
  }
  public set clientId(value: string) {
    this._clientId = value;
  }
  public resetClientId() {
    this._clientId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientIdInput() {
    return this._clientId;
  }

  // created_date - computed: false, optional: true, required: false
  private _createdDate?: number; 
  public get createdDate() {
    return this.getNumberAttribute('created_date');
  }
  public set createdDate(value: number) {
    this._createdDate = value;
  }
  public resetCreatedDate() {
    this._createdDate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get createdDateInput() {
    return this._createdDate;
  }

  // granted_client_scopes - computed: false, optional: true, required: false
  private _grantedClientScopes?: string[]; 
  public get grantedClientScopes() {
    return this.getListAttribute('granted_client_scopes');
  }
  public set grantedClientScopes(value: string[]) {
    this._grantedClientScopes = value;
  }
  public resetGrantedClientScopes() {
    this._grantedClientScopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get grantedClientScopesInput() {
    return this._grantedClientScopes;
  }

  // granted_realm_roles - computed: false, optional: true, required: false
  private _grantedRealmRoles?: string[]; 
  public get grantedRealmRoles() {
    return this.getListAttribute('granted_realm_roles');
  }
  public set grantedRealmRoles(value: string[]) {
    this._grantedRealmRoles = value;
  }
  public resetGrantedRealmRoles() {
    this._grantedRealmRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get grantedRealmRolesInput() {
    return this._grantedRealmRoles;
  }

  // last_updated_date - computed: false, optional: true, required: false
  private _lastUpdatedDate?: number; 
  public get lastUpdatedDate() {
    return this.getNumberAttribute('last_updated_date');
  }
  public set lastUpdatedDate(value: number) {
    this._lastUpdatedDate = value;
  }
  public resetLastUpdatedDate() {
    this._lastUpdatedDate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lastUpdatedDateInput() {
    return this._lastUpdatedDate;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsentsList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsents[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsentsOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsentsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentials {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#algorithm DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#algorithm}
  */
  readonly algorithm?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#config}
  */
  readonly config?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#counter DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#counter}
  */
  readonly counter?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#created_date DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#created_date}
  */
  readonly createdDate?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#credential_data DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#credential_data}
  */
  readonly credentialData?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#device DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#device}
  */
  readonly device?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#digits DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#digits}
  */
  readonly digits?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#hash_iterations DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#hash_iterations}
  */
  readonly hashIterations?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#hashed_salted_value DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#hashed_salted_value}
  */
  readonly hashedSaltedValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#period DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#period}
  */
  readonly period?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#priority DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#salt DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#salt}
  */
  readonly salt?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#secret_data DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#secret_data}
  */
  readonly secretData?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#temporary DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#temporary}
  */
  readonly temporary?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#user_label DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#user_label}
  */
  readonly userLabel?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#value DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentialsToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    algorithm: cdktf.stringToTerraform(struct!.algorithm),
    config: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.config),
    counter: cdktf.numberToTerraform(struct!.counter),
    created_date: cdktf.numberToTerraform(struct!.createdDate),
    credential_data: cdktf.stringToTerraform(struct!.credentialData),
    device: cdktf.stringToTerraform(struct!.device),
    digits: cdktf.numberToTerraform(struct!.digits),
    hash_iterations: cdktf.numberToTerraform(struct!.hashIterations),
    hashed_salted_value: cdktf.stringToTerraform(struct!.hashedSaltedValue),
    id: cdktf.stringToTerraform(struct!.id),
    period: cdktf.numberToTerraform(struct!.period),
    priority: cdktf.numberToTerraform(struct!.priority),
    salt: cdktf.stringToTerraform(struct!.salt),
    secret_data: cdktf.stringToTerraform(struct!.secretData),
    temporary: cdktf.booleanToTerraform(struct!.temporary),
    type: cdktf.stringToTerraform(struct!.type),
    user_label: cdktf.stringToTerraform(struct!.userLabel),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentialsToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    algorithm: {
      value: cdktf.stringToHclTerraform(struct!.algorithm),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    config: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.config),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    counter: {
      value: cdktf.numberToHclTerraform(struct!.counter),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    created_date: {
      value: cdktf.numberToHclTerraform(struct!.createdDate),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    credential_data: {
      value: cdktf.stringToHclTerraform(struct!.credentialData),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device: {
      value: cdktf.stringToHclTerraform(struct!.device),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    digits: {
      value: cdktf.numberToHclTerraform(struct!.digits),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    hash_iterations: {
      value: cdktf.numberToHclTerraform(struct!.hashIterations),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    hashed_salted_value: {
      value: cdktf.stringToHclTerraform(struct!.hashedSaltedValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    period: {
      value: cdktf.numberToHclTerraform(struct!.period),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    salt: {
      value: cdktf.stringToHclTerraform(struct!.salt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_data: {
      value: cdktf.stringToHclTerraform(struct!.secretData),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    temporary: {
      value: cdktf.booleanToHclTerraform(struct!.temporary),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_label: {
      value: cdktf.stringToHclTerraform(struct!.userLabel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentialsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentials | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._algorithm !== undefined) {
      hasAnyValues = true;
      internalValueResult.algorithm = this._algorithm;
    }
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._counter !== undefined) {
      hasAnyValues = true;
      internalValueResult.counter = this._counter;
    }
    if (this._createdDate !== undefined) {
      hasAnyValues = true;
      internalValueResult.createdDate = this._createdDate;
    }
    if (this._credentialData !== undefined) {
      hasAnyValues = true;
      internalValueResult.credentialData = this._credentialData;
    }
    if (this._device !== undefined) {
      hasAnyValues = true;
      internalValueResult.device = this._device;
    }
    if (this._digits !== undefined) {
      hasAnyValues = true;
      internalValueResult.digits = this._digits;
    }
    if (this._hashIterations !== undefined) {
      hasAnyValues = true;
      internalValueResult.hashIterations = this._hashIterations;
    }
    if (this._hashedSaltedValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.hashedSaltedValue = this._hashedSaltedValue;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._period !== undefined) {
      hasAnyValues = true;
      internalValueResult.period = this._period;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._salt !== undefined) {
      hasAnyValues = true;
      internalValueResult.salt = this._salt;
    }
    if (this._secretData !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretData = this._secretData;
    }
    if (this._temporary !== undefined) {
      hasAnyValues = true;
      internalValueResult.temporary = this._temporary;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._userLabel !== undefined) {
      hasAnyValues = true;
      internalValueResult.userLabel = this._userLabel;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentials | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._algorithm = undefined;
      this._config = undefined;
      this._counter = undefined;
      this._createdDate = undefined;
      this._credentialData = undefined;
      this._device = undefined;
      this._digits = undefined;
      this._hashIterations = undefined;
      this._hashedSaltedValue = undefined;
      this._id = undefined;
      this._period = undefined;
      this._priority = undefined;
      this._salt = undefined;
      this._secretData = undefined;
      this._temporary = undefined;
      this._type = undefined;
      this._userLabel = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._algorithm = value.algorithm;
      this._config = value.config;
      this._counter = value.counter;
      this._createdDate = value.createdDate;
      this._credentialData = value.credentialData;
      this._device = value.device;
      this._digits = value.digits;
      this._hashIterations = value.hashIterations;
      this._hashedSaltedValue = value.hashedSaltedValue;
      this._id = value.id;
      this._period = value.period;
      this._priority = value.priority;
      this._salt = value.salt;
      this._secretData = value.secretData;
      this._temporary = value.temporary;
      this._type = value.type;
      this._userLabel = value.userLabel;
      this._value = value.value;
    }
  }

  // algorithm - computed: false, optional: true, required: false
  private _algorithm?: string; 
  public get algorithm() {
    return this.getStringAttribute('algorithm');
  }
  public set algorithm(value: string) {
    this._algorithm = value;
  }
  public resetAlgorithm() {
    this._algorithm = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get algorithmInput() {
    return this._algorithm;
  }

  // config - computed: false, optional: true, required: false
  private _config?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get config() {
    return this.interpolationForAttribute('config');
  }
  public set config(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // counter - computed: false, optional: true, required: false
  private _counter?: number; 
  public get counter() {
    return this.getNumberAttribute('counter');
  }
  public set counter(value: number) {
    this._counter = value;
  }
  public resetCounter() {
    this._counter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get counterInput() {
    return this._counter;
  }

  // created_date - computed: false, optional: true, required: false
  private _createdDate?: number; 
  public get createdDate() {
    return this.getNumberAttribute('created_date');
  }
  public set createdDate(value: number) {
    this._createdDate = value;
  }
  public resetCreatedDate() {
    this._createdDate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get createdDateInput() {
    return this._createdDate;
  }

  // credential_data - computed: false, optional: true, required: false
  private _credentialData?: string; 
  public get credentialData() {
    return this.getStringAttribute('credential_data');
  }
  public set credentialData(value: string) {
    this._credentialData = value;
  }
  public resetCredentialData() {
    this._credentialData = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get credentialDataInput() {
    return this._credentialData;
  }

  // device - computed: false, optional: true, required: false
  private _device?: string; 
  public get device() {
    return this.getStringAttribute('device');
  }
  public set device(value: string) {
    this._device = value;
  }
  public resetDevice() {
    this._device = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceInput() {
    return this._device;
  }

  // digits - computed: false, optional: true, required: false
  private _digits?: number; 
  public get digits() {
    return this.getNumberAttribute('digits');
  }
  public set digits(value: number) {
    this._digits = value;
  }
  public resetDigits() {
    this._digits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get digitsInput() {
    return this._digits;
  }

  // hash_iterations - computed: false, optional: true, required: false
  private _hashIterations?: number; 
  public get hashIterations() {
    return this.getNumberAttribute('hash_iterations');
  }
  public set hashIterations(value: number) {
    this._hashIterations = value;
  }
  public resetHashIterations() {
    this._hashIterations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hashIterationsInput() {
    return this._hashIterations;
  }

  // hashed_salted_value - computed: false, optional: true, required: false
  private _hashedSaltedValue?: string; 
  public get hashedSaltedValue() {
    return this.getStringAttribute('hashed_salted_value');
  }
  public set hashedSaltedValue(value: string) {
    this._hashedSaltedValue = value;
  }
  public resetHashedSaltedValue() {
    this._hashedSaltedValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hashedSaltedValueInput() {
    return this._hashedSaltedValue;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // period - computed: false, optional: true, required: false
  private _period?: number; 
  public get period() {
    return this.getNumberAttribute('period');
  }
  public set period(value: number) {
    this._period = value;
  }
  public resetPeriod() {
    this._period = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get periodInput() {
    return this._period;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // salt - computed: false, optional: true, required: false
  private _salt?: string; 
  public get salt() {
    return this.getStringAttribute('salt');
  }
  public set salt(value: string) {
    this._salt = value;
  }
  public resetSalt() {
    this._salt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get saltInput() {
    return this._salt;
  }

  // secret_data - computed: false, optional: true, required: false
  private _secretData?: string; 
  public get secretData() {
    return this.getStringAttribute('secret_data');
  }
  public set secretData(value: string) {
    this._secretData = value;
  }
  public resetSecretData() {
    this._secretData = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretDataInput() {
    return this._secretData;
  }

  // temporary - computed: false, optional: true, required: false
  private _temporary?: boolean | cdktf.IResolvable; 
  public get temporary() {
    return this.getBooleanAttribute('temporary');
  }
  public set temporary(value: boolean | cdktf.IResolvable) {
    this._temporary = value;
  }
  public resetTemporary() {
    this._temporary = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get temporaryInput() {
    return this._temporary;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // user_label - computed: false, optional: true, required: false
  private _userLabel?: string; 
  public get userLabel() {
    return this.getStringAttribute('user_label');
  }
  public set userLabel(value: string) {
    this._userLabel = value;
  }
  public resetUserLabel() {
    this._userLabel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userLabelInput() {
    return this._userLabel;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentialsList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentials[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentialsOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentialsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentities {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#identity_provider DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#identity_provider}
  */
  readonly identityProvider?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#user_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#user_id}
  */
  readonly userId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#user_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#user_name}
  */
  readonly userName?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentitiesToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentities | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    identity_provider: cdktf.stringToTerraform(struct!.identityProvider),
    user_id: cdktf.stringToTerraform(struct!.userId),
    user_name: cdktf.stringToTerraform(struct!.userName),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentitiesToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentities | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    identity_provider: {
      value: cdktf.stringToHclTerraform(struct!.identityProvider),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_id: {
      value: cdktf.stringToHclTerraform(struct!.userId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_name: {
      value: cdktf.stringToHclTerraform(struct!.userName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentitiesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentities | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._identityProvider !== undefined) {
      hasAnyValues = true;
      internalValueResult.identityProvider = this._identityProvider;
    }
    if (this._userId !== undefined) {
      hasAnyValues = true;
      internalValueResult.userId = this._userId;
    }
    if (this._userName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userName = this._userName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentities | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._identityProvider = undefined;
      this._userId = undefined;
      this._userName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._identityProvider = value.identityProvider;
      this._userId = value.userId;
      this._userName = value.userName;
    }
  }

  // identity_provider - computed: false, optional: true, required: false
  private _identityProvider?: string; 
  public get identityProvider() {
    return this.getStringAttribute('identity_provider');
  }
  public set identityProvider(value: string) {
    this._identityProvider = value;
  }
  public resetIdentityProvider() {
    this._identityProvider = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get identityProviderInput() {
    return this._identityProvider;
  }

  // user_id - computed: false, optional: true, required: false
  private _userId?: string; 
  public get userId() {
    return this.getStringAttribute('user_id');
  }
  public set userId(value: string) {
    this._userId = value;
  }
  public resetUserId() {
    this._userId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userIdInput() {
    return this._userId;
  }

  // user_name - computed: false, optional: true, required: false
  private _userName?: string; 
  public get userName() {
    return this.getStringAttribute('user_name');
  }
  public set userName(value: string) {
    this._userName = value;
  }
  public resetUserName() {
    this._userName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userNameInput() {
    return this._userName;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentitiesList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentities[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentitiesOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentitiesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinks {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#social_provider DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#social_provider}
  */
  readonly socialProvider?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#social_user_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#social_user_id}
  */
  readonly socialUserId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#social_username DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#social_username}
  */
  readonly socialUsername?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinksToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    social_provider: cdktf.stringToTerraform(struct!.socialProvider),
    social_user_id: cdktf.stringToTerraform(struct!.socialUserId),
    social_username: cdktf.stringToTerraform(struct!.socialUsername),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinksToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    social_provider: {
      value: cdktf.stringToHclTerraform(struct!.socialProvider),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    social_user_id: {
      value: cdktf.stringToHclTerraform(struct!.socialUserId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    social_username: {
      value: cdktf.stringToHclTerraform(struct!.socialUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinksOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinks | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._socialProvider !== undefined) {
      hasAnyValues = true;
      internalValueResult.socialProvider = this._socialProvider;
    }
    if (this._socialUserId !== undefined) {
      hasAnyValues = true;
      internalValueResult.socialUserId = this._socialUserId;
    }
    if (this._socialUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.socialUsername = this._socialUsername;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinks | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._socialProvider = undefined;
      this._socialUserId = undefined;
      this._socialUsername = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._socialProvider = value.socialProvider;
      this._socialUserId = value.socialUserId;
      this._socialUsername = value.socialUsername;
    }
  }

  // social_provider - computed: false, optional: true, required: false
  private _socialProvider?: string; 
  public get socialProvider() {
    return this.getStringAttribute('social_provider');
  }
  public set socialProvider(value: string) {
    this._socialProvider = value;
  }
  public resetSocialProvider() {
    this._socialProvider = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get socialProviderInput() {
    return this._socialProvider;
  }

  // social_user_id - computed: false, optional: true, required: false
  private _socialUserId?: string; 
  public get socialUserId() {
    return this.getStringAttribute('social_user_id');
  }
  public set socialUserId(value: string) {
    this._socialUserId = value;
  }
  public resetSocialUserId() {
    this._socialUserId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get socialUserIdInput() {
    return this._socialUserId;
  }

  // social_username - computed: false, optional: true, required: false
  private _socialUsername?: string; 
  public get socialUsername() {
    return this.getStringAttribute('social_username');
  }
  public set socialUsername(value: string) {
    this._socialUsername = value;
  }
  public resetSocialUsername() {
    this._socialUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get socialUsernameInput() {
    return this._socialUsername;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinksList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinks[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinksOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinksOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#access DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#access}
  */
  readonly access?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#application_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#application_roles}
  */
  readonly applicationRoles?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_consents DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_consents}
  */
  readonly clientConsents?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsents[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_roles}
  */
  readonly clientRoles?: { [key: string]: string[] } | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#created_timestamp DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#created_timestamp}
  */
  readonly createdTimestamp?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#credentials DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#credentials}
  */
  readonly credentials?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentials[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#disableable_credential_types DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#disableable_credential_types}
  */
  readonly disableableCredentialTypes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#email DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#email}
  */
  readonly email?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#email_verified DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#email_verified}
  */
  readonly emailVerified?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#federated_identities DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#federated_identities}
  */
  readonly federatedIdentities?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentities[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#federation_link DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#federation_link}
  */
  readonly federationLink?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#first_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#first_name}
  */
  readonly firstName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#groups DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#groups}
  */
  readonly groups?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#last_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#last_name}
  */
  readonly lastName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#not_before DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#not_before}
  */
  readonly notBefore?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#origin DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#origin}
  */
  readonly origin?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#realm_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#realm_roles}
  */
  readonly realmRoles?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#required_actions DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#required_actions}
  */
  readonly requiredActions?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#self DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#self}
  */
  readonly selfAttribute?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#service_account_client_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#service_account_client_id}
  */
  readonly serviceAccountClientId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#social_links DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#social_links}
  */
  readonly socialLinks?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinks[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#totp DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#totp}
  */
  readonly totp?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#username DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#username}
  */
  readonly username?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.access),
    application_roles: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.applicationRoles),
    attributes: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.attributes),
    client_consents: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsentsToTerraform, false)(struct!.clientConsents),
    client_roles: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.clientRoles),
    created_timestamp: cdktf.numberToTerraform(struct!.createdTimestamp),
    credentials: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentialsToTerraform, false)(struct!.credentials),
    disableable_credential_types: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.disableableCredentialTypes),
    email: cdktf.stringToTerraform(struct!.email),
    email_verified: cdktf.booleanToTerraform(struct!.emailVerified),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    federated_identities: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentitiesToTerraform, false)(struct!.federatedIdentities),
    federation_link: cdktf.stringToTerraform(struct!.federationLink),
    first_name: cdktf.stringToTerraform(struct!.firstName),
    groups: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.groups),
    id: cdktf.stringToTerraform(struct!.id),
    last_name: cdktf.stringToTerraform(struct!.lastName),
    not_before: cdktf.numberToTerraform(struct!.notBefore),
    origin: cdktf.stringToTerraform(struct!.origin),
    realm_roles: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.realmRoles),
    required_actions: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.requiredActions),
    self: cdktf.stringToTerraform(struct!.selfAttribute),
    service_account_client_id: cdktf.stringToTerraform(struct!.serviceAccountClientId),
    social_links: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinksToTerraform, false)(struct!.socialLinks),
    totp: cdktf.booleanToTerraform(struct!.totp),
    username: cdktf.stringToTerraform(struct!.username),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.access),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    application_roles: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.applicationRoles),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    client_consents: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsentsToHclTerraform, false)(struct!.clientConsents),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsentsList",
    },
    client_roles: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.clientRoles),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
    created_timestamp: {
      value: cdktf.numberToHclTerraform(struct!.createdTimestamp),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    credentials: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentialsToHclTerraform, false)(struct!.credentials),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentialsList",
    },
    disableable_credential_types: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.disableableCredentialTypes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    email: {
      value: cdktf.stringToHclTerraform(struct!.email),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    email_verified: {
      value: cdktf.booleanToHclTerraform(struct!.emailVerified),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    federated_identities: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentitiesToHclTerraform, false)(struct!.federatedIdentities),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentitiesList",
    },
    federation_link: {
      value: cdktf.stringToHclTerraform(struct!.federationLink),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    first_name: {
      value: cdktf.stringToHclTerraform(struct!.firstName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    groups: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.groups),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    last_name: {
      value: cdktf.stringToHclTerraform(struct!.lastName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    not_before: {
      value: cdktf.numberToHclTerraform(struct!.notBefore),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    origin: {
      value: cdktf.stringToHclTerraform(struct!.origin),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    realm_roles: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.realmRoles),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    required_actions: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.requiredActions),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    self: {
      value: cdktf.stringToHclTerraform(struct!.selfAttribute),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_account_client_id: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountClientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    social_links: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinksToHclTerraform, false)(struct!.socialLinks),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinksList",
    },
    totp: {
      value: cdktf.booleanToHclTerraform(struct!.totp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    username: {
      value: cdktf.stringToHclTerraform(struct!.username),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._access !== undefined) {
      hasAnyValues = true;
      internalValueResult.access = this._access;
    }
    if (this._applicationRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.applicationRoles = this._applicationRoles;
    }
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._clientConsents?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientConsents = this._clientConsents?.internalValue;
    }
    if (this._clientRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientRoles = this._clientRoles;
    }
    if (this._createdTimestamp !== undefined) {
      hasAnyValues = true;
      internalValueResult.createdTimestamp = this._createdTimestamp;
    }
    if (this._credentials?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.credentials = this._credentials?.internalValue;
    }
    if (this._disableableCredentialTypes !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableableCredentialTypes = this._disableableCredentialTypes;
    }
    if (this._email !== undefined) {
      hasAnyValues = true;
      internalValueResult.email = this._email;
    }
    if (this._emailVerified !== undefined) {
      hasAnyValues = true;
      internalValueResult.emailVerified = this._emailVerified;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._federatedIdentities?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.federatedIdentities = this._federatedIdentities?.internalValue;
    }
    if (this._federationLink !== undefined) {
      hasAnyValues = true;
      internalValueResult.federationLink = this._federationLink;
    }
    if (this._firstName !== undefined) {
      hasAnyValues = true;
      internalValueResult.firstName = this._firstName;
    }
    if (this._groups !== undefined) {
      hasAnyValues = true;
      internalValueResult.groups = this._groups;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._lastName !== undefined) {
      hasAnyValues = true;
      internalValueResult.lastName = this._lastName;
    }
    if (this._notBefore !== undefined) {
      hasAnyValues = true;
      internalValueResult.notBefore = this._notBefore;
    }
    if (this._origin !== undefined) {
      hasAnyValues = true;
      internalValueResult.origin = this._origin;
    }
    if (this._realmRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.realmRoles = this._realmRoles;
    }
    if (this._requiredActions !== undefined) {
      hasAnyValues = true;
      internalValueResult.requiredActions = this._requiredActions;
    }
    if (this._self !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfAttribute = this._self;
    }
    if (this._serviceAccountClientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountClientId = this._serviceAccountClientId;
    }
    if (this._socialLinks?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.socialLinks = this._socialLinks?.internalValue;
    }
    if (this._totp !== undefined) {
      hasAnyValues = true;
      internalValueResult.totp = this._totp;
    }
    if (this._username !== undefined) {
      hasAnyValues = true;
      internalValueResult.username = this._username;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._access = undefined;
      this._applicationRoles = undefined;
      this._attributes = undefined;
      this._clientConsents.internalValue = undefined;
      this._clientRoles = undefined;
      this._createdTimestamp = undefined;
      this._credentials.internalValue = undefined;
      this._disableableCredentialTypes = undefined;
      this._email = undefined;
      this._emailVerified = undefined;
      this._enabled = undefined;
      this._federatedIdentities.internalValue = undefined;
      this._federationLink = undefined;
      this._firstName = undefined;
      this._groups = undefined;
      this._id = undefined;
      this._lastName = undefined;
      this._notBefore = undefined;
      this._origin = undefined;
      this._realmRoles = undefined;
      this._requiredActions = undefined;
      this._self = undefined;
      this._serviceAccountClientId = undefined;
      this._socialLinks.internalValue = undefined;
      this._totp = undefined;
      this._username = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._access = value.access;
      this._applicationRoles = value.applicationRoles;
      this._attributes = value.attributes;
      this._clientConsents.internalValue = value.clientConsents;
      this._clientRoles = value.clientRoles;
      this._createdTimestamp = value.createdTimestamp;
      this._credentials.internalValue = value.credentials;
      this._disableableCredentialTypes = value.disableableCredentialTypes;
      this._email = value.email;
      this._emailVerified = value.emailVerified;
      this._enabled = value.enabled;
      this._federatedIdentities.internalValue = value.federatedIdentities;
      this._federationLink = value.federationLink;
      this._firstName = value.firstName;
      this._groups = value.groups;
      this._id = value.id;
      this._lastName = value.lastName;
      this._notBefore = value.notBefore;
      this._origin = value.origin;
      this._realmRoles = value.realmRoles;
      this._requiredActions = value.requiredActions;
      this._self = value.selfAttribute;
      this._serviceAccountClientId = value.serviceAccountClientId;
      this._socialLinks.internalValue = value.socialLinks;
      this._totp = value.totp;
      this._username = value.username;
    }
  }

  // access - computed: false, optional: true, required: false
  private _access?: { [key: string]: string }; 
  public get access() {
    return this.getStringMapAttribute('access');
  }
  public set access(value: { [key: string]: string }) {
    this._access = value;
  }
  public resetAccess() {
    this._access = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessInput() {
    return this._access;
  }

  // application_roles - computed: false, optional: true, required: false
  private _applicationRoles?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get applicationRoles() {
    return this.interpolationForAttribute('application_roles');
  }
  public set applicationRoles(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._applicationRoles = value;
  }
  public resetApplicationRoles() {
    this._applicationRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get applicationRolesInput() {
    return this._applicationRoles;
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get attributes() {
    return this.interpolationForAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // client_consents - computed: false, optional: true, required: false
  private _clientConsents = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsentsList(this, "client_consents", false);
  public get clientConsents() {
    return this._clientConsents;
  }
  public putClientConsents(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersClientConsents[] | cdktf.IResolvable) {
    this._clientConsents.internalValue = value;
  }
  public resetClientConsents() {
    this._clientConsents.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientConsentsInput() {
    return this._clientConsents.internalValue;
  }

  // client_roles - computed: false, optional: true, required: false
  private _clientRoles?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get clientRoles() {
    return this.interpolationForAttribute('client_roles');
  }
  public set clientRoles(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._clientRoles = value;
  }
  public resetClientRoles() {
    this._clientRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientRolesInput() {
    return this._clientRoles;
  }

  // created_timestamp - computed: false, optional: true, required: false
  private _createdTimestamp?: number; 
  public get createdTimestamp() {
    return this.getNumberAttribute('created_timestamp');
  }
  public set createdTimestamp(value: number) {
    this._createdTimestamp = value;
  }
  public resetCreatedTimestamp() {
    this._createdTimestamp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get createdTimestampInput() {
    return this._createdTimestamp;
  }

  // credentials - computed: false, optional: true, required: false
  private _credentials = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentialsList(this, "credentials", false);
  public get credentials() {
    return this._credentials;
  }
  public putCredentials(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersCredentials[] | cdktf.IResolvable) {
    this._credentials.internalValue = value;
  }
  public resetCredentials() {
    this._credentials.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get credentialsInput() {
    return this._credentials.internalValue;
  }

  // disableable_credential_types - computed: false, optional: true, required: false
  private _disableableCredentialTypes?: string[]; 
  public get disableableCredentialTypes() {
    return this.getListAttribute('disableable_credential_types');
  }
  public set disableableCredentialTypes(value: string[]) {
    this._disableableCredentialTypes = value;
  }
  public resetDisableableCredentialTypes() {
    this._disableableCredentialTypes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableableCredentialTypesInput() {
    return this._disableableCredentialTypes;
  }

  // email - computed: false, optional: true, required: false
  private _email?: string; 
  public get email() {
    return this.getStringAttribute('email');
  }
  public set email(value: string) {
    this._email = value;
  }
  public resetEmail() {
    this._email = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emailInput() {
    return this._email;
  }

  // email_verified - computed: false, optional: true, required: false
  private _emailVerified?: boolean | cdktf.IResolvable; 
  public get emailVerified() {
    return this.getBooleanAttribute('email_verified');
  }
  public set emailVerified(value: boolean | cdktf.IResolvable) {
    this._emailVerified = value;
  }
  public resetEmailVerified() {
    this._emailVerified = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emailVerifiedInput() {
    return this._emailVerified;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // federated_identities - computed: false, optional: true, required: false
  private _federatedIdentities = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentitiesList(this, "federated_identities", false);
  public get federatedIdentities() {
    return this._federatedIdentities;
  }
  public putFederatedIdentities(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersFederatedIdentities[] | cdktf.IResolvable) {
    this._federatedIdentities.internalValue = value;
  }
  public resetFederatedIdentities() {
    this._federatedIdentities.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get federatedIdentitiesInput() {
    return this._federatedIdentities.internalValue;
  }

  // federation_link - computed: false, optional: true, required: false
  private _federationLink?: string; 
  public get federationLink() {
    return this.getStringAttribute('federation_link');
  }
  public set federationLink(value: string) {
    this._federationLink = value;
  }
  public resetFederationLink() {
    this._federationLink = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get federationLinkInput() {
    return this._federationLink;
  }

  // first_name - computed: false, optional: true, required: false
  private _firstName?: string; 
  public get firstName() {
    return this.getStringAttribute('first_name');
  }
  public set firstName(value: string) {
    this._firstName = value;
  }
  public resetFirstName() {
    this._firstName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get firstNameInput() {
    return this._firstName;
  }

  // groups - computed: false, optional: true, required: false
  private _groups?: string[]; 
  public get groups() {
    return this.getListAttribute('groups');
  }
  public set groups(value: string[]) {
    this._groups = value;
  }
  public resetGroups() {
    this._groups = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupsInput() {
    return this._groups;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // last_name - computed: false, optional: true, required: false
  private _lastName?: string; 
  public get lastName() {
    return this.getStringAttribute('last_name');
  }
  public set lastName(value: string) {
    this._lastName = value;
  }
  public resetLastName() {
    this._lastName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lastNameInput() {
    return this._lastName;
  }

  // not_before - computed: false, optional: true, required: false
  private _notBefore?: number; 
  public get notBefore() {
    return this.getNumberAttribute('not_before');
  }
  public set notBefore(value: number) {
    this._notBefore = value;
  }
  public resetNotBefore() {
    this._notBefore = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get notBeforeInput() {
    return this._notBefore;
  }

  // origin - computed: false, optional: true, required: false
  private _origin?: string; 
  public get origin() {
    return this.getStringAttribute('origin');
  }
  public set origin(value: string) {
    this._origin = value;
  }
  public resetOrigin() {
    this._origin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get originInput() {
    return this._origin;
  }

  // realm_roles - computed: false, optional: true, required: false
  private _realmRoles?: string[]; 
  public get realmRoles() {
    return this.getListAttribute('realm_roles');
  }
  public set realmRoles(value: string[]) {
    this._realmRoles = value;
  }
  public resetRealmRoles() {
    this._realmRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get realmRolesInput() {
    return this._realmRoles;
  }

  // required_actions - computed: false, optional: true, required: false
  private _requiredActions?: string[]; 
  public get requiredActions() {
    return this.getListAttribute('required_actions');
  }
  public set requiredActions(value: string[]) {
    this._requiredActions = value;
  }
  public resetRequiredActions() {
    this._requiredActions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredActionsInput() {
    return this._requiredActions;
  }

  // self - computed: false, optional: true, required: false
  private _self?: string; 
  public get selfAttribute() {
    return this.getStringAttribute('self');
  }
  public set selfAttribute(value: string) {
    this._self = value;
  }
  public resetSelfAttribute() {
    this._self = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfAttributeInput() {
    return this._self;
  }

  // service_account_client_id - computed: false, optional: true, required: false
  private _serviceAccountClientId?: string; 
  public get serviceAccountClientId() {
    return this.getStringAttribute('service_account_client_id');
  }
  public set serviceAccountClientId(value: string) {
    this._serviceAccountClientId = value;
  }
  public resetServiceAccountClientId() {
    this._serviceAccountClientId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountClientIdInput() {
    return this._serviceAccountClientId;
  }

  // social_links - computed: false, optional: true, required: false
  private _socialLinks = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinksList(this, "social_links", false);
  public get socialLinks() {
    return this._socialLinks;
  }
  public putSocialLinks(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersSocialLinks[] | cdktf.IResolvable) {
    this._socialLinks.internalValue = value;
  }
  public resetSocialLinks() {
    this._socialLinks.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get socialLinksInput() {
    return this._socialLinks.internalValue;
  }

  // totp - computed: false, optional: true, required: false
  private _totp?: boolean | cdktf.IResolvable; 
  public get totp() {
    return this.getBooleanAttribute('totp');
  }
  public set totp(value: boolean | cdktf.IResolvable) {
    this._totp = value;
  }
  public resetTotp() {
    this._totp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get totpInput() {
    return this._totp;
  }

  // username - computed: false, optional: true, required: false
  private _username?: string; 
  public get username() {
    return this.getStringAttribute('username');
  }
  public set username(value: string) {
    this._username = value;
  }
  public resetUsername() {
    this._username = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usernameInput() {
    return this._username;
  }
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersList extends cdktf.ComplexList {
  public internalValue? : DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersOutputReference {
    return new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#access_code_lifespan DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#access_code_lifespan}
  */
  readonly accessCodeLifespan?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#access_code_lifespan_login DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#access_code_lifespan_login}
  */
  readonly accessCodeLifespanLogin?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#access_code_lifespan_user_action DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#access_code_lifespan_user_action}
  */
  readonly accessCodeLifespanUserAction?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#access_token_lifespan DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#access_token_lifespan}
  */
  readonly accessTokenLifespan?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#access_token_lifespan_for_implicit_flow DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#access_token_lifespan_for_implicit_flow}
  */
  readonly accessTokenLifespanForImplicitFlow?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#account_theme DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#account_theme}
  */
  readonly accountTheme?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#action_token_generated_by_admin_lifespan DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#action_token_generated_by_admin_lifespan}
  */
  readonly actionTokenGeneratedByAdminLifespan?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#action_token_generated_by_user_lifespan DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#action_token_generated_by_user_lifespan}
  */
  readonly actionTokenGeneratedByUserLifespan?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#admin_events_details_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#admin_events_details_enabled}
  */
  readonly adminEventsDetailsEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#admin_events_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#admin_events_enabled}
  */
  readonly adminEventsEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#admin_theme DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#admin_theme}
  */
  readonly adminTheme?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#application_scope_mappings DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#application_scope_mappings}
  */
  readonly applicationScopeMappings?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#applications DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#applications}
  */
  readonly applications?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplications[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#attributes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#attributes}
  */
  readonly attributes?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authentication_flows DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authentication_flows}
  */
  readonly authenticationFlows?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlows[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#authenticator_config DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#authenticator_config}
  */
  readonly authenticatorConfig?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfig[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#browser_flow DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#browser_flow}
  */
  readonly browserFlow?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#browser_security_headers DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#browser_security_headers}
  */
  readonly browserSecurityHeaders?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#brute_force_protected DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#brute_force_protected}
  */
  readonly bruteForceProtected?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#certificate DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#certificate}
  */
  readonly certificate?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_authentication_flow DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_authentication_flow}
  */
  readonly clientAuthenticationFlow?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_offline_session_idle_timeout DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_offline_session_idle_timeout}
  */
  readonly clientOfflineSessionIdleTimeout?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_offline_session_max_lifespan DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_offline_session_max_lifespan}
  */
  readonly clientOfflineSessionMaxLifespan?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_policies DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_policies}
  */
  readonly clientPolicies?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_profiles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_profiles}
  */
  readonly clientProfiles?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_scope_mappings DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_scope_mappings}
  */
  readonly clientScopeMappings?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_scopes}
  */
  readonly clientScopes?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopes[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_session_idle_timeout DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_session_idle_timeout}
  */
  readonly clientSessionIdleTimeout?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_session_max_lifespan DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_session_max_lifespan}
  */
  readonly clientSessionMaxLifespan?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#client_templates DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#client_templates}
  */
  readonly clientTemplates?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplates[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#clients DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#clients}
  */
  readonly clients?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClients[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#code_secret DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#code_secret}
  */
  readonly codeSecret?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#components DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#components}
  */
  readonly components?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#default_default_client_scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#default_default_client_scopes}
  */
  readonly defaultDefaultClientScopes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#default_groups DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#default_groups}
  */
  readonly defaultGroups?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#default_locale DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#default_locale}
  */
  readonly defaultLocale?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#default_optional_client_scopes DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#default_optional_client_scopes}
  */
  readonly defaultOptionalClientScopes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#default_role DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#default_role}
  */
  readonly defaultRole?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRole;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#default_roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#default_roles}
  */
  readonly defaultRoles?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#default_signature_algorithm DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#default_signature_algorithm}
  */
  readonly defaultSignatureAlgorithm?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#direct_grant_flow DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#direct_grant_flow}
  */
  readonly directGrantFlow?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name}
  */
  readonly displayName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#display_name_html DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#display_name_html}
  */
  readonly displayNameHtml?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#docker_authentication_flow DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#docker_authentication_flow}
  */
  readonly dockerAuthenticationFlow?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#duplicate_emails_allowed DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#duplicate_emails_allowed}
  */
  readonly duplicateEmailsAllowed?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#edit_username_allowed DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#edit_username_allowed}
  */
  readonly editUsernameAllowed?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#email_theme DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#email_theme}
  */
  readonly emailTheme?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#enabled_event_types DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#enabled_event_types}
  */
  readonly enabledEventTypes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#events_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#events_enabled}
  */
  readonly eventsEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#events_expiration DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#events_expiration}
  */
  readonly eventsExpiration?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#events_listeners DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#events_listeners}
  */
  readonly eventsListeners?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#failure_factor DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#failure_factor}
  */
  readonly failureFactor?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#federated_users DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#federated_users}
  */
  readonly federatedUsers?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#groups DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#groups}
  */
  readonly groups?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroups[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#identity_provider_mappers DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#identity_provider_mappers}
  */
  readonly identityProviderMappers?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#identity_providers DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#identity_providers}
  */
  readonly identityProviders?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#internationalization_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#internationalization_enabled}
  */
  readonly internationalizationEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#keycloak_version DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#keycloak_version}
  */
  readonly keycloakVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#login_theme DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#login_theme}
  */
  readonly loginTheme?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#login_with_email_allowed DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#login_with_email_allowed}
  */
  readonly loginWithEmailAllowed?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#max_delta_time_seconds DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#max_delta_time_seconds}
  */
  readonly maxDeltaTimeSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#max_failure_wait_seconds DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#max_failure_wait_seconds}
  */
  readonly maxFailureWaitSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#minimum_quick_login_wait_seconds DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#minimum_quick_login_wait_seconds}
  */
  readonly minimumQuickLoginWaitSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#not_before DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#not_before}
  */
  readonly notBefore?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#oauth2_device_code_lifespan DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#oauth2_device_code_lifespan}
  */
  readonly oauth2DeviceCodeLifespan?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#oauth2_device_polling_interval DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#oauth2_device_polling_interval}
  */
  readonly oauth2DevicePollingInterval?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#oauth_clients DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#oauth_clients}
  */
  readonly oauthClients?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClients[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#offline_session_idle_timeout DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#offline_session_idle_timeout}
  */
  readonly offlineSessionIdleTimeout?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#offline_session_max_lifespan DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#offline_session_max_lifespan}
  */
  readonly offlineSessionMaxLifespan?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#offline_session_max_lifespan_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#offline_session_max_lifespan_enabled}
  */
  readonly offlineSessionMaxLifespanEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#otp_policy_algorithm DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#otp_policy_algorithm}
  */
  readonly otpPolicyAlgorithm?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#otp_policy_digits DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#otp_policy_digits}
  */
  readonly otpPolicyDigits?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#otp_policy_initial_counter DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#otp_policy_initial_counter}
  */
  readonly otpPolicyInitialCounter?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#otp_policy_look_ahead_window DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#otp_policy_look_ahead_window}
  */
  readonly otpPolicyLookAheadWindow?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#otp_policy_period DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#otp_policy_period}
  */
  readonly otpPolicyPeriod?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#otp_policy_type DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#otp_policy_type}
  */
  readonly otpPolicyType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#otp_supported_applications DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#otp_supported_applications}
  */
  readonly otpSupportedApplications?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#password_credential_grant_allowed DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#password_credential_grant_allowed}
  */
  readonly passwordCredentialGrantAllowed?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#password_policy DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#password_policy}
  */
  readonly passwordPolicy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#permanent_lockout DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#permanent_lockout}
  */
  readonly permanentLockout?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#private_key DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#private_key}
  */
  readonly privateKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#protocol_mappers DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#protocol_mappers}
  */
  readonly protocolMappers?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#public_key DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#public_key}
  */
  readonly publicKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#quick_login_check_milli_seconds DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#quick_login_check_milli_seconds}
  */
  readonly quickLoginCheckMilliSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#realm DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#realm}
  */
  readonly realm?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#realm_cache_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#realm_cache_enabled}
  */
  readonly realmCacheEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#refresh_token_max_reuse DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#refresh_token_max_reuse}
  */
  readonly refreshTokenMaxReuse?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#registration_allowed DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#registration_allowed}
  */
  readonly registrationAllowed?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#registration_email_as_username DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#registration_email_as_username}
  */
  readonly registrationEmailAsUsername?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#registration_flow DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#registration_flow}
  */
  readonly registrationFlow?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#remember_me DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#remember_me}
  */
  readonly rememberMe?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#required_actions DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#required_actions}
  */
  readonly requiredActions?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#required_credentials DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#required_credentials}
  */
  readonly requiredCredentials?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#reset_credentials_flow DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#reset_credentials_flow}
  */
  readonly resetCredentialsFlow?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#reset_password_allowed DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#reset_password_allowed}
  */
  readonly resetPasswordAllowed?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#revoke_refresh_token DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#revoke_refresh_token}
  */
  readonly revokeRefreshToken?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#roles DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#roles}
  */
  readonly roles?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRoles;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#scope_mappings DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#scope_mappings}
  */
  readonly scopeMappings?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappings[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#smtp_server DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#smtp_server}
  */
  readonly smtpServer?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#social DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#social}
  */
  readonly social?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#social_providers DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#social_providers}
  */
  readonly socialProviders?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#ssl_required DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#ssl_required}
  */
  readonly sslRequired?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#sso_session_idle_timeout DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#sso_session_idle_timeout}
  */
  readonly ssoSessionIdleTimeout?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#sso_session_idle_timeout_remember_me DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#sso_session_idle_timeout_remember_me}
  */
  readonly ssoSessionIdleTimeoutRememberMe?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#sso_session_max_lifespan DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#sso_session_max_lifespan}
  */
  readonly ssoSessionMaxLifespan?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#sso_session_max_lifespan_remember_me DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#sso_session_max_lifespan_remember_me}
  */
  readonly ssoSessionMaxLifespanRememberMe?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#supported_locales DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#supported_locales}
  */
  readonly supportedLocales?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#update_profile_on_initial_social_login DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#update_profile_on_initial_social_login}
  */
  readonly updateProfileOnInitialSocialLogin?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#user_cache_enabled DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#user_cache_enabled}
  */
  readonly userCacheEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#user_federation_mappers DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#user_federation_mappers}
  */
  readonly userFederationMappers?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#user_federation_providers DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#user_federation_providers}
  */
  readonly userFederationProviders?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProviders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#user_managed_access_allowed DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#user_managed_access_allowed}
  */
  readonly userManagedAccessAllowed?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#users DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#users}
  */
  readonly users?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#verify_email DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#verify_email}
  */
  readonly verifyEmail?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#wait_increment_seconds DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#wait_increment_seconds}
  */
  readonly waitIncrementSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_acceptable_aaguids DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_acceptable_aaguids}
  */
  readonly webAuthnPolicyAcceptableAaguids?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_attestation_conveyance_preference DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_attestation_conveyance_preference}
  */
  readonly webAuthnPolicyAttestationConveyancePreference?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_authenticator_attachment DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_authenticator_attachment}
  */
  readonly webAuthnPolicyAuthenticatorAttachment?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_avoid_same_authenticator_register DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_avoid_same_authenticator_register}
  */
  readonly webAuthnPolicyAvoidSameAuthenticatorRegister?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_create_timeout DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_create_timeout}
  */
  readonly webAuthnPolicyCreateTimeout?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_passwordless_acceptable_aaguids DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_passwordless_acceptable_aaguids}
  */
  readonly webAuthnPolicyPasswordlessAcceptableAaguids?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_passwordless_attestation_conveyance_preference DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_passwordless_attestation_conveyance_preference}
  */
  readonly webAuthnPolicyPasswordlessAttestationConveyancePreference?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_passwordless_authenticator_attachment DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_passwordless_authenticator_attachment}
  */
  readonly webAuthnPolicyPasswordlessAuthenticatorAttachment?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_passwordless_avoid_same_authenticator_register DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_passwordless_avoid_same_authenticator_register}
  */
  readonly webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_passwordless_create_timeout DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_passwordless_create_timeout}
  */
  readonly webAuthnPolicyPasswordlessCreateTimeout?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_passwordless_require_resident_key DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_passwordless_require_resident_key}
  */
  readonly webAuthnPolicyPasswordlessRequireResidentKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_passwordless_rp_entity_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_passwordless_rp_entity_name}
  */
  readonly webAuthnPolicyPasswordlessRpEntityName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_passwordless_rp_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_passwordless_rp_id}
  */
  readonly webAuthnPolicyPasswordlessRpId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_passwordless_signature_algorithms DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_passwordless_signature_algorithms}
  */
  readonly webAuthnPolicyPasswordlessSignatureAlgorithms?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_passwordless_user_verification_requirement DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_passwordless_user_verification_requirement}
  */
  readonly webAuthnPolicyPasswordlessUserVerificationRequirement?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_require_resident_key DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_require_resident_key}
  */
  readonly webAuthnPolicyRequireResidentKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_rp_entity_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_rp_entity_name}
  */
  readonly webAuthnPolicyRpEntityName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_rp_id DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_rp_id}
  */
  readonly webAuthnPolicyRpId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_signature_algorithms DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_signature_algorithms}
  */
  readonly webAuthnPolicySignatureAlgorithms?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#web_authn_policy_user_verification_requirement DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#web_authn_policy_user_verification_requirement}
  */
  readonly webAuthnPolicyUserVerificationRequirement?: string;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_code_lifespan: cdktf.numberToTerraform(struct!.accessCodeLifespan),
    access_code_lifespan_login: cdktf.numberToTerraform(struct!.accessCodeLifespanLogin),
    access_code_lifespan_user_action: cdktf.numberToTerraform(struct!.accessCodeLifespanUserAction),
    access_token_lifespan: cdktf.numberToTerraform(struct!.accessTokenLifespan),
    access_token_lifespan_for_implicit_flow: cdktf.numberToTerraform(struct!.accessTokenLifespanForImplicitFlow),
    account_theme: cdktf.stringToTerraform(struct!.accountTheme),
    action_token_generated_by_admin_lifespan: cdktf.numberToTerraform(struct!.actionTokenGeneratedByAdminLifespan),
    action_token_generated_by_user_lifespan: cdktf.numberToTerraform(struct!.actionTokenGeneratedByUserLifespan),
    admin_events_details_enabled: cdktf.booleanToTerraform(struct!.adminEventsDetailsEnabled),
    admin_events_enabled: cdktf.booleanToTerraform(struct!.adminEventsEnabled),
    admin_theme: cdktf.stringToTerraform(struct!.adminTheme),
    application_scope_mappings: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.applicationScopeMappings),
    applications: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsToTerraform, false)(struct!.applications),
    attributes: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.attributes),
    authentication_flows: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsToTerraform, false)(struct!.authenticationFlows),
    authenticator_config: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfigToTerraform, false)(struct!.authenticatorConfig),
    browser_flow: cdktf.stringToTerraform(struct!.browserFlow),
    browser_security_headers: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.browserSecurityHeaders),
    brute_force_protected: cdktf.booleanToTerraform(struct!.bruteForceProtected),
    certificate: cdktf.stringToTerraform(struct!.certificate),
    client_authentication_flow: cdktf.stringToTerraform(struct!.clientAuthenticationFlow),
    client_offline_session_idle_timeout: cdktf.numberToTerraform(struct!.clientOfflineSessionIdleTimeout),
    client_offline_session_max_lifespan: cdktf.numberToTerraform(struct!.clientOfflineSessionMaxLifespan),
    client_policies: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.clientPolicies),
    client_profiles: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.clientProfiles),
    client_scope_mappings: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.clientScopeMappings),
    client_scopes: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesToTerraform, false)(struct!.clientScopes),
    client_session_idle_timeout: cdktf.numberToTerraform(struct!.clientSessionIdleTimeout),
    client_session_max_lifespan: cdktf.numberToTerraform(struct!.clientSessionMaxLifespan),
    client_templates: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesToTerraform, false)(struct!.clientTemplates),
    clients: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsToTerraform, false)(struct!.clients),
    code_secret: cdktf.stringToTerraform(struct!.codeSecret),
    components: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.components),
    default_default_client_scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.defaultDefaultClientScopes),
    default_groups: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.defaultGroups),
    default_locale: cdktf.stringToTerraform(struct!.defaultLocale),
    default_optional_client_scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.defaultOptionalClientScopes),
    default_role: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleToTerraform(struct!.defaultRole),
    default_roles: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.defaultRoles),
    default_signature_algorithm: cdktf.stringToTerraform(struct!.defaultSignatureAlgorithm),
    direct_grant_flow: cdktf.stringToTerraform(struct!.directGrantFlow),
    display_name: cdktf.stringToTerraform(struct!.displayName),
    display_name_html: cdktf.stringToTerraform(struct!.displayNameHtml),
    docker_authentication_flow: cdktf.stringToTerraform(struct!.dockerAuthenticationFlow),
    duplicate_emails_allowed: cdktf.booleanToTerraform(struct!.duplicateEmailsAllowed),
    edit_username_allowed: cdktf.booleanToTerraform(struct!.editUsernameAllowed),
    email_theme: cdktf.stringToTerraform(struct!.emailTheme),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    enabled_event_types: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.enabledEventTypes),
    events_enabled: cdktf.booleanToTerraform(struct!.eventsEnabled),
    events_expiration: cdktf.numberToTerraform(struct!.eventsExpiration),
    events_listeners: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.eventsListeners),
    failure_factor: cdktf.numberToTerraform(struct!.failureFactor),
    federated_users: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersToTerraform, false)(struct!.federatedUsers),
    groups: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsToTerraform, false)(struct!.groups),
    id: cdktf.stringToTerraform(struct!.id),
    identity_provider_mappers: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappersToTerraform, false)(struct!.identityProviderMappers),
    identity_providers: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProvidersToTerraform, false)(struct!.identityProviders),
    internationalization_enabled: cdktf.booleanToTerraform(struct!.internationalizationEnabled),
    keycloak_version: cdktf.stringToTerraform(struct!.keycloakVersion),
    login_theme: cdktf.stringToTerraform(struct!.loginTheme),
    login_with_email_allowed: cdktf.booleanToTerraform(struct!.loginWithEmailAllowed),
    max_delta_time_seconds: cdktf.numberToTerraform(struct!.maxDeltaTimeSeconds),
    max_failure_wait_seconds: cdktf.numberToTerraform(struct!.maxFailureWaitSeconds),
    minimum_quick_login_wait_seconds: cdktf.numberToTerraform(struct!.minimumQuickLoginWaitSeconds),
    not_before: cdktf.numberToTerraform(struct!.notBefore),
    oauth2_device_code_lifespan: cdktf.numberToTerraform(struct!.oauth2DeviceCodeLifespan),
    oauth2_device_polling_interval: cdktf.numberToTerraform(struct!.oauth2DevicePollingInterval),
    oauth_clients: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsToTerraform, false)(struct!.oauthClients),
    offline_session_idle_timeout: cdktf.numberToTerraform(struct!.offlineSessionIdleTimeout),
    offline_session_max_lifespan: cdktf.numberToTerraform(struct!.offlineSessionMaxLifespan),
    offline_session_max_lifespan_enabled: cdktf.booleanToTerraform(struct!.offlineSessionMaxLifespanEnabled),
    otp_policy_algorithm: cdktf.stringToTerraform(struct!.otpPolicyAlgorithm),
    otp_policy_digits: cdktf.numberToTerraform(struct!.otpPolicyDigits),
    otp_policy_initial_counter: cdktf.numberToTerraform(struct!.otpPolicyInitialCounter),
    otp_policy_look_ahead_window: cdktf.numberToTerraform(struct!.otpPolicyLookAheadWindow),
    otp_policy_period: cdktf.numberToTerraform(struct!.otpPolicyPeriod),
    otp_policy_type: cdktf.stringToTerraform(struct!.otpPolicyType),
    otp_supported_applications: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.otpSupportedApplications),
    password_credential_grant_allowed: cdktf.booleanToTerraform(struct!.passwordCredentialGrantAllowed),
    password_policy: cdktf.stringToTerraform(struct!.passwordPolicy),
    permanent_lockout: cdktf.booleanToTerraform(struct!.permanentLockout),
    private_key: cdktf.stringToTerraform(struct!.privateKey),
    protocol_mappers: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappersToTerraform, false)(struct!.protocolMappers),
    public_key: cdktf.stringToTerraform(struct!.publicKey),
    quick_login_check_milli_seconds: cdktf.numberToTerraform(struct!.quickLoginCheckMilliSeconds),
    realm: cdktf.stringToTerraform(struct!.realm),
    realm_cache_enabled: cdktf.booleanToTerraform(struct!.realmCacheEnabled),
    refresh_token_max_reuse: cdktf.numberToTerraform(struct!.refreshTokenMaxReuse),
    registration_allowed: cdktf.booleanToTerraform(struct!.registrationAllowed),
    registration_email_as_username: cdktf.booleanToTerraform(struct!.registrationEmailAsUsername),
    registration_flow: cdktf.stringToTerraform(struct!.registrationFlow),
    remember_me: cdktf.booleanToTerraform(struct!.rememberMe),
    required_actions: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActionsToTerraform, false)(struct!.requiredActions),
    required_credentials: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.requiredCredentials),
    reset_credentials_flow: cdktf.stringToTerraform(struct!.resetCredentialsFlow),
    reset_password_allowed: cdktf.booleanToTerraform(struct!.resetPasswordAllowed),
    revoke_refresh_token: cdktf.booleanToTerraform(struct!.revokeRefreshToken),
    roles: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesToTerraform(struct!.roles),
    scope_mappings: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappingsToTerraform, false)(struct!.scopeMappings),
    smtp_server: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.smtpServer),
    social: cdktf.booleanToTerraform(struct!.social),
    social_providers: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.socialProviders),
    ssl_required: cdktf.stringToTerraform(struct!.sslRequired),
    sso_session_idle_timeout: cdktf.numberToTerraform(struct!.ssoSessionIdleTimeout),
    sso_session_idle_timeout_remember_me: cdktf.numberToTerraform(struct!.ssoSessionIdleTimeoutRememberMe),
    sso_session_max_lifespan: cdktf.numberToTerraform(struct!.ssoSessionMaxLifespan),
    sso_session_max_lifespan_remember_me: cdktf.numberToTerraform(struct!.ssoSessionMaxLifespanRememberMe),
    supported_locales: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.supportedLocales),
    update_profile_on_initial_social_login: cdktf.booleanToTerraform(struct!.updateProfileOnInitialSocialLogin),
    user_cache_enabled: cdktf.booleanToTerraform(struct!.userCacheEnabled),
    user_federation_mappers: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappersToTerraform, false)(struct!.userFederationMappers),
    user_federation_providers: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProvidersToTerraform, false)(struct!.userFederationProviders),
    user_managed_access_allowed: cdktf.booleanToTerraform(struct!.userManagedAccessAllowed),
    users: cdktf.listMapper(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersToTerraform, false)(struct!.users),
    verify_email: cdktf.booleanToTerraform(struct!.verifyEmail),
    wait_increment_seconds: cdktf.numberToTerraform(struct!.waitIncrementSeconds),
    web_authn_policy_acceptable_aaguids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.webAuthnPolicyAcceptableAaguids),
    web_authn_policy_attestation_conveyance_preference: cdktf.stringToTerraform(struct!.webAuthnPolicyAttestationConveyancePreference),
    web_authn_policy_authenticator_attachment: cdktf.stringToTerraform(struct!.webAuthnPolicyAuthenticatorAttachment),
    web_authn_policy_avoid_same_authenticator_register: cdktf.booleanToTerraform(struct!.webAuthnPolicyAvoidSameAuthenticatorRegister),
    web_authn_policy_create_timeout: cdktf.numberToTerraform(struct!.webAuthnPolicyCreateTimeout),
    web_authn_policy_passwordless_acceptable_aaguids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.webAuthnPolicyPasswordlessAcceptableAaguids),
    web_authn_policy_passwordless_attestation_conveyance_preference: cdktf.stringToTerraform(struct!.webAuthnPolicyPasswordlessAttestationConveyancePreference),
    web_authn_policy_passwordless_authenticator_attachment: cdktf.stringToTerraform(struct!.webAuthnPolicyPasswordlessAuthenticatorAttachment),
    web_authn_policy_passwordless_avoid_same_authenticator_register: cdktf.booleanToTerraform(struct!.webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister),
    web_authn_policy_passwordless_create_timeout: cdktf.numberToTerraform(struct!.webAuthnPolicyPasswordlessCreateTimeout),
    web_authn_policy_passwordless_require_resident_key: cdktf.stringToTerraform(struct!.webAuthnPolicyPasswordlessRequireResidentKey),
    web_authn_policy_passwordless_rp_entity_name: cdktf.stringToTerraform(struct!.webAuthnPolicyPasswordlessRpEntityName),
    web_authn_policy_passwordless_rp_id: cdktf.stringToTerraform(struct!.webAuthnPolicyPasswordlessRpId),
    web_authn_policy_passwordless_signature_algorithms: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.webAuthnPolicyPasswordlessSignatureAlgorithms),
    web_authn_policy_passwordless_user_verification_requirement: cdktf.stringToTerraform(struct!.webAuthnPolicyPasswordlessUserVerificationRequirement),
    web_authn_policy_require_resident_key: cdktf.stringToTerraform(struct!.webAuthnPolicyRequireResidentKey),
    web_authn_policy_rp_entity_name: cdktf.stringToTerraform(struct!.webAuthnPolicyRpEntityName),
    web_authn_policy_rp_id: cdktf.stringToTerraform(struct!.webAuthnPolicyRpId),
    web_authn_policy_signature_algorithms: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.webAuthnPolicySignatureAlgorithms),
    web_authn_policy_user_verification_requirement: cdktf.stringToTerraform(struct!.webAuthnPolicyUserVerificationRequirement),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_code_lifespan: {
      value: cdktf.numberToHclTerraform(struct!.accessCodeLifespan),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    access_code_lifespan_login: {
      value: cdktf.numberToHclTerraform(struct!.accessCodeLifespanLogin),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    access_code_lifespan_user_action: {
      value: cdktf.numberToHclTerraform(struct!.accessCodeLifespanUserAction),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    access_token_lifespan: {
      value: cdktf.numberToHclTerraform(struct!.accessTokenLifespan),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    access_token_lifespan_for_implicit_flow: {
      value: cdktf.numberToHclTerraform(struct!.accessTokenLifespanForImplicitFlow),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    account_theme: {
      value: cdktf.stringToHclTerraform(struct!.accountTheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    action_token_generated_by_admin_lifespan: {
      value: cdktf.numberToHclTerraform(struct!.actionTokenGeneratedByAdminLifespan),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    action_token_generated_by_user_lifespan: {
      value: cdktf.numberToHclTerraform(struct!.actionTokenGeneratedByUserLifespan),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    admin_events_details_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.adminEventsDetailsEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    admin_events_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.adminEventsEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    admin_theme: {
      value: cdktf.stringToHclTerraform(struct!.adminTheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    application_scope_mappings: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.applicationScopeMappings),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    applications: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsToHclTerraform, false)(struct!.applications),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsList",
    },
    attributes: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.attributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    authentication_flows: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsToHclTerraform, false)(struct!.authenticationFlows),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsList",
    },
    authenticator_config: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfigToHclTerraform, false)(struct!.authenticatorConfig),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfigList",
    },
    browser_flow: {
      value: cdktf.stringToHclTerraform(struct!.browserFlow),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    browser_security_headers: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.browserSecurityHeaders),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    brute_force_protected: {
      value: cdktf.booleanToHclTerraform(struct!.bruteForceProtected),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    certificate: {
      value: cdktf.stringToHclTerraform(struct!.certificate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_authentication_flow: {
      value: cdktf.stringToHclTerraform(struct!.clientAuthenticationFlow),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_offline_session_idle_timeout: {
      value: cdktf.numberToHclTerraform(struct!.clientOfflineSessionIdleTimeout),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    client_offline_session_max_lifespan: {
      value: cdktf.numberToHclTerraform(struct!.clientOfflineSessionMaxLifespan),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    client_policies: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.clientPolicies),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    client_profiles: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.clientProfiles),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    client_scope_mappings: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.clientScopeMappings),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    client_scopes: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesToHclTerraform, false)(struct!.clientScopes),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesList",
    },
    client_session_idle_timeout: {
      value: cdktf.numberToHclTerraform(struct!.clientSessionIdleTimeout),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    client_session_max_lifespan: {
      value: cdktf.numberToHclTerraform(struct!.clientSessionMaxLifespan),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    client_templates: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesToHclTerraform, false)(struct!.clientTemplates),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesList",
    },
    clients: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsToHclTerraform, false)(struct!.clients),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsList",
    },
    code_secret: {
      value: cdktf.stringToHclTerraform(struct!.codeSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    components: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.components),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    default_default_client_scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.defaultDefaultClientScopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    default_groups: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.defaultGroups),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    default_locale: {
      value: cdktf.stringToHclTerraform(struct!.defaultLocale),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    default_optional_client_scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.defaultOptionalClientScopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    default_role: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleToHclTerraform(struct!.defaultRole),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRole",
    },
    default_roles: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.defaultRoles),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    default_signature_algorithm: {
      value: cdktf.stringToHclTerraform(struct!.defaultSignatureAlgorithm),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    direct_grant_flow: {
      value: cdktf.stringToHclTerraform(struct!.directGrantFlow),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    display_name: {
      value: cdktf.stringToHclTerraform(struct!.displayName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    display_name_html: {
      value: cdktf.stringToHclTerraform(struct!.displayNameHtml),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    docker_authentication_flow: {
      value: cdktf.stringToHclTerraform(struct!.dockerAuthenticationFlow),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duplicate_emails_allowed: {
      value: cdktf.booleanToHclTerraform(struct!.duplicateEmailsAllowed),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    edit_username_allowed: {
      value: cdktf.booleanToHclTerraform(struct!.editUsernameAllowed),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    email_theme: {
      value: cdktf.stringToHclTerraform(struct!.emailTheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enabled_event_types: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.enabledEventTypes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    events_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.eventsEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    events_expiration: {
      value: cdktf.numberToHclTerraform(struct!.eventsExpiration),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    events_listeners: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.eventsListeners),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    failure_factor: {
      value: cdktf.numberToHclTerraform(struct!.failureFactor),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    federated_users: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersToHclTerraform, false)(struct!.federatedUsers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersList",
    },
    groups: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsToHclTerraform, false)(struct!.groups),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsList",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    identity_provider_mappers: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappersToHclTerraform, false)(struct!.identityProviderMappers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappersList",
    },
    identity_providers: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProvidersToHclTerraform, false)(struct!.identityProviders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProvidersList",
    },
    internationalization_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.internationalizationEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    keycloak_version: {
      value: cdktf.stringToHclTerraform(struct!.keycloakVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    login_theme: {
      value: cdktf.stringToHclTerraform(struct!.loginTheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    login_with_email_allowed: {
      value: cdktf.booleanToHclTerraform(struct!.loginWithEmailAllowed),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    max_delta_time_seconds: {
      value: cdktf.numberToHclTerraform(struct!.maxDeltaTimeSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_failure_wait_seconds: {
      value: cdktf.numberToHclTerraform(struct!.maxFailureWaitSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    minimum_quick_login_wait_seconds: {
      value: cdktf.numberToHclTerraform(struct!.minimumQuickLoginWaitSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    not_before: {
      value: cdktf.numberToHclTerraform(struct!.notBefore),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    oauth2_device_code_lifespan: {
      value: cdktf.numberToHclTerraform(struct!.oauth2DeviceCodeLifespan),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    oauth2_device_polling_interval: {
      value: cdktf.numberToHclTerraform(struct!.oauth2DevicePollingInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    oauth_clients: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsToHclTerraform, false)(struct!.oauthClients),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsList",
    },
    offline_session_idle_timeout: {
      value: cdktf.numberToHclTerraform(struct!.offlineSessionIdleTimeout),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    offline_session_max_lifespan: {
      value: cdktf.numberToHclTerraform(struct!.offlineSessionMaxLifespan),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    offline_session_max_lifespan_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.offlineSessionMaxLifespanEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    otp_policy_algorithm: {
      value: cdktf.stringToHclTerraform(struct!.otpPolicyAlgorithm),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    otp_policy_digits: {
      value: cdktf.numberToHclTerraform(struct!.otpPolicyDigits),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    otp_policy_initial_counter: {
      value: cdktf.numberToHclTerraform(struct!.otpPolicyInitialCounter),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    otp_policy_look_ahead_window: {
      value: cdktf.numberToHclTerraform(struct!.otpPolicyLookAheadWindow),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    otp_policy_period: {
      value: cdktf.numberToHclTerraform(struct!.otpPolicyPeriod),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    otp_policy_type: {
      value: cdktf.stringToHclTerraform(struct!.otpPolicyType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    otp_supported_applications: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.otpSupportedApplications),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    password_credential_grant_allowed: {
      value: cdktf.booleanToHclTerraform(struct!.passwordCredentialGrantAllowed),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    password_policy: {
      value: cdktf.stringToHclTerraform(struct!.passwordPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    permanent_lockout: {
      value: cdktf.booleanToHclTerraform(struct!.permanentLockout),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    private_key: {
      value: cdktf.stringToHclTerraform(struct!.privateKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol_mappers: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappersToHclTerraform, false)(struct!.protocolMappers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappersList",
    },
    public_key: {
      value: cdktf.stringToHclTerraform(struct!.publicKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    quick_login_check_milli_seconds: {
      value: cdktf.numberToHclTerraform(struct!.quickLoginCheckMilliSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    realm: {
      value: cdktf.stringToHclTerraform(struct!.realm),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    realm_cache_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.realmCacheEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    refresh_token_max_reuse: {
      value: cdktf.numberToHclTerraform(struct!.refreshTokenMaxReuse),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    registration_allowed: {
      value: cdktf.booleanToHclTerraform(struct!.registrationAllowed),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    registration_email_as_username: {
      value: cdktf.booleanToHclTerraform(struct!.registrationEmailAsUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    registration_flow: {
      value: cdktf.stringToHclTerraform(struct!.registrationFlow),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    remember_me: {
      value: cdktf.booleanToHclTerraform(struct!.rememberMe),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    required_actions: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActionsToHclTerraform, false)(struct!.requiredActions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActionsList",
    },
    required_credentials: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.requiredCredentials),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    reset_credentials_flow: {
      value: cdktf.stringToHclTerraform(struct!.resetCredentialsFlow),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reset_password_allowed: {
      value: cdktf.booleanToHclTerraform(struct!.resetPasswordAllowed),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    revoke_refresh_token: {
      value: cdktf.booleanToHclTerraform(struct!.revokeRefreshToken),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    roles: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesToHclTerraform(struct!.roles),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRoles",
    },
    scope_mappings: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappingsToHclTerraform, false)(struct!.scopeMappings),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappingsList",
    },
    smtp_server: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.smtpServer),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    social: {
      value: cdktf.booleanToHclTerraform(struct!.social),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    social_providers: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.socialProviders),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    ssl_required: {
      value: cdktf.stringToHclTerraform(struct!.sslRequired),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sso_session_idle_timeout: {
      value: cdktf.numberToHclTerraform(struct!.ssoSessionIdleTimeout),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    sso_session_idle_timeout_remember_me: {
      value: cdktf.numberToHclTerraform(struct!.ssoSessionIdleTimeoutRememberMe),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    sso_session_max_lifespan: {
      value: cdktf.numberToHclTerraform(struct!.ssoSessionMaxLifespan),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    sso_session_max_lifespan_remember_me: {
      value: cdktf.numberToHclTerraform(struct!.ssoSessionMaxLifespanRememberMe),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    supported_locales: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.supportedLocales),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    update_profile_on_initial_social_login: {
      value: cdktf.booleanToHclTerraform(struct!.updateProfileOnInitialSocialLogin),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    user_cache_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.userCacheEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    user_federation_mappers: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappersToHclTerraform, false)(struct!.userFederationMappers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappersList",
    },
    user_federation_providers: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProvidersToHclTerraform, false)(struct!.userFederationProviders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProvidersList",
    },
    user_managed_access_allowed: {
      value: cdktf.booleanToHclTerraform(struct!.userManagedAccessAllowed),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    users: {
      value: cdktf.listMapperHcl(dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersToHclTerraform, false)(struct!.users),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersList",
    },
    verify_email: {
      value: cdktf.booleanToHclTerraform(struct!.verifyEmail),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    wait_increment_seconds: {
      value: cdktf.numberToHclTerraform(struct!.waitIncrementSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    web_authn_policy_acceptable_aaguids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.webAuthnPolicyAcceptableAaguids),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    web_authn_policy_attestation_conveyance_preference: {
      value: cdktf.stringToHclTerraform(struct!.webAuthnPolicyAttestationConveyancePreference),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    web_authn_policy_authenticator_attachment: {
      value: cdktf.stringToHclTerraform(struct!.webAuthnPolicyAuthenticatorAttachment),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    web_authn_policy_avoid_same_authenticator_register: {
      value: cdktf.booleanToHclTerraform(struct!.webAuthnPolicyAvoidSameAuthenticatorRegister),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    web_authn_policy_create_timeout: {
      value: cdktf.numberToHclTerraform(struct!.webAuthnPolicyCreateTimeout),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    web_authn_policy_passwordless_acceptable_aaguids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.webAuthnPolicyPasswordlessAcceptableAaguids),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    web_authn_policy_passwordless_attestation_conveyance_preference: {
      value: cdktf.stringToHclTerraform(struct!.webAuthnPolicyPasswordlessAttestationConveyancePreference),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    web_authn_policy_passwordless_authenticator_attachment: {
      value: cdktf.stringToHclTerraform(struct!.webAuthnPolicyPasswordlessAuthenticatorAttachment),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    web_authn_policy_passwordless_avoid_same_authenticator_register: {
      value: cdktf.booleanToHclTerraform(struct!.webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    web_authn_policy_passwordless_create_timeout: {
      value: cdktf.numberToHclTerraform(struct!.webAuthnPolicyPasswordlessCreateTimeout),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    web_authn_policy_passwordless_require_resident_key: {
      value: cdktf.stringToHclTerraform(struct!.webAuthnPolicyPasswordlessRequireResidentKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    web_authn_policy_passwordless_rp_entity_name: {
      value: cdktf.stringToHclTerraform(struct!.webAuthnPolicyPasswordlessRpEntityName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    web_authn_policy_passwordless_rp_id: {
      value: cdktf.stringToHclTerraform(struct!.webAuthnPolicyPasswordlessRpId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    web_authn_policy_passwordless_signature_algorithms: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.webAuthnPolicyPasswordlessSignatureAlgorithms),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    web_authn_policy_passwordless_user_verification_requirement: {
      value: cdktf.stringToHclTerraform(struct!.webAuthnPolicyPasswordlessUserVerificationRequirement),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    web_authn_policy_require_resident_key: {
      value: cdktf.stringToHclTerraform(struct!.webAuthnPolicyRequireResidentKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    web_authn_policy_rp_entity_name: {
      value: cdktf.stringToHclTerraform(struct!.webAuthnPolicyRpEntityName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    web_authn_policy_rp_id: {
      value: cdktf.stringToHclTerraform(struct!.webAuthnPolicyRpId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    web_authn_policy_signature_algorithms: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.webAuthnPolicySignatureAlgorithms),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    web_authn_policy_user_verification_requirement: {
      value: cdktf.stringToHclTerraform(struct!.webAuthnPolicyUserVerificationRequirement),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessCodeLifespan !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessCodeLifespan = this._accessCodeLifespan;
    }
    if (this._accessCodeLifespanLogin !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessCodeLifespanLogin = this._accessCodeLifespanLogin;
    }
    if (this._accessCodeLifespanUserAction !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessCodeLifespanUserAction = this._accessCodeLifespanUserAction;
    }
    if (this._accessTokenLifespan !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessTokenLifespan = this._accessTokenLifespan;
    }
    if (this._accessTokenLifespanForImplicitFlow !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessTokenLifespanForImplicitFlow = this._accessTokenLifespanForImplicitFlow;
    }
    if (this._accountTheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.accountTheme = this._accountTheme;
    }
    if (this._actionTokenGeneratedByAdminLifespan !== undefined) {
      hasAnyValues = true;
      internalValueResult.actionTokenGeneratedByAdminLifespan = this._actionTokenGeneratedByAdminLifespan;
    }
    if (this._actionTokenGeneratedByUserLifespan !== undefined) {
      hasAnyValues = true;
      internalValueResult.actionTokenGeneratedByUserLifespan = this._actionTokenGeneratedByUserLifespan;
    }
    if (this._adminEventsDetailsEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminEventsDetailsEnabled = this._adminEventsDetailsEnabled;
    }
    if (this._adminEventsEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminEventsEnabled = this._adminEventsEnabled;
    }
    if (this._adminTheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminTheme = this._adminTheme;
    }
    if (this._applicationScopeMappings !== undefined) {
      hasAnyValues = true;
      internalValueResult.applicationScopeMappings = this._applicationScopeMappings;
    }
    if (this._applications?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.applications = this._applications?.internalValue;
    }
    if (this._attributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.attributes = this._attributes;
    }
    if (this._authenticationFlows?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authenticationFlows = this._authenticationFlows?.internalValue;
    }
    if (this._authenticatorConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authenticatorConfig = this._authenticatorConfig?.internalValue;
    }
    if (this._browserFlow !== undefined) {
      hasAnyValues = true;
      internalValueResult.browserFlow = this._browserFlow;
    }
    if (this._browserSecurityHeaders !== undefined) {
      hasAnyValues = true;
      internalValueResult.browserSecurityHeaders = this._browserSecurityHeaders;
    }
    if (this._bruteForceProtected !== undefined) {
      hasAnyValues = true;
      internalValueResult.bruteForceProtected = this._bruteForceProtected;
    }
    if (this._certificate !== undefined) {
      hasAnyValues = true;
      internalValueResult.certificate = this._certificate;
    }
    if (this._clientAuthenticationFlow !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientAuthenticationFlow = this._clientAuthenticationFlow;
    }
    if (this._clientOfflineSessionIdleTimeout !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientOfflineSessionIdleTimeout = this._clientOfflineSessionIdleTimeout;
    }
    if (this._clientOfflineSessionMaxLifespan !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientOfflineSessionMaxLifespan = this._clientOfflineSessionMaxLifespan;
    }
    if (this._clientPolicies !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientPolicies = this._clientPolicies;
    }
    if (this._clientProfiles !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientProfiles = this._clientProfiles;
    }
    if (this._clientScopeMappings !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientScopeMappings = this._clientScopeMappings;
    }
    if (this._clientScopes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientScopes = this._clientScopes?.internalValue;
    }
    if (this._clientSessionIdleTimeout !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientSessionIdleTimeout = this._clientSessionIdleTimeout;
    }
    if (this._clientSessionMaxLifespan !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientSessionMaxLifespan = this._clientSessionMaxLifespan;
    }
    if (this._clientTemplates?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientTemplates = this._clientTemplates?.internalValue;
    }
    if (this._clients?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clients = this._clients?.internalValue;
    }
    if (this._codeSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.codeSecret = this._codeSecret;
    }
    if (this._components !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components;
    }
    if (this._defaultDefaultClientScopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultDefaultClientScopes = this._defaultDefaultClientScopes;
    }
    if (this._defaultGroups !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultGroups = this._defaultGroups;
    }
    if (this._defaultLocale !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultLocale = this._defaultLocale;
    }
    if (this._defaultOptionalClientScopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultOptionalClientScopes = this._defaultOptionalClientScopes;
    }
    if (this._defaultRole?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultRole = this._defaultRole?.internalValue;
    }
    if (this._defaultRoles !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultRoles = this._defaultRoles;
    }
    if (this._defaultSignatureAlgorithm !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultSignatureAlgorithm = this._defaultSignatureAlgorithm;
    }
    if (this._directGrantFlow !== undefined) {
      hasAnyValues = true;
      internalValueResult.directGrantFlow = this._directGrantFlow;
    }
    if (this._displayName !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayName = this._displayName;
    }
    if (this._displayNameHtml !== undefined) {
      hasAnyValues = true;
      internalValueResult.displayNameHtml = this._displayNameHtml;
    }
    if (this._dockerAuthenticationFlow !== undefined) {
      hasAnyValues = true;
      internalValueResult.dockerAuthenticationFlow = this._dockerAuthenticationFlow;
    }
    if (this._duplicateEmailsAllowed !== undefined) {
      hasAnyValues = true;
      internalValueResult.duplicateEmailsAllowed = this._duplicateEmailsAllowed;
    }
    if (this._editUsernameAllowed !== undefined) {
      hasAnyValues = true;
      internalValueResult.editUsernameAllowed = this._editUsernameAllowed;
    }
    if (this._emailTheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.emailTheme = this._emailTheme;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._enabledEventTypes !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabledEventTypes = this._enabledEventTypes;
    }
    if (this._eventsEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.eventsEnabled = this._eventsEnabled;
    }
    if (this._eventsExpiration !== undefined) {
      hasAnyValues = true;
      internalValueResult.eventsExpiration = this._eventsExpiration;
    }
    if (this._eventsListeners !== undefined) {
      hasAnyValues = true;
      internalValueResult.eventsListeners = this._eventsListeners;
    }
    if (this._failureFactor !== undefined) {
      hasAnyValues = true;
      internalValueResult.failureFactor = this._failureFactor;
    }
    if (this._federatedUsers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.federatedUsers = this._federatedUsers?.internalValue;
    }
    if (this._groups?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.groups = this._groups?.internalValue;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._identityProviderMappers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.identityProviderMappers = this._identityProviderMappers?.internalValue;
    }
    if (this._identityProviders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.identityProviders = this._identityProviders?.internalValue;
    }
    if (this._internationalizationEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.internationalizationEnabled = this._internationalizationEnabled;
    }
    if (this._keycloakVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.keycloakVersion = this._keycloakVersion;
    }
    if (this._loginTheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.loginTheme = this._loginTheme;
    }
    if (this._loginWithEmailAllowed !== undefined) {
      hasAnyValues = true;
      internalValueResult.loginWithEmailAllowed = this._loginWithEmailAllowed;
    }
    if (this._maxDeltaTimeSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxDeltaTimeSeconds = this._maxDeltaTimeSeconds;
    }
    if (this._maxFailureWaitSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxFailureWaitSeconds = this._maxFailureWaitSeconds;
    }
    if (this._minimumQuickLoginWaitSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.minimumQuickLoginWaitSeconds = this._minimumQuickLoginWaitSeconds;
    }
    if (this._notBefore !== undefined) {
      hasAnyValues = true;
      internalValueResult.notBefore = this._notBefore;
    }
    if (this._oauth2DeviceCodeLifespan !== undefined) {
      hasAnyValues = true;
      internalValueResult.oauth2DeviceCodeLifespan = this._oauth2DeviceCodeLifespan;
    }
    if (this._oauth2DevicePollingInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.oauth2DevicePollingInterval = this._oauth2DevicePollingInterval;
    }
    if (this._oauthClients?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oauthClients = this._oauthClients?.internalValue;
    }
    if (this._offlineSessionIdleTimeout !== undefined) {
      hasAnyValues = true;
      internalValueResult.offlineSessionIdleTimeout = this._offlineSessionIdleTimeout;
    }
    if (this._offlineSessionMaxLifespan !== undefined) {
      hasAnyValues = true;
      internalValueResult.offlineSessionMaxLifespan = this._offlineSessionMaxLifespan;
    }
    if (this._offlineSessionMaxLifespanEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.offlineSessionMaxLifespanEnabled = this._offlineSessionMaxLifespanEnabled;
    }
    if (this._otpPolicyAlgorithm !== undefined) {
      hasAnyValues = true;
      internalValueResult.otpPolicyAlgorithm = this._otpPolicyAlgorithm;
    }
    if (this._otpPolicyDigits !== undefined) {
      hasAnyValues = true;
      internalValueResult.otpPolicyDigits = this._otpPolicyDigits;
    }
    if (this._otpPolicyInitialCounter !== undefined) {
      hasAnyValues = true;
      internalValueResult.otpPolicyInitialCounter = this._otpPolicyInitialCounter;
    }
    if (this._otpPolicyLookAheadWindow !== undefined) {
      hasAnyValues = true;
      internalValueResult.otpPolicyLookAheadWindow = this._otpPolicyLookAheadWindow;
    }
    if (this._otpPolicyPeriod !== undefined) {
      hasAnyValues = true;
      internalValueResult.otpPolicyPeriod = this._otpPolicyPeriod;
    }
    if (this._otpPolicyType !== undefined) {
      hasAnyValues = true;
      internalValueResult.otpPolicyType = this._otpPolicyType;
    }
    if (this._otpSupportedApplications !== undefined) {
      hasAnyValues = true;
      internalValueResult.otpSupportedApplications = this._otpSupportedApplications;
    }
    if (this._passwordCredentialGrantAllowed !== undefined) {
      hasAnyValues = true;
      internalValueResult.passwordCredentialGrantAllowed = this._passwordCredentialGrantAllowed;
    }
    if (this._passwordPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.passwordPolicy = this._passwordPolicy;
    }
    if (this._permanentLockout !== undefined) {
      hasAnyValues = true;
      internalValueResult.permanentLockout = this._permanentLockout;
    }
    if (this._privateKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.privateKey = this._privateKey;
    }
    if (this._protocolMappers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocolMappers = this._protocolMappers?.internalValue;
    }
    if (this._publicKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.publicKey = this._publicKey;
    }
    if (this._quickLoginCheckMilliSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.quickLoginCheckMilliSeconds = this._quickLoginCheckMilliSeconds;
    }
    if (this._realm !== undefined) {
      hasAnyValues = true;
      internalValueResult.realm = this._realm;
    }
    if (this._realmCacheEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.realmCacheEnabled = this._realmCacheEnabled;
    }
    if (this._refreshTokenMaxReuse !== undefined) {
      hasAnyValues = true;
      internalValueResult.refreshTokenMaxReuse = this._refreshTokenMaxReuse;
    }
    if (this._registrationAllowed !== undefined) {
      hasAnyValues = true;
      internalValueResult.registrationAllowed = this._registrationAllowed;
    }
    if (this._registrationEmailAsUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.registrationEmailAsUsername = this._registrationEmailAsUsername;
    }
    if (this._registrationFlow !== undefined) {
      hasAnyValues = true;
      internalValueResult.registrationFlow = this._registrationFlow;
    }
    if (this._rememberMe !== undefined) {
      hasAnyValues = true;
      internalValueResult.rememberMe = this._rememberMe;
    }
    if (this._requiredActions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requiredActions = this._requiredActions?.internalValue;
    }
    if (this._requiredCredentials !== undefined) {
      hasAnyValues = true;
      internalValueResult.requiredCredentials = this._requiredCredentials;
    }
    if (this._resetCredentialsFlow !== undefined) {
      hasAnyValues = true;
      internalValueResult.resetCredentialsFlow = this._resetCredentialsFlow;
    }
    if (this._resetPasswordAllowed !== undefined) {
      hasAnyValues = true;
      internalValueResult.resetPasswordAllowed = this._resetPasswordAllowed;
    }
    if (this._revokeRefreshToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.revokeRefreshToken = this._revokeRefreshToken;
    }
    if (this._roles?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.roles = this._roles?.internalValue;
    }
    if (this._scopeMappings?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopeMappings = this._scopeMappings?.internalValue;
    }
    if (this._smtpServer !== undefined) {
      hasAnyValues = true;
      internalValueResult.smtpServer = this._smtpServer;
    }
    if (this._social !== undefined) {
      hasAnyValues = true;
      internalValueResult.social = this._social;
    }
    if (this._socialProviders !== undefined) {
      hasAnyValues = true;
      internalValueResult.socialProviders = this._socialProviders;
    }
    if (this._sslRequired !== undefined) {
      hasAnyValues = true;
      internalValueResult.sslRequired = this._sslRequired;
    }
    if (this._ssoSessionIdleTimeout !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssoSessionIdleTimeout = this._ssoSessionIdleTimeout;
    }
    if (this._ssoSessionIdleTimeoutRememberMe !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssoSessionIdleTimeoutRememberMe = this._ssoSessionIdleTimeoutRememberMe;
    }
    if (this._ssoSessionMaxLifespan !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssoSessionMaxLifespan = this._ssoSessionMaxLifespan;
    }
    if (this._ssoSessionMaxLifespanRememberMe !== undefined) {
      hasAnyValues = true;
      internalValueResult.ssoSessionMaxLifespanRememberMe = this._ssoSessionMaxLifespanRememberMe;
    }
    if (this._supportedLocales !== undefined) {
      hasAnyValues = true;
      internalValueResult.supportedLocales = this._supportedLocales;
    }
    if (this._updateProfileOnInitialSocialLogin !== undefined) {
      hasAnyValues = true;
      internalValueResult.updateProfileOnInitialSocialLogin = this._updateProfileOnInitialSocialLogin;
    }
    if (this._userCacheEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.userCacheEnabled = this._userCacheEnabled;
    }
    if (this._userFederationMappers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.userFederationMappers = this._userFederationMappers?.internalValue;
    }
    if (this._userFederationProviders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.userFederationProviders = this._userFederationProviders?.internalValue;
    }
    if (this._userManagedAccessAllowed !== undefined) {
      hasAnyValues = true;
      internalValueResult.userManagedAccessAllowed = this._userManagedAccessAllowed;
    }
    if (this._users?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.users = this._users?.internalValue;
    }
    if (this._verifyEmail !== undefined) {
      hasAnyValues = true;
      internalValueResult.verifyEmail = this._verifyEmail;
    }
    if (this._waitIncrementSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.waitIncrementSeconds = this._waitIncrementSeconds;
    }
    if (this._webAuthnPolicyAcceptableAaguids !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyAcceptableAaguids = this._webAuthnPolicyAcceptableAaguids;
    }
    if (this._webAuthnPolicyAttestationConveyancePreference !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyAttestationConveyancePreference = this._webAuthnPolicyAttestationConveyancePreference;
    }
    if (this._webAuthnPolicyAuthenticatorAttachment !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyAuthenticatorAttachment = this._webAuthnPolicyAuthenticatorAttachment;
    }
    if (this._webAuthnPolicyAvoidSameAuthenticatorRegister !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyAvoidSameAuthenticatorRegister = this._webAuthnPolicyAvoidSameAuthenticatorRegister;
    }
    if (this._webAuthnPolicyCreateTimeout !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyCreateTimeout = this._webAuthnPolicyCreateTimeout;
    }
    if (this._webAuthnPolicyPasswordlessAcceptableAaguids !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyPasswordlessAcceptableAaguids = this._webAuthnPolicyPasswordlessAcceptableAaguids;
    }
    if (this._webAuthnPolicyPasswordlessAttestationConveyancePreference !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyPasswordlessAttestationConveyancePreference = this._webAuthnPolicyPasswordlessAttestationConveyancePreference;
    }
    if (this._webAuthnPolicyPasswordlessAuthenticatorAttachment !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyPasswordlessAuthenticatorAttachment = this._webAuthnPolicyPasswordlessAuthenticatorAttachment;
    }
    if (this._webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister = this._webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister;
    }
    if (this._webAuthnPolicyPasswordlessCreateTimeout !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyPasswordlessCreateTimeout = this._webAuthnPolicyPasswordlessCreateTimeout;
    }
    if (this._webAuthnPolicyPasswordlessRequireResidentKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyPasswordlessRequireResidentKey = this._webAuthnPolicyPasswordlessRequireResidentKey;
    }
    if (this._webAuthnPolicyPasswordlessRpEntityName !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyPasswordlessRpEntityName = this._webAuthnPolicyPasswordlessRpEntityName;
    }
    if (this._webAuthnPolicyPasswordlessRpId !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyPasswordlessRpId = this._webAuthnPolicyPasswordlessRpId;
    }
    if (this._webAuthnPolicyPasswordlessSignatureAlgorithms !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyPasswordlessSignatureAlgorithms = this._webAuthnPolicyPasswordlessSignatureAlgorithms;
    }
    if (this._webAuthnPolicyPasswordlessUserVerificationRequirement !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyPasswordlessUserVerificationRequirement = this._webAuthnPolicyPasswordlessUserVerificationRequirement;
    }
    if (this._webAuthnPolicyRequireResidentKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyRequireResidentKey = this._webAuthnPolicyRequireResidentKey;
    }
    if (this._webAuthnPolicyRpEntityName !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyRpEntityName = this._webAuthnPolicyRpEntityName;
    }
    if (this._webAuthnPolicyRpId !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyRpId = this._webAuthnPolicyRpId;
    }
    if (this._webAuthnPolicySignatureAlgorithms !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicySignatureAlgorithms = this._webAuthnPolicySignatureAlgorithms;
    }
    if (this._webAuthnPolicyUserVerificationRequirement !== undefined) {
      hasAnyValues = true;
      internalValueResult.webAuthnPolicyUserVerificationRequirement = this._webAuthnPolicyUserVerificationRequirement;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessCodeLifespan = undefined;
      this._accessCodeLifespanLogin = undefined;
      this._accessCodeLifespanUserAction = undefined;
      this._accessTokenLifespan = undefined;
      this._accessTokenLifespanForImplicitFlow = undefined;
      this._accountTheme = undefined;
      this._actionTokenGeneratedByAdminLifespan = undefined;
      this._actionTokenGeneratedByUserLifespan = undefined;
      this._adminEventsDetailsEnabled = undefined;
      this._adminEventsEnabled = undefined;
      this._adminTheme = undefined;
      this._applicationScopeMappings = undefined;
      this._applications.internalValue = undefined;
      this._attributes = undefined;
      this._authenticationFlows.internalValue = undefined;
      this._authenticatorConfig.internalValue = undefined;
      this._browserFlow = undefined;
      this._browserSecurityHeaders = undefined;
      this._bruteForceProtected = undefined;
      this._certificate = undefined;
      this._clientAuthenticationFlow = undefined;
      this._clientOfflineSessionIdleTimeout = undefined;
      this._clientOfflineSessionMaxLifespan = undefined;
      this._clientPolicies = undefined;
      this._clientProfiles = undefined;
      this._clientScopeMappings = undefined;
      this._clientScopes.internalValue = undefined;
      this._clientSessionIdleTimeout = undefined;
      this._clientSessionMaxLifespan = undefined;
      this._clientTemplates.internalValue = undefined;
      this._clients.internalValue = undefined;
      this._codeSecret = undefined;
      this._components = undefined;
      this._defaultDefaultClientScopes = undefined;
      this._defaultGroups = undefined;
      this._defaultLocale = undefined;
      this._defaultOptionalClientScopes = undefined;
      this._defaultRole.internalValue = undefined;
      this._defaultRoles = undefined;
      this._defaultSignatureAlgorithm = undefined;
      this._directGrantFlow = undefined;
      this._displayName = undefined;
      this._displayNameHtml = undefined;
      this._dockerAuthenticationFlow = undefined;
      this._duplicateEmailsAllowed = undefined;
      this._editUsernameAllowed = undefined;
      this._emailTheme = undefined;
      this._enabled = undefined;
      this._enabledEventTypes = undefined;
      this._eventsEnabled = undefined;
      this._eventsExpiration = undefined;
      this._eventsListeners = undefined;
      this._failureFactor = undefined;
      this._federatedUsers.internalValue = undefined;
      this._groups.internalValue = undefined;
      this._id = undefined;
      this._identityProviderMappers.internalValue = undefined;
      this._identityProviders.internalValue = undefined;
      this._internationalizationEnabled = undefined;
      this._keycloakVersion = undefined;
      this._loginTheme = undefined;
      this._loginWithEmailAllowed = undefined;
      this._maxDeltaTimeSeconds = undefined;
      this._maxFailureWaitSeconds = undefined;
      this._minimumQuickLoginWaitSeconds = undefined;
      this._notBefore = undefined;
      this._oauth2DeviceCodeLifespan = undefined;
      this._oauth2DevicePollingInterval = undefined;
      this._oauthClients.internalValue = undefined;
      this._offlineSessionIdleTimeout = undefined;
      this._offlineSessionMaxLifespan = undefined;
      this._offlineSessionMaxLifespanEnabled = undefined;
      this._otpPolicyAlgorithm = undefined;
      this._otpPolicyDigits = undefined;
      this._otpPolicyInitialCounter = undefined;
      this._otpPolicyLookAheadWindow = undefined;
      this._otpPolicyPeriod = undefined;
      this._otpPolicyType = undefined;
      this._otpSupportedApplications = undefined;
      this._passwordCredentialGrantAllowed = undefined;
      this._passwordPolicy = undefined;
      this._permanentLockout = undefined;
      this._privateKey = undefined;
      this._protocolMappers.internalValue = undefined;
      this._publicKey = undefined;
      this._quickLoginCheckMilliSeconds = undefined;
      this._realm = undefined;
      this._realmCacheEnabled = undefined;
      this._refreshTokenMaxReuse = undefined;
      this._registrationAllowed = undefined;
      this._registrationEmailAsUsername = undefined;
      this._registrationFlow = undefined;
      this._rememberMe = undefined;
      this._requiredActions.internalValue = undefined;
      this._requiredCredentials = undefined;
      this._resetCredentialsFlow = undefined;
      this._resetPasswordAllowed = undefined;
      this._revokeRefreshToken = undefined;
      this._roles.internalValue = undefined;
      this._scopeMappings.internalValue = undefined;
      this._smtpServer = undefined;
      this._social = undefined;
      this._socialProviders = undefined;
      this._sslRequired = undefined;
      this._ssoSessionIdleTimeout = undefined;
      this._ssoSessionIdleTimeoutRememberMe = undefined;
      this._ssoSessionMaxLifespan = undefined;
      this._ssoSessionMaxLifespanRememberMe = undefined;
      this._supportedLocales = undefined;
      this._updateProfileOnInitialSocialLogin = undefined;
      this._userCacheEnabled = undefined;
      this._userFederationMappers.internalValue = undefined;
      this._userFederationProviders.internalValue = undefined;
      this._userManagedAccessAllowed = undefined;
      this._users.internalValue = undefined;
      this._verifyEmail = undefined;
      this._waitIncrementSeconds = undefined;
      this._webAuthnPolicyAcceptableAaguids = undefined;
      this._webAuthnPolicyAttestationConveyancePreference = undefined;
      this._webAuthnPolicyAuthenticatorAttachment = undefined;
      this._webAuthnPolicyAvoidSameAuthenticatorRegister = undefined;
      this._webAuthnPolicyCreateTimeout = undefined;
      this._webAuthnPolicyPasswordlessAcceptableAaguids = undefined;
      this._webAuthnPolicyPasswordlessAttestationConveyancePreference = undefined;
      this._webAuthnPolicyPasswordlessAuthenticatorAttachment = undefined;
      this._webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister = undefined;
      this._webAuthnPolicyPasswordlessCreateTimeout = undefined;
      this._webAuthnPolicyPasswordlessRequireResidentKey = undefined;
      this._webAuthnPolicyPasswordlessRpEntityName = undefined;
      this._webAuthnPolicyPasswordlessRpId = undefined;
      this._webAuthnPolicyPasswordlessSignatureAlgorithms = undefined;
      this._webAuthnPolicyPasswordlessUserVerificationRequirement = undefined;
      this._webAuthnPolicyRequireResidentKey = undefined;
      this._webAuthnPolicyRpEntityName = undefined;
      this._webAuthnPolicyRpId = undefined;
      this._webAuthnPolicySignatureAlgorithms = undefined;
      this._webAuthnPolicyUserVerificationRequirement = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessCodeLifespan = value.accessCodeLifespan;
      this._accessCodeLifespanLogin = value.accessCodeLifespanLogin;
      this._accessCodeLifespanUserAction = value.accessCodeLifespanUserAction;
      this._accessTokenLifespan = value.accessTokenLifespan;
      this._accessTokenLifespanForImplicitFlow = value.accessTokenLifespanForImplicitFlow;
      this._accountTheme = value.accountTheme;
      this._actionTokenGeneratedByAdminLifespan = value.actionTokenGeneratedByAdminLifespan;
      this._actionTokenGeneratedByUserLifespan = value.actionTokenGeneratedByUserLifespan;
      this._adminEventsDetailsEnabled = value.adminEventsDetailsEnabled;
      this._adminEventsEnabled = value.adminEventsEnabled;
      this._adminTheme = value.adminTheme;
      this._applicationScopeMappings = value.applicationScopeMappings;
      this._applications.internalValue = value.applications;
      this._attributes = value.attributes;
      this._authenticationFlows.internalValue = value.authenticationFlows;
      this._authenticatorConfig.internalValue = value.authenticatorConfig;
      this._browserFlow = value.browserFlow;
      this._browserSecurityHeaders = value.browserSecurityHeaders;
      this._bruteForceProtected = value.bruteForceProtected;
      this._certificate = value.certificate;
      this._clientAuthenticationFlow = value.clientAuthenticationFlow;
      this._clientOfflineSessionIdleTimeout = value.clientOfflineSessionIdleTimeout;
      this._clientOfflineSessionMaxLifespan = value.clientOfflineSessionMaxLifespan;
      this._clientPolicies = value.clientPolicies;
      this._clientProfiles = value.clientProfiles;
      this._clientScopeMappings = value.clientScopeMappings;
      this._clientScopes.internalValue = value.clientScopes;
      this._clientSessionIdleTimeout = value.clientSessionIdleTimeout;
      this._clientSessionMaxLifespan = value.clientSessionMaxLifespan;
      this._clientTemplates.internalValue = value.clientTemplates;
      this._clients.internalValue = value.clients;
      this._codeSecret = value.codeSecret;
      this._components = value.components;
      this._defaultDefaultClientScopes = value.defaultDefaultClientScopes;
      this._defaultGroups = value.defaultGroups;
      this._defaultLocale = value.defaultLocale;
      this._defaultOptionalClientScopes = value.defaultOptionalClientScopes;
      this._defaultRole.internalValue = value.defaultRole;
      this._defaultRoles = value.defaultRoles;
      this._defaultSignatureAlgorithm = value.defaultSignatureAlgorithm;
      this._directGrantFlow = value.directGrantFlow;
      this._displayName = value.displayName;
      this._displayNameHtml = value.displayNameHtml;
      this._dockerAuthenticationFlow = value.dockerAuthenticationFlow;
      this._duplicateEmailsAllowed = value.duplicateEmailsAllowed;
      this._editUsernameAllowed = value.editUsernameAllowed;
      this._emailTheme = value.emailTheme;
      this._enabled = value.enabled;
      this._enabledEventTypes = value.enabledEventTypes;
      this._eventsEnabled = value.eventsEnabled;
      this._eventsExpiration = value.eventsExpiration;
      this._eventsListeners = value.eventsListeners;
      this._failureFactor = value.failureFactor;
      this._federatedUsers.internalValue = value.federatedUsers;
      this._groups.internalValue = value.groups;
      this._id = value.id;
      this._identityProviderMappers.internalValue = value.identityProviderMappers;
      this._identityProviders.internalValue = value.identityProviders;
      this._internationalizationEnabled = value.internationalizationEnabled;
      this._keycloakVersion = value.keycloakVersion;
      this._loginTheme = value.loginTheme;
      this._loginWithEmailAllowed = value.loginWithEmailAllowed;
      this._maxDeltaTimeSeconds = value.maxDeltaTimeSeconds;
      this._maxFailureWaitSeconds = value.maxFailureWaitSeconds;
      this._minimumQuickLoginWaitSeconds = value.minimumQuickLoginWaitSeconds;
      this._notBefore = value.notBefore;
      this._oauth2DeviceCodeLifespan = value.oauth2DeviceCodeLifespan;
      this._oauth2DevicePollingInterval = value.oauth2DevicePollingInterval;
      this._oauthClients.internalValue = value.oauthClients;
      this._offlineSessionIdleTimeout = value.offlineSessionIdleTimeout;
      this._offlineSessionMaxLifespan = value.offlineSessionMaxLifespan;
      this._offlineSessionMaxLifespanEnabled = value.offlineSessionMaxLifespanEnabled;
      this._otpPolicyAlgorithm = value.otpPolicyAlgorithm;
      this._otpPolicyDigits = value.otpPolicyDigits;
      this._otpPolicyInitialCounter = value.otpPolicyInitialCounter;
      this._otpPolicyLookAheadWindow = value.otpPolicyLookAheadWindow;
      this._otpPolicyPeriod = value.otpPolicyPeriod;
      this._otpPolicyType = value.otpPolicyType;
      this._otpSupportedApplications = value.otpSupportedApplications;
      this._passwordCredentialGrantAllowed = value.passwordCredentialGrantAllowed;
      this._passwordPolicy = value.passwordPolicy;
      this._permanentLockout = value.permanentLockout;
      this._privateKey = value.privateKey;
      this._protocolMappers.internalValue = value.protocolMappers;
      this._publicKey = value.publicKey;
      this._quickLoginCheckMilliSeconds = value.quickLoginCheckMilliSeconds;
      this._realm = value.realm;
      this._realmCacheEnabled = value.realmCacheEnabled;
      this._refreshTokenMaxReuse = value.refreshTokenMaxReuse;
      this._registrationAllowed = value.registrationAllowed;
      this._registrationEmailAsUsername = value.registrationEmailAsUsername;
      this._registrationFlow = value.registrationFlow;
      this._rememberMe = value.rememberMe;
      this._requiredActions.internalValue = value.requiredActions;
      this._requiredCredentials = value.requiredCredentials;
      this._resetCredentialsFlow = value.resetCredentialsFlow;
      this._resetPasswordAllowed = value.resetPasswordAllowed;
      this._revokeRefreshToken = value.revokeRefreshToken;
      this._roles.internalValue = value.roles;
      this._scopeMappings.internalValue = value.scopeMappings;
      this._smtpServer = value.smtpServer;
      this._social = value.social;
      this._socialProviders = value.socialProviders;
      this._sslRequired = value.sslRequired;
      this._ssoSessionIdleTimeout = value.ssoSessionIdleTimeout;
      this._ssoSessionIdleTimeoutRememberMe = value.ssoSessionIdleTimeoutRememberMe;
      this._ssoSessionMaxLifespan = value.ssoSessionMaxLifespan;
      this._ssoSessionMaxLifespanRememberMe = value.ssoSessionMaxLifespanRememberMe;
      this._supportedLocales = value.supportedLocales;
      this._updateProfileOnInitialSocialLogin = value.updateProfileOnInitialSocialLogin;
      this._userCacheEnabled = value.userCacheEnabled;
      this._userFederationMappers.internalValue = value.userFederationMappers;
      this._userFederationProviders.internalValue = value.userFederationProviders;
      this._userManagedAccessAllowed = value.userManagedAccessAllowed;
      this._users.internalValue = value.users;
      this._verifyEmail = value.verifyEmail;
      this._waitIncrementSeconds = value.waitIncrementSeconds;
      this._webAuthnPolicyAcceptableAaguids = value.webAuthnPolicyAcceptableAaguids;
      this._webAuthnPolicyAttestationConveyancePreference = value.webAuthnPolicyAttestationConveyancePreference;
      this._webAuthnPolicyAuthenticatorAttachment = value.webAuthnPolicyAuthenticatorAttachment;
      this._webAuthnPolicyAvoidSameAuthenticatorRegister = value.webAuthnPolicyAvoidSameAuthenticatorRegister;
      this._webAuthnPolicyCreateTimeout = value.webAuthnPolicyCreateTimeout;
      this._webAuthnPolicyPasswordlessAcceptableAaguids = value.webAuthnPolicyPasswordlessAcceptableAaguids;
      this._webAuthnPolicyPasswordlessAttestationConveyancePreference = value.webAuthnPolicyPasswordlessAttestationConveyancePreference;
      this._webAuthnPolicyPasswordlessAuthenticatorAttachment = value.webAuthnPolicyPasswordlessAuthenticatorAttachment;
      this._webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister = value.webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister;
      this._webAuthnPolicyPasswordlessCreateTimeout = value.webAuthnPolicyPasswordlessCreateTimeout;
      this._webAuthnPolicyPasswordlessRequireResidentKey = value.webAuthnPolicyPasswordlessRequireResidentKey;
      this._webAuthnPolicyPasswordlessRpEntityName = value.webAuthnPolicyPasswordlessRpEntityName;
      this._webAuthnPolicyPasswordlessRpId = value.webAuthnPolicyPasswordlessRpId;
      this._webAuthnPolicyPasswordlessSignatureAlgorithms = value.webAuthnPolicyPasswordlessSignatureAlgorithms;
      this._webAuthnPolicyPasswordlessUserVerificationRequirement = value.webAuthnPolicyPasswordlessUserVerificationRequirement;
      this._webAuthnPolicyRequireResidentKey = value.webAuthnPolicyRequireResidentKey;
      this._webAuthnPolicyRpEntityName = value.webAuthnPolicyRpEntityName;
      this._webAuthnPolicyRpId = value.webAuthnPolicyRpId;
      this._webAuthnPolicySignatureAlgorithms = value.webAuthnPolicySignatureAlgorithms;
      this._webAuthnPolicyUserVerificationRequirement = value.webAuthnPolicyUserVerificationRequirement;
    }
  }

  // access_code_lifespan - computed: false, optional: true, required: false
  private _accessCodeLifespan?: number; 
  public get accessCodeLifespan() {
    return this.getNumberAttribute('access_code_lifespan');
  }
  public set accessCodeLifespan(value: number) {
    this._accessCodeLifespan = value;
  }
  public resetAccessCodeLifespan() {
    this._accessCodeLifespan = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessCodeLifespanInput() {
    return this._accessCodeLifespan;
  }

  // access_code_lifespan_login - computed: false, optional: true, required: false
  private _accessCodeLifespanLogin?: number; 
  public get accessCodeLifespanLogin() {
    return this.getNumberAttribute('access_code_lifespan_login');
  }
  public set accessCodeLifespanLogin(value: number) {
    this._accessCodeLifespanLogin = value;
  }
  public resetAccessCodeLifespanLogin() {
    this._accessCodeLifespanLogin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessCodeLifespanLoginInput() {
    return this._accessCodeLifespanLogin;
  }

  // access_code_lifespan_user_action - computed: false, optional: true, required: false
  private _accessCodeLifespanUserAction?: number; 
  public get accessCodeLifespanUserAction() {
    return this.getNumberAttribute('access_code_lifespan_user_action');
  }
  public set accessCodeLifespanUserAction(value: number) {
    this._accessCodeLifespanUserAction = value;
  }
  public resetAccessCodeLifespanUserAction() {
    this._accessCodeLifespanUserAction = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessCodeLifespanUserActionInput() {
    return this._accessCodeLifespanUserAction;
  }

  // access_token_lifespan - computed: false, optional: true, required: false
  private _accessTokenLifespan?: number; 
  public get accessTokenLifespan() {
    return this.getNumberAttribute('access_token_lifespan');
  }
  public set accessTokenLifespan(value: number) {
    this._accessTokenLifespan = value;
  }
  public resetAccessTokenLifespan() {
    this._accessTokenLifespan = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessTokenLifespanInput() {
    return this._accessTokenLifespan;
  }

  // access_token_lifespan_for_implicit_flow - computed: false, optional: true, required: false
  private _accessTokenLifespanForImplicitFlow?: number; 
  public get accessTokenLifespanForImplicitFlow() {
    return this.getNumberAttribute('access_token_lifespan_for_implicit_flow');
  }
  public set accessTokenLifespanForImplicitFlow(value: number) {
    this._accessTokenLifespanForImplicitFlow = value;
  }
  public resetAccessTokenLifespanForImplicitFlow() {
    this._accessTokenLifespanForImplicitFlow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessTokenLifespanForImplicitFlowInput() {
    return this._accessTokenLifespanForImplicitFlow;
  }

  // account_theme - computed: false, optional: true, required: false
  private _accountTheme?: string; 
  public get accountTheme() {
    return this.getStringAttribute('account_theme');
  }
  public set accountTheme(value: string) {
    this._accountTheme = value;
  }
  public resetAccountTheme() {
    this._accountTheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accountThemeInput() {
    return this._accountTheme;
  }

  // action_token_generated_by_admin_lifespan - computed: false, optional: true, required: false
  private _actionTokenGeneratedByAdminLifespan?: number; 
  public get actionTokenGeneratedByAdminLifespan() {
    return this.getNumberAttribute('action_token_generated_by_admin_lifespan');
  }
  public set actionTokenGeneratedByAdminLifespan(value: number) {
    this._actionTokenGeneratedByAdminLifespan = value;
  }
  public resetActionTokenGeneratedByAdminLifespan() {
    this._actionTokenGeneratedByAdminLifespan = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionTokenGeneratedByAdminLifespanInput() {
    return this._actionTokenGeneratedByAdminLifespan;
  }

  // action_token_generated_by_user_lifespan - computed: false, optional: true, required: false
  private _actionTokenGeneratedByUserLifespan?: number; 
  public get actionTokenGeneratedByUserLifespan() {
    return this.getNumberAttribute('action_token_generated_by_user_lifespan');
  }
  public set actionTokenGeneratedByUserLifespan(value: number) {
    this._actionTokenGeneratedByUserLifespan = value;
  }
  public resetActionTokenGeneratedByUserLifespan() {
    this._actionTokenGeneratedByUserLifespan = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionTokenGeneratedByUserLifespanInput() {
    return this._actionTokenGeneratedByUserLifespan;
  }

  // admin_events_details_enabled - computed: false, optional: true, required: false
  private _adminEventsDetailsEnabled?: boolean | cdktf.IResolvable; 
  public get adminEventsDetailsEnabled() {
    return this.getBooleanAttribute('admin_events_details_enabled');
  }
  public set adminEventsDetailsEnabled(value: boolean | cdktf.IResolvable) {
    this._adminEventsDetailsEnabled = value;
  }
  public resetAdminEventsDetailsEnabled() {
    this._adminEventsDetailsEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminEventsDetailsEnabledInput() {
    return this._adminEventsDetailsEnabled;
  }

  // admin_events_enabled - computed: false, optional: true, required: false
  private _adminEventsEnabled?: boolean | cdktf.IResolvable; 
  public get adminEventsEnabled() {
    return this.getBooleanAttribute('admin_events_enabled');
  }
  public set adminEventsEnabled(value: boolean | cdktf.IResolvable) {
    this._adminEventsEnabled = value;
  }
  public resetAdminEventsEnabled() {
    this._adminEventsEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminEventsEnabledInput() {
    return this._adminEventsEnabled;
  }

  // admin_theme - computed: false, optional: true, required: false
  private _adminTheme?: string; 
  public get adminTheme() {
    return this.getStringAttribute('admin_theme');
  }
  public set adminTheme(value: string) {
    this._adminTheme = value;
  }
  public resetAdminTheme() {
    this._adminTheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminThemeInput() {
    return this._adminTheme;
  }

  // application_scope_mappings - computed: false, optional: true, required: false
  private _applicationScopeMappings?: { [key: string]: string }; 
  public get applicationScopeMappings() {
    return this.getStringMapAttribute('application_scope_mappings');
  }
  public set applicationScopeMappings(value: { [key: string]: string }) {
    this._applicationScopeMappings = value;
  }
  public resetApplicationScopeMappings() {
    this._applicationScopeMappings = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get applicationScopeMappingsInput() {
    return this._applicationScopeMappings;
  }

  // applications - computed: false, optional: true, required: false
  private _applications = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplicationsList(this, "applications", false);
  public get applications() {
    return this._applications;
  }
  public putApplications(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmApplications[] | cdktf.IResolvable) {
    this._applications.internalValue = value;
  }
  public resetApplications() {
    this._applications.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get applicationsInput() {
    return this._applications.internalValue;
  }

  // attributes - computed: false, optional: true, required: false
  private _attributes?: { [key: string]: string }; 
  public get attributes() {
    return this.getStringMapAttribute('attributes');
  }
  public set attributes(value: { [key: string]: string }) {
    this._attributes = value;
  }
  public resetAttributes() {
    this._attributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attributesInput() {
    return this._attributes;
  }

  // authentication_flows - computed: false, optional: true, required: false
  private _authenticationFlows = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlowsList(this, "authentication_flows", false);
  public get authenticationFlows() {
    return this._authenticationFlows;
  }
  public putAuthenticationFlows(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticationFlows[] | cdktf.IResolvable) {
    this._authenticationFlows.internalValue = value;
  }
  public resetAuthenticationFlows() {
    this._authenticationFlows.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authenticationFlowsInput() {
    return this._authenticationFlows.internalValue;
  }

  // authenticator_config - computed: false, optional: true, required: false
  private _authenticatorConfig = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfigList(this, "authenticator_config", false);
  public get authenticatorConfig() {
    return this._authenticatorConfig;
  }
  public putAuthenticatorConfig(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmAuthenticatorConfig[] | cdktf.IResolvable) {
    this._authenticatorConfig.internalValue = value;
  }
  public resetAuthenticatorConfig() {
    this._authenticatorConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authenticatorConfigInput() {
    return this._authenticatorConfig.internalValue;
  }

  // browser_flow - computed: false, optional: true, required: false
  private _browserFlow?: string; 
  public get browserFlow() {
    return this.getStringAttribute('browser_flow');
  }
  public set browserFlow(value: string) {
    this._browserFlow = value;
  }
  public resetBrowserFlow() {
    this._browserFlow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get browserFlowInput() {
    return this._browserFlow;
  }

  // browser_security_headers - computed: false, optional: true, required: false
  private _browserSecurityHeaders?: { [key: string]: string }; 
  public get browserSecurityHeaders() {
    return this.getStringMapAttribute('browser_security_headers');
  }
  public set browserSecurityHeaders(value: { [key: string]: string }) {
    this._browserSecurityHeaders = value;
  }
  public resetBrowserSecurityHeaders() {
    this._browserSecurityHeaders = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get browserSecurityHeadersInput() {
    return this._browserSecurityHeaders;
  }

  // brute_force_protected - computed: false, optional: true, required: false
  private _bruteForceProtected?: boolean | cdktf.IResolvable; 
  public get bruteForceProtected() {
    return this.getBooleanAttribute('brute_force_protected');
  }
  public set bruteForceProtected(value: boolean | cdktf.IResolvable) {
    this._bruteForceProtected = value;
  }
  public resetBruteForceProtected() {
    this._bruteForceProtected = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bruteForceProtectedInput() {
    return this._bruteForceProtected;
  }

  // certificate - computed: false, optional: true, required: false
  private _certificate?: string; 
  public get certificate() {
    return this.getStringAttribute('certificate');
  }
  public set certificate(value: string) {
    this._certificate = value;
  }
  public resetCertificate() {
    this._certificate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get certificateInput() {
    return this._certificate;
  }

  // client_authentication_flow - computed: false, optional: true, required: false
  private _clientAuthenticationFlow?: string; 
  public get clientAuthenticationFlow() {
    return this.getStringAttribute('client_authentication_flow');
  }
  public set clientAuthenticationFlow(value: string) {
    this._clientAuthenticationFlow = value;
  }
  public resetClientAuthenticationFlow() {
    this._clientAuthenticationFlow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientAuthenticationFlowInput() {
    return this._clientAuthenticationFlow;
  }

  // client_offline_session_idle_timeout - computed: false, optional: true, required: false
  private _clientOfflineSessionIdleTimeout?: number; 
  public get clientOfflineSessionIdleTimeout() {
    return this.getNumberAttribute('client_offline_session_idle_timeout');
  }
  public set clientOfflineSessionIdleTimeout(value: number) {
    this._clientOfflineSessionIdleTimeout = value;
  }
  public resetClientOfflineSessionIdleTimeout() {
    this._clientOfflineSessionIdleTimeout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientOfflineSessionIdleTimeoutInput() {
    return this._clientOfflineSessionIdleTimeout;
  }

  // client_offline_session_max_lifespan - computed: false, optional: true, required: false
  private _clientOfflineSessionMaxLifespan?: number; 
  public get clientOfflineSessionMaxLifespan() {
    return this.getNumberAttribute('client_offline_session_max_lifespan');
  }
  public set clientOfflineSessionMaxLifespan(value: number) {
    this._clientOfflineSessionMaxLifespan = value;
  }
  public resetClientOfflineSessionMaxLifespan() {
    this._clientOfflineSessionMaxLifespan = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientOfflineSessionMaxLifespanInput() {
    return this._clientOfflineSessionMaxLifespan;
  }

  // client_policies - computed: false, optional: true, required: false
  private _clientPolicies?: { [key: string]: string }; 
  public get clientPolicies() {
    return this.getStringMapAttribute('client_policies');
  }
  public set clientPolicies(value: { [key: string]: string }) {
    this._clientPolicies = value;
  }
  public resetClientPolicies() {
    this._clientPolicies = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientPoliciesInput() {
    return this._clientPolicies;
  }

  // client_profiles - computed: false, optional: true, required: false
  private _clientProfiles?: { [key: string]: string }; 
  public get clientProfiles() {
    return this.getStringMapAttribute('client_profiles');
  }
  public set clientProfiles(value: { [key: string]: string }) {
    this._clientProfiles = value;
  }
  public resetClientProfiles() {
    this._clientProfiles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientProfilesInput() {
    return this._clientProfiles;
  }

  // client_scope_mappings - computed: false, optional: true, required: false
  private _clientScopeMappings?: { [key: string]: string }; 
  public get clientScopeMappings() {
    return this.getStringMapAttribute('client_scope_mappings');
  }
  public set clientScopeMappings(value: { [key: string]: string }) {
    this._clientScopeMappings = value;
  }
  public resetClientScopeMappings() {
    this._clientScopeMappings = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientScopeMappingsInput() {
    return this._clientScopeMappings;
  }

  // client_scopes - computed: false, optional: true, required: false
  private _clientScopes = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopesList(this, "client_scopes", false);
  public get clientScopes() {
    return this._clientScopes;
  }
  public putClientScopes(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientScopes[] | cdktf.IResolvable) {
    this._clientScopes.internalValue = value;
  }
  public resetClientScopes() {
    this._clientScopes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientScopesInput() {
    return this._clientScopes.internalValue;
  }

  // client_session_idle_timeout - computed: false, optional: true, required: false
  private _clientSessionIdleTimeout?: number; 
  public get clientSessionIdleTimeout() {
    return this.getNumberAttribute('client_session_idle_timeout');
  }
  public set clientSessionIdleTimeout(value: number) {
    this._clientSessionIdleTimeout = value;
  }
  public resetClientSessionIdleTimeout() {
    this._clientSessionIdleTimeout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientSessionIdleTimeoutInput() {
    return this._clientSessionIdleTimeout;
  }

  // client_session_max_lifespan - computed: false, optional: true, required: false
  private _clientSessionMaxLifespan?: number; 
  public get clientSessionMaxLifespan() {
    return this.getNumberAttribute('client_session_max_lifespan');
  }
  public set clientSessionMaxLifespan(value: number) {
    this._clientSessionMaxLifespan = value;
  }
  public resetClientSessionMaxLifespan() {
    this._clientSessionMaxLifespan = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientSessionMaxLifespanInput() {
    return this._clientSessionMaxLifespan;
  }

  // client_templates - computed: false, optional: true, required: false
  private _clientTemplates = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplatesList(this, "client_templates", false);
  public get clientTemplates() {
    return this._clientTemplates;
  }
  public putClientTemplates(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientTemplates[] | cdktf.IResolvable) {
    this._clientTemplates.internalValue = value;
  }
  public resetClientTemplates() {
    this._clientTemplates.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientTemplatesInput() {
    return this._clientTemplates.internalValue;
  }

  // clients - computed: false, optional: true, required: false
  private _clients = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClientsList(this, "clients", false);
  public get clients() {
    return this._clients;
  }
  public putClients(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmClients[] | cdktf.IResolvable) {
    this._clients.internalValue = value;
  }
  public resetClients() {
    this._clients.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientsInput() {
    return this._clients.internalValue;
  }

  // code_secret - computed: false, optional: true, required: false
  private _codeSecret?: string; 
  public get codeSecret() {
    return this.getStringAttribute('code_secret');
  }
  public set codeSecret(value: string) {
    this._codeSecret = value;
  }
  public resetCodeSecret() {
    this._codeSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get codeSecretInput() {
    return this._codeSecret;
  }

  // components - computed: false, optional: true, required: false
  private _components?: { [key: string]: string }; 
  public get components() {
    return this.getStringMapAttribute('components');
  }
  public set components(value: { [key: string]: string }) {
    this._components = value;
  }
  public resetComponents() {
    this._components = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components;
  }

  // default_default_client_scopes - computed: false, optional: true, required: false
  private _defaultDefaultClientScopes?: string[]; 
  public get defaultDefaultClientScopes() {
    return this.getListAttribute('default_default_client_scopes');
  }
  public set defaultDefaultClientScopes(value: string[]) {
    this._defaultDefaultClientScopes = value;
  }
  public resetDefaultDefaultClientScopes() {
    this._defaultDefaultClientScopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultDefaultClientScopesInput() {
    return this._defaultDefaultClientScopes;
  }

  // default_groups - computed: false, optional: true, required: false
  private _defaultGroups?: string[]; 
  public get defaultGroups() {
    return this.getListAttribute('default_groups');
  }
  public set defaultGroups(value: string[]) {
    this._defaultGroups = value;
  }
  public resetDefaultGroups() {
    this._defaultGroups = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultGroupsInput() {
    return this._defaultGroups;
  }

  // default_locale - computed: false, optional: true, required: false
  private _defaultLocale?: string; 
  public get defaultLocale() {
    return this.getStringAttribute('default_locale');
  }
  public set defaultLocale(value: string) {
    this._defaultLocale = value;
  }
  public resetDefaultLocale() {
    this._defaultLocale = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultLocaleInput() {
    return this._defaultLocale;
  }

  // default_optional_client_scopes - computed: false, optional: true, required: false
  private _defaultOptionalClientScopes?: string[]; 
  public get defaultOptionalClientScopes() {
    return this.getListAttribute('default_optional_client_scopes');
  }
  public set defaultOptionalClientScopes(value: string[]) {
    this._defaultOptionalClientScopes = value;
  }
  public resetDefaultOptionalClientScopes() {
    this._defaultOptionalClientScopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultOptionalClientScopesInput() {
    return this._defaultOptionalClientScopes;
  }

  // default_role - computed: false, optional: true, required: false
  private _defaultRole = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRoleOutputReference(this, "default_role");
  public get defaultRole() {
    return this._defaultRole;
  }
  public putDefaultRole(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmDefaultRole) {
    this._defaultRole.internalValue = value;
  }
  public resetDefaultRole() {
    this._defaultRole.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultRoleInput() {
    return this._defaultRole.internalValue;
  }

  // default_roles - computed: false, optional: true, required: false
  private _defaultRoles?: string[]; 
  public get defaultRoles() {
    return this.getListAttribute('default_roles');
  }
  public set defaultRoles(value: string[]) {
    this._defaultRoles = value;
  }
  public resetDefaultRoles() {
    this._defaultRoles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultRolesInput() {
    return this._defaultRoles;
  }

  // default_signature_algorithm - computed: false, optional: true, required: false
  private _defaultSignatureAlgorithm?: string; 
  public get defaultSignatureAlgorithm() {
    return this.getStringAttribute('default_signature_algorithm');
  }
  public set defaultSignatureAlgorithm(value: string) {
    this._defaultSignatureAlgorithm = value;
  }
  public resetDefaultSignatureAlgorithm() {
    this._defaultSignatureAlgorithm = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultSignatureAlgorithmInput() {
    return this._defaultSignatureAlgorithm;
  }

  // direct_grant_flow - computed: false, optional: true, required: false
  private _directGrantFlow?: string; 
  public get directGrantFlow() {
    return this.getStringAttribute('direct_grant_flow');
  }
  public set directGrantFlow(value: string) {
    this._directGrantFlow = value;
  }
  public resetDirectGrantFlow() {
    this._directGrantFlow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directGrantFlowInput() {
    return this._directGrantFlow;
  }

  // display_name - computed: false, optional: true, required: false
  private _displayName?: string; 
  public get displayName() {
    return this.getStringAttribute('display_name');
  }
  public set displayName(value: string) {
    this._displayName = value;
  }
  public resetDisplayName() {
    this._displayName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameInput() {
    return this._displayName;
  }

  // display_name_html - computed: false, optional: true, required: false
  private _displayNameHtml?: string; 
  public get displayNameHtml() {
    return this.getStringAttribute('display_name_html');
  }
  public set displayNameHtml(value: string) {
    this._displayNameHtml = value;
  }
  public resetDisplayNameHtml() {
    this._displayNameHtml = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get displayNameHtmlInput() {
    return this._displayNameHtml;
  }

  // docker_authentication_flow - computed: false, optional: true, required: false
  private _dockerAuthenticationFlow?: string; 
  public get dockerAuthenticationFlow() {
    return this.getStringAttribute('docker_authentication_flow');
  }
  public set dockerAuthenticationFlow(value: string) {
    this._dockerAuthenticationFlow = value;
  }
  public resetDockerAuthenticationFlow() {
    this._dockerAuthenticationFlow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dockerAuthenticationFlowInput() {
    return this._dockerAuthenticationFlow;
  }

  // duplicate_emails_allowed - computed: false, optional: true, required: false
  private _duplicateEmailsAllowed?: boolean | cdktf.IResolvable; 
  public get duplicateEmailsAllowed() {
    return this.getBooleanAttribute('duplicate_emails_allowed');
  }
  public set duplicateEmailsAllowed(value: boolean | cdktf.IResolvable) {
    this._duplicateEmailsAllowed = value;
  }
  public resetDuplicateEmailsAllowed() {
    this._duplicateEmailsAllowed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get duplicateEmailsAllowedInput() {
    return this._duplicateEmailsAllowed;
  }

  // edit_username_allowed - computed: false, optional: true, required: false
  private _editUsernameAllowed?: boolean | cdktf.IResolvable; 
  public get editUsernameAllowed() {
    return this.getBooleanAttribute('edit_username_allowed');
  }
  public set editUsernameAllowed(value: boolean | cdktf.IResolvable) {
    this._editUsernameAllowed = value;
  }
  public resetEditUsernameAllowed() {
    this._editUsernameAllowed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get editUsernameAllowedInput() {
    return this._editUsernameAllowed;
  }

  // email_theme - computed: false, optional: true, required: false
  private _emailTheme?: string; 
  public get emailTheme() {
    return this.getStringAttribute('email_theme');
  }
  public set emailTheme(value: string) {
    this._emailTheme = value;
  }
  public resetEmailTheme() {
    this._emailTheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emailThemeInput() {
    return this._emailTheme;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // enabled_event_types - computed: false, optional: true, required: false
  private _enabledEventTypes?: string[]; 
  public get enabledEventTypes() {
    return this.getListAttribute('enabled_event_types');
  }
  public set enabledEventTypes(value: string[]) {
    this._enabledEventTypes = value;
  }
  public resetEnabledEventTypes() {
    this._enabledEventTypes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledEventTypesInput() {
    return this._enabledEventTypes;
  }

  // events_enabled - computed: false, optional: true, required: false
  private _eventsEnabled?: boolean | cdktf.IResolvable; 
  public get eventsEnabled() {
    return this.getBooleanAttribute('events_enabled');
  }
  public set eventsEnabled(value: boolean | cdktf.IResolvable) {
    this._eventsEnabled = value;
  }
  public resetEventsEnabled() {
    this._eventsEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get eventsEnabledInput() {
    return this._eventsEnabled;
  }

  // events_expiration - computed: false, optional: true, required: false
  private _eventsExpiration?: number; 
  public get eventsExpiration() {
    return this.getNumberAttribute('events_expiration');
  }
  public set eventsExpiration(value: number) {
    this._eventsExpiration = value;
  }
  public resetEventsExpiration() {
    this._eventsExpiration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get eventsExpirationInput() {
    return this._eventsExpiration;
  }

  // events_listeners - computed: false, optional: true, required: false
  private _eventsListeners?: string[]; 
  public get eventsListeners() {
    return this.getListAttribute('events_listeners');
  }
  public set eventsListeners(value: string[]) {
    this._eventsListeners = value;
  }
  public resetEventsListeners() {
    this._eventsListeners = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get eventsListenersInput() {
    return this._eventsListeners;
  }

  // failure_factor - computed: false, optional: true, required: false
  private _failureFactor?: number; 
  public get failureFactor() {
    return this.getNumberAttribute('failure_factor');
  }
  public set failureFactor(value: number) {
    this._failureFactor = value;
  }
  public resetFailureFactor() {
    this._failureFactor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get failureFactorInput() {
    return this._failureFactor;
  }

  // federated_users - computed: false, optional: true, required: false
  private _federatedUsers = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsersList(this, "federated_users", false);
  public get federatedUsers() {
    return this._federatedUsers;
  }
  public putFederatedUsers(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmFederatedUsers[] | cdktf.IResolvable) {
    this._federatedUsers.internalValue = value;
  }
  public resetFederatedUsers() {
    this._federatedUsers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get federatedUsersInput() {
    return this._federatedUsers.internalValue;
  }

  // groups - computed: false, optional: true, required: false
  private _groups = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroupsList(this, "groups", false);
  public get groups() {
    return this._groups;
  }
  public putGroups(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmGroups[] | cdktf.IResolvable) {
    this._groups.internalValue = value;
  }
  public resetGroups() {
    this._groups.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupsInput() {
    return this._groups.internalValue;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // identity_provider_mappers - computed: false, optional: true, required: false
  private _identityProviderMappers = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappersList(this, "identity_provider_mappers", false);
  public get identityProviderMappers() {
    return this._identityProviderMappers;
  }
  public putIdentityProviderMappers(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviderMappers[] | cdktf.IResolvable) {
    this._identityProviderMappers.internalValue = value;
  }
  public resetIdentityProviderMappers() {
    this._identityProviderMappers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get identityProviderMappersInput() {
    return this._identityProviderMappers.internalValue;
  }

  // identity_providers - computed: false, optional: true, required: false
  private _identityProviders = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProvidersList(this, "identity_providers", false);
  public get identityProviders() {
    return this._identityProviders;
  }
  public putIdentityProviders(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmIdentityProviders[] | cdktf.IResolvable) {
    this._identityProviders.internalValue = value;
  }
  public resetIdentityProviders() {
    this._identityProviders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get identityProvidersInput() {
    return this._identityProviders.internalValue;
  }

  // internationalization_enabled - computed: false, optional: true, required: false
  private _internationalizationEnabled?: boolean | cdktf.IResolvable; 
  public get internationalizationEnabled() {
    return this.getBooleanAttribute('internationalization_enabled');
  }
  public set internationalizationEnabled(value: boolean | cdktf.IResolvable) {
    this._internationalizationEnabled = value;
  }
  public resetInternationalizationEnabled() {
    this._internationalizationEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get internationalizationEnabledInput() {
    return this._internationalizationEnabled;
  }

  // keycloak_version - computed: false, optional: true, required: false
  private _keycloakVersion?: string; 
  public get keycloakVersion() {
    return this.getStringAttribute('keycloak_version');
  }
  public set keycloakVersion(value: string) {
    this._keycloakVersion = value;
  }
  public resetKeycloakVersion() {
    this._keycloakVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keycloakVersionInput() {
    return this._keycloakVersion;
  }

  // login_theme - computed: false, optional: true, required: false
  private _loginTheme?: string; 
  public get loginTheme() {
    return this.getStringAttribute('login_theme');
  }
  public set loginTheme(value: string) {
    this._loginTheme = value;
  }
  public resetLoginTheme() {
    this._loginTheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get loginThemeInput() {
    return this._loginTheme;
  }

  // login_with_email_allowed - computed: false, optional: true, required: false
  private _loginWithEmailAllowed?: boolean | cdktf.IResolvable; 
  public get loginWithEmailAllowed() {
    return this.getBooleanAttribute('login_with_email_allowed');
  }
  public set loginWithEmailAllowed(value: boolean | cdktf.IResolvable) {
    this._loginWithEmailAllowed = value;
  }
  public resetLoginWithEmailAllowed() {
    this._loginWithEmailAllowed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get loginWithEmailAllowedInput() {
    return this._loginWithEmailAllowed;
  }

  // max_delta_time_seconds - computed: false, optional: true, required: false
  private _maxDeltaTimeSeconds?: number; 
  public get maxDeltaTimeSeconds() {
    return this.getNumberAttribute('max_delta_time_seconds');
  }
  public set maxDeltaTimeSeconds(value: number) {
    this._maxDeltaTimeSeconds = value;
  }
  public resetMaxDeltaTimeSeconds() {
    this._maxDeltaTimeSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxDeltaTimeSecondsInput() {
    return this._maxDeltaTimeSeconds;
  }

  // max_failure_wait_seconds - computed: false, optional: true, required: false
  private _maxFailureWaitSeconds?: number; 
  public get maxFailureWaitSeconds() {
    return this.getNumberAttribute('max_failure_wait_seconds');
  }
  public set maxFailureWaitSeconds(value: number) {
    this._maxFailureWaitSeconds = value;
  }
  public resetMaxFailureWaitSeconds() {
    this._maxFailureWaitSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxFailureWaitSecondsInput() {
    return this._maxFailureWaitSeconds;
  }

  // minimum_quick_login_wait_seconds - computed: false, optional: true, required: false
  private _minimumQuickLoginWaitSeconds?: number; 
  public get minimumQuickLoginWaitSeconds() {
    return this.getNumberAttribute('minimum_quick_login_wait_seconds');
  }
  public set minimumQuickLoginWaitSeconds(value: number) {
    this._minimumQuickLoginWaitSeconds = value;
  }
  public resetMinimumQuickLoginWaitSeconds() {
    this._minimumQuickLoginWaitSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minimumQuickLoginWaitSecondsInput() {
    return this._minimumQuickLoginWaitSeconds;
  }

  // not_before - computed: false, optional: true, required: false
  private _notBefore?: number; 
  public get notBefore() {
    return this.getNumberAttribute('not_before');
  }
  public set notBefore(value: number) {
    this._notBefore = value;
  }
  public resetNotBefore() {
    this._notBefore = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get notBeforeInput() {
    return this._notBefore;
  }

  // oauth2_device_code_lifespan - computed: false, optional: true, required: false
  private _oauth2DeviceCodeLifespan?: number; 
  public get oauth2DeviceCodeLifespan() {
    return this.getNumberAttribute('oauth2_device_code_lifespan');
  }
  public set oauth2DeviceCodeLifespan(value: number) {
    this._oauth2DeviceCodeLifespan = value;
  }
  public resetOauth2DeviceCodeLifespan() {
    this._oauth2DeviceCodeLifespan = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get oauth2DeviceCodeLifespanInput() {
    return this._oauth2DeviceCodeLifespan;
  }

  // oauth2_device_polling_interval - computed: false, optional: true, required: false
  private _oauth2DevicePollingInterval?: number; 
  public get oauth2DevicePollingInterval() {
    return this.getNumberAttribute('oauth2_device_polling_interval');
  }
  public set oauth2DevicePollingInterval(value: number) {
    this._oauth2DevicePollingInterval = value;
  }
  public resetOauth2DevicePollingInterval() {
    this._oauth2DevicePollingInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get oauth2DevicePollingIntervalInput() {
    return this._oauth2DevicePollingInterval;
  }

  // oauth_clients - computed: false, optional: true, required: false
  private _oauthClients = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClientsList(this, "oauth_clients", false);
  public get oauthClients() {
    return this._oauthClients;
  }
  public putOauthClients(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOauthClients[] | cdktf.IResolvable) {
    this._oauthClients.internalValue = value;
  }
  public resetOauthClients() {
    this._oauthClients.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get oauthClientsInput() {
    return this._oauthClients.internalValue;
  }

  // offline_session_idle_timeout - computed: false, optional: true, required: false
  private _offlineSessionIdleTimeout?: number; 
  public get offlineSessionIdleTimeout() {
    return this.getNumberAttribute('offline_session_idle_timeout');
  }
  public set offlineSessionIdleTimeout(value: number) {
    this._offlineSessionIdleTimeout = value;
  }
  public resetOfflineSessionIdleTimeout() {
    this._offlineSessionIdleTimeout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offlineSessionIdleTimeoutInput() {
    return this._offlineSessionIdleTimeout;
  }

  // offline_session_max_lifespan - computed: false, optional: true, required: false
  private _offlineSessionMaxLifespan?: number; 
  public get offlineSessionMaxLifespan() {
    return this.getNumberAttribute('offline_session_max_lifespan');
  }
  public set offlineSessionMaxLifespan(value: number) {
    this._offlineSessionMaxLifespan = value;
  }
  public resetOfflineSessionMaxLifespan() {
    this._offlineSessionMaxLifespan = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offlineSessionMaxLifespanInput() {
    return this._offlineSessionMaxLifespan;
  }

  // offline_session_max_lifespan_enabled - computed: false, optional: true, required: false
  private _offlineSessionMaxLifespanEnabled?: boolean | cdktf.IResolvable; 
  public get offlineSessionMaxLifespanEnabled() {
    return this.getBooleanAttribute('offline_session_max_lifespan_enabled');
  }
  public set offlineSessionMaxLifespanEnabled(value: boolean | cdktf.IResolvable) {
    this._offlineSessionMaxLifespanEnabled = value;
  }
  public resetOfflineSessionMaxLifespanEnabled() {
    this._offlineSessionMaxLifespanEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get offlineSessionMaxLifespanEnabledInput() {
    return this._offlineSessionMaxLifespanEnabled;
  }

  // otp_policy_algorithm - computed: false, optional: true, required: false
  private _otpPolicyAlgorithm?: string; 
  public get otpPolicyAlgorithm() {
    return this.getStringAttribute('otp_policy_algorithm');
  }
  public set otpPolicyAlgorithm(value: string) {
    this._otpPolicyAlgorithm = value;
  }
  public resetOtpPolicyAlgorithm() {
    this._otpPolicyAlgorithm = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get otpPolicyAlgorithmInput() {
    return this._otpPolicyAlgorithm;
  }

  // otp_policy_digits - computed: false, optional: true, required: false
  private _otpPolicyDigits?: number; 
  public get otpPolicyDigits() {
    return this.getNumberAttribute('otp_policy_digits');
  }
  public set otpPolicyDigits(value: number) {
    this._otpPolicyDigits = value;
  }
  public resetOtpPolicyDigits() {
    this._otpPolicyDigits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get otpPolicyDigitsInput() {
    return this._otpPolicyDigits;
  }

  // otp_policy_initial_counter - computed: false, optional: true, required: false
  private _otpPolicyInitialCounter?: number; 
  public get otpPolicyInitialCounter() {
    return this.getNumberAttribute('otp_policy_initial_counter');
  }
  public set otpPolicyInitialCounter(value: number) {
    this._otpPolicyInitialCounter = value;
  }
  public resetOtpPolicyInitialCounter() {
    this._otpPolicyInitialCounter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get otpPolicyInitialCounterInput() {
    return this._otpPolicyInitialCounter;
  }

  // otp_policy_look_ahead_window - computed: false, optional: true, required: false
  private _otpPolicyLookAheadWindow?: number; 
  public get otpPolicyLookAheadWindow() {
    return this.getNumberAttribute('otp_policy_look_ahead_window');
  }
  public set otpPolicyLookAheadWindow(value: number) {
    this._otpPolicyLookAheadWindow = value;
  }
  public resetOtpPolicyLookAheadWindow() {
    this._otpPolicyLookAheadWindow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get otpPolicyLookAheadWindowInput() {
    return this._otpPolicyLookAheadWindow;
  }

  // otp_policy_period - computed: false, optional: true, required: false
  private _otpPolicyPeriod?: number; 
  public get otpPolicyPeriod() {
    return this.getNumberAttribute('otp_policy_period');
  }
  public set otpPolicyPeriod(value: number) {
    this._otpPolicyPeriod = value;
  }
  public resetOtpPolicyPeriod() {
    this._otpPolicyPeriod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get otpPolicyPeriodInput() {
    return this._otpPolicyPeriod;
  }

  // otp_policy_type - computed: false, optional: true, required: false
  private _otpPolicyType?: string; 
  public get otpPolicyType() {
    return this.getStringAttribute('otp_policy_type');
  }
  public set otpPolicyType(value: string) {
    this._otpPolicyType = value;
  }
  public resetOtpPolicyType() {
    this._otpPolicyType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get otpPolicyTypeInput() {
    return this._otpPolicyType;
  }

  // otp_supported_applications - computed: false, optional: true, required: false
  private _otpSupportedApplications?: string[]; 
  public get otpSupportedApplications() {
    return this.getListAttribute('otp_supported_applications');
  }
  public set otpSupportedApplications(value: string[]) {
    this._otpSupportedApplications = value;
  }
  public resetOtpSupportedApplications() {
    this._otpSupportedApplications = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get otpSupportedApplicationsInput() {
    return this._otpSupportedApplications;
  }

  // password_credential_grant_allowed - computed: false, optional: true, required: false
  private _passwordCredentialGrantAllowed?: boolean | cdktf.IResolvable; 
  public get passwordCredentialGrantAllowed() {
    return this.getBooleanAttribute('password_credential_grant_allowed');
  }
  public set passwordCredentialGrantAllowed(value: boolean | cdktf.IResolvable) {
    this._passwordCredentialGrantAllowed = value;
  }
  public resetPasswordCredentialGrantAllowed() {
    this._passwordCredentialGrantAllowed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordCredentialGrantAllowedInput() {
    return this._passwordCredentialGrantAllowed;
  }

  // password_policy - computed: false, optional: true, required: false
  private _passwordPolicy?: string; 
  public get passwordPolicy() {
    return this.getStringAttribute('password_policy');
  }
  public set passwordPolicy(value: string) {
    this._passwordPolicy = value;
  }
  public resetPasswordPolicy() {
    this._passwordPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordPolicyInput() {
    return this._passwordPolicy;
  }

  // permanent_lockout - computed: false, optional: true, required: false
  private _permanentLockout?: boolean | cdktf.IResolvable; 
  public get permanentLockout() {
    return this.getBooleanAttribute('permanent_lockout');
  }
  public set permanentLockout(value: boolean | cdktf.IResolvable) {
    this._permanentLockout = value;
  }
  public resetPermanentLockout() {
    this._permanentLockout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get permanentLockoutInput() {
    return this._permanentLockout;
  }

  // private_key - computed: false, optional: true, required: false
  private _privateKey?: string; 
  public get privateKey() {
    return this.getStringAttribute('private_key');
  }
  public set privateKey(value: string) {
    this._privateKey = value;
  }
  public resetPrivateKey() {
    this._privateKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get privateKeyInput() {
    return this._privateKey;
  }

  // protocol_mappers - computed: false, optional: true, required: false
  private _protocolMappers = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappersList(this, "protocol_mappers", false);
  public get protocolMappers() {
    return this._protocolMappers;
  }
  public putProtocolMappers(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmProtocolMappers[] | cdktf.IResolvable) {
    this._protocolMappers.internalValue = value;
  }
  public resetProtocolMappers() {
    this._protocolMappers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolMappersInput() {
    return this._protocolMappers.internalValue;
  }

  // public_key - computed: false, optional: true, required: false
  private _publicKey?: string; 
  public get publicKey() {
    return this.getStringAttribute('public_key');
  }
  public set publicKey(value: string) {
    this._publicKey = value;
  }
  public resetPublicKey() {
    this._publicKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get publicKeyInput() {
    return this._publicKey;
  }

  // quick_login_check_milli_seconds - computed: false, optional: true, required: false
  private _quickLoginCheckMilliSeconds?: number; 
  public get quickLoginCheckMilliSeconds() {
    return this.getNumberAttribute('quick_login_check_milli_seconds');
  }
  public set quickLoginCheckMilliSeconds(value: number) {
    this._quickLoginCheckMilliSeconds = value;
  }
  public resetQuickLoginCheckMilliSeconds() {
    this._quickLoginCheckMilliSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get quickLoginCheckMilliSecondsInput() {
    return this._quickLoginCheckMilliSeconds;
  }

  // realm - computed: false, optional: true, required: false
  private _realm?: string; 
  public get realm() {
    return this.getStringAttribute('realm');
  }
  public set realm(value: string) {
    this._realm = value;
  }
  public resetRealm() {
    this._realm = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get realmInput() {
    return this._realm;
  }

  // realm_cache_enabled - computed: false, optional: true, required: false
  private _realmCacheEnabled?: boolean | cdktf.IResolvable; 
  public get realmCacheEnabled() {
    return this.getBooleanAttribute('realm_cache_enabled');
  }
  public set realmCacheEnabled(value: boolean | cdktf.IResolvable) {
    this._realmCacheEnabled = value;
  }
  public resetRealmCacheEnabled() {
    this._realmCacheEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get realmCacheEnabledInput() {
    return this._realmCacheEnabled;
  }

  // refresh_token_max_reuse - computed: false, optional: true, required: false
  private _refreshTokenMaxReuse?: number; 
  public get refreshTokenMaxReuse() {
    return this.getNumberAttribute('refresh_token_max_reuse');
  }
  public set refreshTokenMaxReuse(value: number) {
    this._refreshTokenMaxReuse = value;
  }
  public resetRefreshTokenMaxReuse() {
    this._refreshTokenMaxReuse = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get refreshTokenMaxReuseInput() {
    return this._refreshTokenMaxReuse;
  }

  // registration_allowed - computed: false, optional: true, required: false
  private _registrationAllowed?: boolean | cdktf.IResolvable; 
  public get registrationAllowed() {
    return this.getBooleanAttribute('registration_allowed');
  }
  public set registrationAllowed(value: boolean | cdktf.IResolvable) {
    this._registrationAllowed = value;
  }
  public resetRegistrationAllowed() {
    this._registrationAllowed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get registrationAllowedInput() {
    return this._registrationAllowed;
  }

  // registration_email_as_username - computed: false, optional: true, required: false
  private _registrationEmailAsUsername?: boolean | cdktf.IResolvable; 
  public get registrationEmailAsUsername() {
    return this.getBooleanAttribute('registration_email_as_username');
  }
  public set registrationEmailAsUsername(value: boolean | cdktf.IResolvable) {
    this._registrationEmailAsUsername = value;
  }
  public resetRegistrationEmailAsUsername() {
    this._registrationEmailAsUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get registrationEmailAsUsernameInput() {
    return this._registrationEmailAsUsername;
  }

  // registration_flow - computed: false, optional: true, required: false
  private _registrationFlow?: string; 
  public get registrationFlow() {
    return this.getStringAttribute('registration_flow');
  }
  public set registrationFlow(value: string) {
    this._registrationFlow = value;
  }
  public resetRegistrationFlow() {
    this._registrationFlow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get registrationFlowInput() {
    return this._registrationFlow;
  }

  // remember_me - computed: false, optional: true, required: false
  private _rememberMe?: boolean | cdktf.IResolvable; 
  public get rememberMe() {
    return this.getBooleanAttribute('remember_me');
  }
  public set rememberMe(value: boolean | cdktf.IResolvable) {
    this._rememberMe = value;
  }
  public resetRememberMe() {
    this._rememberMe = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rememberMeInput() {
    return this._rememberMe;
  }

  // required_actions - computed: false, optional: true, required: false
  private _requiredActions = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActionsList(this, "required_actions", false);
  public get requiredActions() {
    return this._requiredActions;
  }
  public putRequiredActions(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRequiredActions[] | cdktf.IResolvable) {
    this._requiredActions.internalValue = value;
  }
  public resetRequiredActions() {
    this._requiredActions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredActionsInput() {
    return this._requiredActions.internalValue;
  }

  // required_credentials - computed: false, optional: true, required: false
  private _requiredCredentials?: string[]; 
  public get requiredCredentials() {
    return this.getListAttribute('required_credentials');
  }
  public set requiredCredentials(value: string[]) {
    this._requiredCredentials = value;
  }
  public resetRequiredCredentials() {
    this._requiredCredentials = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredCredentialsInput() {
    return this._requiredCredentials;
  }

  // reset_credentials_flow - computed: false, optional: true, required: false
  private _resetCredentialsFlow?: string; 
  public get resetCredentialsFlow() {
    return this.getStringAttribute('reset_credentials_flow');
  }
  public set resetCredentialsFlow(value: string) {
    this._resetCredentialsFlow = value;
  }
  public resetResetCredentialsFlow() {
    this._resetCredentialsFlow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resetCredentialsFlowInput() {
    return this._resetCredentialsFlow;
  }

  // reset_password_allowed - computed: false, optional: true, required: false
  private _resetPasswordAllowed?: boolean | cdktf.IResolvable; 
  public get resetPasswordAllowed() {
    return this.getBooleanAttribute('reset_password_allowed');
  }
  public set resetPasswordAllowed(value: boolean | cdktf.IResolvable) {
    this._resetPasswordAllowed = value;
  }
  public resetResetPasswordAllowed() {
    this._resetPasswordAllowed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resetPasswordAllowedInput() {
    return this._resetPasswordAllowed;
  }

  // revoke_refresh_token - computed: false, optional: true, required: false
  private _revokeRefreshToken?: boolean | cdktf.IResolvable; 
  public get revokeRefreshToken() {
    return this.getBooleanAttribute('revoke_refresh_token');
  }
  public set revokeRefreshToken(value: boolean | cdktf.IResolvable) {
    this._revokeRefreshToken = value;
  }
  public resetRevokeRefreshToken() {
    this._revokeRefreshToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get revokeRefreshTokenInput() {
    return this._revokeRefreshToken;
  }

  // roles - computed: false, optional: true, required: false
  private _roles = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRolesOutputReference(this, "roles");
  public get roles() {
    return this._roles;
  }
  public putRoles(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmRoles) {
    this._roles.internalValue = value;
  }
  public resetRoles() {
    this._roles.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rolesInput() {
    return this._roles.internalValue;
  }

  // scope_mappings - computed: false, optional: true, required: false
  private _scopeMappings = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappingsList(this, "scope_mappings", false);
  public get scopeMappings() {
    return this._scopeMappings;
  }
  public putScopeMappings(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmScopeMappings[] | cdktf.IResolvable) {
    this._scopeMappings.internalValue = value;
  }
  public resetScopeMappings() {
    this._scopeMappings.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopeMappingsInput() {
    return this._scopeMappings.internalValue;
  }

  // smtp_server - computed: false, optional: true, required: false
  private _smtpServer?: { [key: string]: string }; 
  public get smtpServer() {
    return this.getStringMapAttribute('smtp_server');
  }
  public set smtpServer(value: { [key: string]: string }) {
    this._smtpServer = value;
  }
  public resetSmtpServer() {
    this._smtpServer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get smtpServerInput() {
    return this._smtpServer;
  }

  // social - computed: false, optional: true, required: false
  private _social?: boolean | cdktf.IResolvable; 
  public get social() {
    return this.getBooleanAttribute('social');
  }
  public set social(value: boolean | cdktf.IResolvable) {
    this._social = value;
  }
  public resetSocial() {
    this._social = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get socialInput() {
    return this._social;
  }

  // social_providers - computed: false, optional: true, required: false
  private _socialProviders?: { [key: string]: string }; 
  public get socialProviders() {
    return this.getStringMapAttribute('social_providers');
  }
  public set socialProviders(value: { [key: string]: string }) {
    this._socialProviders = value;
  }
  public resetSocialProviders() {
    this._socialProviders = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get socialProvidersInput() {
    return this._socialProviders;
  }

  // ssl_required - computed: false, optional: true, required: false
  private _sslRequired?: string; 
  public get sslRequired() {
    return this.getStringAttribute('ssl_required');
  }
  public set sslRequired(value: string) {
    this._sslRequired = value;
  }
  public resetSslRequired() {
    this._sslRequired = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sslRequiredInput() {
    return this._sslRequired;
  }

  // sso_session_idle_timeout - computed: false, optional: true, required: false
  private _ssoSessionIdleTimeout?: number; 
  public get ssoSessionIdleTimeout() {
    return this.getNumberAttribute('sso_session_idle_timeout');
  }
  public set ssoSessionIdleTimeout(value: number) {
    this._ssoSessionIdleTimeout = value;
  }
  public resetSsoSessionIdleTimeout() {
    this._ssoSessionIdleTimeout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssoSessionIdleTimeoutInput() {
    return this._ssoSessionIdleTimeout;
  }

  // sso_session_idle_timeout_remember_me - computed: false, optional: true, required: false
  private _ssoSessionIdleTimeoutRememberMe?: number; 
  public get ssoSessionIdleTimeoutRememberMe() {
    return this.getNumberAttribute('sso_session_idle_timeout_remember_me');
  }
  public set ssoSessionIdleTimeoutRememberMe(value: number) {
    this._ssoSessionIdleTimeoutRememberMe = value;
  }
  public resetSsoSessionIdleTimeoutRememberMe() {
    this._ssoSessionIdleTimeoutRememberMe = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssoSessionIdleTimeoutRememberMeInput() {
    return this._ssoSessionIdleTimeoutRememberMe;
  }

  // sso_session_max_lifespan - computed: false, optional: true, required: false
  private _ssoSessionMaxLifespan?: number; 
  public get ssoSessionMaxLifespan() {
    return this.getNumberAttribute('sso_session_max_lifespan');
  }
  public set ssoSessionMaxLifespan(value: number) {
    this._ssoSessionMaxLifespan = value;
  }
  public resetSsoSessionMaxLifespan() {
    this._ssoSessionMaxLifespan = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssoSessionMaxLifespanInput() {
    return this._ssoSessionMaxLifespan;
  }

  // sso_session_max_lifespan_remember_me - computed: false, optional: true, required: false
  private _ssoSessionMaxLifespanRememberMe?: number; 
  public get ssoSessionMaxLifespanRememberMe() {
    return this.getNumberAttribute('sso_session_max_lifespan_remember_me');
  }
  public set ssoSessionMaxLifespanRememberMe(value: number) {
    this._ssoSessionMaxLifespanRememberMe = value;
  }
  public resetSsoSessionMaxLifespanRememberMe() {
    this._ssoSessionMaxLifespanRememberMe = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ssoSessionMaxLifespanRememberMeInput() {
    return this._ssoSessionMaxLifespanRememberMe;
  }

  // supported_locales - computed: false, optional: true, required: false
  private _supportedLocales?: string[]; 
  public get supportedLocales() {
    return this.getListAttribute('supported_locales');
  }
  public set supportedLocales(value: string[]) {
    this._supportedLocales = value;
  }
  public resetSupportedLocales() {
    this._supportedLocales = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get supportedLocalesInput() {
    return this._supportedLocales;
  }

  // update_profile_on_initial_social_login - computed: false, optional: true, required: false
  private _updateProfileOnInitialSocialLogin?: boolean | cdktf.IResolvable; 
  public get updateProfileOnInitialSocialLogin() {
    return this.getBooleanAttribute('update_profile_on_initial_social_login');
  }
  public set updateProfileOnInitialSocialLogin(value: boolean | cdktf.IResolvable) {
    this._updateProfileOnInitialSocialLogin = value;
  }
  public resetUpdateProfileOnInitialSocialLogin() {
    this._updateProfileOnInitialSocialLogin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get updateProfileOnInitialSocialLoginInput() {
    return this._updateProfileOnInitialSocialLogin;
  }

  // user_cache_enabled - computed: false, optional: true, required: false
  private _userCacheEnabled?: boolean | cdktf.IResolvable; 
  public get userCacheEnabled() {
    return this.getBooleanAttribute('user_cache_enabled');
  }
  public set userCacheEnabled(value: boolean | cdktf.IResolvable) {
    this._userCacheEnabled = value;
  }
  public resetUserCacheEnabled() {
    this._userCacheEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userCacheEnabledInput() {
    return this._userCacheEnabled;
  }

  // user_federation_mappers - computed: false, optional: true, required: false
  private _userFederationMappers = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappersList(this, "user_federation_mappers", false);
  public get userFederationMappers() {
    return this._userFederationMappers;
  }
  public putUserFederationMappers(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationMappers[] | cdktf.IResolvable) {
    this._userFederationMappers.internalValue = value;
  }
  public resetUserFederationMappers() {
    this._userFederationMappers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userFederationMappersInput() {
    return this._userFederationMappers.internalValue;
  }

  // user_federation_providers - computed: false, optional: true, required: false
  private _userFederationProviders = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProvidersList(this, "user_federation_providers", false);
  public get userFederationProviders() {
    return this._userFederationProviders;
  }
  public putUserFederationProviders(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUserFederationProviders[] | cdktf.IResolvable) {
    this._userFederationProviders.internalValue = value;
  }
  public resetUserFederationProviders() {
    this._userFederationProviders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userFederationProvidersInput() {
    return this._userFederationProviders.internalValue;
  }

  // user_managed_access_allowed - computed: false, optional: true, required: false
  private _userManagedAccessAllowed?: boolean | cdktf.IResolvable; 
  public get userManagedAccessAllowed() {
    return this.getBooleanAttribute('user_managed_access_allowed');
  }
  public set userManagedAccessAllowed(value: boolean | cdktf.IResolvable) {
    this._userManagedAccessAllowed = value;
  }
  public resetUserManagedAccessAllowed() {
    this._userManagedAccessAllowed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userManagedAccessAllowedInput() {
    return this._userManagedAccessAllowed;
  }

  // users - computed: false, optional: true, required: false
  private _users = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsersList(this, "users", false);
  public get users() {
    return this._users;
  }
  public putUsers(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmUsers[] | cdktf.IResolvable) {
    this._users.internalValue = value;
  }
  public resetUsers() {
    this._users.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usersInput() {
    return this._users.internalValue;
  }

  // verify_email - computed: false, optional: true, required: false
  private _verifyEmail?: boolean | cdktf.IResolvable; 
  public get verifyEmail() {
    return this.getBooleanAttribute('verify_email');
  }
  public set verifyEmail(value: boolean | cdktf.IResolvable) {
    this._verifyEmail = value;
  }
  public resetVerifyEmail() {
    this._verifyEmail = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get verifyEmailInput() {
    return this._verifyEmail;
  }

  // wait_increment_seconds - computed: false, optional: true, required: false
  private _waitIncrementSeconds?: number; 
  public get waitIncrementSeconds() {
    return this.getNumberAttribute('wait_increment_seconds');
  }
  public set waitIncrementSeconds(value: number) {
    this._waitIncrementSeconds = value;
  }
  public resetWaitIncrementSeconds() {
    this._waitIncrementSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get waitIncrementSecondsInput() {
    return this._waitIncrementSeconds;
  }

  // web_authn_policy_acceptable_aaguids - computed: false, optional: true, required: false
  private _webAuthnPolicyAcceptableAaguids?: string[]; 
  public get webAuthnPolicyAcceptableAaguids() {
    return this.getListAttribute('web_authn_policy_acceptable_aaguids');
  }
  public set webAuthnPolicyAcceptableAaguids(value: string[]) {
    this._webAuthnPolicyAcceptableAaguids = value;
  }
  public resetWebAuthnPolicyAcceptableAaguids() {
    this._webAuthnPolicyAcceptableAaguids = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyAcceptableAaguidsInput() {
    return this._webAuthnPolicyAcceptableAaguids;
  }

  // web_authn_policy_attestation_conveyance_preference - computed: false, optional: true, required: false
  private _webAuthnPolicyAttestationConveyancePreference?: string; 
  public get webAuthnPolicyAttestationConveyancePreference() {
    return this.getStringAttribute('web_authn_policy_attestation_conveyance_preference');
  }
  public set webAuthnPolicyAttestationConveyancePreference(value: string) {
    this._webAuthnPolicyAttestationConveyancePreference = value;
  }
  public resetWebAuthnPolicyAttestationConveyancePreference() {
    this._webAuthnPolicyAttestationConveyancePreference = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyAttestationConveyancePreferenceInput() {
    return this._webAuthnPolicyAttestationConveyancePreference;
  }

  // web_authn_policy_authenticator_attachment - computed: false, optional: true, required: false
  private _webAuthnPolicyAuthenticatorAttachment?: string; 
  public get webAuthnPolicyAuthenticatorAttachment() {
    return this.getStringAttribute('web_authn_policy_authenticator_attachment');
  }
  public set webAuthnPolicyAuthenticatorAttachment(value: string) {
    this._webAuthnPolicyAuthenticatorAttachment = value;
  }
  public resetWebAuthnPolicyAuthenticatorAttachment() {
    this._webAuthnPolicyAuthenticatorAttachment = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyAuthenticatorAttachmentInput() {
    return this._webAuthnPolicyAuthenticatorAttachment;
  }

  // web_authn_policy_avoid_same_authenticator_register - computed: false, optional: true, required: false
  private _webAuthnPolicyAvoidSameAuthenticatorRegister?: boolean | cdktf.IResolvable; 
  public get webAuthnPolicyAvoidSameAuthenticatorRegister() {
    return this.getBooleanAttribute('web_authn_policy_avoid_same_authenticator_register');
  }
  public set webAuthnPolicyAvoidSameAuthenticatorRegister(value: boolean | cdktf.IResolvable) {
    this._webAuthnPolicyAvoidSameAuthenticatorRegister = value;
  }
  public resetWebAuthnPolicyAvoidSameAuthenticatorRegister() {
    this._webAuthnPolicyAvoidSameAuthenticatorRegister = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyAvoidSameAuthenticatorRegisterInput() {
    return this._webAuthnPolicyAvoidSameAuthenticatorRegister;
  }

  // web_authn_policy_create_timeout - computed: false, optional: true, required: false
  private _webAuthnPolicyCreateTimeout?: number; 
  public get webAuthnPolicyCreateTimeout() {
    return this.getNumberAttribute('web_authn_policy_create_timeout');
  }
  public set webAuthnPolicyCreateTimeout(value: number) {
    this._webAuthnPolicyCreateTimeout = value;
  }
  public resetWebAuthnPolicyCreateTimeout() {
    this._webAuthnPolicyCreateTimeout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyCreateTimeoutInput() {
    return this._webAuthnPolicyCreateTimeout;
  }

  // web_authn_policy_passwordless_acceptable_aaguids - computed: false, optional: true, required: false
  private _webAuthnPolicyPasswordlessAcceptableAaguids?: string[]; 
  public get webAuthnPolicyPasswordlessAcceptableAaguids() {
    return this.getListAttribute('web_authn_policy_passwordless_acceptable_aaguids');
  }
  public set webAuthnPolicyPasswordlessAcceptableAaguids(value: string[]) {
    this._webAuthnPolicyPasswordlessAcceptableAaguids = value;
  }
  public resetWebAuthnPolicyPasswordlessAcceptableAaguids() {
    this._webAuthnPolicyPasswordlessAcceptableAaguids = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyPasswordlessAcceptableAaguidsInput() {
    return this._webAuthnPolicyPasswordlessAcceptableAaguids;
  }

  // web_authn_policy_passwordless_attestation_conveyance_preference - computed: false, optional: true, required: false
  private _webAuthnPolicyPasswordlessAttestationConveyancePreference?: string; 
  public get webAuthnPolicyPasswordlessAttestationConveyancePreference() {
    return this.getStringAttribute('web_authn_policy_passwordless_attestation_conveyance_preference');
  }
  public set webAuthnPolicyPasswordlessAttestationConveyancePreference(value: string) {
    this._webAuthnPolicyPasswordlessAttestationConveyancePreference = value;
  }
  public resetWebAuthnPolicyPasswordlessAttestationConveyancePreference() {
    this._webAuthnPolicyPasswordlessAttestationConveyancePreference = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyPasswordlessAttestationConveyancePreferenceInput() {
    return this._webAuthnPolicyPasswordlessAttestationConveyancePreference;
  }

  // web_authn_policy_passwordless_authenticator_attachment - computed: false, optional: true, required: false
  private _webAuthnPolicyPasswordlessAuthenticatorAttachment?: string; 
  public get webAuthnPolicyPasswordlessAuthenticatorAttachment() {
    return this.getStringAttribute('web_authn_policy_passwordless_authenticator_attachment');
  }
  public set webAuthnPolicyPasswordlessAuthenticatorAttachment(value: string) {
    this._webAuthnPolicyPasswordlessAuthenticatorAttachment = value;
  }
  public resetWebAuthnPolicyPasswordlessAuthenticatorAttachment() {
    this._webAuthnPolicyPasswordlessAuthenticatorAttachment = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyPasswordlessAuthenticatorAttachmentInput() {
    return this._webAuthnPolicyPasswordlessAuthenticatorAttachment;
  }

  // web_authn_policy_passwordless_avoid_same_authenticator_register - computed: false, optional: true, required: false
  private _webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister?: boolean | cdktf.IResolvable; 
  public get webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister() {
    return this.getBooleanAttribute('web_authn_policy_passwordless_avoid_same_authenticator_register');
  }
  public set webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister(value: boolean | cdktf.IResolvable) {
    this._webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister = value;
  }
  public resetWebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister() {
    this._webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegisterInput() {
    return this._webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister;
  }

  // web_authn_policy_passwordless_create_timeout - computed: false, optional: true, required: false
  private _webAuthnPolicyPasswordlessCreateTimeout?: number; 
  public get webAuthnPolicyPasswordlessCreateTimeout() {
    return this.getNumberAttribute('web_authn_policy_passwordless_create_timeout');
  }
  public set webAuthnPolicyPasswordlessCreateTimeout(value: number) {
    this._webAuthnPolicyPasswordlessCreateTimeout = value;
  }
  public resetWebAuthnPolicyPasswordlessCreateTimeout() {
    this._webAuthnPolicyPasswordlessCreateTimeout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyPasswordlessCreateTimeoutInput() {
    return this._webAuthnPolicyPasswordlessCreateTimeout;
  }

  // web_authn_policy_passwordless_require_resident_key - computed: false, optional: true, required: false
  private _webAuthnPolicyPasswordlessRequireResidentKey?: string; 
  public get webAuthnPolicyPasswordlessRequireResidentKey() {
    return this.getStringAttribute('web_authn_policy_passwordless_require_resident_key');
  }
  public set webAuthnPolicyPasswordlessRequireResidentKey(value: string) {
    this._webAuthnPolicyPasswordlessRequireResidentKey = value;
  }
  public resetWebAuthnPolicyPasswordlessRequireResidentKey() {
    this._webAuthnPolicyPasswordlessRequireResidentKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyPasswordlessRequireResidentKeyInput() {
    return this._webAuthnPolicyPasswordlessRequireResidentKey;
  }

  // web_authn_policy_passwordless_rp_entity_name - computed: false, optional: true, required: false
  private _webAuthnPolicyPasswordlessRpEntityName?: string; 
  public get webAuthnPolicyPasswordlessRpEntityName() {
    return this.getStringAttribute('web_authn_policy_passwordless_rp_entity_name');
  }
  public set webAuthnPolicyPasswordlessRpEntityName(value: string) {
    this._webAuthnPolicyPasswordlessRpEntityName = value;
  }
  public resetWebAuthnPolicyPasswordlessRpEntityName() {
    this._webAuthnPolicyPasswordlessRpEntityName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyPasswordlessRpEntityNameInput() {
    return this._webAuthnPolicyPasswordlessRpEntityName;
  }

  // web_authn_policy_passwordless_rp_id - computed: false, optional: true, required: false
  private _webAuthnPolicyPasswordlessRpId?: string; 
  public get webAuthnPolicyPasswordlessRpId() {
    return this.getStringAttribute('web_authn_policy_passwordless_rp_id');
  }
  public set webAuthnPolicyPasswordlessRpId(value: string) {
    this._webAuthnPolicyPasswordlessRpId = value;
  }
  public resetWebAuthnPolicyPasswordlessRpId() {
    this._webAuthnPolicyPasswordlessRpId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyPasswordlessRpIdInput() {
    return this._webAuthnPolicyPasswordlessRpId;
  }

  // web_authn_policy_passwordless_signature_algorithms - computed: false, optional: true, required: false
  private _webAuthnPolicyPasswordlessSignatureAlgorithms?: string[]; 
  public get webAuthnPolicyPasswordlessSignatureAlgorithms() {
    return this.getListAttribute('web_authn_policy_passwordless_signature_algorithms');
  }
  public set webAuthnPolicyPasswordlessSignatureAlgorithms(value: string[]) {
    this._webAuthnPolicyPasswordlessSignatureAlgorithms = value;
  }
  public resetWebAuthnPolicyPasswordlessSignatureAlgorithms() {
    this._webAuthnPolicyPasswordlessSignatureAlgorithms = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyPasswordlessSignatureAlgorithmsInput() {
    return this._webAuthnPolicyPasswordlessSignatureAlgorithms;
  }

  // web_authn_policy_passwordless_user_verification_requirement - computed: false, optional: true, required: false
  private _webAuthnPolicyPasswordlessUserVerificationRequirement?: string; 
  public get webAuthnPolicyPasswordlessUserVerificationRequirement() {
    return this.getStringAttribute('web_authn_policy_passwordless_user_verification_requirement');
  }
  public set webAuthnPolicyPasswordlessUserVerificationRequirement(value: string) {
    this._webAuthnPolicyPasswordlessUserVerificationRequirement = value;
  }
  public resetWebAuthnPolicyPasswordlessUserVerificationRequirement() {
    this._webAuthnPolicyPasswordlessUserVerificationRequirement = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyPasswordlessUserVerificationRequirementInput() {
    return this._webAuthnPolicyPasswordlessUserVerificationRequirement;
  }

  // web_authn_policy_require_resident_key - computed: false, optional: true, required: false
  private _webAuthnPolicyRequireResidentKey?: string; 
  public get webAuthnPolicyRequireResidentKey() {
    return this.getStringAttribute('web_authn_policy_require_resident_key');
  }
  public set webAuthnPolicyRequireResidentKey(value: string) {
    this._webAuthnPolicyRequireResidentKey = value;
  }
  public resetWebAuthnPolicyRequireResidentKey() {
    this._webAuthnPolicyRequireResidentKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyRequireResidentKeyInput() {
    return this._webAuthnPolicyRequireResidentKey;
  }

  // web_authn_policy_rp_entity_name - computed: false, optional: true, required: false
  private _webAuthnPolicyRpEntityName?: string; 
  public get webAuthnPolicyRpEntityName() {
    return this.getStringAttribute('web_authn_policy_rp_entity_name');
  }
  public set webAuthnPolicyRpEntityName(value: string) {
    this._webAuthnPolicyRpEntityName = value;
  }
  public resetWebAuthnPolicyRpEntityName() {
    this._webAuthnPolicyRpEntityName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyRpEntityNameInput() {
    return this._webAuthnPolicyRpEntityName;
  }

  // web_authn_policy_rp_id - computed: false, optional: true, required: false
  private _webAuthnPolicyRpId?: string; 
  public get webAuthnPolicyRpId() {
    return this.getStringAttribute('web_authn_policy_rp_id');
  }
  public set webAuthnPolicyRpId(value: string) {
    this._webAuthnPolicyRpId = value;
  }
  public resetWebAuthnPolicyRpId() {
    this._webAuthnPolicyRpId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyRpIdInput() {
    return this._webAuthnPolicyRpId;
  }

  // web_authn_policy_signature_algorithms - computed: false, optional: true, required: false
  private _webAuthnPolicySignatureAlgorithms?: string[]; 
  public get webAuthnPolicySignatureAlgorithms() {
    return this.getListAttribute('web_authn_policy_signature_algorithms');
  }
  public set webAuthnPolicySignatureAlgorithms(value: string[]) {
    this._webAuthnPolicySignatureAlgorithms = value;
  }
  public resetWebAuthnPolicySignatureAlgorithms() {
    this._webAuthnPolicySignatureAlgorithms = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicySignatureAlgorithmsInput() {
    return this._webAuthnPolicySignatureAlgorithms;
  }

  // web_authn_policy_user_verification_requirement - computed: false, optional: true, required: false
  private _webAuthnPolicyUserVerificationRequirement?: string; 
  public get webAuthnPolicyUserVerificationRequirement() {
    return this.getStringAttribute('web_authn_policy_user_verification_requirement');
  }
  public set webAuthnPolicyUserVerificationRequirement(value: string) {
    this._webAuthnPolicyUserVerificationRequirement = value;
  }
  public resetWebAuthnPolicyUserVerificationRequirement() {
    this._webAuthnPolicyUserVerificationRequirement = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webAuthnPolicyUserVerificationRequirementInput() {
    return this._webAuthnPolicyUserVerificationRequirement;
  }
}
export interface DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpec {
  /**
  * The name of the Keycloak CR to reference, in the same namespace.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#keycloak_cr_name DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#keycloak_cr_name}
  */
  readonly keycloakCrName: string;
  /**
  * The RealmRepresentation to import into Keycloak.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#realm DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest#realm}
  */
  readonly realm: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealm;
}

export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecToTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    keycloak_cr_name: cdktf.stringToTerraform(struct!.keycloakCrName),
    realm: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmToTerraform(struct!.realm),
  }
}


export function dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecToHclTerraform(struct?: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    keycloak_cr_name: {
      value: cdktf.stringToHclTerraform(struct!.keycloakCrName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    realm: {
      value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmToHclTerraform(struct!.realm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealm",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._keycloakCrName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keycloakCrName = this._keycloakCrName;
    }
    if (this._realm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.realm = this._realm?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._keycloakCrName = undefined;
      this._realm.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._keycloakCrName = value.keycloakCrName;
      this._realm.internalValue = value.realm;
    }
  }

  // keycloak_cr_name - computed: false, optional: false, required: true
  private _keycloakCrName?: string; 
  public get keycloakCrName() {
    return this.getStringAttribute('keycloak_cr_name');
  }
  public set keycloakCrName(value: string) {
    this._keycloakCrName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keycloakCrNameInput() {
    return this._keycloakCrName;
  }

  // realm - computed: false, optional: false, required: true
  private _realm = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealmOutputReference(this, "realm");
  public get realm() {
    return this._realm;
  }
  public putRealm(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecRealm) {
    this._realm.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get realmInput() {
    return this._realm.internalValue;
  }
}

/**
* Represents a {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest k8s_k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest}
*/
export class DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest extends cdktf.TerraformDataSource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "k8s_k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest to import
  * @param importFromId The id of the existing DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest that should be imported. Refer to the {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1Manifest to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "k8s_k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest k8s_k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest} Data Source
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestConfig
  */
  public constructor(scope: Construct, id: string, config: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestConfig) {
    super(scope, id, {
      terraformResourceType: 'k8s_k8s_keycloak_org_keycloak_realm_import_v2alpha1_manifest',
      terraformGeneratorMetadata: {
        providerName: 'k8s',
        providerVersion: '2025.10.20'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._metadata.internalValue = config.metadata;
    this._spec.internalValue = config.spec;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }

  // yaml - computed: true, optional: false, required: false
  public get yaml() {
    return this.getStringAttribute('yaml');
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      metadata: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestMetadataToTerraform(this._metadata.internalValue),
      spec: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecToTerraform(this._spec.internalValue),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      metadata: {
        value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestMetadataToHclTerraform(this._metadata.internalValue),
        isBlock: true,
        type: "struct",
        storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestMetadata",
      },
      spec: {
        value: dataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpecToHclTerraform(this._spec.internalValue),
        isBlock: true,
        type: "struct",
        storageClassType: "DataK8SK8SKeycloakOrgKeycloakRealmImportV2Alpha1ManifestSpec",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
