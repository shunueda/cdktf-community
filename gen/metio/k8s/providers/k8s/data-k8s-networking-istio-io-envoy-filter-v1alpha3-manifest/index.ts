// https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestConfig extends cdktf.TerraformMetaArguments {
  /**
  * Data that helps uniquely identify this object. See https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#metadata DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#metadata}
  */
  readonly metadata: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestMetadata;
  /**
  * Customizing Envoy configuration generated by Istio. See more details at: https://istio.io/docs/reference/config/networking/envoy-filter.html
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#spec DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#spec}
  */
  readonly spec?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpec;
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestMetadata {
  /**
  * Keys and values that can be used by external tooling to store and retrieve arbitrary metadata about this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#annotations DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Keys and values that can be used to organize and categorize objects. See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#labels DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Unique identifier for this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#name DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#name}
  */
  readonly name: string;
  /**
  * Namespaces provides a mechanism for isolating groups of resources within a single cluster. See https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#namespace DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#namespace}
  */
  readonly namespace: string;
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestMetadataToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestMetadataToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._labels = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._labels = value.labels;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: false, required: true
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchCluster {
  /**
  * The exact name of the cluster to match.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#name DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#name}
  */
  readonly name?: string;
  /**
  * The service port for which this cluster was generated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#port_number DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#port_number}
  */
  readonly portNumber?: number;
  /**
  * The fully qualified service name for this cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#service DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#service}
  */
  readonly service?: string;
  /**
  * The subset associated with the service.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#subset DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#subset}
  */
  readonly subset?: string;
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchClusterToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchCluster | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    port_number: cdktf.numberToTerraform(struct!.portNumber),
    service: cdktf.stringToTerraform(struct!.service),
    subset: cdktf.stringToTerraform(struct!.subset),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchClusterToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchCluster | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port_number: {
      value: cdktf.numberToHclTerraform(struct!.portNumber),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    service: {
      value: cdktf.stringToHclTerraform(struct!.service),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    subset: {
      value: cdktf.stringToHclTerraform(struct!.subset),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchClusterOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchCluster | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._portNumber !== undefined) {
      hasAnyValues = true;
      internalValueResult.portNumber = this._portNumber;
    }
    if (this._service !== undefined) {
      hasAnyValues = true;
      internalValueResult.service = this._service;
    }
    if (this._subset !== undefined) {
      hasAnyValues = true;
      internalValueResult.subset = this._subset;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchCluster | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._portNumber = undefined;
      this._service = undefined;
      this._subset = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._portNumber = value.portNumber;
      this._service = value.service;
      this._subset = value.subset;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // port_number - computed: false, optional: true, required: false
  private _portNumber?: number; 
  public get portNumber() {
    return this.getNumberAttribute('port_number');
  }
  public set portNumber(value: number) {
    this._portNumber = value;
  }
  public resetPortNumber() {
    this._portNumber = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portNumberInput() {
    return this._portNumber;
  }

  // service - computed: false, optional: true, required: false
  private _service?: string; 
  public get service() {
    return this.getStringAttribute('service');
  }
  public set service(value: string) {
    this._service = value;
  }
  public resetService() {
    this._service = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceInput() {
    return this._service;
  }

  // subset - computed: false, optional: true, required: false
  private _subset?: string; 
  public get subset() {
    return this.getStringAttribute('subset');
  }
  public set subset(value: string) {
    this._subset = value;
  }
  public resetSubset() {
    this._subset = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subsetInput() {
    return this._subset;
  }
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterSubFilter {
  /**
  * The filter name to match on.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#name DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterSubFilterToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterSubFilter | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterSubFilterToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterSubFilter | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterSubFilterOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterSubFilter | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterSubFilter | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilter {
  /**
  * The filter name to match on.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#name DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#name}
  */
  readonly name?: string;
  /**
  * The next level filter within this filter to match upon.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#sub_filter DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#sub_filter}
  */
  readonly subFilter?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterSubFilter;
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilter | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    sub_filter: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterSubFilterToTerraform(struct!.subFilter),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilter | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sub_filter: {
      value: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterSubFilterToHclTerraform(struct!.subFilter),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterSubFilter",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilter | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._subFilter?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.subFilter = this._subFilter?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilter | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._subFilter.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._subFilter.internalValue = value.subFilter;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // sub_filter - computed: false, optional: true, required: false
  private _subFilter = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterSubFilterOutputReference(this, "sub_filter");
  public get subFilter() {
    return this._subFilter;
  }
  public putSubFilter(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterSubFilter) {
    this._subFilter.internalValue = value;
  }
  public resetSubFilter() {
    this._subFilter.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subFilterInput() {
    return this._subFilter.internalValue;
  }
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChain {
  /**
  * Applies only to sidecars.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#application_protocols DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#application_protocols}
  */
  readonly applicationProtocols?: string;
  /**
  * The destination_port value used by a filter chain's match condition.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#destination_port DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#destination_port}
  */
  readonly destinationPort?: number;
  /**
  * The name of a specific filter to apply the patch to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#filter DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#filter}
  */
  readonly filter?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilter;
  /**
  * The name assigned to the filter chain.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#name DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#name}
  */
  readonly name?: string;
  /**
  * The SNI value used by a filter chain's match condition.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#sni DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#sni}
  */
  readonly sni?: string;
  /**
  * Applies only to 'SIDECAR_INBOUND' context.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#transport_protocol DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#transport_protocol}
  */
  readonly transportProtocol?: string;
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChain | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    application_protocols: cdktf.stringToTerraform(struct!.applicationProtocols),
    destination_port: cdktf.numberToTerraform(struct!.destinationPort),
    filter: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterToTerraform(struct!.filter),
    name: cdktf.stringToTerraform(struct!.name),
    sni: cdktf.stringToTerraform(struct!.sni),
    transport_protocol: cdktf.stringToTerraform(struct!.transportProtocol),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChain | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    application_protocols: {
      value: cdktf.stringToHclTerraform(struct!.applicationProtocols),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    destination_port: {
      value: cdktf.numberToHclTerraform(struct!.destinationPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    filter: {
      value: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterToHclTerraform(struct!.filter),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilter",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sni: {
      value: cdktf.stringToHclTerraform(struct!.sni),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    transport_protocol: {
      value: cdktf.stringToHclTerraform(struct!.transportProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChain | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._applicationProtocols !== undefined) {
      hasAnyValues = true;
      internalValueResult.applicationProtocols = this._applicationProtocols;
    }
    if (this._destinationPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.destinationPort = this._destinationPort;
    }
    if (this._filter?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.filter = this._filter?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._sni !== undefined) {
      hasAnyValues = true;
      internalValueResult.sni = this._sni;
    }
    if (this._transportProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.transportProtocol = this._transportProtocol;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChain | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._applicationProtocols = undefined;
      this._destinationPort = undefined;
      this._filter.internalValue = undefined;
      this._name = undefined;
      this._sni = undefined;
      this._transportProtocol = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._applicationProtocols = value.applicationProtocols;
      this._destinationPort = value.destinationPort;
      this._filter.internalValue = value.filter;
      this._name = value.name;
      this._sni = value.sni;
      this._transportProtocol = value.transportProtocol;
    }
  }

  // application_protocols - computed: false, optional: true, required: false
  private _applicationProtocols?: string; 
  public get applicationProtocols() {
    return this.getStringAttribute('application_protocols');
  }
  public set applicationProtocols(value: string) {
    this._applicationProtocols = value;
  }
  public resetApplicationProtocols() {
    this._applicationProtocols = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get applicationProtocolsInput() {
    return this._applicationProtocols;
  }

  // destination_port - computed: false, optional: true, required: false
  private _destinationPort?: number; 
  public get destinationPort() {
    return this.getNumberAttribute('destination_port');
  }
  public set destinationPort(value: number) {
    this._destinationPort = value;
  }
  public resetDestinationPort() {
    this._destinationPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get destinationPortInput() {
    return this._destinationPort;
  }

  // filter - computed: false, optional: true, required: false
  private _filter = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilterOutputReference(this, "filter");
  public get filter() {
    return this._filter;
  }
  public putFilter(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainFilter) {
    this._filter.internalValue = value;
  }
  public resetFilter() {
    this._filter.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filterInput() {
    return this._filter.internalValue;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // sni - computed: false, optional: true, required: false
  private _sni?: string; 
  public get sni() {
    return this.getStringAttribute('sni');
  }
  public set sni(value: string) {
    this._sni = value;
  }
  public resetSni() {
    this._sni = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sniInput() {
    return this._sni;
  }

  // transport_protocol - computed: false, optional: true, required: false
  private _transportProtocol?: string; 
  public get transportProtocol() {
    return this.getStringAttribute('transport_protocol');
  }
  public set transportProtocol(value: string) {
    this._transportProtocol = value;
  }
  public resetTransportProtocol() {
    this._transportProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get transportProtocolInput() {
    return this._transportProtocol;
  }
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListener {
  /**
  * Match a specific filter chain in a listener.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#filter_chain DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#filter_chain}
  */
  readonly filterChain?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChain;
  /**
  * Match a specific listener filter.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#listener_filter DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#listener_filter}
  */
  readonly listenerFilter?: string;
  /**
  * Match a specific listener by its name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#name DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#port_name DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#port_name}
  */
  readonly portName?: string;
  /**
  * The service port/gateway port to which traffic is being sent/received.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#port_number DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#port_number}
  */
  readonly portNumber?: number;
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListener | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    filter_chain: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainToTerraform(struct!.filterChain),
    listener_filter: cdktf.stringToTerraform(struct!.listenerFilter),
    name: cdktf.stringToTerraform(struct!.name),
    port_name: cdktf.stringToTerraform(struct!.portName),
    port_number: cdktf.numberToTerraform(struct!.portNumber),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListener | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    filter_chain: {
      value: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainToHclTerraform(struct!.filterChain),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChain",
    },
    listener_filter: {
      value: cdktf.stringToHclTerraform(struct!.listenerFilter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port_name: {
      value: cdktf.stringToHclTerraform(struct!.portName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port_number: {
      value: cdktf.numberToHclTerraform(struct!.portNumber),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListener | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._filterChain?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.filterChain = this._filterChain?.internalValue;
    }
    if (this._listenerFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.listenerFilter = this._listenerFilter;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._portName !== undefined) {
      hasAnyValues = true;
      internalValueResult.portName = this._portName;
    }
    if (this._portNumber !== undefined) {
      hasAnyValues = true;
      internalValueResult.portNumber = this._portNumber;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListener | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._filterChain.internalValue = undefined;
      this._listenerFilter = undefined;
      this._name = undefined;
      this._portName = undefined;
      this._portNumber = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._filterChain.internalValue = value.filterChain;
      this._listenerFilter = value.listenerFilter;
      this._name = value.name;
      this._portName = value.portName;
      this._portNumber = value.portNumber;
    }
  }

  // filter_chain - computed: false, optional: true, required: false
  private _filterChain = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChainOutputReference(this, "filter_chain");
  public get filterChain() {
    return this._filterChain;
  }
  public putFilterChain(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerFilterChain) {
    this._filterChain.internalValue = value;
  }
  public resetFilterChain() {
    this._filterChain.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filterChainInput() {
    return this._filterChain.internalValue;
  }

  // listener_filter - computed: false, optional: true, required: false
  private _listenerFilter?: string; 
  public get listenerFilter() {
    return this.getStringAttribute('listener_filter');
  }
  public set listenerFilter(value: string) {
    this._listenerFilter = value;
  }
  public resetListenerFilter() {
    this._listenerFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get listenerFilterInput() {
    return this._listenerFilter;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // port_name - computed: false, optional: true, required: false
  private _portName?: string; 
  public get portName() {
    return this.getStringAttribute('port_name');
  }
  public set portName(value: string) {
    this._portName = value;
  }
  public resetPortName() {
    this._portName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portNameInput() {
    return this._portName;
  }

  // port_number - computed: false, optional: true, required: false
  private _portNumber?: number; 
  public get portNumber() {
    return this.getNumberAttribute('port_number');
  }
  public set portNumber(value: number) {
    this._portNumber = value;
  }
  public resetPortNumber() {
    this._portNumber = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portNumberInput() {
    return this._portNumber;
  }
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchProxy {
  /**
  * Match on the node metadata supplied by a proxy when connecting to Istio Pilot.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#metadata DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#metadata}
  */
  readonly metadata?: { [key: string]: string };
  /**
  * A regular expression in golang regex format (RE2) that can be used to select proxies using a specific version of istio proxy.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#proxy_version DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#proxy_version}
  */
  readonly proxyVersion?: string;
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchProxyToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.metadata),
    proxy_version: cdktf.stringToTerraform(struct!.proxyVersion),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchProxyToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.metadata),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    proxy_version: {
      value: cdktf.stringToHclTerraform(struct!.proxyVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchProxyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchProxy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata;
    }
    if (this._proxyVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.proxyVersion = this._proxyVersion;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchProxy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata = undefined;
      this._proxyVersion = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata = value.metadata;
      this._proxyVersion = value.proxyVersion;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata?: { [key: string]: string }; 
  public get metadata() {
    return this.getStringMapAttribute('metadata');
  }
  public set metadata(value: { [key: string]: string }) {
    this._metadata = value;
  }
  public resetMetadata() {
    this._metadata = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata;
  }

  // proxy_version - computed: false, optional: true, required: false
  private _proxyVersion?: string; 
  public get proxyVersion() {
    return this.getStringAttribute('proxy_version');
  }
  public set proxyVersion(value: string) {
    this._proxyVersion = value;
  }
  public resetProxyVersion() {
    this._proxyVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get proxyVersionInput() {
    return this._proxyVersion;
  }
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostRoute {
  /**
  * Match a route with specific action type. Valid Options: ANY, ROUTE, REDIRECT, DIRECT_RESPONSE
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#action DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#action}
  */
  readonly action?: string;
  /**
  * The Route objects generated by default are named as default.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#name DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostRouteToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostRoute | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostRouteToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostRoute | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostRouteOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostRoute | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostRoute | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._name = value.name;
    }
  }

  // action - computed: false, optional: true, required: false
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  public resetAction() {
    this._action = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhost {
  /**
  * The VirtualHosts objects generated by Istio are named as host:port, where the host typically corresponds to the VirtualService's host field or the hostname of a service in the registry.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#name DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#name}
  */
  readonly name?: string;
  /**
  * Match a specific route within the virtual host.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#route DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#route}
  */
  readonly route?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostRoute;
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhost | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    route: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostRouteToTerraform(struct!.route),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhost | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    route: {
      value: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostRouteToHclTerraform(struct!.route),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostRoute",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhost | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._route?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.route = this._route?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhost | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._route.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._route.internalValue = value.route;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // route - computed: false, optional: true, required: false
  private _route = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostRouteOutputReference(this, "route");
  public get route() {
    return this._route;
  }
  public putRoute(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostRoute) {
    this._route.internalValue = value;
  }
  public resetRoute() {
    this._route.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeInput() {
    return this._route.internalValue;
  }
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfiguration {
  /**
  * The Istio gateway config's namespace/name for which this route configuration was generated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#gateway DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#gateway}
  */
  readonly gateway?: string;
  /**
  * Route configuration name to match on.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#name DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#name}
  */
  readonly name?: string;
  /**
  * Applicable only for GATEWAY context.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#port_name DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#port_name}
  */
  readonly portName?: string;
  /**
  * The service port number or gateway server port number for which this route configuration was generated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#port_number DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#port_number}
  */
  readonly portNumber?: number;
  /**
  * Match a specific virtual host in a route configuration and apply the patch to the virtual host.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#vhost DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#vhost}
  */
  readonly vhost?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhost;
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    gateway: cdktf.stringToTerraform(struct!.gateway),
    name: cdktf.stringToTerraform(struct!.name),
    port_name: cdktf.stringToTerraform(struct!.portName),
    port_number: cdktf.numberToTerraform(struct!.portNumber),
    vhost: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostToTerraform(struct!.vhost),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    gateway: {
      value: cdktf.stringToHclTerraform(struct!.gateway),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port_name: {
      value: cdktf.stringToHclTerraform(struct!.portName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port_number: {
      value: cdktf.numberToHclTerraform(struct!.portNumber),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    vhost: {
      value: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostToHclTerraform(struct!.vhost),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhost",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._gateway !== undefined) {
      hasAnyValues = true;
      internalValueResult.gateway = this._gateway;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._portName !== undefined) {
      hasAnyValues = true;
      internalValueResult.portName = this._portName;
    }
    if (this._portNumber !== undefined) {
      hasAnyValues = true;
      internalValueResult.portNumber = this._portNumber;
    }
    if (this._vhost?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vhost = this._vhost?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._gateway = undefined;
      this._name = undefined;
      this._portName = undefined;
      this._portNumber = undefined;
      this._vhost.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._gateway = value.gateway;
      this._name = value.name;
      this._portName = value.portName;
      this._portNumber = value.portNumber;
      this._vhost.internalValue = value.vhost;
    }
  }

  // gateway - computed: false, optional: true, required: false
  private _gateway?: string; 
  public get gateway() {
    return this.getStringAttribute('gateway');
  }
  public set gateway(value: string) {
    this._gateway = value;
  }
  public resetGateway() {
    this._gateway = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gatewayInput() {
    return this._gateway;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // port_name - computed: false, optional: true, required: false
  private _portName?: string; 
  public get portName() {
    return this.getStringAttribute('port_name');
  }
  public set portName(value: string) {
    this._portName = value;
  }
  public resetPortName() {
    this._portName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portNameInput() {
    return this._portName;
  }

  // port_number - computed: false, optional: true, required: false
  private _portNumber?: number; 
  public get portNumber() {
    return this.getNumberAttribute('port_number');
  }
  public set portNumber(value: number) {
    this._portNumber = value;
  }
  public resetPortNumber() {
    this._portNumber = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portNumberInput() {
    return this._portNumber;
  }

  // vhost - computed: false, optional: true, required: false
  private _vhost = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhostOutputReference(this, "vhost");
  public get vhost() {
    return this._vhost;
  }
  public putVhost(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationVhost) {
    this._vhost.internalValue = value;
  }
  public resetVhost() {
    this._vhost.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vhostInput() {
    return this._vhost.internalValue;
  }
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatch {
  /**
  * Match on envoy cluster attributes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#cluster DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#cluster}
  */
  readonly cluster?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchCluster;
  /**
  * The specific config generation context to match on. Valid Options: ANY, SIDECAR_INBOUND, SIDECAR_OUTBOUND, GATEWAY
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#context DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#context}
  */
  readonly context?: string;
  /**
  * Match on envoy listener attributes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#listener DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#listener}
  */
  readonly listener?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListener;
  /**
  * Match on properties associated with a proxy.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#proxy DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#proxy}
  */
  readonly proxy?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchProxy;
  /**
  * Match on envoy HTTP route configuration attributes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#route_configuration DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#route_configuration}
  */
  readonly routeConfiguration?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfiguration;
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cluster: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchClusterToTerraform(struct!.cluster),
    context: cdktf.stringToTerraform(struct!.context),
    listener: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerToTerraform(struct!.listener),
    proxy: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchProxyToTerraform(struct!.proxy),
    route_configuration: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationToTerraform(struct!.routeConfiguration),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cluster: {
      value: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchClusterToHclTerraform(struct!.cluster),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchCluster",
    },
    context: {
      value: cdktf.stringToHclTerraform(struct!.context),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    listener: {
      value: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerToHclTerraform(struct!.listener),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListener",
    },
    proxy: {
      value: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchProxyToHclTerraform(struct!.proxy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchProxy",
    },
    route_configuration: {
      value: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationToHclTerraform(struct!.routeConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfiguration",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cluster?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cluster = this._cluster?.internalValue;
    }
    if (this._context !== undefined) {
      hasAnyValues = true;
      internalValueResult.context = this._context;
    }
    if (this._listener?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.listener = this._listener?.internalValue;
    }
    if (this._proxy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.proxy = this._proxy?.internalValue;
    }
    if (this._routeConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeConfiguration = this._routeConfiguration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cluster.internalValue = undefined;
      this._context = undefined;
      this._listener.internalValue = undefined;
      this._proxy.internalValue = undefined;
      this._routeConfiguration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cluster.internalValue = value.cluster;
      this._context = value.context;
      this._listener.internalValue = value.listener;
      this._proxy.internalValue = value.proxy;
      this._routeConfiguration.internalValue = value.routeConfiguration;
    }
  }

  // cluster - computed: false, optional: true, required: false
  private _cluster = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchClusterOutputReference(this, "cluster");
  public get cluster() {
    return this._cluster;
  }
  public putCluster(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchCluster) {
    this._cluster.internalValue = value;
  }
  public resetCluster() {
    this._cluster.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterInput() {
    return this._cluster.internalValue;
  }

  // context - computed: false, optional: true, required: false
  private _context?: string; 
  public get context() {
    return this.getStringAttribute('context');
  }
  public set context(value: string) {
    this._context = value;
  }
  public resetContext() {
    this._context = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get contextInput() {
    return this._context;
  }

  // listener - computed: false, optional: true, required: false
  private _listener = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListenerOutputReference(this, "listener");
  public get listener() {
    return this._listener;
  }
  public putListener(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchListener) {
    this._listener.internalValue = value;
  }
  public resetListener() {
    this._listener.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get listenerInput() {
    return this._listener.internalValue;
  }

  // proxy - computed: false, optional: true, required: false
  private _proxy = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchProxyOutputReference(this, "proxy");
  public get proxy() {
    return this._proxy;
  }
  public putProxy(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchProxy) {
    this._proxy.internalValue = value;
  }
  public resetProxy() {
    this._proxy.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get proxyInput() {
    return this._proxy.internalValue;
  }

  // route_configuration - computed: false, optional: true, required: false
  private _routeConfiguration = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfigurationOutputReference(this, "route_configuration");
  public get routeConfiguration() {
    return this._routeConfiguration;
  }
  public putRouteConfiguration(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchRouteConfiguration) {
    this._routeConfiguration.internalValue = value;
  }
  public resetRouteConfiguration() {
    this._routeConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeConfigurationInput() {
    return this._routeConfiguration.internalValue;
  }
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesPatch {
  /**
  * Determines the filter insertion order. Valid Options: AUTHN, AUTHZ, STATS
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#filter_class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#filter_class}
  */
  readonly filterClass?: string;
  /**
  * Determines how the patch should be applied. Valid Options: MERGE, ADD, REMOVE, INSERT_BEFORE, INSERT_AFTER, INSERT_FIRST, REPLACE
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#operation DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#operation}
  */
  readonly operation?: string;
  /**
  * The JSON config of the object being patched.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#value DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesPatchToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesPatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    filter_class: cdktf.stringToTerraform(struct!.filterClass),
    operation: cdktf.stringToTerraform(struct!.operation),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesPatchToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesPatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    filter_class: {
      value: cdktf.stringToHclTerraform(struct!.filterClass),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesPatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesPatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._filterClass !== undefined) {
      hasAnyValues = true;
      internalValueResult.filterClass = this._filterClass;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesPatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._filterClass = undefined;
      this._operation = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._filterClass = value.filterClass;
      this._operation = value.operation;
      this._value = value.value;
    }
  }

  // filter_class - computed: false, optional: true, required: false
  private _filterClass?: string; 
  public get filterClass() {
    return this.getStringAttribute('filter_class');
  }
  public set filterClass(value: string) {
    this._filterClass = value;
  }
  public resetFilterClass() {
    this._filterClass = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filterClassInput() {
    return this._filterClass;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatches {
  /**
  * Specifies where in the Envoy configuration, the patch should be applied. Valid Options: LISTENER, FILTER_CHAIN, NETWORK_FILTER, HTTP_FILTER, ROUTE_CONFIGURATION, VIRTUAL_HOST, HTTP_ROUTE, CLUSTER, EXTENSION_CONFIG, BOOTSTRAP, LISTENER_FILTER
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#apply_to DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#apply_to}
  */
  readonly applyTo?: string;
  /**
  * Match on listener/route configuration/cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#match DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#match}
  */
  readonly match?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatch;
  /**
  * The patch to apply along with the operation.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#patch DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#patch}
  */
  readonly patch?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesPatch;
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    apply_to: cdktf.stringToTerraform(struct!.applyTo),
    match: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchToTerraform(struct!.match),
    patch: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesPatchToTerraform(struct!.patch),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    apply_to: {
      value: cdktf.stringToHclTerraform(struct!.applyTo),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    match: {
      value: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchToHclTerraform(struct!.match),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatch",
    },
    patch: {
      value: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesPatchToHclTerraform(struct!.patch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesPatch",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatches | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._applyTo !== undefined) {
      hasAnyValues = true;
      internalValueResult.applyTo = this._applyTo;
    }
    if (this._match?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.match = this._match?.internalValue;
    }
    if (this._patch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.patch = this._patch?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatches | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._applyTo = undefined;
      this._match.internalValue = undefined;
      this._patch.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._applyTo = value.applyTo;
      this._match.internalValue = value.match;
      this._patch.internalValue = value.patch;
    }
  }

  // apply_to - computed: false, optional: true, required: false
  private _applyTo?: string; 
  public get applyTo() {
    return this.getStringAttribute('apply_to');
  }
  public set applyTo(value: string) {
    this._applyTo = value;
  }
  public resetApplyTo() {
    this._applyTo = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get applyToInput() {
    return this._applyTo;
  }

  // match - computed: false, optional: true, required: false
  private _match = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatchOutputReference(this, "match");
  public get match() {
    return this._match;
  }
  public putMatch(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesMatch) {
    this._match.internalValue = value;
  }
  public resetMatch() {
    this._match.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchInput() {
    return this._match.internalValue;
  }

  // patch - computed: false, optional: true, required: false
  private _patch = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesPatchOutputReference(this, "patch");
  public get patch() {
    return this._patch;
  }
  public putPatch(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesPatch) {
    this._patch.internalValue = value;
  }
  public resetPatch() {
    this._patch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patchInput() {
    return this._patch.internalValue;
  }
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesList extends cdktf.ComplexList {
  public internalValue? : DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatches[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesOutputReference {
    return new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefs {
  /**
  * group is the group of the target resource.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#group DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#group}
  */
  readonly group?: string;
  /**
  * kind is kind of the target resource.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#kind DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#kind}
  */
  readonly kind: string;
  /**
  * name is the name of the target resource.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#name DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#name}
  */
  readonly name: string;
  /**
  * namespace is the namespace of the referent.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#namespace DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#namespace}
  */
  readonly namespace?: string;
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefsToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    group: cdktf.stringToTerraform(struct!.group),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefsToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    group: {
      value: cdktf.stringToHclTerraform(struct!.group),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._group !== undefined) {
      hasAnyValues = true;
      internalValueResult.group = this._group;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._group = undefined;
      this._kind = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._group = value.group;
      this._kind = value.kind;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // group - computed: false, optional: true, required: false
  private _group?: string; 
  public get group() {
    return this.getStringAttribute('group');
  }
  public set group(value: string) {
    this._group = value;
  }
  public resetGroup() {
    this._group = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupInput() {
    return this._group;
  }

  // kind - computed: false, optional: false, required: true
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefsList extends cdktf.ComplexList {
  public internalValue? : DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefs[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefsOutputReference {
    return new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecWorkloadSelector {
  /**
  * One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#labels DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecWorkloadSelectorToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecWorkloadSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecWorkloadSelectorToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecWorkloadSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecWorkloadSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecWorkloadSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecWorkloadSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labels = value.labels;
    }
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }
}
export interface DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpec {
  /**
  * One or more patches with match conditions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#config_patches DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#config_patches}
  */
  readonly configPatches?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatches[] | cdktf.IResolvable;
  /**
  * Priority defines the order in which patch sets are applied within a context.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#priority DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#priority}
  */
  readonly priority?: number;
  /**
  * Optional.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#target_refs DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#target_refs}
  */
  readonly targetRefs?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefs[] | cdktf.IResolvable;
  /**
  * Criteria used to select the specific set of pods/VMs on which this patch configuration should be applied.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#workload_selector DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest#workload_selector}
  */
  readonly workloadSelector?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecWorkloadSelector;
}

export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecToTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config_patches: cdktf.listMapper(dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesToTerraform, false)(struct!.configPatches),
    priority: cdktf.numberToTerraform(struct!.priority),
    target_refs: cdktf.listMapper(dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefsToTerraform, false)(struct!.targetRefs),
    workload_selector: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecWorkloadSelectorToTerraform(struct!.workloadSelector),
  }
}


export function dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecToHclTerraform(struct?: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config_patches: {
      value: cdktf.listMapperHcl(dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesToHclTerraform, false)(struct!.configPatches),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesList",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    target_refs: {
      value: cdktf.listMapperHcl(dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefsToHclTerraform, false)(struct!.targetRefs),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefsList",
    },
    workload_selector: {
      value: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecWorkloadSelectorToHclTerraform(struct!.workloadSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecWorkloadSelector",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configPatches?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.configPatches = this._configPatches?.internalValue;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._targetRefs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetRefs = this._targetRefs?.internalValue;
    }
    if (this._workloadSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.workloadSelector = this._workloadSelector?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configPatches.internalValue = undefined;
      this._priority = undefined;
      this._targetRefs.internalValue = undefined;
      this._workloadSelector.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configPatches.internalValue = value.configPatches;
      this._priority = value.priority;
      this._targetRefs.internalValue = value.targetRefs;
      this._workloadSelector.internalValue = value.workloadSelector;
    }
  }

  // config_patches - computed: false, optional: true, required: false
  private _configPatches = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatchesList(this, "config_patches", false);
  public get configPatches() {
    return this._configPatches;
  }
  public putConfigPatches(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecConfigPatches[] | cdktf.IResolvable) {
    this._configPatches.internalValue = value;
  }
  public resetConfigPatches() {
    this._configPatches.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configPatchesInput() {
    return this._configPatches.internalValue;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // target_refs - computed: false, optional: true, required: false
  private _targetRefs = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefsList(this, "target_refs", false);
  public get targetRefs() {
    return this._targetRefs;
  }
  public putTargetRefs(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecTargetRefs[] | cdktf.IResolvable) {
    this._targetRefs.internalValue = value;
  }
  public resetTargetRefs() {
    this._targetRefs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetRefsInput() {
    return this._targetRefs.internalValue;
  }

  // workload_selector - computed: false, optional: true, required: false
  private _workloadSelector = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecWorkloadSelectorOutputReference(this, "workload_selector");
  public get workloadSelector() {
    return this._workloadSelector;
  }
  public putWorkloadSelector(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecWorkloadSelector) {
    this._workloadSelector.internalValue = value;
  }
  public resetWorkloadSelector() {
    this._workloadSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get workloadSelectorInput() {
    return this._workloadSelector.internalValue;
  }
}

/**
* Represents a {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest k8s_networking_istio_io_envoy_filter_v1alpha3_manifest}
*/
export class DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest extends cdktf.TerraformDataSource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "k8s_networking_istio_io_envoy_filter_v1alpha3_manifest";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest to import
  * @param importFromId The id of the existing DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest that should be imported. Refer to the {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3Manifest to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "k8s_networking_istio_io_envoy_filter_v1alpha3_manifest", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/networking_istio_io_envoy_filter_v1alpha3_manifest k8s_networking_istio_io_envoy_filter_v1alpha3_manifest} Data Source
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestConfig
  */
  public constructor(scope: Construct, id: string, config: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestConfig) {
    super(scope, id, {
      terraformResourceType: 'k8s_networking_istio_io_envoy_filter_v1alpha3_manifest',
      terraformGeneratorMetadata: {
        providerName: 'k8s',
        providerVersion: '2025.10.20'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._metadata.internalValue = config.metadata;
    this._spec.internalValue = config.spec;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }

  // yaml - computed: true, optional: false, required: false
  public get yaml() {
    return this.getStringAttribute('yaml');
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      metadata: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestMetadataToTerraform(this._metadata.internalValue),
      spec: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecToTerraform(this._spec.internalValue),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      metadata: {
        value: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestMetadataToHclTerraform(this._metadata.internalValue),
        isBlock: true,
        type: "struct",
        storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestMetadata",
      },
      spec: {
        value: dataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpecToHclTerraform(this._spec.internalValue),
        isBlock: true,
        type: "struct",
        storageClassType: "DataK8SNetworkingIstioIoEnvoyFilterV1Alpha3ManifestSpec",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
