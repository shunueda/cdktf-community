import * as cdktf from 'cdktf';
import { DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseSuccess,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseSuccessToTerraform,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseSuccessToHclTerraform,
DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseSuccessOutputReference,
DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthenticated,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthenticatedToTerraform,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthenticatedToHclTerraform,
DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthenticatedOutputReference,
DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthorized,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthorizedToTerraform,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthorizedToHclTerraform,
DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthorizedOutputReference,
DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthentication,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthenticationToTerraform,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthenticationToHclTerraform,
DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthenticationOutputReference,
DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthorization,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthorizationToTerraform,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthorizationToHclTerraform,
DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthorizationOutputReference,
DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesCallbacks,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesCallbacksToTerraform,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesCallbacksToHclTerraform,
DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesCallbacksOutputReference,
DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesMetadata,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesMetadataToTerraform,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesMetadataToHclTerraform,
DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesMetadataOutputReference,
DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRouteSelectors,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRouteSelectorsToTerraform,
dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRouteSelectorsToHclTerraform,
DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRouteSelectorsList } from './structs400'
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponse {
  /**
  * Response items to be included in the auth response when the request is authenticated and authorized. For integration of Authorino via proxy, the proxy must use these settings to propagate dynamic metadata and/or inject data in the request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#success DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#success}
  */
  readonly success?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseSuccess;
  /**
  * Customizations on the denial status attributes when the request is unauthenticated. For integration of Authorino via proxy, the proxy must honour the response status attributes specified in this config. Default: 401 Unauthorized
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#unauthenticated DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#unauthenticated}
  */
  readonly unauthenticated?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthenticated;
  /**
  * Customizations on the denial status attributes when the request is unauthorized. For integration of Authorino via proxy, the proxy must honour the response status attributes specified in this config. Default: 403 Forbidden
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#unauthorized DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#unauthorized}
  */
  readonly unauthorized?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthorized;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponse | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    success: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseSuccessToTerraform(struct!.success),
    unauthenticated: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthenticatedToTerraform(struct!.unauthenticated),
    unauthorized: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthorizedToTerraform(struct!.unauthorized),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponse | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    success: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseSuccessToHclTerraform(struct!.success),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseSuccess",
    },
    unauthenticated: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthenticatedToHclTerraform(struct!.unauthenticated),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthenticated",
    },
    unauthorized: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthorizedToHclTerraform(struct!.unauthorized),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthorized",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponse | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._success?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.success = this._success?.internalValue;
    }
    if (this._unauthenticated?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.unauthenticated = this._unauthenticated?.internalValue;
    }
    if (this._unauthorized?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.unauthorized = this._unauthorized?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponse | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._success.internalValue = undefined;
      this._unauthenticated.internalValue = undefined;
      this._unauthorized.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._success.internalValue = value.success;
      this._unauthenticated.internalValue = value.unauthenticated;
      this._unauthorized.internalValue = value.unauthorized;
    }
  }

  // success - computed: false, optional: true, required: false
  private _success = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseSuccessOutputReference(this, "success");
  public get success() {
    return this._success;
  }
  public putSuccess(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseSuccess) {
    this._success.internalValue = value;
  }
  public resetSuccess() {
    this._success.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get successInput() {
    return this._success.internalValue;
  }

  // unauthenticated - computed: false, optional: true, required: false
  private _unauthenticated = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthenticatedOutputReference(this, "unauthenticated");
  public get unauthenticated() {
    return this._unauthenticated;
  }
  public putUnauthenticated(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthenticated) {
    this._unauthenticated.internalValue = value;
  }
  public resetUnauthenticated() {
    this._unauthenticated.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get unauthenticatedInput() {
    return this._unauthenticated.internalValue;
  }

  // unauthorized - computed: false, optional: true, required: false
  private _unauthorized = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthorizedOutputReference(this, "unauthorized");
  public get unauthorized() {
    return this._unauthorized;
  }
  public putUnauthorized(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseUnauthorized) {
    this._unauthorized.internalValue = value;
  }
  public resetUnauthorized() {
    this._unauthorized.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get unauthorizedInput() {
    return this._unauthorized.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRules {
  /**
  * Authentication configs. At least one config MUST evaluate to a valid identity object for the auth request to be successful.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#authentication DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#authentication}
  */
  readonly authentication?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthentication;
  /**
  * Authorization policies. All policies MUST evaluate to 'allowed = true' for the auth request be successful.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#authorization DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#authorization}
  */
  readonly authorization?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthorization;
  /**
  * Callback functions. Authorino sends callbacks at the end of the auth pipeline to the endpoints specified in this config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#callbacks DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#callbacks}
  */
  readonly callbacks?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesCallbacks;
  /**
  * Metadata sources. Authorino fetches auth metadata as JSON from sources specified in this config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#metadata DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#metadata}
  */
  readonly metadata?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesMetadata;
  /**
  * Response items. Authorino builds custom responses to the client of the auth request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#response DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#response}
  */
  readonly response?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponse;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRules | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    authentication: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthenticationToTerraform(struct!.authentication),
    authorization: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthorizationToTerraform(struct!.authorization),
    callbacks: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesCallbacksToTerraform(struct!.callbacks),
    metadata: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesMetadataToTerraform(struct!.metadata),
    response: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseToTerraform(struct!.response),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRules | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    authentication: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthenticationToHclTerraform(struct!.authentication),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthentication",
    },
    authorization: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthorizationToHclTerraform(struct!.authorization),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthorization",
    },
    callbacks: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesCallbacksToHclTerraform(struct!.callbacks),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesCallbacks",
    },
    metadata: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesMetadata",
    },
    response: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseToHclTerraform(struct!.response),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponse",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRules | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authentication?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authentication = this._authentication?.internalValue;
    }
    if (this._authorization?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authorization = this._authorization?.internalValue;
    }
    if (this._callbacks?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.callbacks = this._callbacks?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._response?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.response = this._response?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRules | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authentication.internalValue = undefined;
      this._authorization.internalValue = undefined;
      this._callbacks.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._response.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authentication.internalValue = value.authentication;
      this._authorization.internalValue = value.authorization;
      this._callbacks.internalValue = value.callbacks;
      this._metadata.internalValue = value.metadata;
      this._response.internalValue = value.response;
    }
  }

  // authentication - computed: false, optional: true, required: false
  private _authentication = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthenticationOutputReference(this, "authentication");
  public get authentication() {
    return this._authentication;
  }
  public putAuthentication(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthentication) {
    this._authentication.internalValue = value;
  }
  public resetAuthentication() {
    this._authentication.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authenticationInput() {
    return this._authentication.internalValue;
  }

  // authorization - computed: false, optional: true, required: false
  private _authorization = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthorizationOutputReference(this, "authorization");
  public get authorization() {
    return this._authorization;
  }
  public putAuthorization(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesAuthorization) {
    this._authorization.internalValue = value;
  }
  public resetAuthorization() {
    this._authorization.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authorizationInput() {
    return this._authorization.internalValue;
  }

  // callbacks - computed: false, optional: true, required: false
  private _callbacks = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesCallbacksOutputReference(this, "callbacks");
  public get callbacks() {
    return this._callbacks;
  }
  public putCallbacks(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesCallbacks) {
    this._callbacks.internalValue = value;
  }
  public resetCallbacks() {
    this._callbacks.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get callbacksInput() {
    return this._callbacks.internalValue;
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // response - computed: false, optional: true, required: false
  private _response = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponseOutputReference(this, "response");
  public get response() {
    return this._response;
  }
  public putResponse(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesResponse) {
    this._response.internalValue = value;
  }
  public resetResponse() {
    this._response.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get responseInput() {
    return this._response.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhen {
  /**
  * A list of pattern expressions to be evaluated as a logical AND.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#all DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#all}
  */
  readonly all?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * A list of pattern expressions to be evaluated as a logical OR.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#any DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#any}
  */
  readonly any?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * The binary operator to be applied to the content fetched from the authorization JSON, for comparison with 'value'. Possible values are: 'eq' (equal to), 'neq' (not equal to), 'incl' (includes; for arrays), 'excl' (excludes; for arrays), 'matches' (regex)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#operator DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Reference to a named set of pattern expressions
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#pattern_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#pattern_ref}
  */
  readonly patternRef?: string;
  /**
  * Path selector to fetch content from the authorization JSON (e.g. 'request.method'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. Authorino custom JSON path modifiers are also supported.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * The value of reference for the comparison with the content fetched from the authorization JSON. If used with the 'matches' operator, the value must compile to a valid Golang regex.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhenToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhen | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    all: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.all),
    any: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.any),
    operator: cdktf.stringToTerraform(struct!.operator),
    pattern_ref: cdktf.stringToTerraform(struct!.patternRef),
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhenToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhen | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    all: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.all),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    any: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.any),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pattern_ref: {
      value: cdktf.stringToHclTerraform(struct!.patternRef),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhenOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhen | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._all !== undefined) {
      hasAnyValues = true;
      internalValueResult.all = this._all;
    }
    if (this._any !== undefined) {
      hasAnyValues = true;
      internalValueResult.any = this._any;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._patternRef !== undefined) {
      hasAnyValues = true;
      internalValueResult.patternRef = this._patternRef;
    }
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhen | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._all = undefined;
      this._any = undefined;
      this._operator = undefined;
      this._patternRef = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._all = value.all;
      this._any = value.any;
      this._operator = value.operator;
      this._patternRef = value.patternRef;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // all - computed: false, optional: true, required: false
  private _all?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get all() {
    return this.interpolationForAttribute('all');
  }
  public set all(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._all = value;
  }
  public resetAll() {
    this._all = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allInput() {
    return this._all;
  }

  // any - computed: false, optional: true, required: false
  private _any?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get any() {
    return this.interpolationForAttribute('any');
  }
  public set any(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._any = value;
  }
  public resetAny() {
    this._any = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get anyInput() {
    return this._any;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // pattern_ref - computed: false, optional: true, required: false
  private _patternRef?: string; 
  public get patternRef() {
    return this.getStringAttribute('pattern_ref');
  }
  public set patternRef(value: string) {
    this._patternRef = value;
  }
  public resetPatternRef() {
    this._patternRef = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternRefInput() {
    return this._patternRef;
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhenList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhen[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhenOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhenOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverrides {
  /**
  * Named sets of patterns that can be referred in 'when' conditions and in pattern-matching authorization policy rules.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#patterns DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#patterns}
  */
  readonly patterns?: { [key: string]: string };
  /**
  * Top-level route selectors. If present, the elements will be used to select HTTPRoute rules that, when activated, trigger the external authorization service. At least one selected HTTPRoute rule must match to trigger the AuthPolicy. If no route selectors are specified, the AuthPolicy will be enforced at all requests to the protected routes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#route_selectors DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#route_selectors}
  */
  readonly routeSelectors?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRouteSelectors[] | cdktf.IResolvable;
  /**
  * The auth rules of the policy. See Authorino's AuthConfig CRD for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#rules DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#rules}
  */
  readonly rules?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRules;
  /**
  * Overall conditions for the AuthPolicy to be enforced. If omitted, the AuthPolicy will be enforced at all requests to the protected routes. If present, all conditions must match for the AuthPolicy to be enforced; otherwise, the authorization service skips the AuthPolicy and returns to the auth request with status OK.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#when DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#when}
  */
  readonly when?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhen[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverrides | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    patterns: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.patterns),
    route_selectors: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRouteSelectorsToTerraform, false)(struct!.routeSelectors),
    rules: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesToTerraform(struct!.rules),
    when: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhenToTerraform, false)(struct!.when),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverrides | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    patterns: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.patterns),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    route_selectors: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRouteSelectorsToHclTerraform, false)(struct!.routeSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRouteSelectorsList",
    },
    rules: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesToHclTerraform(struct!.rules),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRules",
    },
    when: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhenToHclTerraform, false)(struct!.when),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhenList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverrides | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._patterns !== undefined) {
      hasAnyValues = true;
      internalValueResult.patterns = this._patterns;
    }
    if (this._routeSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeSelectors = this._routeSelectors?.internalValue;
    }
    if (this._rules?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rules = this._rules?.internalValue;
    }
    if (this._when?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.when = this._when?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverrides | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._patterns = undefined;
      this._routeSelectors.internalValue = undefined;
      this._rules.internalValue = undefined;
      this._when.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._patterns = value.patterns;
      this._routeSelectors.internalValue = value.routeSelectors;
      this._rules.internalValue = value.rules;
      this._when.internalValue = value.when;
    }
  }

  // patterns - computed: false, optional: true, required: false
  private _patterns?: { [key: string]: string }; 
  public get patterns() {
    return this.getStringMapAttribute('patterns');
  }
  public set patterns(value: { [key: string]: string }) {
    this._patterns = value;
  }
  public resetPatterns() {
    this._patterns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternsInput() {
    return this._patterns;
  }

  // route_selectors - computed: false, optional: true, required: false
  private _routeSelectors = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRouteSelectorsList(this, "route_selectors", false);
  public get routeSelectors() {
    return this._routeSelectors;
  }
  public putRouteSelectors(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRouteSelectors[] | cdktf.IResolvable) {
    this._routeSelectors.internalValue = value;
  }
  public resetRouteSelectors() {
    this._routeSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeSelectorsInput() {
    return this._routeSelectors.internalValue;
  }

  // rules - computed: false, optional: true, required: false
  private _rules = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRulesOutputReference(this, "rules");
  public get rules() {
    return this._rules;
  }
  public putRules(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesRules) {
    this._rules.internalValue = value;
  }
  public resetRules() {
    this._rules.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rulesInput() {
    return this._rules.internalValue;
  }

  // when - computed: false, optional: true, required: false
  private _when = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhenList(this, "when", false);
  public get when() {
    return this._when;
  }
  public putWhen(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecOverridesWhen[] | cdktf.IResolvable) {
    this._when.internalValue = value;
  }
  public resetWhen() {
    this._when.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get whenInput() {
    return this._when.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeaders {
  /**
  * Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). If multiple entries specify equivalent header names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, 'foo' and 'Foo' are considered equivalent. When a header is repeated in an HTTP request, it is implementation-specific behavior as to how this is represented. Generally, proxies should follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding processing a repeated header, with special handling for 'Set-Cookie'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
  /**
  * Type specifies how to match against the value of the header. Support: Core (Exact) Support: Implementation-specific (RegularExpression) Since RegularExpression HeaderMatchType has implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value is the value of HTTP Header to be matched.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeadersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeadersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeadersOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesPath {
  /**
  * Type specifies how to match against the path Value. Support: Core (Exact, PathPrefix) Support: Implementation-specific (RegularExpression)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value of the HTTP path to match against.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesPathToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesPathToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParams {
  /**
  * Name is the name of the HTTP query param to be matched. This must be an exact string match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3). If multiple entries specify equivalent query param names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent query param name MUST be ignored. If a query param is repeated in an HTTP request, the behavior is purposely left undefined, since different data planes have different capabilities. However, it is *recommended* that implementations should match against the first value of the param if the data plane supports it, as this behavior is expected in other load balancing contexts outside of the Gateway API. Users SHOULD NOT route traffic based on repeated query params to guard themselves against potential differences in the implementations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
  /**
  * Type specifies how to match against the value of the query parameter. Support: Extended (Exact) Support: Implementation-specific (RegularExpression) Since RegularExpression QueryParamMatchType has Implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value is the value of HTTP query param to be matched.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParamsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParams | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParamsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParams | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParamsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParams | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParams | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParamsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParamsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParamsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatches {
  /**
  * Headers specifies HTTP request header matchers. Multiple match values are ANDed together, meaning, a request must match all the specified headers to select the route.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#headers DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#headers}
  */
  readonly headers?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeaders[] | cdktf.IResolvable;
  /**
  * Method specifies HTTP method matcher. When specified, this route will be matched only if the request has the specified method. Support: Extended
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#method DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#method}
  */
  readonly method?: string;
  /**
  * Path specifies a HTTP request path matcher. If this field is not specified, a default prefix match on the '/' path is provided.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#path DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#path}
  */
  readonly path?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesPath;
  /**
  * QueryParams specifies HTTP query parameter matchers. Multiple match values are ANDed together, meaning, a request must match all the specified query parameters to select the route. Support: Extended
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#query_params DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#query_params}
  */
  readonly queryParams?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    headers: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeadersToTerraform, false)(struct!.headers),
    method: cdktf.stringToTerraform(struct!.method),
    path: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesPathToTerraform(struct!.path),
    query_params: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParamsToTerraform, false)(struct!.queryParams),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    headers: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeadersList",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesPathToHclTerraform(struct!.path),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesPath",
    },
    query_params: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParamsToHclTerraform, false)(struct!.queryParams),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParamsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatches | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    if (this._queryParams?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryParams = this._queryParams?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatches | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._headers.internalValue = undefined;
      this._method = undefined;
      this._path.internalValue = undefined;
      this._queryParams.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._headers.internalValue = value.headers;
      this._method = value.method;
      this._path.internalValue = value.path;
      this._queryParams.internalValue = value.queryParams;
    }
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesPathOutputReference(this, "path");
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesPath) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }

  // query_params - computed: false, optional: true, required: false
  private _queryParams = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParamsList(this, "query_params", false);
  public get queryParams() {
    return this._queryParams;
  }
  public putQueryParams(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable) {
    this._queryParams.internalValue = value;
  }
  public resetQueryParams() {
    this._queryParams.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryParamsInput() {
    return this._queryParams.internalValue;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatches[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectors {
  /**
  * Hostnames defines a set of hostname that should match against the HTTP Host header to select a HTTPRoute to process the request https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteSpec
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#hostnames DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#hostnames}
  */
  readonly hostnames?: string[];
  /**
  * Matches define conditions used for matching the rule against incoming HTTP requests. https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteSpec
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#matches DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#matches}
  */
  readonly matches?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatches[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    hostnames: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.hostnames),
    matches: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesToTerraform, false)(struct!.matches),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    hostnames: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.hostnames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    matches: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesToHclTerraform, false)(struct!.matches),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._hostnames !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostnames = this._hostnames;
    }
    if (this._matches?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matches = this._matches?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._hostnames = undefined;
      this._matches.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._hostnames = value.hostnames;
      this._matches.internalValue = value.matches;
    }
  }

  // hostnames - computed: false, optional: true, required: false
  private _hostnames?: string[]; 
  public get hostnames() {
    return this.getListAttribute('hostnames');
  }
  public set hostnames(value: string[]) {
    this._hostnames = value;
  }
  public resetHostnames() {
    this._hostnames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnamesInput() {
    return this._hostnames;
  }

  // matches - computed: false, optional: true, required: false
  private _matches = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatchesList(this, "matches", false);
  public get matches() {
    return this._matches;
  }
  public putMatches(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsMatches[] | cdktf.IResolvable) {
    this._matches.internalValue = value;
  }
  public resetMatches() {
    this._matches.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchesInput() {
    return this._matches.internalValue;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRouteSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressions {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#operator DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#values DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressionsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressionsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressionsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelector {
  /**
  * matchExpressions is a list of label selector requirements. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#match_expressions DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#match_labels DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKey {
  /**
  * Whether Authorino should look for API key secrets in all namespaces or only in the same namespace as the AuthConfig. Enabling this option in namespaced Authorino instances has no effect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#all_namespaces DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#all_namespaces}
  */
  readonly allNamespaces?: boolean | cdktf.IResolvable;
  /**
  * Label selector used by Authorino to match secrets from the cluster storing valid credentials to authenticate to this service
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelector;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeyToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    all_namespaces: cdktf.booleanToTerraform(struct!.allNamespaces),
    selector: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorToTerraform(struct!.selector),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeyToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    all_namespaces: {
      value: cdktf.booleanToHclTerraform(struct!.allNamespaces),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    selector: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelector",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allNamespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.allNamespaces = this._allNamespaces;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allNamespaces = undefined;
      this._selector.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allNamespaces = value.allNamespaces;
      this._selector.internalValue = value.selector;
    }
  }

  // all_namespaces - computed: false, optional: true, required: false
  private _allNamespaces?: boolean | cdktf.IResolvable; 
  public get allNamespaces() {
    return this.getBooleanAttribute('all_namespaces');
  }
  public set allNamespaces(value: boolean | cdktf.IResolvable) {
    this._allNamespaces = value;
  }
  public resetAllNamespaces() {
    this._allNamespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allNamespacesInput() {
    return this._allNamespaces;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeySelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheKey {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheKeyToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheKeyToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCache {
  /**
  * Key used to store the entry in the cache. The resolved key must be unique within the scope of this particular config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheKey;
  /**
  * Duration (in seconds) of the external data in the cache before pulled again from the source.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#ttl DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#ttl}
  */
  readonly ttl?: number;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCache | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheKeyToTerraform(struct!.key),
    ttl: cdktf.numberToTerraform(struct!.ttl),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCache | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheKeyToHclTerraform(struct!.key),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheKey",
    },
    ttl: {
      value: cdktf.numberToHclTerraform(struct!.ttl),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCache | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key?.internalValue;
    }
    if (this._ttl !== undefined) {
      hasAnyValues = true;
      internalValueResult.ttl = this._ttl;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCache | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key.internalValue = undefined;
      this._ttl = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key.internalValue = value.key;
      this._ttl = value.ttl;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheKeyOutputReference(this, "key");
  public get key() {
    return this._key;
  }
  public putKey(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheKey) {
    this._key.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key.internalValue;
  }

  // ttl - computed: false, optional: true, required: false
  private _ttl?: number; 
  public get ttl() {
    return this.getNumberAttribute('ttl');
  }
  public set ttl(value: number) {
    this._ttl = value;
  }
  public resetTtl() {
    this._ttl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ttlInput() {
    return this._ttl;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsAuthorizationHeader {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#prefix DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#prefix}
  */
  readonly prefix?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsAuthorizationHeaderToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsAuthorizationHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    prefix: cdktf.stringToTerraform(struct!.prefix),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsAuthorizationHeaderToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsAuthorizationHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    prefix: {
      value: cdktf.stringToHclTerraform(struct!.prefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsAuthorizationHeaderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsAuthorizationHeader | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._prefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefix = this._prefix;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsAuthorizationHeader | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._prefix = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._prefix = value.prefix;
    }
  }

  // prefix - computed: false, optional: true, required: false
  private _prefix?: string; 
  public get prefix() {
    return this.getStringAttribute('prefix');
  }
  public set prefix(value: string) {
    this._prefix = value;
  }
  public resetPrefix() {
    this._prefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixInput() {
    return this._prefix;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCookie {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCookieToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCookie | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCookieToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCookie | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCookieOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCookie | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCookie | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCustomHeader {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCustomHeaderToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCustomHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCustomHeaderToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCustomHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCustomHeaderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCustomHeader | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCustomHeader | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsQueryString {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsQueryStringToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsQueryString | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsQueryStringToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsQueryString | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsQueryStringOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsQueryString | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsQueryString | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentials {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#authorization_header DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#authorization_header}
  */
  readonly authorizationHeader?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsAuthorizationHeader;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#cookie DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#cookie}
  */
  readonly cookie?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCookie;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#custom_header DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#custom_header}
  */
  readonly customHeader?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCustomHeader;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#query_string DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#query_string}
  */
  readonly queryString?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsQueryString;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    authorization_header: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsAuthorizationHeaderToTerraform(struct!.authorizationHeader),
    cookie: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCookieToTerraform(struct!.cookie),
    custom_header: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCustomHeaderToTerraform(struct!.customHeader),
    query_string: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsQueryStringToTerraform(struct!.queryString),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    authorization_header: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsAuthorizationHeaderToHclTerraform(struct!.authorizationHeader),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsAuthorizationHeader",
    },
    cookie: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCookieToHclTerraform(struct!.cookie),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCookie",
    },
    custom_header: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCustomHeaderToHclTerraform(struct!.customHeader),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCustomHeader",
    },
    query_string: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsQueryStringToHclTerraform(struct!.queryString),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsQueryString",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentials | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authorizationHeader?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authorizationHeader = this._authorizationHeader?.internalValue;
    }
    if (this._cookie?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cookie = this._cookie?.internalValue;
    }
    if (this._customHeader?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.customHeader = this._customHeader?.internalValue;
    }
    if (this._queryString?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryString = this._queryString?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentials | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authorizationHeader.internalValue = undefined;
      this._cookie.internalValue = undefined;
      this._customHeader.internalValue = undefined;
      this._queryString.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authorizationHeader.internalValue = value.authorizationHeader;
      this._cookie.internalValue = value.cookie;
      this._customHeader.internalValue = value.customHeader;
      this._queryString.internalValue = value.queryString;
    }
  }

  // authorization_header - computed: false, optional: true, required: false
  private _authorizationHeader = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsAuthorizationHeaderOutputReference(this, "authorization_header");
  public get authorizationHeader() {
    return this._authorizationHeader;
  }
  public putAuthorizationHeader(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsAuthorizationHeader) {
    this._authorizationHeader.internalValue = value;
  }
  public resetAuthorizationHeader() {
    this._authorizationHeader.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authorizationHeaderInput() {
    return this._authorizationHeader.internalValue;
  }

  // cookie - computed: false, optional: true, required: false
  private _cookie = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCookieOutputReference(this, "cookie");
  public get cookie() {
    return this._cookie;
  }
  public putCookie(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCookie) {
    this._cookie.internalValue = value;
  }
  public resetCookie() {
    this._cookie.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cookieInput() {
    return this._cookie.internalValue;
  }

  // custom_header - computed: false, optional: true, required: false
  private _customHeader = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCustomHeaderOutputReference(this, "custom_header");
  public get customHeader() {
    return this._customHeader;
  }
  public putCustomHeader(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsCustomHeader) {
    this._customHeader.internalValue = value;
  }
  public resetCustomHeader() {
    this._customHeader.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customHeaderInput() {
    return this._customHeader.internalValue;
  }

  // query_string - computed: false, optional: true, required: false
  private _queryString = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsQueryStringOutputReference(this, "query_string");
  public get queryString() {
    return this._queryString;
  }
  public putQueryString(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsQueryString) {
    this._queryString.internalValue = value;
  }
  public resetQueryString() {
    this._queryString.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryStringInput() {
    return this._queryString.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationDefaults {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationDefaultsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationDefaults | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationDefaultsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationDefaults | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationDefaultsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationDefaults | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationDefaults | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationJwt {
  /**
  * URL of the issuer of the JWT. If 'jwksUrl' is omitted, Authorino will append the path to the OpenID Connect Well-Known Discovery endpoint (i.e. '/.well-known/openid-configuration') to this URL, to discover the OIDC configuration where to obtain the 'jkws_uri' claim from. The value must coincide with the value of the 'iss' (issuer) claim of the discovered OpenID Connect configuration.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#issuer_url DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#issuer_url}
  */
  readonly issuerUrl?: string;
  /**
  * Decides how long to wait before refreshing the JWKS (in seconds). If omitted, Authorino will never refresh the JWKS.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#ttl DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#ttl}
  */
  readonly ttl?: number;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationJwtToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationJwt | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    issuer_url: cdktf.stringToTerraform(struct!.issuerUrl),
    ttl: cdktf.numberToTerraform(struct!.ttl),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationJwtToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationJwt | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    issuer_url: {
      value: cdktf.stringToHclTerraform(struct!.issuerUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ttl: {
      value: cdktf.numberToHclTerraform(struct!.ttl),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationJwtOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationJwt | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._issuerUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.issuerUrl = this._issuerUrl;
    }
    if (this._ttl !== undefined) {
      hasAnyValues = true;
      internalValueResult.ttl = this._ttl;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationJwt | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._issuerUrl = undefined;
      this._ttl = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._issuerUrl = value.issuerUrl;
      this._ttl = value.ttl;
    }
  }

  // issuer_url - computed: false, optional: true, required: false
  private _issuerUrl?: string; 
  public get issuerUrl() {
    return this.getStringAttribute('issuer_url');
  }
  public set issuerUrl(value: string) {
    this._issuerUrl = value;
  }
  public resetIssuerUrl() {
    this._issuerUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get issuerUrlInput() {
    return this._issuerUrl;
  }

  // ttl - computed: false, optional: true, required: false
  private _ttl?: number; 
  public get ttl() {
    return this.getNumberAttribute('ttl');
  }
  public set ttl(value: number) {
    this._ttl = value;
  }
  public resetTtl() {
    this._ttl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ttlInput() {
    return this._ttl;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationKubernetesTokenReview {
  /**
  * The list of audiences (scopes) that must be claimed in a Kubernetes authentication token supplied in the request, and reviewed by Authorino. If omitted, Authorino will review tokens expecting the host name of the requested protected service amongst the audiences.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#audiences DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#audiences}
  */
  readonly audiences?: string[];
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationKubernetesTokenReviewToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationKubernetesTokenReview | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    audiences: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.audiences),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationKubernetesTokenReviewToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationKubernetesTokenReview | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    audiences: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.audiences),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationKubernetesTokenReviewOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationKubernetesTokenReview | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._audiences !== undefined) {
      hasAnyValues = true;
      internalValueResult.audiences = this._audiences;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationKubernetesTokenReview | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._audiences = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._audiences = value.audiences;
    }
  }

  // audiences - computed: false, optional: true, required: false
  private _audiences?: string[]; 
  public get audiences() {
    return this.getListAttribute('audiences');
  }
  public set audiences(value: string[]) {
    this._audiences = value;
  }
  public resetAudiences() {
    this._audiences = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get audiencesInput() {
    return this._audiences;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionCredentialsRef {
  /**
  * Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop 'kubebuilder:default' when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionCredentialsRefToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionCredentialsRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionCredentialsRefToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionCredentialsRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionCredentialsRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionCredentialsRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionCredentialsRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2Introspection {
  /**
  * Reference to a Kubernetes secret in the same namespace, that stores client credentials to the OAuth2 server.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#credentials_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#credentials_ref}
  */
  readonly credentialsRef: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionCredentialsRef;
  /**
  * The full URL of the token introspection endpoint.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#endpoint DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#endpoint}
  */
  readonly endpoint: string;
  /**
  * The token type hint for the token introspection. If omitted, it defaults to 'access_token'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#token_type_hint DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#token_type_hint}
  */
  readonly tokenTypeHint?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2Introspection | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    credentials_ref: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionCredentialsRefToTerraform(struct!.credentialsRef),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    token_type_hint: cdktf.stringToTerraform(struct!.tokenTypeHint),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2Introspection | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    credentials_ref: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionCredentialsRefToHclTerraform(struct!.credentialsRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionCredentialsRef",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    token_type_hint: {
      value: cdktf.stringToHclTerraform(struct!.tokenTypeHint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2Introspection | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._credentialsRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.credentialsRef = this._credentialsRef?.internalValue;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._tokenTypeHint !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenTypeHint = this._tokenTypeHint;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2Introspection | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._credentialsRef.internalValue = undefined;
      this._endpoint = undefined;
      this._tokenTypeHint = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._credentialsRef.internalValue = value.credentialsRef;
      this._endpoint = value.endpoint;
      this._tokenTypeHint = value.tokenTypeHint;
    }
  }

  // credentials_ref - computed: false, optional: false, required: true
  private _credentialsRef = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionCredentialsRefOutputReference(this, "credentials_ref");
  public get credentialsRef() {
    return this._credentialsRef;
  }
  public putCredentialsRef(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionCredentialsRef) {
    this._credentialsRef.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get credentialsRefInput() {
    return this._credentialsRef.internalValue;
  }

  // endpoint - computed: false, optional: false, required: true
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // token_type_hint - computed: false, optional: true, required: false
  private _tokenTypeHint?: string; 
  public get tokenTypeHint() {
    return this.getStringAttribute('token_type_hint');
  }
  public set tokenTypeHint(value: string) {
    this._tokenTypeHint = value;
  }
  public resetTokenTypeHint() {
    this._tokenTypeHint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenTypeHintInput() {
    return this._tokenTypeHint;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOverrides {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOverridesToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOverrides | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOverridesToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOverrides | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOverridesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOverrides | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOverrides | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationPlain {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationPlainToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationPlain | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationPlainToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationPlain | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationPlainOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationPlain | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationPlain | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
    }
  }

  // selector - computed: false, optional: false, required: true
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeaders {
  /**
  * Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). If multiple entries specify equivalent header names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, 'foo' and 'Foo' are considered equivalent. When a header is repeated in an HTTP request, it is implementation-specific behavior as to how this is represented. Generally, proxies should follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding processing a repeated header, with special handling for 'Set-Cookie'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
  /**
  * Type specifies how to match against the value of the header. Support: Core (Exact) Support: Implementation-specific (RegularExpression) Since RegularExpression HeaderMatchType has implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value is the value of HTTP Header to be matched.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeadersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeadersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeadersOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesPath {
  /**
  * Type specifies how to match against the path Value. Support: Core (Exact, PathPrefix) Support: Implementation-specific (RegularExpression)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value of the HTTP path to match against.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesPathToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesPathToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParams {
  /**
  * Name is the name of the HTTP query param to be matched. This must be an exact string match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3). If multiple entries specify equivalent query param names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent query param name MUST be ignored. If a query param is repeated in an HTTP request, the behavior is purposely left undefined, since different data planes have different capabilities. However, it is *recommended* that implementations should match against the first value of the param if the data plane supports it, as this behavior is expected in other load balancing contexts outside of the Gateway API. Users SHOULD NOT route traffic based on repeated query params to guard themselves against potential differences in the implementations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
  /**
  * Type specifies how to match against the value of the query parameter. Support: Extended (Exact) Support: Implementation-specific (RegularExpression) Since RegularExpression QueryParamMatchType has Implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value is the value of HTTP query param to be matched.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParamsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParams | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParamsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParams | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParamsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParams | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParams | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParamsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParamsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParamsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatches {
  /**
  * Headers specifies HTTP request header matchers. Multiple match values are ANDed together, meaning, a request must match all the specified headers to select the route.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#headers DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#headers}
  */
  readonly headers?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeaders[] | cdktf.IResolvable;
  /**
  * Method specifies HTTP method matcher. When specified, this route will be matched only if the request has the specified method. Support: Extended
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#method DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#method}
  */
  readonly method?: string;
  /**
  * Path specifies a HTTP request path matcher. If this field is not specified, a default prefix match on the '/' path is provided.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#path DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#path}
  */
  readonly path?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesPath;
  /**
  * QueryParams specifies HTTP query parameter matchers. Multiple match values are ANDed together, meaning, a request must match all the specified query parameters to select the route. Support: Extended
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#query_params DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#query_params}
  */
  readonly queryParams?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    headers: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeadersToTerraform, false)(struct!.headers),
    method: cdktf.stringToTerraform(struct!.method),
    path: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesPathToTerraform(struct!.path),
    query_params: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParamsToTerraform, false)(struct!.queryParams),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    headers: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeadersList",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesPathToHclTerraform(struct!.path),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesPath",
    },
    query_params: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParamsToHclTerraform, false)(struct!.queryParams),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParamsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatches | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    if (this._queryParams?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryParams = this._queryParams?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatches | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._headers.internalValue = undefined;
      this._method = undefined;
      this._path.internalValue = undefined;
      this._queryParams.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._headers.internalValue = value.headers;
      this._method = value.method;
      this._path.internalValue = value.path;
      this._queryParams.internalValue = value.queryParams;
    }
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesPathOutputReference(this, "path");
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesPath) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }

  // query_params - computed: false, optional: true, required: false
  private _queryParams = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParamsList(this, "query_params", false);
  public get queryParams() {
    return this._queryParams;
  }
  public putQueryParams(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable) {
    this._queryParams.internalValue = value;
  }
  public resetQueryParams() {
    this._queryParams.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryParamsInput() {
    return this._queryParams.internalValue;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatches[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectors {
  /**
  * Hostnames defines a set of hostname that should match against the HTTP Host header to select a HTTPRoute to process the request https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteSpec
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#hostnames DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#hostnames}
  */
  readonly hostnames?: string[];
  /**
  * Matches define conditions used for matching the rule against incoming HTTP requests. https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteSpec
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#matches DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#matches}
  */
  readonly matches?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatches[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    hostnames: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.hostnames),
    matches: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesToTerraform, false)(struct!.matches),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    hostnames: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.hostnames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    matches: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesToHclTerraform, false)(struct!.matches),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._hostnames !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostnames = this._hostnames;
    }
    if (this._matches?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matches = this._matches?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._hostnames = undefined;
      this._matches.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._hostnames = value.hostnames;
      this._matches.internalValue = value.matches;
    }
  }

  // hostnames - computed: false, optional: true, required: false
  private _hostnames?: string[]; 
  public get hostnames() {
    return this.getListAttribute('hostnames');
  }
  public set hostnames(value: string[]) {
    this._hostnames = value;
  }
  public resetHostnames() {
    this._hostnames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnamesInput() {
    return this._hostnames;
  }

  // matches - computed: false, optional: true, required: false
  private _matches = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatchesList(this, "matches", false);
  public get matches() {
    return this._matches;
  }
  public putMatches(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsMatches[] | cdktf.IResolvable) {
    this._matches.internalValue = value;
  }
  public resetMatches() {
    this._matches.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchesInput() {
    return this._matches.internalValue;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhen {
  /**
  * A list of pattern expressions to be evaluated as a logical AND.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#all DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#all}
  */
  readonly all?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * A list of pattern expressions to be evaluated as a logical OR.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#any DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#any}
  */
  readonly any?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * The binary operator to be applied to the content fetched from the authorization JSON, for comparison with 'value'. Possible values are: 'eq' (equal to), 'neq' (not equal to), 'incl' (includes; for arrays), 'excl' (excludes; for arrays), 'matches' (regex)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#operator DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Reference to a named set of pattern expressions
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#pattern_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#pattern_ref}
  */
  readonly patternRef?: string;
  /**
  * Path selector to fetch content from the authorization JSON (e.g. 'request.method'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. Authorino custom JSON path modifiers are also supported.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * The value of reference for the comparison with the content fetched from the authorization JSON. If used with the 'matches' operator, the value must compile to a valid Golang regex.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhenToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhen | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    all: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.all),
    any: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.any),
    operator: cdktf.stringToTerraform(struct!.operator),
    pattern_ref: cdktf.stringToTerraform(struct!.patternRef),
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhenToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhen | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    all: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.all),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    any: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.any),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pattern_ref: {
      value: cdktf.stringToHclTerraform(struct!.patternRef),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhenOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhen | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._all !== undefined) {
      hasAnyValues = true;
      internalValueResult.all = this._all;
    }
    if (this._any !== undefined) {
      hasAnyValues = true;
      internalValueResult.any = this._any;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._patternRef !== undefined) {
      hasAnyValues = true;
      internalValueResult.patternRef = this._patternRef;
    }
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhen | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._all = undefined;
      this._any = undefined;
      this._operator = undefined;
      this._patternRef = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._all = value.all;
      this._any = value.any;
      this._operator = value.operator;
      this._patternRef = value.patternRef;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // all - computed: false, optional: true, required: false
  private _all?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get all() {
    return this.interpolationForAttribute('all');
  }
  public set all(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._all = value;
  }
  public resetAll() {
    this._all = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allInput() {
    return this._all;
  }

  // any - computed: false, optional: true, required: false
  private _any?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get any() {
    return this.interpolationForAttribute('any');
  }
  public set any(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._any = value;
  }
  public resetAny() {
    this._any = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get anyInput() {
    return this._any;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // pattern_ref - computed: false, optional: true, required: false
  private _patternRef?: string; 
  public get patternRef() {
    return this.getStringAttribute('pattern_ref');
  }
  public set patternRef(value: string) {
    this._patternRef = value;
  }
  public resetPatternRef() {
    this._patternRef = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternRefInput() {
    return this._patternRef;
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhenList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhen[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhenOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhenOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressions {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#operator DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#values DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressionsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressionsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressionsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509Selector {
  /**
  * matchExpressions is a list of label selector requirements. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#match_expressions DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#match_labels DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509Selector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509Selector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509Selector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509Selector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509 {
  /**
  * Whether Authorino should look for TLS secrets in all namespaces or only in the same namespace as the AuthConfig. Enabling this option in namespaced Authorino instances has no effect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#all_namespaces DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#all_namespaces}
  */
  readonly allNamespaces?: boolean | cdktf.IResolvable;
  /**
  * Label selector used by Authorino to match secrets from the cluster storing trusted CA certificates to validate clients trying to authenticate to this service
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509Selector;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509ToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    all_namespaces: cdktf.booleanToTerraform(struct!.allNamespaces),
    selector: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorToTerraform(struct!.selector),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509ToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    all_namespaces: {
      value: cdktf.booleanToHclTerraform(struct!.allNamespaces),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    selector: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509Selector",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509OutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509 | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allNamespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.allNamespaces = this._allNamespaces;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509 | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allNamespaces = undefined;
      this._selector.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allNamespaces = value.allNamespaces;
      this._selector.internalValue = value.selector;
    }
  }

  // all_namespaces - computed: false, optional: true, required: false
  private _allNamespaces?: boolean | cdktf.IResolvable; 
  public get allNamespaces() {
    return this.getBooleanAttribute('all_namespaces');
  }
  public set allNamespaces(value: boolean | cdktf.IResolvable) {
    this._allNamespaces = value;
  }
  public resetAllNamespaces() {
    this._allNamespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allNamespacesInput() {
    return this._allNamespaces;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509SelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509Selector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthentication {
  /**
  * Anonymous access.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#anonymous DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#anonymous}
  */
  readonly anonymous?: { [key: string]: string };
  /**
  * Authentication based on API keys stored in Kubernetes secrets.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#api_key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#api_key}
  */
  readonly apiKey?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKey;
  /**
  * Caching options for the resolved object returned when applying this config. Omit it to avoid caching objects for this config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#cache DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#cache}
  */
  readonly cache?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCache;
  /**
  * Defines where credentials are required to be passed in the request for authentication based on this config. If omitted, it defaults to credentials passed in the HTTP Authorization header and the 'Bearer' prefix prepended to the secret credential value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#credentials DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#credentials}
  */
  readonly credentials?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentials;
  /**
  * Set default property values (claims) for the resolved identity object, that are set before appending the object to the authorization JSON. If the property is already present in the resolved identity object, the default value is ignored. It requires the resolved identity object to always be a JSON object. Do not use this option with identity objects of other JSON types (array, string, etc).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#defaults DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#defaults}
  */
  readonly defaults?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationDefaults;
  /**
  * Authentication based on JWT tokens.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#jwt DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#jwt}
  */
  readonly jwt?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationJwt;
  /**
  * Authentication by Kubernetes token review.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#kubernetes_token_review DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#kubernetes_token_review}
  */
  readonly kubernetesTokenReview?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationKubernetesTokenReview;
  /**
  * Whether this config should generate individual observability metrics
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#metrics DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#metrics}
  */
  readonly metrics?: boolean | cdktf.IResolvable;
  /**
  * Authentication by OAuth2 token introspection.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#oauth2_introspection DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#oauth2_introspection}
  */
  readonly oauth2Introspection?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2Introspection;
  /**
  * Overrides the resolved identity object by setting the additional properties (claims) specified in this config, before appending the object to the authorization JSON. It requires the resolved identity object to always be a JSON object. Do not use this option with identity objects of other JSON types (array, string, etc).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#overrides DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#overrides}
  */
  readonly overrides?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOverrides;
  /**
  * Identity object extracted from the context. Use this method when authentication is performed beforehand by a proxy and the resulting object passed to Authorino as JSON in the auth request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#plain DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#plain}
  */
  readonly plain?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationPlain;
  /**
  * Priority group of the config. All configs in the same priority group are evaluated concurrently; consecutive priority groups are evaluated sequentially.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#priority DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#priority}
  */
  readonly priority?: number;
  /**
  * Top-level route selectors. If present, the elements will be used to select HTTPRoute rules that, when activated, trigger the auth rule. At least one selected HTTPRoute rule must match to trigger the auth rule. If no route selectors are specified, the auth rule will be evaluated at all requests to the protected routes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#route_selectors DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#route_selectors}
  */
  readonly routeSelectors?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectors[] | cdktf.IResolvable;
  /**
  * Conditions for Authorino to enforce this config. If omitted, the config will be enforced for all requests. If present, all conditions must match for the config to be enforced; otherwise, the config will be skipped.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#when DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#when}
  */
  readonly when?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhen[] | cdktf.IResolvable;
  /**
  * Authentication based on client X.509 certificates. The certificates presented by the clients must be signed by a trusted CA whose certificates are stored in Kubernetes secrets.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#x509 DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#x509}
  */
  readonly x509?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthentication | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    anonymous: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.anonymous),
    api_key: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeyToTerraform(struct!.apiKey),
    cache: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheToTerraform(struct!.cache),
    credentials: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsToTerraform(struct!.credentials),
    defaults: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationDefaultsToTerraform(struct!.defaults),
    jwt: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationJwtToTerraform(struct!.jwt),
    kubernetes_token_review: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationKubernetesTokenReviewToTerraform(struct!.kubernetesTokenReview),
    metrics: cdktf.booleanToTerraform(struct!.metrics),
    oauth2_introspection: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionToTerraform(struct!.oauth2Introspection),
    overrides: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOverridesToTerraform(struct!.overrides),
    plain: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationPlainToTerraform(struct!.plain),
    priority: cdktf.numberToTerraform(struct!.priority),
    route_selectors: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsToTerraform, false)(struct!.routeSelectors),
    when: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhenToTerraform, false)(struct!.when),
    x509: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509ToTerraform(struct!.x509),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthentication | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    anonymous: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.anonymous),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    api_key: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeyToHclTerraform(struct!.apiKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKey",
    },
    cache: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheToHclTerraform(struct!.cache),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCache",
    },
    credentials: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsToHclTerraform(struct!.credentials),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentials",
    },
    defaults: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationDefaultsToHclTerraform(struct!.defaults),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationDefaults",
    },
    jwt: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationJwtToHclTerraform(struct!.jwt),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationJwt",
    },
    kubernetes_token_review: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationKubernetesTokenReviewToHclTerraform(struct!.kubernetesTokenReview),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationKubernetesTokenReview",
    },
    metrics: {
      value: cdktf.booleanToHclTerraform(struct!.metrics),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    oauth2_introspection: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionToHclTerraform(struct!.oauth2Introspection),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2Introspection",
    },
    overrides: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOverridesToHclTerraform(struct!.overrides),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOverrides",
    },
    plain: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationPlainToHclTerraform(struct!.plain),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationPlain",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    route_selectors: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsToHclTerraform, false)(struct!.routeSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsList",
    },
    when: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhenToHclTerraform, false)(struct!.when),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhenList",
    },
    x509: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509ToHclTerraform(struct!.x509),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthentication | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._anonymous !== undefined) {
      hasAnyValues = true;
      internalValueResult.anonymous = this._anonymous;
    }
    if (this._apiKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiKey = this._apiKey?.internalValue;
    }
    if (this._cache?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cache = this._cache?.internalValue;
    }
    if (this._credentials?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.credentials = this._credentials?.internalValue;
    }
    if (this._defaults?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaults = this._defaults?.internalValue;
    }
    if (this._jwt?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jwt = this._jwt?.internalValue;
    }
    if (this._kubernetesTokenReview?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesTokenReview = this._kubernetesTokenReview?.internalValue;
    }
    if (this._metrics !== undefined) {
      hasAnyValues = true;
      internalValueResult.metrics = this._metrics;
    }
    if (this._oauth2Introspection?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oauth2Introspection = this._oauth2Introspection?.internalValue;
    }
    if (this._overrides?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.overrides = this._overrides?.internalValue;
    }
    if (this._plain?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.plain = this._plain?.internalValue;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._routeSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeSelectors = this._routeSelectors?.internalValue;
    }
    if (this._when?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.when = this._when?.internalValue;
    }
    if (this._x509?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.x509 = this._x509?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthentication | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._anonymous = undefined;
      this._apiKey.internalValue = undefined;
      this._cache.internalValue = undefined;
      this._credentials.internalValue = undefined;
      this._defaults.internalValue = undefined;
      this._jwt.internalValue = undefined;
      this._kubernetesTokenReview.internalValue = undefined;
      this._metrics = undefined;
      this._oauth2Introspection.internalValue = undefined;
      this._overrides.internalValue = undefined;
      this._plain.internalValue = undefined;
      this._priority = undefined;
      this._routeSelectors.internalValue = undefined;
      this._when.internalValue = undefined;
      this._x509.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._anonymous = value.anonymous;
      this._apiKey.internalValue = value.apiKey;
      this._cache.internalValue = value.cache;
      this._credentials.internalValue = value.credentials;
      this._defaults.internalValue = value.defaults;
      this._jwt.internalValue = value.jwt;
      this._kubernetesTokenReview.internalValue = value.kubernetesTokenReview;
      this._metrics = value.metrics;
      this._oauth2Introspection.internalValue = value.oauth2Introspection;
      this._overrides.internalValue = value.overrides;
      this._plain.internalValue = value.plain;
      this._priority = value.priority;
      this._routeSelectors.internalValue = value.routeSelectors;
      this._when.internalValue = value.when;
      this._x509.internalValue = value.x509;
    }
  }

  // anonymous - computed: false, optional: true, required: false
  private _anonymous?: { [key: string]: string }; 
  public get anonymous() {
    return this.getStringMapAttribute('anonymous');
  }
  public set anonymous(value: { [key: string]: string }) {
    this._anonymous = value;
  }
  public resetAnonymous() {
    this._anonymous = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get anonymousInput() {
    return this._anonymous;
  }

  // api_key - computed: false, optional: true, required: false
  private _apiKey = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKeyOutputReference(this, "api_key");
  public get apiKey() {
    return this._apiKey;
  }
  public putApiKey(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationApiKey) {
    this._apiKey.internalValue = value;
  }
  public resetApiKey() {
    this._apiKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiKeyInput() {
    return this._apiKey.internalValue;
  }

  // cache - computed: false, optional: true, required: false
  private _cache = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCacheOutputReference(this, "cache");
  public get cache() {
    return this._cache;
  }
  public putCache(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCache) {
    this._cache.internalValue = value;
  }
  public resetCache() {
    this._cache.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cacheInput() {
    return this._cache.internalValue;
  }

  // credentials - computed: false, optional: true, required: false
  private _credentials = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentialsOutputReference(this, "credentials");
  public get credentials() {
    return this._credentials;
  }
  public putCredentials(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationCredentials) {
    this._credentials.internalValue = value;
  }
  public resetCredentials() {
    this._credentials.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get credentialsInput() {
    return this._credentials.internalValue;
  }

  // defaults - computed: false, optional: true, required: false
  private _defaults = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationDefaultsOutputReference(this, "defaults");
  public get defaults() {
    return this._defaults;
  }
  public putDefaults(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationDefaults) {
    this._defaults.internalValue = value;
  }
  public resetDefaults() {
    this._defaults.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultsInput() {
    return this._defaults.internalValue;
  }

  // jwt - computed: false, optional: true, required: false
  private _jwt = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationJwtOutputReference(this, "jwt");
  public get jwt() {
    return this._jwt;
  }
  public putJwt(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationJwt) {
    this._jwt.internalValue = value;
  }
  public resetJwt() {
    this._jwt.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jwtInput() {
    return this._jwt.internalValue;
  }

  // kubernetes_token_review - computed: false, optional: true, required: false
  private _kubernetesTokenReview = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationKubernetesTokenReviewOutputReference(this, "kubernetes_token_review");
  public get kubernetesTokenReview() {
    return this._kubernetesTokenReview;
  }
  public putKubernetesTokenReview(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationKubernetesTokenReview) {
    this._kubernetesTokenReview.internalValue = value;
  }
  public resetKubernetesTokenReview() {
    this._kubernetesTokenReview.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesTokenReviewInput() {
    return this._kubernetesTokenReview.internalValue;
  }

  // metrics - computed: false, optional: true, required: false
  private _metrics?: boolean | cdktf.IResolvable; 
  public get metrics() {
    return this.getBooleanAttribute('metrics');
  }
  public set metrics(value: boolean | cdktf.IResolvable) {
    this._metrics = value;
  }
  public resetMetrics() {
    this._metrics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricsInput() {
    return this._metrics;
  }

  // oauth2_introspection - computed: false, optional: true, required: false
  private _oauth2Introspection = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2IntrospectionOutputReference(this, "oauth2_introspection");
  public get oauth2Introspection() {
    return this._oauth2Introspection;
  }
  public putOauth2Introspection(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOauth2Introspection) {
    this._oauth2Introspection.internalValue = value;
  }
  public resetOauth2Introspection() {
    this._oauth2Introspection.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get oauth2IntrospectionInput() {
    return this._oauth2Introspection.internalValue;
  }

  // overrides - computed: false, optional: true, required: false
  private _overrides = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOverridesOutputReference(this, "overrides");
  public get overrides() {
    return this._overrides;
  }
  public putOverrides(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationOverrides) {
    this._overrides.internalValue = value;
  }
  public resetOverrides() {
    this._overrides.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get overridesInput() {
    return this._overrides.internalValue;
  }

  // plain - computed: false, optional: true, required: false
  private _plain = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationPlainOutputReference(this, "plain");
  public get plain() {
    return this._plain;
  }
  public putPlain(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationPlain) {
    this._plain.internalValue = value;
  }
  public resetPlain() {
    this._plain.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get plainInput() {
    return this._plain.internalValue;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // route_selectors - computed: false, optional: true, required: false
  private _routeSelectors = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectorsList(this, "route_selectors", false);
  public get routeSelectors() {
    return this._routeSelectors;
  }
  public putRouteSelectors(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationRouteSelectors[] | cdktf.IResolvable) {
    this._routeSelectors.internalValue = value;
  }
  public resetRouteSelectors() {
    this._routeSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeSelectorsInput() {
    return this._routeSelectors.internalValue;
  }

  // when - computed: false, optional: true, required: false
  private _when = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhenList(this, "when", false);
  public get when() {
    return this._when;
  }
  public putWhen(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationWhen[] | cdktf.IResolvable) {
    this._when.internalValue = value;
  }
  public resetWhen() {
    this._when.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get whenInput() {
    return this._when.internalValue;
  }

  // x509 - computed: false, optional: true, required: false
  private _x509 = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509OutputReference(this, "x509");
  public get x509() {
    return this._x509;
  }
  public putX509(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthenticationX509) {
    this._x509.internalValue = value;
  }
  public resetX509() {
    this._x509.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get x509Input() {
    return this._x509.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheKey {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheKeyToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheKeyToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCache {
  /**
  * Key used to store the entry in the cache. The resolved key must be unique within the scope of this particular config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheKey;
  /**
  * Duration (in seconds) of the external data in the cache before pulled again from the source.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#ttl DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#ttl}
  */
  readonly ttl?: number;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCache | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheKeyToTerraform(struct!.key),
    ttl: cdktf.numberToTerraform(struct!.ttl),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCache | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheKeyToHclTerraform(struct!.key),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheKey",
    },
    ttl: {
      value: cdktf.numberToHclTerraform(struct!.ttl),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCache | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key?.internalValue;
    }
    if (this._ttl !== undefined) {
      hasAnyValues = true;
      internalValueResult.ttl = this._ttl;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCache | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key.internalValue = undefined;
      this._ttl = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key.internalValue = value.key;
      this._ttl = value.ttl;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheKeyOutputReference(this, "key");
  public get key() {
    return this._key;
  }
  public putKey(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheKey) {
    this._key.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key.internalValue;
  }

  // ttl - computed: false, optional: true, required: false
  private _ttl?: number; 
  public get ttl() {
    return this.getNumberAttribute('ttl');
  }
  public set ttl(value: number) {
    this._ttl = value;
  }
  public resetTtl() {
    this._ttl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ttlInput() {
    return this._ttl;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesGroup {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesGroupToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesGroup | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesGroupToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesGroup | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesGroupOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesGroup | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesGroup | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesName {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNameToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesName | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNameToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesName | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNameOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesName | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesName | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNamespace {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNamespaceToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNamespace | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNamespaceToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNamespace | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNamespaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNamespace | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNamespace | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesResource {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesResourceToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesResource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesResourceToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesResource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesResourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesResource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesResource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesSubresource {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesSubresourceToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesSubresource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesSubresourceToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesSubresource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesSubresourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesSubresource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesSubresource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesVerb {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesVerbToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesVerb | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesVerbToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesVerb | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesVerbOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesVerb | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesVerb | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributes {
  /**
  * API group of the resource. Use '*' for all API groups.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#group DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#group}
  */
  readonly group?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesGroup;
  /**
  * Resource name Omit it to check for authorization on all resources of the specified kind.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesName;
  /**
  * Namespace where the user must have permissions on the resource.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#namespace DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#namespace}
  */
  readonly namespace?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNamespace;
  /**
  * Resource kind Use '*' for all resource kinds.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#resource DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#resource}
  */
  readonly resource?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesResource;
  /**
  * Subresource kind
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#subresource DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#subresource}
  */
  readonly subresource?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesSubresource;
  /**
  * Verb to check for authorization on the resource. Use '*' for all verbs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#verb DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#verb}
  */
  readonly verb?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesVerb;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    group: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesGroupToTerraform(struct!.group),
    name: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNameToTerraform(struct!.name),
    namespace: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNamespaceToTerraform(struct!.namespace),
    resource: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesResourceToTerraform(struct!.resource),
    subresource: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesSubresourceToTerraform(struct!.subresource),
    verb: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesVerbToTerraform(struct!.verb),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    group: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesGroupToHclTerraform(struct!.group),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesGroup",
    },
    name: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNameToHclTerraform(struct!.name),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesName",
    },
    namespace: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNamespaceToHclTerraform(struct!.namespace),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNamespace",
    },
    resource: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesResourceToHclTerraform(struct!.resource),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesResource",
    },
    subresource: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesSubresourceToHclTerraform(struct!.subresource),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesSubresource",
    },
    verb: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesVerbToHclTerraform(struct!.verb),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesVerb",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._group?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.group = this._group?.internalValue;
    }
    if (this._name?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name?.internalValue;
    }
    if (this._namespace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace?.internalValue;
    }
    if (this._resource?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource?.internalValue;
    }
    if (this._subresource?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.subresource = this._subresource?.internalValue;
    }
    if (this._verb?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.verb = this._verb?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._group.internalValue = undefined;
      this._name.internalValue = undefined;
      this._namespace.internalValue = undefined;
      this._resource.internalValue = undefined;
      this._subresource.internalValue = undefined;
      this._verb.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._group.internalValue = value.group;
      this._name.internalValue = value.name;
      this._namespace.internalValue = value.namespace;
      this._resource.internalValue = value.resource;
      this._subresource.internalValue = value.subresource;
      this._verb.internalValue = value.verb;
    }
  }

  // group - computed: false, optional: true, required: false
  private _group = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesGroupOutputReference(this, "group");
  public get group() {
    return this._group;
  }
  public putGroup(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesGroup) {
    this._group.internalValue = value;
  }
  public resetGroup() {
    this._group.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupInput() {
    return this._group.internalValue;
  }

  // name - computed: false, optional: true, required: false
  private _name = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNameOutputReference(this, "name");
  public get name() {
    return this._name;
  }
  public putName(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesName) {
    this._name.internalValue = value;
  }
  public resetName() {
    this._name.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name.internalValue;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNamespaceOutputReference(this, "namespace");
  public get namespace() {
    return this._namespace;
  }
  public putNamespace(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesNamespace) {
    this._namespace.internalValue = value;
  }
  public resetNamespace() {
    this._namespace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace.internalValue;
  }

  // resource - computed: false, optional: true, required: false
  private _resource = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesResourceOutputReference(this, "resource");
  public get resource() {
    return this._resource;
  }
  public putResource(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesResource) {
    this._resource.internalValue = value;
  }
  public resetResource() {
    this._resource.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource.internalValue;
  }

  // subresource - computed: false, optional: true, required: false
  private _subresource = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesSubresourceOutputReference(this, "subresource");
  public get subresource() {
    return this._subresource;
  }
  public putSubresource(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesSubresource) {
    this._subresource.internalValue = value;
  }
  public resetSubresource() {
    this._subresource.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subresourceInput() {
    return this._subresource.internalValue;
  }

  // verb - computed: false, optional: true, required: false
  private _verb = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesVerbOutputReference(this, "verb");
  public get verb() {
    return this._verb;
  }
  public putVerb(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesVerb) {
    this._verb.internalValue = value;
  }
  public resetVerb() {
    this._verb.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get verbInput() {
    return this._verb.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewUser {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewUserToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewUser | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewUserToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewUser | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewUserOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewUser | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewUser | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReview {
  /**
  * Groups the user must be a member of or, if 'user' is omitted, the groups to check for authorization in the Kubernetes RBAC.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#groups DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#groups}
  */
  readonly groups?: string[];
  /**
  * Use resourceAttributes to check permissions on Kubernetes resources. If omitted, it performs a non-resource SubjectAccessReview, with verb and path inferred from the request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#resource_attributes DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#resource_attributes}
  */
  readonly resourceAttributes?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributes;
  /**
  * User to check for authorization in the Kubernetes RBAC. Omit it to check for group authorization only.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#user DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#user}
  */
  readonly user?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewUser;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReview | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    groups: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.groups),
    resource_attributes: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesToTerraform(struct!.resourceAttributes),
    user: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewUserToTerraform(struct!.user),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReview | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    groups: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.groups),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    resource_attributes: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesToHclTerraform(struct!.resourceAttributes),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributes",
    },
    user: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewUserToHclTerraform(struct!.user),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewUser",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReview | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._groups !== undefined) {
      hasAnyValues = true;
      internalValueResult.groups = this._groups;
    }
    if (this._resourceAttributes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceAttributes = this._resourceAttributes?.internalValue;
    }
    if (this._user?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReview | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._groups = undefined;
      this._resourceAttributes.internalValue = undefined;
      this._user.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._groups = value.groups;
      this._resourceAttributes.internalValue = value.resourceAttributes;
      this._user.internalValue = value.user;
    }
  }

  // groups - computed: false, optional: true, required: false
  private _groups?: string[]; 
  public get groups() {
    return this.getListAttribute('groups');
  }
  public set groups(value: string[]) {
    this._groups = value;
  }
  public resetGroups() {
    this._groups = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupsInput() {
    return this._groups;
  }

  // resource_attributes - computed: false, optional: true, required: false
  private _resourceAttributes = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributesOutputReference(this, "resource_attributes");
  public get resourceAttributes() {
    return this._resourceAttributes;
  }
  public putResourceAttributes(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewResourceAttributes) {
    this._resourceAttributes.internalValue = value;
  }
  public resetResourceAttributes() {
    this._resourceAttributes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceAttributesInput() {
    return this._resourceAttributes.internalValue;
  }

  // user - computed: false, optional: true, required: false
  private _user = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewUserOutputReference(this, "user");
  public get user() {
    return this._user;
  }
  public putUser(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewUser) {
    this._user.internalValue = value;
  }
  public resetUser() {
    this._user.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBody {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBody | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBody | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBody | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBody | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyParameters {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyParametersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyParametersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsAuthorizationHeader {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#prefix DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#prefix}
  */
  readonly prefix?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsAuthorizationHeaderToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsAuthorizationHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    prefix: cdktf.stringToTerraform(struct!.prefix),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsAuthorizationHeaderToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsAuthorizationHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    prefix: {
      value: cdktf.stringToHclTerraform(struct!.prefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsAuthorizationHeaderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsAuthorizationHeader | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._prefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefix = this._prefix;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsAuthorizationHeader | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._prefix = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._prefix = value.prefix;
    }
  }

  // prefix - computed: false, optional: true, required: false
  private _prefix?: string; 
  public get prefix() {
    return this.getStringAttribute('prefix');
  }
  public set prefix(value: string) {
    this._prefix = value;
  }
  public resetPrefix() {
    this._prefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixInput() {
    return this._prefix;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCookie {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCookieToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCookie | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCookieToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCookie | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCookieOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCookie | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCookie | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCustomHeader {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCustomHeaderToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCustomHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCustomHeaderToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCustomHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCustomHeaderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCustomHeader | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCustomHeader | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsQueryString {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsQueryStringToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsQueryString | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsQueryStringToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsQueryString | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsQueryStringOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsQueryString | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsQueryString | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentials {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#authorization_header DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#authorization_header}
  */
  readonly authorizationHeader?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsAuthorizationHeader;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#cookie DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#cookie}
  */
  readonly cookie?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCookie;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#custom_header DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#custom_header}
  */
  readonly customHeader?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCustomHeader;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#query_string DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#query_string}
  */
  readonly queryString?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsQueryString;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    authorization_header: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsAuthorizationHeaderToTerraform(struct!.authorizationHeader),
    cookie: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCookieToTerraform(struct!.cookie),
    custom_header: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCustomHeaderToTerraform(struct!.customHeader),
    query_string: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsQueryStringToTerraform(struct!.queryString),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    authorization_header: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsAuthorizationHeaderToHclTerraform(struct!.authorizationHeader),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsAuthorizationHeader",
    },
    cookie: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCookieToHclTerraform(struct!.cookie),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCookie",
    },
    custom_header: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCustomHeaderToHclTerraform(struct!.customHeader),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCustomHeader",
    },
    query_string: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsQueryStringToHclTerraform(struct!.queryString),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsQueryString",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentials | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authorizationHeader?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authorizationHeader = this._authorizationHeader?.internalValue;
    }
    if (this._cookie?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cookie = this._cookie?.internalValue;
    }
    if (this._customHeader?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.customHeader = this._customHeader?.internalValue;
    }
    if (this._queryString?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryString = this._queryString?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentials | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authorizationHeader.internalValue = undefined;
      this._cookie.internalValue = undefined;
      this._customHeader.internalValue = undefined;
      this._queryString.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authorizationHeader.internalValue = value.authorizationHeader;
      this._cookie.internalValue = value.cookie;
      this._customHeader.internalValue = value.customHeader;
      this._queryString.internalValue = value.queryString;
    }
  }

  // authorization_header - computed: false, optional: true, required: false
  private _authorizationHeader = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsAuthorizationHeaderOutputReference(this, "authorization_header");
  public get authorizationHeader() {
    return this._authorizationHeader;
  }
  public putAuthorizationHeader(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsAuthorizationHeader) {
    this._authorizationHeader.internalValue = value;
  }
  public resetAuthorizationHeader() {
    this._authorizationHeader.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authorizationHeaderInput() {
    return this._authorizationHeader.internalValue;
  }

  // cookie - computed: false, optional: true, required: false
  private _cookie = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCookieOutputReference(this, "cookie");
  public get cookie() {
    return this._cookie;
  }
  public putCookie(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCookie) {
    this._cookie.internalValue = value;
  }
  public resetCookie() {
    this._cookie.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cookieInput() {
    return this._cookie.internalValue;
  }

  // custom_header - computed: false, optional: true, required: false
  private _customHeader = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCustomHeaderOutputReference(this, "custom_header");
  public get customHeader() {
    return this._customHeader;
  }
  public putCustomHeader(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsCustomHeader) {
    this._customHeader.internalValue = value;
  }
  public resetCustomHeader() {
    this._customHeader.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customHeaderInput() {
    return this._customHeader.internalValue;
  }

  // query_string - computed: false, optional: true, required: false
  private _queryString = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsQueryStringOutputReference(this, "query_string");
  public get queryString() {
    return this._queryString;
  }
  public putQueryString(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsQueryString) {
    this._queryString.internalValue = value;
  }
  public resetQueryString() {
    this._queryString.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryStringInput() {
    return this._queryString.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyHeaders {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyHeadersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyHeadersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ClientSecretRef {
  /**
  * The key of the secret to select from. Must be a valid secret key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key: string;
  /**
  * The name of the secret in the Authorino's namespace to select from.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ClientSecretRefToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ClientSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ClientSecretRefToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ClientSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ClientSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ClientSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ClientSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2 {
  /**
  * Caches and reuses the token until expired. Set it to false to force fetch the token at every authorization request regardless of expiration.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#cache DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#cache}
  */
  readonly cache?: boolean | cdktf.IResolvable;
  /**
  * OAuth2 Client ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#client_id DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#client_id}
  */
  readonly clientId: string;
  /**
  * Reference to a Kuberentes Secret key that stores that OAuth2 Client Secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#client_secret_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#client_secret_ref}
  */
  readonly clientSecretRef: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ClientSecretRef;
  /**
  * Optional extra parameters for the requests to the token URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#extra_params DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#extra_params}
  */
  readonly extraParams?: { [key: string]: string };
  /**
  * Optional scopes for the client credentials grant, if supported by he OAuth2 server.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#scopes DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#scopes}
  */
  readonly scopes?: string[];
  /**
  * Token endpoint URL of the OAuth2 resource server.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#token_url DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#token_url}
  */
  readonly tokenUrl: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cache: cdktf.booleanToTerraform(struct!.cache),
    client_id: cdktf.stringToTerraform(struct!.clientId),
    client_secret_ref: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ClientSecretRefToTerraform(struct!.clientSecretRef),
    extra_params: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.extraParams),
    scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.scopes),
    token_url: cdktf.stringToTerraform(struct!.tokenUrl),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cache: {
      value: cdktf.booleanToHclTerraform(struct!.cache),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    client_id: {
      value: cdktf.stringToHclTerraform(struct!.clientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_secret_ref: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ClientSecretRefToHclTerraform(struct!.clientSecretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ClientSecretRef",
    },
    extra_params: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.extraParams),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.scopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    token_url: {
      value: cdktf.stringToHclTerraform(struct!.tokenUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2OutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2 | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cache !== undefined) {
      hasAnyValues = true;
      internalValueResult.cache = this._cache;
    }
    if (this._clientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientId = this._clientId;
    }
    if (this._clientSecretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientSecretRef = this._clientSecretRef?.internalValue;
    }
    if (this._extraParams !== undefined) {
      hasAnyValues = true;
      internalValueResult.extraParams = this._extraParams;
    }
    if (this._scopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes;
    }
    if (this._tokenUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenUrl = this._tokenUrl;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2 | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cache = undefined;
      this._clientId = undefined;
      this._clientSecretRef.internalValue = undefined;
      this._extraParams = undefined;
      this._scopes = undefined;
      this._tokenUrl = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cache = value.cache;
      this._clientId = value.clientId;
      this._clientSecretRef.internalValue = value.clientSecretRef;
      this._extraParams = value.extraParams;
      this._scopes = value.scopes;
      this._tokenUrl = value.tokenUrl;
    }
  }

  // cache - computed: false, optional: true, required: false
  private _cache?: boolean | cdktf.IResolvable; 
  public get cache() {
    return this.getBooleanAttribute('cache');
  }
  public set cache(value: boolean | cdktf.IResolvable) {
    this._cache = value;
  }
  public resetCache() {
    this._cache = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cacheInput() {
    return this._cache;
  }

  // client_id - computed: false, optional: false, required: true
  private _clientId?: string; 
  public get clientId() {
    return this.getStringAttribute('client_id');
  }
  public set clientId(value: string) {
    this._clientId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clientIdInput() {
    return this._clientId;
  }

  // client_secret_ref - computed: false, optional: false, required: true
  private _clientSecretRef = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ClientSecretRefOutputReference(this, "client_secret_ref");
  public get clientSecretRef() {
    return this._clientSecretRef;
  }
  public putClientSecretRef(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ClientSecretRef) {
    this._clientSecretRef.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clientSecretRefInput() {
    return this._clientSecretRef.internalValue;
  }

  // extra_params - computed: false, optional: true, required: false
  private _extraParams?: { [key: string]: string }; 
  public get extraParams() {
    return this.getStringMapAttribute('extra_params');
  }
  public set extraParams(value: { [key: string]: string }) {
    this._extraParams = value;
  }
  public resetExtraParams() {
    this._extraParams = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extraParamsInput() {
    return this._extraParams;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes?: string[]; 
  public get scopes() {
    return this.getListAttribute('scopes');
  }
  public set scopes(value: string[]) {
    this._scopes = value;
  }
  public resetScopes() {
    this._scopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes;
  }

  // token_url - computed: false, optional: false, required: true
  private _tokenUrl?: string; 
  public get tokenUrl() {
    return this.getStringAttribute('token_url');
  }
  public set tokenUrl(value: string) {
    this._tokenUrl = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenUrlInput() {
    return this._tokenUrl;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicySharedSecretRef {
  /**
  * The key of the secret to select from. Must be a valid secret key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key: string;
  /**
  * The name of the secret in the Authorino's namespace to select from.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicySharedSecretRefToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicySharedSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicySharedSecretRefToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicySharedSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicySharedSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicySharedSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicySharedSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicy {
  /**
  * Raw body of the HTTP request. Supersedes 'bodyParameters'; use either one or the other. Use it with method=POST; for GET requests, set parameters as query string in the 'endpoint' (placeholders can be used).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#body DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#body}
  */
  readonly body?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBody;
  /**
  * Custom parameters to encode in the body of the HTTP request. Superseded by 'body'; use either one or the other. Use it with method=POST; for GET requests, set parameters as query string in the 'endpoint' (placeholders can be used).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#body_parameters DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#body_parameters}
  */
  readonly bodyParameters?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyParameters;
  /**
  * Content-Type of the request body. Shapes how 'bodyParameters' are encoded. Use it with method=POST; for GET requests, Content-Type is automatically set to 'text/plain'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#content_type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#content_type}
  */
  readonly contentType?: string;
  /**
  * Defines where client credentials will be passed in the request to the service. If omitted, it defaults to client credentials passed in the HTTP Authorization header and the 'Bearer' prefix expected prepended to the secret value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#credentials DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#credentials}
  */
  readonly credentials?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentials;
  /**
  * Custom headers in the HTTP request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#headers DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#headers}
  */
  readonly headers?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyHeaders;
  /**
  * HTTP verb used in the request to the service. Accepted values: GET (default), POST. When the request method is POST, the authorization JSON is passed in the body of the request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#method DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#method}
  */
  readonly method?: string;
  /**
  * Authentication with the HTTP service by OAuth2 Client Credentials grant.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#oauth2 DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#oauth2}
  */
  readonly oauth2?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2;
  /**
  * Reference to a Secret key whose value will be passed by Authorino in the request. The HTTP service can use the shared secret to authenticate the origin of the request. Ignored if used together with oauth2.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#shared_secret_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#shared_secret_ref}
  */
  readonly sharedSecretRef?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicySharedSecretRef;
  /**
  * Duration (in seconds) of the external data in the cache before pulled again from the source.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#ttl DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#ttl}
  */
  readonly ttl?: number;
  /**
  * Endpoint URL of the HTTP service. The value can include variable placeholders in the format '{selector}', where 'selector' is any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson and selects value from the authorization JSON. E.g. https://ext-auth-server.io/metadata?p={request.path}
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#url DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#url}
  */
  readonly url: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    body: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyToTerraform(struct!.body),
    body_parameters: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyParametersToTerraform(struct!.bodyParameters),
    content_type: cdktf.stringToTerraform(struct!.contentType),
    credentials: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsToTerraform(struct!.credentials),
    headers: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyHeadersToTerraform(struct!.headers),
    method: cdktf.stringToTerraform(struct!.method),
    oauth2: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ToTerraform(struct!.oauth2),
    shared_secret_ref: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicySharedSecretRefToTerraform(struct!.sharedSecretRef),
    ttl: cdktf.numberToTerraform(struct!.ttl),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    body: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyToHclTerraform(struct!.body),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBody",
    },
    body_parameters: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyParametersToHclTerraform(struct!.bodyParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyParameters",
    },
    content_type: {
      value: cdktf.stringToHclTerraform(struct!.contentType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    credentials: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsToHclTerraform(struct!.credentials),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentials",
    },
    headers: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyHeadersToHclTerraform(struct!.headers),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyHeaders",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    oauth2: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2ToHclTerraform(struct!.oauth2),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2",
    },
    shared_secret_ref: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicySharedSecretRefToHclTerraform(struct!.sharedSecretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicySharedSecretRef",
    },
    ttl: {
      value: cdktf.numberToHclTerraform(struct!.ttl),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._body?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.body = this._body?.internalValue;
    }
    if (this._bodyParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bodyParameters = this._bodyParameters?.internalValue;
    }
    if (this._contentType !== undefined) {
      hasAnyValues = true;
      internalValueResult.contentType = this._contentType;
    }
    if (this._credentials?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.credentials = this._credentials?.internalValue;
    }
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._oauth2?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oauth2 = this._oauth2?.internalValue;
    }
    if (this._sharedSecretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sharedSecretRef = this._sharedSecretRef?.internalValue;
    }
    if (this._ttl !== undefined) {
      hasAnyValues = true;
      internalValueResult.ttl = this._ttl;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._body.internalValue = undefined;
      this._bodyParameters.internalValue = undefined;
      this._contentType = undefined;
      this._credentials.internalValue = undefined;
      this._headers.internalValue = undefined;
      this._method = undefined;
      this._oauth2.internalValue = undefined;
      this._sharedSecretRef.internalValue = undefined;
      this._ttl = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._body.internalValue = value.body;
      this._bodyParameters.internalValue = value.bodyParameters;
      this._contentType = value.contentType;
      this._credentials.internalValue = value.credentials;
      this._headers.internalValue = value.headers;
      this._method = value.method;
      this._oauth2.internalValue = value.oauth2;
      this._sharedSecretRef.internalValue = value.sharedSecretRef;
      this._ttl = value.ttl;
      this._url = value.url;
    }
  }

  // body - computed: false, optional: true, required: false
  private _body = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyOutputReference(this, "body");
  public get body() {
    return this._body;
  }
  public putBody(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBody) {
    this._body.internalValue = value;
  }
  public resetBody() {
    this._body.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bodyInput() {
    return this._body.internalValue;
  }

  // body_parameters - computed: false, optional: true, required: false
  private _bodyParameters = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyParametersOutputReference(this, "body_parameters");
  public get bodyParameters() {
    return this._bodyParameters;
  }
  public putBodyParameters(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyBodyParameters) {
    this._bodyParameters.internalValue = value;
  }
  public resetBodyParameters() {
    this._bodyParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bodyParametersInput() {
    return this._bodyParameters.internalValue;
  }

  // content_type - computed: false, optional: true, required: false
  private _contentType?: string; 
  public get contentType() {
    return this.getStringAttribute('content_type');
  }
  public set contentType(value: string) {
    this._contentType = value;
  }
  public resetContentType() {
    this._contentType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get contentTypeInput() {
    return this._contentType;
  }

  // credentials - computed: false, optional: true, required: false
  private _credentials = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentialsOutputReference(this, "credentials");
  public get credentials() {
    return this._credentials;
  }
  public putCredentials(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyCredentials) {
    this._credentials.internalValue = value;
  }
  public resetCredentials() {
    this._credentials.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get credentialsInput() {
    return this._credentials.internalValue;
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyHeadersOutputReference(this, "headers");
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyHeaders) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // oauth2 - computed: false, optional: true, required: false
  private _oauth2 = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2OutputReference(this, "oauth2");
  public get oauth2() {
    return this._oauth2;
  }
  public putOauth2(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOauth2) {
    this._oauth2.internalValue = value;
  }
  public resetOauth2() {
    this._oauth2.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get oauth2Input() {
    return this._oauth2.internalValue;
  }

  // shared_secret_ref - computed: false, optional: true, required: false
  private _sharedSecretRef = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicySharedSecretRefOutputReference(this, "shared_secret_ref");
  public get sharedSecretRef() {
    return this._sharedSecretRef;
  }
  public putSharedSecretRef(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicySharedSecretRef) {
    this._sharedSecretRef.internalValue = value;
  }
  public resetSharedSecretRef() {
    this._sharedSecretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sharedSecretRefInput() {
    return this._sharedSecretRef.internalValue;
  }

  // ttl - computed: false, optional: true, required: false
  private _ttl?: number; 
  public get ttl() {
    return this.getNumberAttribute('ttl');
  }
  public set ttl(value: number) {
    this._ttl = value;
  }
  public resetTtl() {
    this._ttl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ttlInput() {
    return this._ttl;
  }

  // url - computed: false, optional: false, required: true
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpa {
  /**
  * Returns the value of all Rego rules in the virtual document. Values can be read in subsequent evaluators/phases of the Auth Pipeline. Otherwise, only the default 'allow' rule will be exposed. Returning all Rego rules can affect performance of OPA policies during reconciliation (policy precompile) and at runtime.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#all_values DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#all_values}
  */
  readonly allValues?: boolean | cdktf.IResolvable;
  /**
  * Settings for fetching the OPA policy from an external registry. Use it alternatively to 'rego'. For the configurations of the HTTP request, the following options are not implemented: 'method', 'body', 'bodyParameters', 'contentType', 'headers', 'oauth2'. Use it only with: 'url', 'sharedSecret', 'credentials'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#external_policy DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#external_policy}
  */
  readonly externalPolicy?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicy;
  /**
  * Authorization policy as a Rego language document. The Rego document must include the 'allow' condition, set by Authorino to 'false' by default (i.e. requests are unauthorized unless changed). The Rego document must NOT include the 'package' declaration in line 1.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#rego DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#rego}
  */
  readonly rego?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpa | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    all_values: cdktf.booleanToTerraform(struct!.allValues),
    external_policy: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyToTerraform(struct!.externalPolicy),
    rego: cdktf.stringToTerraform(struct!.rego),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpa | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    all_values: {
      value: cdktf.booleanToHclTerraform(struct!.allValues),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    external_policy: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyToHclTerraform(struct!.externalPolicy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicy",
    },
    rego: {
      value: cdktf.stringToHclTerraform(struct!.rego),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpa | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allValues !== undefined) {
      hasAnyValues = true;
      internalValueResult.allValues = this._allValues;
    }
    if (this._externalPolicy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.externalPolicy = this._externalPolicy?.internalValue;
    }
    if (this._rego !== undefined) {
      hasAnyValues = true;
      internalValueResult.rego = this._rego;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpa | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allValues = undefined;
      this._externalPolicy.internalValue = undefined;
      this._rego = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allValues = value.allValues;
      this._externalPolicy.internalValue = value.externalPolicy;
      this._rego = value.rego;
    }
  }

  // all_values - computed: false, optional: true, required: false
  private _allValues?: boolean | cdktf.IResolvable; 
  public get allValues() {
    return this.getBooleanAttribute('all_values');
  }
  public set allValues(value: boolean | cdktf.IResolvable) {
    this._allValues = value;
  }
  public resetAllValues() {
    this._allValues = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allValuesInput() {
    return this._allValues;
  }

  // external_policy - computed: false, optional: true, required: false
  private _externalPolicy = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicyOutputReference(this, "external_policy");
  public get externalPolicy() {
    return this._externalPolicy;
  }
  public putExternalPolicy(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaExternalPolicy) {
    this._externalPolicy.internalValue = value;
  }
  public resetExternalPolicy() {
    this._externalPolicy.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get externalPolicyInput() {
    return this._externalPolicy.internalValue;
  }

  // rego - computed: false, optional: true, required: false
  private _rego?: string; 
  public get rego() {
    return this.getStringAttribute('rego');
  }
  public set rego(value: string) {
    this._rego = value;
  }
  public resetRego() {
    this._rego = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regoInput() {
    return this._rego;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatterns {
  /**
  * A list of pattern expressions to be evaluated as a logical AND.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#all DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#all}
  */
  readonly all?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * A list of pattern expressions to be evaluated as a logical OR.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#any DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#any}
  */
  readonly any?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * The binary operator to be applied to the content fetched from the authorization JSON, for comparison with 'value'. Possible values are: 'eq' (equal to), 'neq' (not equal to), 'incl' (includes; for arrays), 'excl' (excludes; for arrays), 'matches' (regex)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#operator DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Reference to a named set of pattern expressions
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#pattern_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#pattern_ref}
  */
  readonly patternRef?: string;
  /**
  * Path selector to fetch content from the authorization JSON (e.g. 'request.method'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. Authorino custom JSON path modifiers are also supported.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * The value of reference for the comparison with the content fetched from the authorization JSON. If used with the 'matches' operator, the value must compile to a valid Golang regex.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatternsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatterns | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    all: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.all),
    any: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.any),
    operator: cdktf.stringToTerraform(struct!.operator),
    pattern_ref: cdktf.stringToTerraform(struct!.patternRef),
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatternsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatterns | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    all: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.all),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    any: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.any),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pattern_ref: {
      value: cdktf.stringToHclTerraform(struct!.patternRef),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatternsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatterns | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._all !== undefined) {
      hasAnyValues = true;
      internalValueResult.all = this._all;
    }
    if (this._any !== undefined) {
      hasAnyValues = true;
      internalValueResult.any = this._any;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._patternRef !== undefined) {
      hasAnyValues = true;
      internalValueResult.patternRef = this._patternRef;
    }
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatterns | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._all = undefined;
      this._any = undefined;
      this._operator = undefined;
      this._patternRef = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._all = value.all;
      this._any = value.any;
      this._operator = value.operator;
      this._patternRef = value.patternRef;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // all - computed: false, optional: true, required: false
  private _all?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get all() {
    return this.interpolationForAttribute('all');
  }
  public set all(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._all = value;
  }
  public resetAll() {
    this._all = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allInput() {
    return this._all;
  }

  // any - computed: false, optional: true, required: false
  private _any?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get any() {
    return this.interpolationForAttribute('any');
  }
  public set any(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._any = value;
  }
  public resetAny() {
    this._any = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get anyInput() {
    return this._any;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // pattern_ref - computed: false, optional: true, required: false
  private _patternRef?: string; 
  public get patternRef() {
    return this.getStringAttribute('pattern_ref');
  }
  public set patternRef(value: string) {
    this._patternRef = value;
  }
  public resetPatternRef() {
    this._patternRef = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternRefInput() {
    return this._patternRef;
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatternsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatterns[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatternsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatternsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatching {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#patterns DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#patterns}
  */
  readonly patterns: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatterns[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatching | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    patterns: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatternsToTerraform, false)(struct!.patterns),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatching | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    patterns: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatternsToHclTerraform, false)(struct!.patterns),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatternsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatching | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._patterns?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.patterns = this._patterns?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatching | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._patterns.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._patterns.internalValue = value.patterns;
    }
  }

  // patterns - computed: false, optional: false, required: true
  private _patterns = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatternsList(this, "patterns", false);
  public get patterns() {
    return this._patterns;
  }
  public putPatterns(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingPatterns[] | cdktf.IResolvable) {
    this._patterns.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get patternsInput() {
    return this._patterns.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeaders {
  /**
  * Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). If multiple entries specify equivalent header names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, 'foo' and 'Foo' are considered equivalent. When a header is repeated in an HTTP request, it is implementation-specific behavior as to how this is represented. Generally, proxies should follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding processing a repeated header, with special handling for 'Set-Cookie'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
  /**
  * Type specifies how to match against the value of the header. Support: Core (Exact) Support: Implementation-specific (RegularExpression) Since RegularExpression HeaderMatchType has implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value is the value of HTTP Header to be matched.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeadersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeadersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeadersOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesPath {
  /**
  * Type specifies how to match against the path Value. Support: Core (Exact, PathPrefix) Support: Implementation-specific (RegularExpression)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value of the HTTP path to match against.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesPathToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesPathToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParams {
  /**
  * Name is the name of the HTTP query param to be matched. This must be an exact string match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3). If multiple entries specify equivalent query param names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent query param name MUST be ignored. If a query param is repeated in an HTTP request, the behavior is purposely left undefined, since different data planes have different capabilities. However, it is *recommended* that implementations should match against the first value of the param if the data plane supports it, as this behavior is expected in other load balancing contexts outside of the Gateway API. Users SHOULD NOT route traffic based on repeated query params to guard themselves against potential differences in the implementations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
  /**
  * Type specifies how to match against the value of the query parameter. Support: Extended (Exact) Support: Implementation-specific (RegularExpression) Since RegularExpression QueryParamMatchType has Implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value is the value of HTTP query param to be matched.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParamsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParams | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParamsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParams | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParamsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParams | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParams | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParamsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParamsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParamsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatches {
  /**
  * Headers specifies HTTP request header matchers. Multiple match values are ANDed together, meaning, a request must match all the specified headers to select the route.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#headers DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#headers}
  */
  readonly headers?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeaders[] | cdktf.IResolvable;
  /**
  * Method specifies HTTP method matcher. When specified, this route will be matched only if the request has the specified method. Support: Extended
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#method DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#method}
  */
  readonly method?: string;
  /**
  * Path specifies a HTTP request path matcher. If this field is not specified, a default prefix match on the '/' path is provided.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#path DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#path}
  */
  readonly path?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesPath;
  /**
  * QueryParams specifies HTTP query parameter matchers. Multiple match values are ANDed together, meaning, a request must match all the specified query parameters to select the route. Support: Extended
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#query_params DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#query_params}
  */
  readonly queryParams?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    headers: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeadersToTerraform, false)(struct!.headers),
    method: cdktf.stringToTerraform(struct!.method),
    path: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesPathToTerraform(struct!.path),
    query_params: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParamsToTerraform, false)(struct!.queryParams),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    headers: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeadersList",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesPathToHclTerraform(struct!.path),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesPath",
    },
    query_params: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParamsToHclTerraform, false)(struct!.queryParams),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParamsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatches | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    if (this._queryParams?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryParams = this._queryParams?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatches | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._headers.internalValue = undefined;
      this._method = undefined;
      this._path.internalValue = undefined;
      this._queryParams.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._headers.internalValue = value.headers;
      this._method = value.method;
      this._path.internalValue = value.path;
      this._queryParams.internalValue = value.queryParams;
    }
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesPathOutputReference(this, "path");
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesPath) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }

  // query_params - computed: false, optional: true, required: false
  private _queryParams = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParamsList(this, "query_params", false);
  public get queryParams() {
    return this._queryParams;
  }
  public putQueryParams(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable) {
    this._queryParams.internalValue = value;
  }
  public resetQueryParams() {
    this._queryParams.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryParamsInput() {
    return this._queryParams.internalValue;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatches[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectors {
  /**
  * Hostnames defines a set of hostname that should match against the HTTP Host header to select a HTTPRoute to process the request https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteSpec
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#hostnames DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#hostnames}
  */
  readonly hostnames?: string[];
  /**
  * Matches define conditions used for matching the rule against incoming HTTP requests. https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteSpec
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#matches DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#matches}
  */
  readonly matches?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatches[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    hostnames: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.hostnames),
    matches: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesToTerraform, false)(struct!.matches),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    hostnames: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.hostnames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    matches: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesToHclTerraform, false)(struct!.matches),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._hostnames !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostnames = this._hostnames;
    }
    if (this._matches?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matches = this._matches?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._hostnames = undefined;
      this._matches.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._hostnames = value.hostnames;
      this._matches.internalValue = value.matches;
    }
  }

  // hostnames - computed: false, optional: true, required: false
  private _hostnames?: string[]; 
  public get hostnames() {
    return this.getListAttribute('hostnames');
  }
  public set hostnames(value: string[]) {
    this._hostnames = value;
  }
  public resetHostnames() {
    this._hostnames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnamesInput() {
    return this._hostnames;
  }

  // matches - computed: false, optional: true, required: false
  private _matches = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatchesList(this, "matches", false);
  public get matches() {
    return this._matches;
  }
  public putMatches(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsMatches[] | cdktf.IResolvable) {
    this._matches.internalValue = value;
  }
  public resetMatches() {
    this._matches.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchesInput() {
    return this._matches.internalValue;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbPermission {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbPermissionToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbPermission | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbPermissionToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbPermission | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbPermissionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbPermission | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbPermission | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceKind {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceKindToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceKind | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceKindToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceKind | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceKindOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceKind | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceKind | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceName {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceNameToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceName | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceNameToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceName | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceNameOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceName | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceName | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResource {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#kind DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#kind}
  */
  readonly kind?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceKind;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceName;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    kind: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceKindToTerraform(struct!.kind),
    name: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceNameToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    kind: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceKindToHclTerraform(struct!.kind),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceKind",
    },
    name: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceNameToHclTerraform(struct!.name),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceName",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._kind?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind?.internalValue;
    }
    if (this._name?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._kind.internalValue = undefined;
      this._name.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._kind.internalValue = value.kind;
      this._name.internalValue = value.name;
    }
  }

  // kind - computed: false, optional: true, required: false
  private _kind = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceKindOutputReference(this, "kind");
  public get kind() {
    return this._kind;
  }
  public putKind(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceKind) {
    this._kind.internalValue = value;
  }
  public resetKind() {
    this._kind.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind.internalValue;
  }

  // name - computed: false, optional: true, required: false
  private _name = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceNameOutputReference(this, "name");
  public get name() {
    return this._name;
  }
  public putName(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceName) {
    this._name.internalValue = value;
  }
  public resetName() {
    this._name.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSharedSecretRef {
  /**
  * The key of the secret to select from. Must be a valid secret key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key: string;
  /**
  * The name of the secret in the Authorino's namespace to select from.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSharedSecretRefToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSharedSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSharedSecretRefToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSharedSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSharedSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSharedSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSharedSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectKind {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectKindToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectKind | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectKindToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectKind | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectKindOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectKind | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectKind | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectName {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectNameToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectName | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectNameToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectName | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectNameOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectName | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectName | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubject {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#kind DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#kind}
  */
  readonly kind?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectKind;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectName;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubject | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    kind: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectKindToTerraform(struct!.kind),
    name: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectNameToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubject | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    kind: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectKindToHclTerraform(struct!.kind),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectKind",
    },
    name: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectNameToHclTerraform(struct!.name),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectName",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubject | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._kind?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind?.internalValue;
    }
    if (this._name?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubject | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._kind.internalValue = undefined;
      this._name.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._kind.internalValue = value.kind;
      this._name.internalValue = value.name;
    }
  }

  // kind - computed: false, optional: true, required: false
  private _kind = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectKindOutputReference(this, "kind");
  public get kind() {
    return this._kind;
  }
  public putKind(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectKind) {
    this._kind.internalValue = value;
  }
  public resetKind() {
    this._kind.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind.internalValue;
  }

  // name - computed: false, optional: true, required: false
  private _name = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectNameOutputReference(this, "name");
  public get name() {
    return this._name;
  }
  public putName(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectName) {
    this._name.internalValue = value;
  }
  public resetName() {
    this._name.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedb {
  /**
  * Hostname and port number to the GRPC interface of the SpiceDB server (e.g. spicedb:50051).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#endpoint DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#endpoint}
  */
  readonly endpoint: string;
  /**
  * Insecure HTTP connection (i.e. disables TLS verification)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#insecure DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#insecure}
  */
  readonly insecure?: boolean | cdktf.IResolvable;
  /**
  * The name of the permission (or relation) on which to execute the check.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#permission DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#permission}
  */
  readonly permission?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbPermission;
  /**
  * The resource on which to check the permission or relation.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#resource DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#resource}
  */
  readonly resource?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResource;
  /**
  * Reference to a Secret key whose value will be used by Authorino to authenticate with the Authzed service.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#shared_secret_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#shared_secret_ref}
  */
  readonly sharedSecretRef?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSharedSecretRef;
  /**
  * The subject that will be checked for the permission or relation.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#subject DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#subject}
  */
  readonly subject?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubject;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedb | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    insecure: cdktf.booleanToTerraform(struct!.insecure),
    permission: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbPermissionToTerraform(struct!.permission),
    resource: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceToTerraform(struct!.resource),
    shared_secret_ref: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSharedSecretRefToTerraform(struct!.sharedSecretRef),
    subject: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectToTerraform(struct!.subject),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedb | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure: {
      value: cdktf.booleanToHclTerraform(struct!.insecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    permission: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbPermissionToHclTerraform(struct!.permission),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbPermission",
    },
    resource: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceToHclTerraform(struct!.resource),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResource",
    },
    shared_secret_ref: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSharedSecretRefToHclTerraform(struct!.sharedSecretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSharedSecretRef",
    },
    subject: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectToHclTerraform(struct!.subject),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubject",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedb | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._insecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecure = this._insecure;
    }
    if (this._permission?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.permission = this._permission?.internalValue;
    }
    if (this._resource?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource?.internalValue;
    }
    if (this._sharedSecretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sharedSecretRef = this._sharedSecretRef?.internalValue;
    }
    if (this._subject?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.subject = this._subject?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedb | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._endpoint = undefined;
      this._insecure = undefined;
      this._permission.internalValue = undefined;
      this._resource.internalValue = undefined;
      this._sharedSecretRef.internalValue = undefined;
      this._subject.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._endpoint = value.endpoint;
      this._insecure = value.insecure;
      this._permission.internalValue = value.permission;
      this._resource.internalValue = value.resource;
      this._sharedSecretRef.internalValue = value.sharedSecretRef;
      this._subject.internalValue = value.subject;
    }
  }

  // endpoint - computed: false, optional: false, required: true
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // insecure - computed: false, optional: true, required: false
  private _insecure?: boolean | cdktf.IResolvable; 
  public get insecure() {
    return this.getBooleanAttribute('insecure');
  }
  public set insecure(value: boolean | cdktf.IResolvable) {
    this._insecure = value;
  }
  public resetInsecure() {
    this._insecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureInput() {
    return this._insecure;
  }

  // permission - computed: false, optional: true, required: false
  private _permission = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbPermissionOutputReference(this, "permission");
  public get permission() {
    return this._permission;
  }
  public putPermission(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbPermission) {
    this._permission.internalValue = value;
  }
  public resetPermission() {
    this._permission.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get permissionInput() {
    return this._permission.internalValue;
  }

  // resource - computed: false, optional: true, required: false
  private _resource = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResourceOutputReference(this, "resource");
  public get resource() {
    return this._resource;
  }
  public putResource(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbResource) {
    this._resource.internalValue = value;
  }
  public resetResource() {
    this._resource.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource.internalValue;
  }

  // shared_secret_ref - computed: false, optional: true, required: false
  private _sharedSecretRef = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSharedSecretRefOutputReference(this, "shared_secret_ref");
  public get sharedSecretRef() {
    return this._sharedSecretRef;
  }
  public putSharedSecretRef(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSharedSecretRef) {
    this._sharedSecretRef.internalValue = value;
  }
  public resetSharedSecretRef() {
    this._sharedSecretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sharedSecretRefInput() {
    return this._sharedSecretRef.internalValue;
  }

  // subject - computed: false, optional: true, required: false
  private _subject = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubjectOutputReference(this, "subject");
  public get subject() {
    return this._subject;
  }
  public putSubject(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbSubject) {
    this._subject.internalValue = value;
  }
  public resetSubject() {
    this._subject.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subjectInput() {
    return this._subject.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhen {
  /**
  * A list of pattern expressions to be evaluated as a logical AND.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#all DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#all}
  */
  readonly all?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * A list of pattern expressions to be evaluated as a logical OR.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#any DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#any}
  */
  readonly any?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * The binary operator to be applied to the content fetched from the authorization JSON, for comparison with 'value'. Possible values are: 'eq' (equal to), 'neq' (not equal to), 'incl' (includes; for arrays), 'excl' (excludes; for arrays), 'matches' (regex)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#operator DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Reference to a named set of pattern expressions
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#pattern_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#pattern_ref}
  */
  readonly patternRef?: string;
  /**
  * Path selector to fetch content from the authorization JSON (e.g. 'request.method'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. Authorino custom JSON path modifiers are also supported.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * The value of reference for the comparison with the content fetched from the authorization JSON. If used with the 'matches' operator, the value must compile to a valid Golang regex.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhenToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhen | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    all: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.all),
    any: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.any),
    operator: cdktf.stringToTerraform(struct!.operator),
    pattern_ref: cdktf.stringToTerraform(struct!.patternRef),
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhenToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhen | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    all: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.all),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    any: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.any),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pattern_ref: {
      value: cdktf.stringToHclTerraform(struct!.patternRef),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhenOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhen | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._all !== undefined) {
      hasAnyValues = true;
      internalValueResult.all = this._all;
    }
    if (this._any !== undefined) {
      hasAnyValues = true;
      internalValueResult.any = this._any;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._patternRef !== undefined) {
      hasAnyValues = true;
      internalValueResult.patternRef = this._patternRef;
    }
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhen | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._all = undefined;
      this._any = undefined;
      this._operator = undefined;
      this._patternRef = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._all = value.all;
      this._any = value.any;
      this._operator = value.operator;
      this._patternRef = value.patternRef;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // all - computed: false, optional: true, required: false
  private _all?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get all() {
    return this.interpolationForAttribute('all');
  }
  public set all(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._all = value;
  }
  public resetAll() {
    this._all = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allInput() {
    return this._all;
  }

  // any - computed: false, optional: true, required: false
  private _any?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get any() {
    return this.interpolationForAttribute('any');
  }
  public set any(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._any = value;
  }
  public resetAny() {
    this._any = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get anyInput() {
    return this._any;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // pattern_ref - computed: false, optional: true, required: false
  private _patternRef?: string; 
  public get patternRef() {
    return this.getStringAttribute('pattern_ref');
  }
  public set patternRef(value: string) {
    this._patternRef = value;
  }
  public resetPatternRef() {
    this._patternRef = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternRefInput() {
    return this._patternRef;
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhenList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhen[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhenOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhenOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorization {
  /**
  * Caching options for the resolved object returned when applying this config. Omit it to avoid caching objects for this config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#cache DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#cache}
  */
  readonly cache?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCache;
  /**
  * Authorization by Kubernetes SubjectAccessReview
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#kubernetes_subject_access_review DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#kubernetes_subject_access_review}
  */
  readonly kubernetesSubjectAccessReview?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReview;
  /**
  * Whether this config should generate individual observability metrics
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#metrics DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#metrics}
  */
  readonly metrics?: boolean | cdktf.IResolvable;
  /**
  * Open Policy Agent (OPA) Rego policy.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#opa DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#opa}
  */
  readonly opa?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpa;
  /**
  * Pattern-matching authorization rules.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#pattern_matching DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#pattern_matching}
  */
  readonly patternMatching?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatching;
  /**
  * Priority group of the config. All configs in the same priority group are evaluated concurrently; consecutive priority groups are evaluated sequentially.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#priority DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#priority}
  */
  readonly priority?: number;
  /**
  * Top-level route selectors. If present, the elements will be used to select HTTPRoute rules that, when activated, trigger the auth rule. At least one selected HTTPRoute rule must match to trigger the auth rule. If no route selectors are specified, the auth rule will be evaluated at all requests to the protected routes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#route_selectors DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#route_selectors}
  */
  readonly routeSelectors?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectors[] | cdktf.IResolvable;
  /**
  * Authorization decision delegated to external Authzed/SpiceDB server.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#spicedb DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#spicedb}
  */
  readonly spicedb?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedb;
  /**
  * Conditions for Authorino to enforce this config. If omitted, the config will be enforced for all requests. If present, all conditions must match for the config to be enforced; otherwise, the config will be skipped.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#when DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#when}
  */
  readonly when?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhen[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorization | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cache: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheToTerraform(struct!.cache),
    kubernetes_subject_access_review: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewToTerraform(struct!.kubernetesSubjectAccessReview),
    metrics: cdktf.booleanToTerraform(struct!.metrics),
    opa: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaToTerraform(struct!.opa),
    pattern_matching: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingToTerraform(struct!.patternMatching),
    priority: cdktf.numberToTerraform(struct!.priority),
    route_selectors: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsToTerraform, false)(struct!.routeSelectors),
    spicedb: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbToTerraform(struct!.spicedb),
    when: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhenToTerraform, false)(struct!.when),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorization | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cache: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheToHclTerraform(struct!.cache),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCache",
    },
    kubernetes_subject_access_review: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewToHclTerraform(struct!.kubernetesSubjectAccessReview),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReview",
    },
    metrics: {
      value: cdktf.booleanToHclTerraform(struct!.metrics),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    opa: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaToHclTerraform(struct!.opa),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpa",
    },
    pattern_matching: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingToHclTerraform(struct!.patternMatching),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatching",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    route_selectors: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsToHclTerraform, false)(struct!.routeSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsList",
    },
    spicedb: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbToHclTerraform(struct!.spicedb),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedb",
    },
    when: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhenToHclTerraform, false)(struct!.when),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhenList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorization | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cache?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cache = this._cache?.internalValue;
    }
    if (this._kubernetesSubjectAccessReview?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesSubjectAccessReview = this._kubernetesSubjectAccessReview?.internalValue;
    }
    if (this._metrics !== undefined) {
      hasAnyValues = true;
      internalValueResult.metrics = this._metrics;
    }
    if (this._opa?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.opa = this._opa?.internalValue;
    }
    if (this._patternMatching?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.patternMatching = this._patternMatching?.internalValue;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._routeSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeSelectors = this._routeSelectors?.internalValue;
    }
    if (this._spicedb?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spicedb = this._spicedb?.internalValue;
    }
    if (this._when?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.when = this._when?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorization | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cache.internalValue = undefined;
      this._kubernetesSubjectAccessReview.internalValue = undefined;
      this._metrics = undefined;
      this._opa.internalValue = undefined;
      this._patternMatching.internalValue = undefined;
      this._priority = undefined;
      this._routeSelectors.internalValue = undefined;
      this._spicedb.internalValue = undefined;
      this._when.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cache.internalValue = value.cache;
      this._kubernetesSubjectAccessReview.internalValue = value.kubernetesSubjectAccessReview;
      this._metrics = value.metrics;
      this._opa.internalValue = value.opa;
      this._patternMatching.internalValue = value.patternMatching;
      this._priority = value.priority;
      this._routeSelectors.internalValue = value.routeSelectors;
      this._spicedb.internalValue = value.spicedb;
      this._when.internalValue = value.when;
    }
  }

  // cache - computed: false, optional: true, required: false
  private _cache = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCacheOutputReference(this, "cache");
  public get cache() {
    return this._cache;
  }
  public putCache(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationCache) {
    this._cache.internalValue = value;
  }
  public resetCache() {
    this._cache.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cacheInput() {
    return this._cache.internalValue;
  }

  // kubernetes_subject_access_review - computed: false, optional: true, required: false
  private _kubernetesSubjectAccessReview = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReviewOutputReference(this, "kubernetes_subject_access_review");
  public get kubernetesSubjectAccessReview() {
    return this._kubernetesSubjectAccessReview;
  }
  public putKubernetesSubjectAccessReview(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationKubernetesSubjectAccessReview) {
    this._kubernetesSubjectAccessReview.internalValue = value;
  }
  public resetKubernetesSubjectAccessReview() {
    this._kubernetesSubjectAccessReview.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesSubjectAccessReviewInput() {
    return this._kubernetesSubjectAccessReview.internalValue;
  }

  // metrics - computed: false, optional: true, required: false
  private _metrics?: boolean | cdktf.IResolvable; 
  public get metrics() {
    return this.getBooleanAttribute('metrics');
  }
  public set metrics(value: boolean | cdktf.IResolvable) {
    this._metrics = value;
  }
  public resetMetrics() {
    this._metrics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricsInput() {
    return this._metrics;
  }

  // opa - computed: false, optional: true, required: false
  private _opa = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpaOutputReference(this, "opa");
  public get opa() {
    return this._opa;
  }
  public putOpa(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationOpa) {
    this._opa.internalValue = value;
  }
  public resetOpa() {
    this._opa.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get opaInput() {
    return this._opa.internalValue;
  }

  // pattern_matching - computed: false, optional: true, required: false
  private _patternMatching = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatchingOutputReference(this, "pattern_matching");
  public get patternMatching() {
    return this._patternMatching;
  }
  public putPatternMatching(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationPatternMatching) {
    this._patternMatching.internalValue = value;
  }
  public resetPatternMatching() {
    this._patternMatching.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternMatchingInput() {
    return this._patternMatching.internalValue;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // route_selectors - computed: false, optional: true, required: false
  private _routeSelectors = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectorsList(this, "route_selectors", false);
  public get routeSelectors() {
    return this._routeSelectors;
  }
  public putRouteSelectors(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationRouteSelectors[] | cdktf.IResolvable) {
    this._routeSelectors.internalValue = value;
  }
  public resetRouteSelectors() {
    this._routeSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeSelectorsInput() {
    return this._routeSelectors.internalValue;
  }

  // spicedb - computed: false, optional: true, required: false
  private _spicedb = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedbOutputReference(this, "spicedb");
  public get spicedb() {
    return this._spicedb;
  }
  public putSpicedb(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationSpicedb) {
    this._spicedb.internalValue = value;
  }
  public resetSpicedb() {
    this._spicedb.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get spicedbInput() {
    return this._spicedb.internalValue;
  }

  // when - computed: false, optional: true, required: false
  private _when = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhenList(this, "when", false);
  public get when() {
    return this._when;
  }
  public putWhen(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesAuthorizationWhen[] | cdktf.IResolvable) {
    this._when.internalValue = value;
  }
  public resetWhen() {
    this._when.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get whenInput() {
    return this._when.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheKey {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheKeyToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheKeyToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCache {
  /**
  * Key used to store the entry in the cache. The resolved key must be unique within the scope of this particular config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheKey;
  /**
  * Duration (in seconds) of the external data in the cache before pulled again from the source.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#ttl DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#ttl}
  */
  readonly ttl?: number;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCache | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheKeyToTerraform(struct!.key),
    ttl: cdktf.numberToTerraform(struct!.ttl),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCache | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheKeyToHclTerraform(struct!.key),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheKey",
    },
    ttl: {
      value: cdktf.numberToHclTerraform(struct!.ttl),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCache | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key?.internalValue;
    }
    if (this._ttl !== undefined) {
      hasAnyValues = true;
      internalValueResult.ttl = this._ttl;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCache | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key.internalValue = undefined;
      this._ttl = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key.internalValue = value.key;
      this._ttl = value.ttl;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheKeyOutputReference(this, "key");
  public get key() {
    return this._key;
  }
  public putKey(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheKey) {
    this._key.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key.internalValue;
  }

  // ttl - computed: false, optional: true, required: false
  private _ttl?: number; 
  public get ttl() {
    return this.getNumberAttribute('ttl');
  }
  public set ttl(value: number) {
    this._ttl = value;
  }
  public resetTtl() {
    this._ttl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ttlInput() {
    return this._ttl;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBody {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBody | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBody | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBody | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBody | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyParameters {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyParametersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyParametersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsAuthorizationHeader {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#prefix DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#prefix}
  */
  readonly prefix?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsAuthorizationHeaderToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsAuthorizationHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    prefix: cdktf.stringToTerraform(struct!.prefix),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsAuthorizationHeaderToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsAuthorizationHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    prefix: {
      value: cdktf.stringToHclTerraform(struct!.prefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsAuthorizationHeaderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsAuthorizationHeader | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._prefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefix = this._prefix;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsAuthorizationHeader | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._prefix = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._prefix = value.prefix;
    }
  }

  // prefix - computed: false, optional: true, required: false
  private _prefix?: string; 
  public get prefix() {
    return this.getStringAttribute('prefix');
  }
  public set prefix(value: string) {
    this._prefix = value;
  }
  public resetPrefix() {
    this._prefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixInput() {
    return this._prefix;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCookie {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCookieToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCookie | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCookieToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCookie | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCookieOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCookie | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCookie | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCustomHeader {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCustomHeaderToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCustomHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCustomHeaderToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCustomHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCustomHeaderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCustomHeader | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCustomHeader | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsQueryString {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsQueryStringToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsQueryString | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsQueryStringToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsQueryString | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsQueryStringOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsQueryString | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsQueryString | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentials {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#authorization_header DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#authorization_header}
  */
  readonly authorizationHeader?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsAuthorizationHeader;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#cookie DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#cookie}
  */
  readonly cookie?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCookie;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#custom_header DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#custom_header}
  */
  readonly customHeader?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCustomHeader;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#query_string DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#query_string}
  */
  readonly queryString?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsQueryString;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    authorization_header: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsAuthorizationHeaderToTerraform(struct!.authorizationHeader),
    cookie: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCookieToTerraform(struct!.cookie),
    custom_header: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCustomHeaderToTerraform(struct!.customHeader),
    query_string: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsQueryStringToTerraform(struct!.queryString),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    authorization_header: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsAuthorizationHeaderToHclTerraform(struct!.authorizationHeader),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsAuthorizationHeader",
    },
    cookie: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCookieToHclTerraform(struct!.cookie),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCookie",
    },
    custom_header: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCustomHeaderToHclTerraform(struct!.customHeader),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCustomHeader",
    },
    query_string: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsQueryStringToHclTerraform(struct!.queryString),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsQueryString",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentials | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authorizationHeader?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authorizationHeader = this._authorizationHeader?.internalValue;
    }
    if (this._cookie?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cookie = this._cookie?.internalValue;
    }
    if (this._customHeader?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.customHeader = this._customHeader?.internalValue;
    }
    if (this._queryString?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryString = this._queryString?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentials | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authorizationHeader.internalValue = undefined;
      this._cookie.internalValue = undefined;
      this._customHeader.internalValue = undefined;
      this._queryString.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authorizationHeader.internalValue = value.authorizationHeader;
      this._cookie.internalValue = value.cookie;
      this._customHeader.internalValue = value.customHeader;
      this._queryString.internalValue = value.queryString;
    }
  }

  // authorization_header - computed: false, optional: true, required: false
  private _authorizationHeader = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsAuthorizationHeaderOutputReference(this, "authorization_header");
  public get authorizationHeader() {
    return this._authorizationHeader;
  }
  public putAuthorizationHeader(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsAuthorizationHeader) {
    this._authorizationHeader.internalValue = value;
  }
  public resetAuthorizationHeader() {
    this._authorizationHeader.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authorizationHeaderInput() {
    return this._authorizationHeader.internalValue;
  }

  // cookie - computed: false, optional: true, required: false
  private _cookie = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCookieOutputReference(this, "cookie");
  public get cookie() {
    return this._cookie;
  }
  public putCookie(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCookie) {
    this._cookie.internalValue = value;
  }
  public resetCookie() {
    this._cookie.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cookieInput() {
    return this._cookie.internalValue;
  }

  // custom_header - computed: false, optional: true, required: false
  private _customHeader = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCustomHeaderOutputReference(this, "custom_header");
  public get customHeader() {
    return this._customHeader;
  }
  public putCustomHeader(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsCustomHeader) {
    this._customHeader.internalValue = value;
  }
  public resetCustomHeader() {
    this._customHeader.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customHeaderInput() {
    return this._customHeader.internalValue;
  }

  // query_string - computed: false, optional: true, required: false
  private _queryString = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsQueryStringOutputReference(this, "query_string");
  public get queryString() {
    return this._queryString;
  }
  public putQueryString(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsQueryString) {
    this._queryString.internalValue = value;
  }
  public resetQueryString() {
    this._queryString.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryStringInput() {
    return this._queryString.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpHeaders {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpHeadersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpHeadersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ClientSecretRef {
  /**
  * The key of the secret to select from. Must be a valid secret key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key: string;
  /**
  * The name of the secret in the Authorino's namespace to select from.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ClientSecretRefToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ClientSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ClientSecretRefToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ClientSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ClientSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ClientSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ClientSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2 {
  /**
  * Caches and reuses the token until expired. Set it to false to force fetch the token at every authorization request regardless of expiration.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#cache DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#cache}
  */
  readonly cache?: boolean | cdktf.IResolvable;
  /**
  * OAuth2 Client ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#client_id DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#client_id}
  */
  readonly clientId: string;
  /**
  * Reference to a Kuberentes Secret key that stores that OAuth2 Client Secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#client_secret_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#client_secret_ref}
  */
  readonly clientSecretRef: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ClientSecretRef;
  /**
  * Optional extra parameters for the requests to the token URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#extra_params DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#extra_params}
  */
  readonly extraParams?: { [key: string]: string };
  /**
  * Optional scopes for the client credentials grant, if supported by he OAuth2 server.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#scopes DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#scopes}
  */
  readonly scopes?: string[];
  /**
  * Token endpoint URL of the OAuth2 resource server.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#token_url DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#token_url}
  */
  readonly tokenUrl: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cache: cdktf.booleanToTerraform(struct!.cache),
    client_id: cdktf.stringToTerraform(struct!.clientId),
    client_secret_ref: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ClientSecretRefToTerraform(struct!.clientSecretRef),
    extra_params: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.extraParams),
    scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.scopes),
    token_url: cdktf.stringToTerraform(struct!.tokenUrl),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cache: {
      value: cdktf.booleanToHclTerraform(struct!.cache),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    client_id: {
      value: cdktf.stringToHclTerraform(struct!.clientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_secret_ref: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ClientSecretRefToHclTerraform(struct!.clientSecretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ClientSecretRef",
    },
    extra_params: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.extraParams),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.scopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    token_url: {
      value: cdktf.stringToHclTerraform(struct!.tokenUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2OutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2 | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cache !== undefined) {
      hasAnyValues = true;
      internalValueResult.cache = this._cache;
    }
    if (this._clientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientId = this._clientId;
    }
    if (this._clientSecretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientSecretRef = this._clientSecretRef?.internalValue;
    }
    if (this._extraParams !== undefined) {
      hasAnyValues = true;
      internalValueResult.extraParams = this._extraParams;
    }
    if (this._scopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes;
    }
    if (this._tokenUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenUrl = this._tokenUrl;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2 | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cache = undefined;
      this._clientId = undefined;
      this._clientSecretRef.internalValue = undefined;
      this._extraParams = undefined;
      this._scopes = undefined;
      this._tokenUrl = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cache = value.cache;
      this._clientId = value.clientId;
      this._clientSecretRef.internalValue = value.clientSecretRef;
      this._extraParams = value.extraParams;
      this._scopes = value.scopes;
      this._tokenUrl = value.tokenUrl;
    }
  }

  // cache - computed: false, optional: true, required: false
  private _cache?: boolean | cdktf.IResolvable; 
  public get cache() {
    return this.getBooleanAttribute('cache');
  }
  public set cache(value: boolean | cdktf.IResolvable) {
    this._cache = value;
  }
  public resetCache() {
    this._cache = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cacheInput() {
    return this._cache;
  }

  // client_id - computed: false, optional: false, required: true
  private _clientId?: string; 
  public get clientId() {
    return this.getStringAttribute('client_id');
  }
  public set clientId(value: string) {
    this._clientId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clientIdInput() {
    return this._clientId;
  }

  // client_secret_ref - computed: false, optional: false, required: true
  private _clientSecretRef = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ClientSecretRefOutputReference(this, "client_secret_ref");
  public get clientSecretRef() {
    return this._clientSecretRef;
  }
  public putClientSecretRef(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ClientSecretRef) {
    this._clientSecretRef.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clientSecretRefInput() {
    return this._clientSecretRef.internalValue;
  }

  // extra_params - computed: false, optional: true, required: false
  private _extraParams?: { [key: string]: string }; 
  public get extraParams() {
    return this.getStringMapAttribute('extra_params');
  }
  public set extraParams(value: { [key: string]: string }) {
    this._extraParams = value;
  }
  public resetExtraParams() {
    this._extraParams = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extraParamsInput() {
    return this._extraParams;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes?: string[]; 
  public get scopes() {
    return this.getListAttribute('scopes');
  }
  public set scopes(value: string[]) {
    this._scopes = value;
  }
  public resetScopes() {
    this._scopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes;
  }

  // token_url - computed: false, optional: false, required: true
  private _tokenUrl?: string; 
  public get tokenUrl() {
    return this.getStringAttribute('token_url');
  }
  public set tokenUrl(value: string) {
    this._tokenUrl = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenUrlInput() {
    return this._tokenUrl;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpSharedSecretRef {
  /**
  * The key of the secret to select from. Must be a valid secret key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key: string;
  /**
  * The name of the secret in the Authorino's namespace to select from.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpSharedSecretRefToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpSharedSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpSharedSecretRefToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpSharedSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpSharedSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpSharedSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpSharedSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttp {
  /**
  * Raw body of the HTTP request. Supersedes 'bodyParameters'; use either one or the other. Use it with method=POST; for GET requests, set parameters as query string in the 'endpoint' (placeholders can be used).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#body DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#body}
  */
  readonly body?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBody;
  /**
  * Custom parameters to encode in the body of the HTTP request. Superseded by 'body'; use either one or the other. Use it with method=POST; for GET requests, set parameters as query string in the 'endpoint' (placeholders can be used).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#body_parameters DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#body_parameters}
  */
  readonly bodyParameters?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyParameters;
  /**
  * Content-Type of the request body. Shapes how 'bodyParameters' are encoded. Use it with method=POST; for GET requests, Content-Type is automatically set to 'text/plain'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#content_type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#content_type}
  */
  readonly contentType?: string;
  /**
  * Defines where client credentials will be passed in the request to the service. If omitted, it defaults to client credentials passed in the HTTP Authorization header and the 'Bearer' prefix expected prepended to the secret value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#credentials DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#credentials}
  */
  readonly credentials?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentials;
  /**
  * Custom headers in the HTTP request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#headers DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#headers}
  */
  readonly headers?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpHeaders;
  /**
  * HTTP verb used in the request to the service. Accepted values: GET (default), POST. When the request method is POST, the authorization JSON is passed in the body of the request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#method DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#method}
  */
  readonly method?: string;
  /**
  * Authentication with the HTTP service by OAuth2 Client Credentials grant.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#oauth2 DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#oauth2}
  */
  readonly oauth2?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2;
  /**
  * Reference to a Secret key whose value will be passed by Authorino in the request. The HTTP service can use the shared secret to authenticate the origin of the request. Ignored if used together with oauth2.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#shared_secret_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#shared_secret_ref}
  */
  readonly sharedSecretRef?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpSharedSecretRef;
  /**
  * Endpoint URL of the HTTP service. The value can include variable placeholders in the format '{selector}', where 'selector' is any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson and selects value from the authorization JSON. E.g. https://ext-auth-server.io/metadata?p={request.path}
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#url DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#url}
  */
  readonly url: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    body: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyToTerraform(struct!.body),
    body_parameters: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyParametersToTerraform(struct!.bodyParameters),
    content_type: cdktf.stringToTerraform(struct!.contentType),
    credentials: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsToTerraform(struct!.credentials),
    headers: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpHeadersToTerraform(struct!.headers),
    method: cdktf.stringToTerraform(struct!.method),
    oauth2: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ToTerraform(struct!.oauth2),
    shared_secret_ref: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpSharedSecretRefToTerraform(struct!.sharedSecretRef),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    body: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyToHclTerraform(struct!.body),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBody",
    },
    body_parameters: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyParametersToHclTerraform(struct!.bodyParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyParameters",
    },
    content_type: {
      value: cdktf.stringToHclTerraform(struct!.contentType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    credentials: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsToHclTerraform(struct!.credentials),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentials",
    },
    headers: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpHeadersToHclTerraform(struct!.headers),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpHeaders",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    oauth2: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2ToHclTerraform(struct!.oauth2),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2",
    },
    shared_secret_ref: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpSharedSecretRefToHclTerraform(struct!.sharedSecretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpSharedSecretRef",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._body?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.body = this._body?.internalValue;
    }
    if (this._bodyParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bodyParameters = this._bodyParameters?.internalValue;
    }
    if (this._contentType !== undefined) {
      hasAnyValues = true;
      internalValueResult.contentType = this._contentType;
    }
    if (this._credentials?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.credentials = this._credentials?.internalValue;
    }
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._oauth2?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oauth2 = this._oauth2?.internalValue;
    }
    if (this._sharedSecretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sharedSecretRef = this._sharedSecretRef?.internalValue;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._body.internalValue = undefined;
      this._bodyParameters.internalValue = undefined;
      this._contentType = undefined;
      this._credentials.internalValue = undefined;
      this._headers.internalValue = undefined;
      this._method = undefined;
      this._oauth2.internalValue = undefined;
      this._sharedSecretRef.internalValue = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._body.internalValue = value.body;
      this._bodyParameters.internalValue = value.bodyParameters;
      this._contentType = value.contentType;
      this._credentials.internalValue = value.credentials;
      this._headers.internalValue = value.headers;
      this._method = value.method;
      this._oauth2.internalValue = value.oauth2;
      this._sharedSecretRef.internalValue = value.sharedSecretRef;
      this._url = value.url;
    }
  }

  // body - computed: false, optional: true, required: false
  private _body = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyOutputReference(this, "body");
  public get body() {
    return this._body;
  }
  public putBody(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBody) {
    this._body.internalValue = value;
  }
  public resetBody() {
    this._body.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bodyInput() {
    return this._body.internalValue;
  }

  // body_parameters - computed: false, optional: true, required: false
  private _bodyParameters = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyParametersOutputReference(this, "body_parameters");
  public get bodyParameters() {
    return this._bodyParameters;
  }
  public putBodyParameters(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpBodyParameters) {
    this._bodyParameters.internalValue = value;
  }
  public resetBodyParameters() {
    this._bodyParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bodyParametersInput() {
    return this._bodyParameters.internalValue;
  }

  // content_type - computed: false, optional: true, required: false
  private _contentType?: string; 
  public get contentType() {
    return this.getStringAttribute('content_type');
  }
  public set contentType(value: string) {
    this._contentType = value;
  }
  public resetContentType() {
    this._contentType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get contentTypeInput() {
    return this._contentType;
  }

  // credentials - computed: false, optional: true, required: false
  private _credentials = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentialsOutputReference(this, "credentials");
  public get credentials() {
    return this._credentials;
  }
  public putCredentials(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpCredentials) {
    this._credentials.internalValue = value;
  }
  public resetCredentials() {
    this._credentials.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get credentialsInput() {
    return this._credentials.internalValue;
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpHeadersOutputReference(this, "headers");
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpHeaders) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // oauth2 - computed: false, optional: true, required: false
  private _oauth2 = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2OutputReference(this, "oauth2");
  public get oauth2() {
    return this._oauth2;
  }
  public putOauth2(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOauth2) {
    this._oauth2.internalValue = value;
  }
  public resetOauth2() {
    this._oauth2.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get oauth2Input() {
    return this._oauth2.internalValue;
  }

  // shared_secret_ref - computed: false, optional: true, required: false
  private _sharedSecretRef = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpSharedSecretRefOutputReference(this, "shared_secret_ref");
  public get sharedSecretRef() {
    return this._sharedSecretRef;
  }
  public putSharedSecretRef(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpSharedSecretRef) {
    this._sharedSecretRef.internalValue = value;
  }
  public resetSharedSecretRef() {
    this._sharedSecretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sharedSecretRefInput() {
    return this._sharedSecretRef.internalValue;
  }

  // url - computed: false, optional: false, required: true
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeaders {
  /**
  * Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). If multiple entries specify equivalent header names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, 'foo' and 'Foo' are considered equivalent. When a header is repeated in an HTTP request, it is implementation-specific behavior as to how this is represented. Generally, proxies should follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding processing a repeated header, with special handling for 'Set-Cookie'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
  /**
  * Type specifies how to match against the value of the header. Support: Core (Exact) Support: Implementation-specific (RegularExpression) Since RegularExpression HeaderMatchType has implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value is the value of HTTP Header to be matched.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeadersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeadersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeadersOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesPath {
  /**
  * Type specifies how to match against the path Value. Support: Core (Exact, PathPrefix) Support: Implementation-specific (RegularExpression)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value of the HTTP path to match against.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesPathToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesPathToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParams {
  /**
  * Name is the name of the HTTP query param to be matched. This must be an exact string match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3). If multiple entries specify equivalent query param names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent query param name MUST be ignored. If a query param is repeated in an HTTP request, the behavior is purposely left undefined, since different data planes have different capabilities. However, it is *recommended* that implementations should match against the first value of the param if the data plane supports it, as this behavior is expected in other load balancing contexts outside of the Gateway API. Users SHOULD NOT route traffic based on repeated query params to guard themselves against potential differences in the implementations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
  /**
  * Type specifies how to match against the value of the query parameter. Support: Extended (Exact) Support: Implementation-specific (RegularExpression) Since RegularExpression QueryParamMatchType has Implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value is the value of HTTP query param to be matched.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParamsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParams | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParamsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParams | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParamsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParams | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParams | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParamsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParamsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParamsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatches {
  /**
  * Headers specifies HTTP request header matchers. Multiple match values are ANDed together, meaning, a request must match all the specified headers to select the route.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#headers DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#headers}
  */
  readonly headers?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeaders[] | cdktf.IResolvable;
  /**
  * Method specifies HTTP method matcher. When specified, this route will be matched only if the request has the specified method. Support: Extended
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#method DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#method}
  */
  readonly method?: string;
  /**
  * Path specifies a HTTP request path matcher. If this field is not specified, a default prefix match on the '/' path is provided.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#path DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#path}
  */
  readonly path?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesPath;
  /**
  * QueryParams specifies HTTP query parameter matchers. Multiple match values are ANDed together, meaning, a request must match all the specified query parameters to select the route. Support: Extended
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#query_params DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#query_params}
  */
  readonly queryParams?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    headers: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeadersToTerraform, false)(struct!.headers),
    method: cdktf.stringToTerraform(struct!.method),
    path: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesPathToTerraform(struct!.path),
    query_params: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParamsToTerraform, false)(struct!.queryParams),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    headers: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeadersList",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesPathToHclTerraform(struct!.path),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesPath",
    },
    query_params: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParamsToHclTerraform, false)(struct!.queryParams),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParamsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatches | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    if (this._queryParams?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryParams = this._queryParams?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatches | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._headers.internalValue = undefined;
      this._method = undefined;
      this._path.internalValue = undefined;
      this._queryParams.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._headers.internalValue = value.headers;
      this._method = value.method;
      this._path.internalValue = value.path;
      this._queryParams.internalValue = value.queryParams;
    }
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesPathOutputReference(this, "path");
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesPath) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }

  // query_params - computed: false, optional: true, required: false
  private _queryParams = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParamsList(this, "query_params", false);
  public get queryParams() {
    return this._queryParams;
  }
  public putQueryParams(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable) {
    this._queryParams.internalValue = value;
  }
  public resetQueryParams() {
    this._queryParams.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryParamsInput() {
    return this._queryParams.internalValue;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatches[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectors {
  /**
  * Hostnames defines a set of hostname that should match against the HTTP Host header to select a HTTPRoute to process the request https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteSpec
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#hostnames DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#hostnames}
  */
  readonly hostnames?: string[];
  /**
  * Matches define conditions used for matching the rule against incoming HTTP requests. https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteSpec
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#matches DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#matches}
  */
  readonly matches?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatches[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    hostnames: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.hostnames),
    matches: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesToTerraform, false)(struct!.matches),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    hostnames: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.hostnames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    matches: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesToHclTerraform, false)(struct!.matches),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._hostnames !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostnames = this._hostnames;
    }
    if (this._matches?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matches = this._matches?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._hostnames = undefined;
      this._matches.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._hostnames = value.hostnames;
      this._matches.internalValue = value.matches;
    }
  }

  // hostnames - computed: false, optional: true, required: false
  private _hostnames?: string[]; 
  public get hostnames() {
    return this.getListAttribute('hostnames');
  }
  public set hostnames(value: string[]) {
    this._hostnames = value;
  }
  public resetHostnames() {
    this._hostnames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnamesInput() {
    return this._hostnames;
  }

  // matches - computed: false, optional: true, required: false
  private _matches = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatchesList(this, "matches", false);
  public get matches() {
    return this._matches;
  }
  public putMatches(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsMatches[] | cdktf.IResolvable) {
    this._matches.internalValue = value;
  }
  public resetMatches() {
    this._matches.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchesInput() {
    return this._matches.internalValue;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhen {
  /**
  * A list of pattern expressions to be evaluated as a logical AND.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#all DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#all}
  */
  readonly all?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * A list of pattern expressions to be evaluated as a logical OR.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#any DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#any}
  */
  readonly any?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * The binary operator to be applied to the content fetched from the authorization JSON, for comparison with 'value'. Possible values are: 'eq' (equal to), 'neq' (not equal to), 'incl' (includes; for arrays), 'excl' (excludes; for arrays), 'matches' (regex)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#operator DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Reference to a named set of pattern expressions
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#pattern_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#pattern_ref}
  */
  readonly patternRef?: string;
  /**
  * Path selector to fetch content from the authorization JSON (e.g. 'request.method'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. Authorino custom JSON path modifiers are also supported.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * The value of reference for the comparison with the content fetched from the authorization JSON. If used with the 'matches' operator, the value must compile to a valid Golang regex.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhenToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhen | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    all: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.all),
    any: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.any),
    operator: cdktf.stringToTerraform(struct!.operator),
    pattern_ref: cdktf.stringToTerraform(struct!.patternRef),
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhenToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhen | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    all: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.all),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    any: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.any),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pattern_ref: {
      value: cdktf.stringToHclTerraform(struct!.patternRef),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhenOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhen | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._all !== undefined) {
      hasAnyValues = true;
      internalValueResult.all = this._all;
    }
    if (this._any !== undefined) {
      hasAnyValues = true;
      internalValueResult.any = this._any;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._patternRef !== undefined) {
      hasAnyValues = true;
      internalValueResult.patternRef = this._patternRef;
    }
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhen | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._all = undefined;
      this._any = undefined;
      this._operator = undefined;
      this._patternRef = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._all = value.all;
      this._any = value.any;
      this._operator = value.operator;
      this._patternRef = value.patternRef;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // all - computed: false, optional: true, required: false
  private _all?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get all() {
    return this.interpolationForAttribute('all');
  }
  public set all(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._all = value;
  }
  public resetAll() {
    this._all = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allInput() {
    return this._all;
  }

  // any - computed: false, optional: true, required: false
  private _any?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get any() {
    return this.interpolationForAttribute('any');
  }
  public set any(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._any = value;
  }
  public resetAny() {
    this._any = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get anyInput() {
    return this._any;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // pattern_ref - computed: false, optional: true, required: false
  private _patternRef?: string; 
  public get patternRef() {
    return this.getStringAttribute('pattern_ref');
  }
  public set patternRef(value: string) {
    this._patternRef = value;
  }
  public resetPatternRef() {
    this._patternRef = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternRefInput() {
    return this._patternRef;
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhenList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhen[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhenOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhenOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacks {
  /**
  * Caching options for the resolved object returned when applying this config. Omit it to avoid caching objects for this config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#cache DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#cache}
  */
  readonly cache?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCache;
  /**
  * Settings of the external HTTP request
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#http DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#http}
  */
  readonly http: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttp;
  /**
  * Whether this config should generate individual observability metrics
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#metrics DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#metrics}
  */
  readonly metrics?: boolean | cdktf.IResolvable;
  /**
  * Priority group of the config. All configs in the same priority group are evaluated concurrently; consecutive priority groups are evaluated sequentially.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#priority DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#priority}
  */
  readonly priority?: number;
  /**
  * Top-level route selectors. If present, the elements will be used to select HTTPRoute rules that, when activated, trigger the auth rule. At least one selected HTTPRoute rule must match to trigger the auth rule. If no route selectors are specified, the auth rule will be evaluated at all requests to the protected routes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#route_selectors DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#route_selectors}
  */
  readonly routeSelectors?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectors[] | cdktf.IResolvable;
  /**
  * Conditions for Authorino to enforce this config. If omitted, the config will be enforced for all requests. If present, all conditions must match for the config to be enforced; otherwise, the config will be skipped.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#when DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#when}
  */
  readonly when?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhen[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cache: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheToTerraform(struct!.cache),
    http: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpToTerraform(struct!.http),
    metrics: cdktf.booleanToTerraform(struct!.metrics),
    priority: cdktf.numberToTerraform(struct!.priority),
    route_selectors: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsToTerraform, false)(struct!.routeSelectors),
    when: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhenToTerraform, false)(struct!.when),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cache: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheToHclTerraform(struct!.cache),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCache",
    },
    http: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpToHclTerraform(struct!.http),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttp",
    },
    metrics: {
      value: cdktf.booleanToHclTerraform(struct!.metrics),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    route_selectors: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsToHclTerraform, false)(struct!.routeSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsList",
    },
    when: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhenToHclTerraform, false)(struct!.when),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhenList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacks | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cache?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cache = this._cache?.internalValue;
    }
    if (this._http?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.http = this._http?.internalValue;
    }
    if (this._metrics !== undefined) {
      hasAnyValues = true;
      internalValueResult.metrics = this._metrics;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._routeSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeSelectors = this._routeSelectors?.internalValue;
    }
    if (this._when?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.when = this._when?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacks | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cache.internalValue = undefined;
      this._http.internalValue = undefined;
      this._metrics = undefined;
      this._priority = undefined;
      this._routeSelectors.internalValue = undefined;
      this._when.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cache.internalValue = value.cache;
      this._http.internalValue = value.http;
      this._metrics = value.metrics;
      this._priority = value.priority;
      this._routeSelectors.internalValue = value.routeSelectors;
      this._when.internalValue = value.when;
    }
  }

  // cache - computed: false, optional: true, required: false
  private _cache = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCacheOutputReference(this, "cache");
  public get cache() {
    return this._cache;
  }
  public putCache(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksCache) {
    this._cache.internalValue = value;
  }
  public resetCache() {
    this._cache.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cacheInput() {
    return this._cache.internalValue;
  }

  // http - computed: false, optional: false, required: true
  private _http = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttpOutputReference(this, "http");
  public get http() {
    return this._http;
  }
  public putHttp(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksHttp) {
    this._http.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get httpInput() {
    return this._http.internalValue;
  }

  // metrics - computed: false, optional: true, required: false
  private _metrics?: boolean | cdktf.IResolvable; 
  public get metrics() {
    return this.getBooleanAttribute('metrics');
  }
  public set metrics(value: boolean | cdktf.IResolvable) {
    this._metrics = value;
  }
  public resetMetrics() {
    this._metrics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricsInput() {
    return this._metrics;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // route_selectors - computed: false, optional: true, required: false
  private _routeSelectors = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectorsList(this, "route_selectors", false);
  public get routeSelectors() {
    return this._routeSelectors;
  }
  public putRouteSelectors(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksRouteSelectors[] | cdktf.IResolvable) {
    this._routeSelectors.internalValue = value;
  }
  public resetRouteSelectors() {
    this._routeSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeSelectorsInput() {
    return this._routeSelectors.internalValue;
  }

  // when - computed: false, optional: true, required: false
  private _when = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhenList(this, "when", false);
  public get when() {
    return this._when;
  }
  public putWhen(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesCallbacksWhen[] | cdktf.IResolvable) {
    this._when.internalValue = value;
  }
  public resetWhen() {
    this._when.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get whenInput() {
    return this._when.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheKey {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheKeyToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheKeyToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCache {
  /**
  * Key used to store the entry in the cache. The resolved key must be unique within the scope of this particular config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheKey;
  /**
  * Duration (in seconds) of the external data in the cache before pulled again from the source.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#ttl DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#ttl}
  */
  readonly ttl?: number;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCache | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheKeyToTerraform(struct!.key),
    ttl: cdktf.numberToTerraform(struct!.ttl),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCache | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheKeyToHclTerraform(struct!.key),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheKey",
    },
    ttl: {
      value: cdktf.numberToHclTerraform(struct!.ttl),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCache | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key?.internalValue;
    }
    if (this._ttl !== undefined) {
      hasAnyValues = true;
      internalValueResult.ttl = this._ttl;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCache | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key.internalValue = undefined;
      this._ttl = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key.internalValue = value.key;
      this._ttl = value.ttl;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheKeyOutputReference(this, "key");
  public get key() {
    return this._key;
  }
  public putKey(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheKey) {
    this._key.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key.internalValue;
  }

  // ttl - computed: false, optional: true, required: false
  private _ttl?: number; 
  public get ttl() {
    return this.getNumberAttribute('ttl');
  }
  public set ttl(value: number) {
    this._ttl = value;
  }
  public resetTtl() {
    this._ttl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ttlInput() {
    return this._ttl;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBody {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBody | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBody | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBody | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBody | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyParameters {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyParametersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyParametersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsAuthorizationHeader {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#prefix DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#prefix}
  */
  readonly prefix?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsAuthorizationHeaderToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsAuthorizationHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    prefix: cdktf.stringToTerraform(struct!.prefix),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsAuthorizationHeaderToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsAuthorizationHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    prefix: {
      value: cdktf.stringToHclTerraform(struct!.prefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsAuthorizationHeaderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsAuthorizationHeader | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._prefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefix = this._prefix;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsAuthorizationHeader | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._prefix = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._prefix = value.prefix;
    }
  }

  // prefix - computed: false, optional: true, required: false
  private _prefix?: string; 
  public get prefix() {
    return this.getStringAttribute('prefix');
  }
  public set prefix(value: string) {
    this._prefix = value;
  }
  public resetPrefix() {
    this._prefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixInput() {
    return this._prefix;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCookie {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCookieToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCookie | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCookieToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCookie | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCookieOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCookie | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCookie | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCustomHeader {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCustomHeaderToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCustomHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCustomHeaderToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCustomHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCustomHeaderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCustomHeader | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCustomHeader | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsQueryString {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsQueryStringToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsQueryString | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsQueryStringToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsQueryString | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsQueryStringOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsQueryString | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsQueryString | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentials {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#authorization_header DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#authorization_header}
  */
  readonly authorizationHeader?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsAuthorizationHeader;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#cookie DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#cookie}
  */
  readonly cookie?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCookie;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#custom_header DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#custom_header}
  */
  readonly customHeader?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCustomHeader;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#query_string DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#query_string}
  */
  readonly queryString?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsQueryString;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    authorization_header: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsAuthorizationHeaderToTerraform(struct!.authorizationHeader),
    cookie: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCookieToTerraform(struct!.cookie),
    custom_header: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCustomHeaderToTerraform(struct!.customHeader),
    query_string: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsQueryStringToTerraform(struct!.queryString),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentials | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    authorization_header: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsAuthorizationHeaderToHclTerraform(struct!.authorizationHeader),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsAuthorizationHeader",
    },
    cookie: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCookieToHclTerraform(struct!.cookie),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCookie",
    },
    custom_header: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCustomHeaderToHclTerraform(struct!.customHeader),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCustomHeader",
    },
    query_string: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsQueryStringToHclTerraform(struct!.queryString),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsQueryString",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentials | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authorizationHeader?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authorizationHeader = this._authorizationHeader?.internalValue;
    }
    if (this._cookie?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cookie = this._cookie?.internalValue;
    }
    if (this._customHeader?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.customHeader = this._customHeader?.internalValue;
    }
    if (this._queryString?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryString = this._queryString?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentials | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authorizationHeader.internalValue = undefined;
      this._cookie.internalValue = undefined;
      this._customHeader.internalValue = undefined;
      this._queryString.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authorizationHeader.internalValue = value.authorizationHeader;
      this._cookie.internalValue = value.cookie;
      this._customHeader.internalValue = value.customHeader;
      this._queryString.internalValue = value.queryString;
    }
  }

  // authorization_header - computed: false, optional: true, required: false
  private _authorizationHeader = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsAuthorizationHeaderOutputReference(this, "authorization_header");
  public get authorizationHeader() {
    return this._authorizationHeader;
  }
  public putAuthorizationHeader(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsAuthorizationHeader) {
    this._authorizationHeader.internalValue = value;
  }
  public resetAuthorizationHeader() {
    this._authorizationHeader.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authorizationHeaderInput() {
    return this._authorizationHeader.internalValue;
  }

  // cookie - computed: false, optional: true, required: false
  private _cookie = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCookieOutputReference(this, "cookie");
  public get cookie() {
    return this._cookie;
  }
  public putCookie(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCookie) {
    this._cookie.internalValue = value;
  }
  public resetCookie() {
    this._cookie.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cookieInput() {
    return this._cookie.internalValue;
  }

  // custom_header - computed: false, optional: true, required: false
  private _customHeader = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCustomHeaderOutputReference(this, "custom_header");
  public get customHeader() {
    return this._customHeader;
  }
  public putCustomHeader(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsCustomHeader) {
    this._customHeader.internalValue = value;
  }
  public resetCustomHeader() {
    this._customHeader.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customHeaderInput() {
    return this._customHeader.internalValue;
  }

  // query_string - computed: false, optional: true, required: false
  private _queryString = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsQueryStringOutputReference(this, "query_string");
  public get queryString() {
    return this._queryString;
  }
  public putQueryString(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsQueryString) {
    this._queryString.internalValue = value;
  }
  public resetQueryString() {
    this._queryString.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryStringInput() {
    return this._queryString.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpHeaders {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpHeadersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpHeadersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ClientSecretRef {
  /**
  * The key of the secret to select from. Must be a valid secret key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key: string;
  /**
  * The name of the secret in the Authorino's namespace to select from.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ClientSecretRefToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ClientSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ClientSecretRefToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ClientSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ClientSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ClientSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ClientSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2 {
  /**
  * Caches and reuses the token until expired. Set it to false to force fetch the token at every authorization request regardless of expiration.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#cache DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#cache}
  */
  readonly cache?: boolean | cdktf.IResolvable;
  /**
  * OAuth2 Client ID.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#client_id DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#client_id}
  */
  readonly clientId: string;
  /**
  * Reference to a Kuberentes Secret key that stores that OAuth2 Client Secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#client_secret_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#client_secret_ref}
  */
  readonly clientSecretRef: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ClientSecretRef;
  /**
  * Optional extra parameters for the requests to the token URL.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#extra_params DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#extra_params}
  */
  readonly extraParams?: { [key: string]: string };
  /**
  * Optional scopes for the client credentials grant, if supported by he OAuth2 server.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#scopes DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#scopes}
  */
  readonly scopes?: string[];
  /**
  * Token endpoint URL of the OAuth2 resource server.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#token_url DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#token_url}
  */
  readonly tokenUrl: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cache: cdktf.booleanToTerraform(struct!.cache),
    client_id: cdktf.stringToTerraform(struct!.clientId),
    client_secret_ref: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ClientSecretRefToTerraform(struct!.clientSecretRef),
    extra_params: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.extraParams),
    scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.scopes),
    token_url: cdktf.stringToTerraform(struct!.tokenUrl),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cache: {
      value: cdktf.booleanToHclTerraform(struct!.cache),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    client_id: {
      value: cdktf.stringToHclTerraform(struct!.clientId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_secret_ref: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ClientSecretRefToHclTerraform(struct!.clientSecretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ClientSecretRef",
    },
    extra_params: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.extraParams),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    scopes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.scopes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    token_url: {
      value: cdktf.stringToHclTerraform(struct!.tokenUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2OutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2 | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cache !== undefined) {
      hasAnyValues = true;
      internalValueResult.cache = this._cache;
    }
    if (this._clientId !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientId = this._clientId;
    }
    if (this._clientSecretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientSecretRef = this._clientSecretRef?.internalValue;
    }
    if (this._extraParams !== undefined) {
      hasAnyValues = true;
      internalValueResult.extraParams = this._extraParams;
    }
    if (this._scopes !== undefined) {
      hasAnyValues = true;
      internalValueResult.scopes = this._scopes;
    }
    if (this._tokenUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenUrl = this._tokenUrl;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2 | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cache = undefined;
      this._clientId = undefined;
      this._clientSecretRef.internalValue = undefined;
      this._extraParams = undefined;
      this._scopes = undefined;
      this._tokenUrl = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cache = value.cache;
      this._clientId = value.clientId;
      this._clientSecretRef.internalValue = value.clientSecretRef;
      this._extraParams = value.extraParams;
      this._scopes = value.scopes;
      this._tokenUrl = value.tokenUrl;
    }
  }

  // cache - computed: false, optional: true, required: false
  private _cache?: boolean | cdktf.IResolvable; 
  public get cache() {
    return this.getBooleanAttribute('cache');
  }
  public set cache(value: boolean | cdktf.IResolvable) {
    this._cache = value;
  }
  public resetCache() {
    this._cache = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cacheInput() {
    return this._cache;
  }

  // client_id - computed: false, optional: false, required: true
  private _clientId?: string; 
  public get clientId() {
    return this.getStringAttribute('client_id');
  }
  public set clientId(value: string) {
    this._clientId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clientIdInput() {
    return this._clientId;
  }

  // client_secret_ref - computed: false, optional: false, required: true
  private _clientSecretRef = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ClientSecretRefOutputReference(this, "client_secret_ref");
  public get clientSecretRef() {
    return this._clientSecretRef;
  }
  public putClientSecretRef(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ClientSecretRef) {
    this._clientSecretRef.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clientSecretRefInput() {
    return this._clientSecretRef.internalValue;
  }

  // extra_params - computed: false, optional: true, required: false
  private _extraParams?: { [key: string]: string }; 
  public get extraParams() {
    return this.getStringMapAttribute('extra_params');
  }
  public set extraParams(value: { [key: string]: string }) {
    this._extraParams = value;
  }
  public resetExtraParams() {
    this._extraParams = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extraParamsInput() {
    return this._extraParams;
  }

  // scopes - computed: false, optional: true, required: false
  private _scopes?: string[]; 
  public get scopes() {
    return this.getListAttribute('scopes');
  }
  public set scopes(value: string[]) {
    this._scopes = value;
  }
  public resetScopes() {
    this._scopes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes;
  }

  // token_url - computed: false, optional: false, required: true
  private _tokenUrl?: string; 
  public get tokenUrl() {
    return this.getStringAttribute('token_url');
  }
  public set tokenUrl(value: string) {
    this._tokenUrl = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenUrlInput() {
    return this._tokenUrl;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpSharedSecretRef {
  /**
  * The key of the secret to select from. Must be a valid secret key.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key: string;
  /**
  * The name of the secret in the Authorino's namespace to select from.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpSharedSecretRefToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpSharedSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpSharedSecretRefToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpSharedSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpSharedSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpSharedSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpSharedSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttp {
  /**
  * Raw body of the HTTP request. Supersedes 'bodyParameters'; use either one or the other. Use it with method=POST; for GET requests, set parameters as query string in the 'endpoint' (placeholders can be used).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#body DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#body}
  */
  readonly body?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBody;
  /**
  * Custom parameters to encode in the body of the HTTP request. Superseded by 'body'; use either one or the other. Use it with method=POST; for GET requests, set parameters as query string in the 'endpoint' (placeholders can be used).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#body_parameters DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#body_parameters}
  */
  readonly bodyParameters?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyParameters;
  /**
  * Content-Type of the request body. Shapes how 'bodyParameters' are encoded. Use it with method=POST; for GET requests, Content-Type is automatically set to 'text/plain'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#content_type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#content_type}
  */
  readonly contentType?: string;
  /**
  * Defines where client credentials will be passed in the request to the service. If omitted, it defaults to client credentials passed in the HTTP Authorization header and the 'Bearer' prefix expected prepended to the secret value.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#credentials DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#credentials}
  */
  readonly credentials?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentials;
  /**
  * Custom headers in the HTTP request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#headers DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#headers}
  */
  readonly headers?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpHeaders;
  /**
  * HTTP verb used in the request to the service. Accepted values: GET (default), POST. When the request method is POST, the authorization JSON is passed in the body of the request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#method DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#method}
  */
  readonly method?: string;
  /**
  * Authentication with the HTTP service by OAuth2 Client Credentials grant.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#oauth2 DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#oauth2}
  */
  readonly oauth2?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2;
  /**
  * Reference to a Secret key whose value will be passed by Authorino in the request. The HTTP service can use the shared secret to authenticate the origin of the request. Ignored if used together with oauth2.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#shared_secret_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#shared_secret_ref}
  */
  readonly sharedSecretRef?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpSharedSecretRef;
  /**
  * Endpoint URL of the HTTP service. The value can include variable placeholders in the format '{selector}', where 'selector' is any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson and selects value from the authorization JSON. E.g. https://ext-auth-server.io/metadata?p={request.path}
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#url DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#url}
  */
  readonly url: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    body: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyToTerraform(struct!.body),
    body_parameters: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyParametersToTerraform(struct!.bodyParameters),
    content_type: cdktf.stringToTerraform(struct!.contentType),
    credentials: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsToTerraform(struct!.credentials),
    headers: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpHeadersToTerraform(struct!.headers),
    method: cdktf.stringToTerraform(struct!.method),
    oauth2: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ToTerraform(struct!.oauth2),
    shared_secret_ref: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpSharedSecretRefToTerraform(struct!.sharedSecretRef),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    body: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyToHclTerraform(struct!.body),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBody",
    },
    body_parameters: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyParametersToHclTerraform(struct!.bodyParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyParameters",
    },
    content_type: {
      value: cdktf.stringToHclTerraform(struct!.contentType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    credentials: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsToHclTerraform(struct!.credentials),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentials",
    },
    headers: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpHeadersToHclTerraform(struct!.headers),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpHeaders",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    oauth2: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2ToHclTerraform(struct!.oauth2),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2",
    },
    shared_secret_ref: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpSharedSecretRefToHclTerraform(struct!.sharedSecretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpSharedSecretRef",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._body?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.body = this._body?.internalValue;
    }
    if (this._bodyParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bodyParameters = this._bodyParameters?.internalValue;
    }
    if (this._contentType !== undefined) {
      hasAnyValues = true;
      internalValueResult.contentType = this._contentType;
    }
    if (this._credentials?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.credentials = this._credentials?.internalValue;
    }
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._oauth2?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.oauth2 = this._oauth2?.internalValue;
    }
    if (this._sharedSecretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sharedSecretRef = this._sharedSecretRef?.internalValue;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._body.internalValue = undefined;
      this._bodyParameters.internalValue = undefined;
      this._contentType = undefined;
      this._credentials.internalValue = undefined;
      this._headers.internalValue = undefined;
      this._method = undefined;
      this._oauth2.internalValue = undefined;
      this._sharedSecretRef.internalValue = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._body.internalValue = value.body;
      this._bodyParameters.internalValue = value.bodyParameters;
      this._contentType = value.contentType;
      this._credentials.internalValue = value.credentials;
      this._headers.internalValue = value.headers;
      this._method = value.method;
      this._oauth2.internalValue = value.oauth2;
      this._sharedSecretRef.internalValue = value.sharedSecretRef;
      this._url = value.url;
    }
  }

  // body - computed: false, optional: true, required: false
  private _body = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyOutputReference(this, "body");
  public get body() {
    return this._body;
  }
  public putBody(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBody) {
    this._body.internalValue = value;
  }
  public resetBody() {
    this._body.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bodyInput() {
    return this._body.internalValue;
  }

  // body_parameters - computed: false, optional: true, required: false
  private _bodyParameters = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyParametersOutputReference(this, "body_parameters");
  public get bodyParameters() {
    return this._bodyParameters;
  }
  public putBodyParameters(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpBodyParameters) {
    this._bodyParameters.internalValue = value;
  }
  public resetBodyParameters() {
    this._bodyParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bodyParametersInput() {
    return this._bodyParameters.internalValue;
  }

  // content_type - computed: false, optional: true, required: false
  private _contentType?: string; 
  public get contentType() {
    return this.getStringAttribute('content_type');
  }
  public set contentType(value: string) {
    this._contentType = value;
  }
  public resetContentType() {
    this._contentType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get contentTypeInput() {
    return this._contentType;
  }

  // credentials - computed: false, optional: true, required: false
  private _credentials = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentialsOutputReference(this, "credentials");
  public get credentials() {
    return this._credentials;
  }
  public putCredentials(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpCredentials) {
    this._credentials.internalValue = value;
  }
  public resetCredentials() {
    this._credentials.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get credentialsInput() {
    return this._credentials.internalValue;
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpHeadersOutputReference(this, "headers");
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpHeaders) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // oauth2 - computed: false, optional: true, required: false
  private _oauth2 = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2OutputReference(this, "oauth2");
  public get oauth2() {
    return this._oauth2;
  }
  public putOauth2(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOauth2) {
    this._oauth2.internalValue = value;
  }
  public resetOauth2() {
    this._oauth2.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get oauth2Input() {
    return this._oauth2.internalValue;
  }

  // shared_secret_ref - computed: false, optional: true, required: false
  private _sharedSecretRef = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpSharedSecretRefOutputReference(this, "shared_secret_ref");
  public get sharedSecretRef() {
    return this._sharedSecretRef;
  }
  public putSharedSecretRef(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpSharedSecretRef) {
    this._sharedSecretRef.internalValue = value;
  }
  public resetSharedSecretRef() {
    this._sharedSecretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sharedSecretRefInput() {
    return this._sharedSecretRef.internalValue;
  }

  // url - computed: false, optional: false, required: true
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeaders {
  /**
  * Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). If multiple entries specify equivalent header names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, 'foo' and 'Foo' are considered equivalent. When a header is repeated in an HTTP request, it is implementation-specific behavior as to how this is represented. Generally, proxies should follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding processing a repeated header, with special handling for 'Set-Cookie'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
  /**
  * Type specifies how to match against the value of the header. Support: Core (Exact) Support: Implementation-specific (RegularExpression) Since RegularExpression HeaderMatchType has implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value is the value of HTTP Header to be matched.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeadersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeadersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeadersOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesPath {
  /**
  * Type specifies how to match against the path Value. Support: Core (Exact, PathPrefix) Support: Implementation-specific (RegularExpression)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value of the HTTP path to match against.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesPathToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesPathToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParams {
  /**
  * Name is the name of the HTTP query param to be matched. This must be an exact string match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3). If multiple entries specify equivalent query param names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent query param name MUST be ignored. If a query param is repeated in an HTTP request, the behavior is purposely left undefined, since different data planes have different capabilities. However, it is *recommended* that implementations should match against the first value of the param if the data plane supports it, as this behavior is expected in other load balancing contexts outside of the Gateway API. Users SHOULD NOT route traffic based on repeated query params to guard themselves against potential differences in the implementations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
  /**
  * Type specifies how to match against the value of the query parameter. Support: Extended (Exact) Support: Implementation-specific (RegularExpression) Since RegularExpression QueryParamMatchType has Implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value is the value of HTTP query param to be matched.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParamsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParams | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParamsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParams | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParamsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParams | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParams | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParamsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParamsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParamsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatches {
  /**
  * Headers specifies HTTP request header matchers. Multiple match values are ANDed together, meaning, a request must match all the specified headers to select the route.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#headers DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#headers}
  */
  readonly headers?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeaders[] | cdktf.IResolvable;
  /**
  * Method specifies HTTP method matcher. When specified, this route will be matched only if the request has the specified method. Support: Extended
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#method DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#method}
  */
  readonly method?: string;
  /**
  * Path specifies a HTTP request path matcher. If this field is not specified, a default prefix match on the '/' path is provided.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#path DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#path}
  */
  readonly path?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesPath;
  /**
  * QueryParams specifies HTTP query parameter matchers. Multiple match values are ANDed together, meaning, a request must match all the specified query parameters to select the route. Support: Extended
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#query_params DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#query_params}
  */
  readonly queryParams?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    headers: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeadersToTerraform, false)(struct!.headers),
    method: cdktf.stringToTerraform(struct!.method),
    path: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesPathToTerraform(struct!.path),
    query_params: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParamsToTerraform, false)(struct!.queryParams),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    headers: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeadersList",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesPathToHclTerraform(struct!.path),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesPath",
    },
    query_params: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParamsToHclTerraform, false)(struct!.queryParams),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParamsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatches | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    if (this._queryParams?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryParams = this._queryParams?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatches | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._headers.internalValue = undefined;
      this._method = undefined;
      this._path.internalValue = undefined;
      this._queryParams.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._headers.internalValue = value.headers;
      this._method = value.method;
      this._path.internalValue = value.path;
      this._queryParams.internalValue = value.queryParams;
    }
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesPathOutputReference(this, "path");
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesPath) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }

  // query_params - computed: false, optional: true, required: false
  private _queryParams = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParamsList(this, "query_params", false);
  public get queryParams() {
    return this._queryParams;
  }
  public putQueryParams(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable) {
    this._queryParams.internalValue = value;
  }
  public resetQueryParams() {
    this._queryParams.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryParamsInput() {
    return this._queryParams.internalValue;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatches[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectors {
  /**
  * Hostnames defines a set of hostname that should match against the HTTP Host header to select a HTTPRoute to process the request https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteSpec
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#hostnames DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#hostnames}
  */
  readonly hostnames?: string[];
  /**
  * Matches define conditions used for matching the rule against incoming HTTP requests. https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteSpec
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#matches DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#matches}
  */
  readonly matches?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatches[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    hostnames: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.hostnames),
    matches: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesToTerraform, false)(struct!.matches),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    hostnames: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.hostnames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    matches: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesToHclTerraform, false)(struct!.matches),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._hostnames !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostnames = this._hostnames;
    }
    if (this._matches?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matches = this._matches?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._hostnames = undefined;
      this._matches.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._hostnames = value.hostnames;
      this._matches.internalValue = value.matches;
    }
  }

  // hostnames - computed: false, optional: true, required: false
  private _hostnames?: string[]; 
  public get hostnames() {
    return this.getListAttribute('hostnames');
  }
  public set hostnames(value: string[]) {
    this._hostnames = value;
  }
  public resetHostnames() {
    this._hostnames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnamesInput() {
    return this._hostnames;
  }

  // matches - computed: false, optional: true, required: false
  private _matches = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatchesList(this, "matches", false);
  public get matches() {
    return this._matches;
  }
  public putMatches(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsMatches[] | cdktf.IResolvable) {
    this._matches.internalValue = value;
  }
  public resetMatches() {
    this._matches.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchesInput() {
    return this._matches.internalValue;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaCredentialsRef {
  /**
  * Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop 'kubebuilder:default' when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaCredentialsRefToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaCredentialsRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaCredentialsRefToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaCredentialsRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaCredentialsRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaCredentialsRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaCredentialsRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUma {
  /**
  * Reference to a Kubernetes secret in the same namespace, that stores client credentials to the resource registration API of the UMA server.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#credentials_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#credentials_ref}
  */
  readonly credentialsRef: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaCredentialsRef;
  /**
  * The endpoint of the UMA server. The value must coincide with the 'issuer' claim of the UMA config discovered from the well-known uma configuration endpoint.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#endpoint DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#endpoint}
  */
  readonly endpoint: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUma | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    credentials_ref: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaCredentialsRefToTerraform(struct!.credentialsRef),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUma | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    credentials_ref: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaCredentialsRefToHclTerraform(struct!.credentialsRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaCredentialsRef",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUma | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._credentialsRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.credentialsRef = this._credentialsRef?.internalValue;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUma | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._credentialsRef.internalValue = undefined;
      this._endpoint = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._credentialsRef.internalValue = value.credentialsRef;
      this._endpoint = value.endpoint;
    }
  }

  // credentials_ref - computed: false, optional: false, required: true
  private _credentialsRef = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaCredentialsRefOutputReference(this, "credentials_ref");
  public get credentialsRef() {
    return this._credentialsRef;
  }
  public putCredentialsRef(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaCredentialsRef) {
    this._credentialsRef.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get credentialsRefInput() {
    return this._credentialsRef.internalValue;
  }

  // endpoint - computed: false, optional: false, required: true
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUserInfo {
  /**
  * The name of an OIDC-enabled JWT authentication config whose OpenID Connect configuration discovered includes the OIDC 'userinfo_endpoint' claim.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#identity_source DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#identity_source}
  */
  readonly identitySource: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUserInfoToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUserInfo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    identity_source: cdktf.stringToTerraform(struct!.identitySource),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUserInfoToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUserInfo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    identity_source: {
      value: cdktf.stringToHclTerraform(struct!.identitySource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUserInfoOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUserInfo | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._identitySource !== undefined) {
      hasAnyValues = true;
      internalValueResult.identitySource = this._identitySource;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUserInfo | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._identitySource = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._identitySource = value.identitySource;
    }
  }

  // identity_source - computed: false, optional: false, required: true
  private _identitySource?: string; 
  public get identitySource() {
    return this.getStringAttribute('identity_source');
  }
  public set identitySource(value: string) {
    this._identitySource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get identitySourceInput() {
    return this._identitySource;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhen {
  /**
  * A list of pattern expressions to be evaluated as a logical AND.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#all DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#all}
  */
  readonly all?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * A list of pattern expressions to be evaluated as a logical OR.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#any DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#any}
  */
  readonly any?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * The binary operator to be applied to the content fetched from the authorization JSON, for comparison with 'value'. Possible values are: 'eq' (equal to), 'neq' (not equal to), 'incl' (includes; for arrays), 'excl' (excludes; for arrays), 'matches' (regex)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#operator DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Reference to a named set of pattern expressions
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#pattern_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#pattern_ref}
  */
  readonly patternRef?: string;
  /**
  * Path selector to fetch content from the authorization JSON (e.g. 'request.method'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. Authorino custom JSON path modifiers are also supported.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * The value of reference for the comparison with the content fetched from the authorization JSON. If used with the 'matches' operator, the value must compile to a valid Golang regex.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhenToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhen | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    all: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.all),
    any: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.any),
    operator: cdktf.stringToTerraform(struct!.operator),
    pattern_ref: cdktf.stringToTerraform(struct!.patternRef),
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhenToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhen | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    all: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.all),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    any: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.any),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pattern_ref: {
      value: cdktf.stringToHclTerraform(struct!.patternRef),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhenOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhen | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._all !== undefined) {
      hasAnyValues = true;
      internalValueResult.all = this._all;
    }
    if (this._any !== undefined) {
      hasAnyValues = true;
      internalValueResult.any = this._any;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._patternRef !== undefined) {
      hasAnyValues = true;
      internalValueResult.patternRef = this._patternRef;
    }
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhen | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._all = undefined;
      this._any = undefined;
      this._operator = undefined;
      this._patternRef = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._all = value.all;
      this._any = value.any;
      this._operator = value.operator;
      this._patternRef = value.patternRef;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // all - computed: false, optional: true, required: false
  private _all?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get all() {
    return this.interpolationForAttribute('all');
  }
  public set all(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._all = value;
  }
  public resetAll() {
    this._all = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allInput() {
    return this._all;
  }

  // any - computed: false, optional: true, required: false
  private _any?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get any() {
    return this.interpolationForAttribute('any');
  }
  public set any(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._any = value;
  }
  public resetAny() {
    this._any = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get anyInput() {
    return this._any;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // pattern_ref - computed: false, optional: true, required: false
  private _patternRef?: string; 
  public get patternRef() {
    return this.getStringAttribute('pattern_ref');
  }
  public set patternRef(value: string) {
    this._patternRef = value;
  }
  public resetPatternRef() {
    this._patternRef = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternRefInput() {
    return this._patternRef;
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhenList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhen[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhenOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhenOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadata {
  /**
  * Caching options for the resolved object returned when applying this config. Omit it to avoid caching objects for this config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#cache DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#cache}
  */
  readonly cache?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCache;
  /**
  * External source of auth metadata via HTTP request
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#http DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#http}
  */
  readonly http?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttp;
  /**
  * Whether this config should generate individual observability metrics
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#metrics DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#metrics}
  */
  readonly metrics?: boolean | cdktf.IResolvable;
  /**
  * Priority group of the config. All configs in the same priority group are evaluated concurrently; consecutive priority groups are evaluated sequentially.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#priority DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#priority}
  */
  readonly priority?: number;
  /**
  * Top-level route selectors. If present, the elements will be used to select HTTPRoute rules that, when activated, trigger the auth rule. At least one selected HTTPRoute rule must match to trigger the auth rule. If no route selectors are specified, the auth rule will be evaluated at all requests to the protected routes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#route_selectors DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#route_selectors}
  */
  readonly routeSelectors?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectors[] | cdktf.IResolvable;
  /**
  * User-Managed Access (UMA) source of resource data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#uma DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#uma}
  */
  readonly uma?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUma;
  /**
  * OpendID Connect UserInfo linked to an OIDC authentication config specified in this same AuthConfig.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#user_info DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#user_info}
  */
  readonly userInfo?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUserInfo;
  /**
  * Conditions for Authorino to enforce this config. If omitted, the config will be enforced for all requests. If present, all conditions must match for the config to be enforced; otherwise, the config will be skipped.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#when DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#when}
  */
  readonly when?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhen[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cache: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheToTerraform(struct!.cache),
    http: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpToTerraform(struct!.http),
    metrics: cdktf.booleanToTerraform(struct!.metrics),
    priority: cdktf.numberToTerraform(struct!.priority),
    route_selectors: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsToTerraform, false)(struct!.routeSelectors),
    uma: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaToTerraform(struct!.uma),
    user_info: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUserInfoToTerraform(struct!.userInfo),
    when: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhenToTerraform, false)(struct!.when),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cache: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheToHclTerraform(struct!.cache),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCache",
    },
    http: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpToHclTerraform(struct!.http),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttp",
    },
    metrics: {
      value: cdktf.booleanToHclTerraform(struct!.metrics),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    route_selectors: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsToHclTerraform, false)(struct!.routeSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsList",
    },
    uma: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaToHclTerraform(struct!.uma),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUma",
    },
    user_info: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUserInfoToHclTerraform(struct!.userInfo),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUserInfo",
    },
    when: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhenToHclTerraform, false)(struct!.when),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhenList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cache?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cache = this._cache?.internalValue;
    }
    if (this._http?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.http = this._http?.internalValue;
    }
    if (this._metrics !== undefined) {
      hasAnyValues = true;
      internalValueResult.metrics = this._metrics;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._routeSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeSelectors = this._routeSelectors?.internalValue;
    }
    if (this._uma?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.uma = this._uma?.internalValue;
    }
    if (this._userInfo?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.userInfo = this._userInfo?.internalValue;
    }
    if (this._when?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.when = this._when?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cache.internalValue = undefined;
      this._http.internalValue = undefined;
      this._metrics = undefined;
      this._priority = undefined;
      this._routeSelectors.internalValue = undefined;
      this._uma.internalValue = undefined;
      this._userInfo.internalValue = undefined;
      this._when.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cache.internalValue = value.cache;
      this._http.internalValue = value.http;
      this._metrics = value.metrics;
      this._priority = value.priority;
      this._routeSelectors.internalValue = value.routeSelectors;
      this._uma.internalValue = value.uma;
      this._userInfo.internalValue = value.userInfo;
      this._when.internalValue = value.when;
    }
  }

  // cache - computed: false, optional: true, required: false
  private _cache = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCacheOutputReference(this, "cache");
  public get cache() {
    return this._cache;
  }
  public putCache(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataCache) {
    this._cache.internalValue = value;
  }
  public resetCache() {
    this._cache.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cacheInput() {
    return this._cache.internalValue;
  }

  // http - computed: false, optional: true, required: false
  private _http = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttpOutputReference(this, "http");
  public get http() {
    return this._http;
  }
  public putHttp(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataHttp) {
    this._http.internalValue = value;
  }
  public resetHttp() {
    this._http.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpInput() {
    return this._http.internalValue;
  }

  // metrics - computed: false, optional: true, required: false
  private _metrics?: boolean | cdktf.IResolvable; 
  public get metrics() {
    return this.getBooleanAttribute('metrics');
  }
  public set metrics(value: boolean | cdktf.IResolvable) {
    this._metrics = value;
  }
  public resetMetrics() {
    this._metrics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricsInput() {
    return this._metrics;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // route_selectors - computed: false, optional: true, required: false
  private _routeSelectors = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectorsList(this, "route_selectors", false);
  public get routeSelectors() {
    return this._routeSelectors;
  }
  public putRouteSelectors(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataRouteSelectors[] | cdktf.IResolvable) {
    this._routeSelectors.internalValue = value;
  }
  public resetRouteSelectors() {
    this._routeSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeSelectorsInput() {
    return this._routeSelectors.internalValue;
  }

  // uma - computed: false, optional: true, required: false
  private _uma = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUmaOutputReference(this, "uma");
  public get uma() {
    return this._uma;
  }
  public putUma(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUma) {
    this._uma.internalValue = value;
  }
  public resetUma() {
    this._uma.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get umaInput() {
    return this._uma.internalValue;
  }

  // user_info - computed: false, optional: true, required: false
  private _userInfo = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUserInfoOutputReference(this, "user_info");
  public get userInfo() {
    return this._userInfo;
  }
  public putUserInfo(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataUserInfo) {
    this._userInfo.internalValue = value;
  }
  public resetUserInfo() {
    this._userInfo.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInfoInput() {
    return this._userInfo.internalValue;
  }

  // when - computed: false, optional: true, required: false
  private _when = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhenList(this, "when", false);
  public get when() {
    return this._when;
  }
  public putWhen(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesMetadataWhen[] | cdktf.IResolvable) {
    this._when.internalValue = value;
  }
  public resetWhen() {
    this._when.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get whenInput() {
    return this._when.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheKey {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheKeyToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheKeyToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCache {
  /**
  * Key used to store the entry in the cache. The resolved key must be unique within the scope of this particular config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheKey;
  /**
  * Duration (in seconds) of the external data in the cache before pulled again from the source.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#ttl DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#ttl}
  */
  readonly ttl?: number;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCache | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheKeyToTerraform(struct!.key),
    ttl: cdktf.numberToTerraform(struct!.ttl),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCache | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheKeyToHclTerraform(struct!.key),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheKey",
    },
    ttl: {
      value: cdktf.numberToHclTerraform(struct!.ttl),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCache | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key?.internalValue;
    }
    if (this._ttl !== undefined) {
      hasAnyValues = true;
      internalValueResult.ttl = this._ttl;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCache | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key.internalValue = undefined;
      this._ttl = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key.internalValue = value.key;
      this._ttl = value.ttl;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheKeyOutputReference(this, "key");
  public get key() {
    return this._key;
  }
  public putKey(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheKey) {
    this._key.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key.internalValue;
  }

  // ttl - computed: false, optional: true, required: false
  private _ttl?: number; 
  public get ttl() {
    return this.getNumberAttribute('ttl');
  }
  public set ttl(value: number) {
    this._ttl = value;
  }
  public resetTtl() {
    this._ttl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ttlInput() {
    return this._ttl;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonProperties {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonPropertiesToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonProperties | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonPropertiesToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonProperties | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonPropertiesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonProperties | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonProperties | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJson {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#properties DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#properties}
  */
  readonly properties: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonProperties;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJson | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    properties: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonPropertiesToTerraform(struct!.properties),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJson | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    properties: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonPropertiesToHclTerraform(struct!.properties),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonProperties",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJson | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._properties?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.properties = this._properties?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJson | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._properties.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._properties.internalValue = value.properties;
    }
  }

  // properties - computed: false, optional: false, required: true
  private _properties = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonPropertiesOutputReference(this, "properties");
  public get properties() {
    return this._properties;
  }
  public putProperties(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonProperties) {
    this._properties.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get propertiesInput() {
    return this._properties.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataPlain {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataPlainToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataPlain | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataPlainToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataPlain | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataPlainOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataPlain | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataPlain | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeaders {
  /**
  * Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). If multiple entries specify equivalent header names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, 'foo' and 'Foo' are considered equivalent. When a header is repeated in an HTTP request, it is implementation-specific behavior as to how this is represented. Generally, proxies should follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding processing a repeated header, with special handling for 'Set-Cookie'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
  /**
  * Type specifies how to match against the value of the header. Support: Core (Exact) Support: Implementation-specific (RegularExpression) Since RegularExpression HeaderMatchType has implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value is the value of HTTP Header to be matched.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeadersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeadersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeadersOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesPath {
  /**
  * Type specifies how to match against the path Value. Support: Core (Exact, PathPrefix) Support: Implementation-specific (RegularExpression)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value of the HTTP path to match against.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesPathToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesPathToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParams {
  /**
  * Name is the name of the HTTP query param to be matched. This must be an exact string match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3). If multiple entries specify equivalent query param names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent query param name MUST be ignored. If a query param is repeated in an HTTP request, the behavior is purposely left undefined, since different data planes have different capabilities. However, it is *recommended* that implementations should match against the first value of the param if the data plane supports it, as this behavior is expected in other load balancing contexts outside of the Gateway API. Users SHOULD NOT route traffic based on repeated query params to guard themselves against potential differences in the implementations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
  /**
  * Type specifies how to match against the value of the query parameter. Support: Extended (Exact) Support: Implementation-specific (RegularExpression) Since RegularExpression QueryParamMatchType has Implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value is the value of HTTP query param to be matched.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParamsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParams | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParamsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParams | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParamsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParams | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParams | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParamsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParamsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParamsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatches {
  /**
  * Headers specifies HTTP request header matchers. Multiple match values are ANDed together, meaning, a request must match all the specified headers to select the route.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#headers DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#headers}
  */
  readonly headers?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeaders[] | cdktf.IResolvable;
  /**
  * Method specifies HTTP method matcher. When specified, this route will be matched only if the request has the specified method. Support: Extended
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#method DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#method}
  */
  readonly method?: string;
  /**
  * Path specifies a HTTP request path matcher. If this field is not specified, a default prefix match on the '/' path is provided.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#path DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#path}
  */
  readonly path?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesPath;
  /**
  * QueryParams specifies HTTP query parameter matchers. Multiple match values are ANDed together, meaning, a request must match all the specified query parameters to select the route. Support: Extended
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#query_params DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#query_params}
  */
  readonly queryParams?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    headers: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeadersToTerraform, false)(struct!.headers),
    method: cdktf.stringToTerraform(struct!.method),
    path: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesPathToTerraform(struct!.path),
    query_params: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParamsToTerraform, false)(struct!.queryParams),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    headers: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeadersList",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesPathToHclTerraform(struct!.path),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesPath",
    },
    query_params: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParamsToHclTerraform, false)(struct!.queryParams),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParamsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatches | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    if (this._queryParams?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryParams = this._queryParams?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatches | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._headers.internalValue = undefined;
      this._method = undefined;
      this._path.internalValue = undefined;
      this._queryParams.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._headers.internalValue = value.headers;
      this._method = value.method;
      this._path.internalValue = value.path;
      this._queryParams.internalValue = value.queryParams;
    }
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesPathOutputReference(this, "path");
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesPath) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }

  // query_params - computed: false, optional: true, required: false
  private _queryParams = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParamsList(this, "query_params", false);
  public get queryParams() {
    return this._queryParams;
  }
  public putQueryParams(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable) {
    this._queryParams.internalValue = value;
  }
  public resetQueryParams() {
    this._queryParams.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryParamsInput() {
    return this._queryParams.internalValue;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatches[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectors {
  /**
  * Hostnames defines a set of hostname that should match against the HTTP Host header to select a HTTPRoute to process the request https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteSpec
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#hostnames DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#hostnames}
  */
  readonly hostnames?: string[];
  /**
  * Matches define conditions used for matching the rule against incoming HTTP requests. https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteSpec
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#matches DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#matches}
  */
  readonly matches?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatches[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    hostnames: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.hostnames),
    matches: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesToTerraform, false)(struct!.matches),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    hostnames: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.hostnames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    matches: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesToHclTerraform, false)(struct!.matches),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._hostnames !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostnames = this._hostnames;
    }
    if (this._matches?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matches = this._matches?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._hostnames = undefined;
      this._matches.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._hostnames = value.hostnames;
      this._matches.internalValue = value.matches;
    }
  }

  // hostnames - computed: false, optional: true, required: false
  private _hostnames?: string[]; 
  public get hostnames() {
    return this.getListAttribute('hostnames');
  }
  public set hostnames(value: string[]) {
    this._hostnames = value;
  }
  public resetHostnames() {
    this._hostnames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnamesInput() {
    return this._hostnames;
  }

  // matches - computed: false, optional: true, required: false
  private _matches = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatchesList(this, "matches", false);
  public get matches() {
    return this._matches;
  }
  public putMatches(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsMatches[] | cdktf.IResolvable) {
    this._matches.internalValue = value;
  }
  public resetMatches() {
    this._matches.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchesInput() {
    return this._matches.internalValue;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhen {
  /**
  * A list of pattern expressions to be evaluated as a logical AND.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#all DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#all}
  */
  readonly all?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * A list of pattern expressions to be evaluated as a logical OR.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#any DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#any}
  */
  readonly any?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * The binary operator to be applied to the content fetched from the authorization JSON, for comparison with 'value'. Possible values are: 'eq' (equal to), 'neq' (not equal to), 'incl' (includes; for arrays), 'excl' (excludes; for arrays), 'matches' (regex)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#operator DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Reference to a named set of pattern expressions
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#pattern_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#pattern_ref}
  */
  readonly patternRef?: string;
  /**
  * Path selector to fetch content from the authorization JSON (e.g. 'request.method'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. Authorino custom JSON path modifiers are also supported.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * The value of reference for the comparison with the content fetched from the authorization JSON. If used with the 'matches' operator, the value must compile to a valid Golang regex.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhenToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhen | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    all: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.all),
    any: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.any),
    operator: cdktf.stringToTerraform(struct!.operator),
    pattern_ref: cdktf.stringToTerraform(struct!.patternRef),
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhenToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhen | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    all: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.all),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    any: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.any),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pattern_ref: {
      value: cdktf.stringToHclTerraform(struct!.patternRef),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhenOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhen | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._all !== undefined) {
      hasAnyValues = true;
      internalValueResult.all = this._all;
    }
    if (this._any !== undefined) {
      hasAnyValues = true;
      internalValueResult.any = this._any;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._patternRef !== undefined) {
      hasAnyValues = true;
      internalValueResult.patternRef = this._patternRef;
    }
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhen | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._all = undefined;
      this._any = undefined;
      this._operator = undefined;
      this._patternRef = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._all = value.all;
      this._any = value.any;
      this._operator = value.operator;
      this._patternRef = value.patternRef;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // all - computed: false, optional: true, required: false
  private _all?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get all() {
    return this.interpolationForAttribute('all');
  }
  public set all(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._all = value;
  }
  public resetAll() {
    this._all = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allInput() {
    return this._all;
  }

  // any - computed: false, optional: true, required: false
  private _any?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get any() {
    return this.interpolationForAttribute('any');
  }
  public set any(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._any = value;
  }
  public resetAny() {
    this._any = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get anyInput() {
    return this._any;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // pattern_ref - computed: false, optional: true, required: false
  private _patternRef?: string; 
  public get patternRef() {
    return this.getStringAttribute('pattern_ref');
  }
  public set patternRef(value: string) {
    this._patternRef = value;
  }
  public resetPatternRef() {
    this._patternRef = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternRefInput() {
    return this._patternRef;
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhenList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhen[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhenOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhenOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandCustomClaims {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandCustomClaimsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandCustomClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandCustomClaimsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandCustomClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandCustomClaimsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandCustomClaims | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandCustomClaims | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefs {
  /**
  * Algorithm to sign the wristband token using the signing key provided
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#algorithm DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#algorithm}
  */
  readonly algorithm: string;
  /**
  * Name of the signing key. The value is used to reference the Kubernetes secret that stores the key and in the 'kid' claim of the wristband token header.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    algorithm: cdktf.stringToTerraform(struct!.algorithm),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    algorithm: {
      value: cdktf.stringToHclTerraform(struct!.algorithm),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._algorithm !== undefined) {
      hasAnyValues = true;
      internalValueResult.algorithm = this._algorithm;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._algorithm = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._algorithm = value.algorithm;
      this._name = value.name;
    }
  }

  // algorithm - computed: false, optional: false, required: true
  private _algorithm?: string; 
  public get algorithm() {
    return this.getStringAttribute('algorithm');
  }
  public set algorithm(value: string) {
    this._algorithm = value;
  }
  // Temporarily expose input value. Use with caution.
  public get algorithmInput() {
    return this._algorithm;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefs[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristband {
  /**
  * Any claims to be added to the wristband token apart from the standard JWT claims (iss, iat, exp) added by default.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#custom_claims DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#custom_claims}
  */
  readonly customClaims?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandCustomClaims;
  /**
  * The endpoint to the Authorino service that issues the wristband (format: <scheme>://<host>:<port>/<realm>, where <realm> = <namespace>/<authorino-auth-config-resource-name/wristband-config-name)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#issuer DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#issuer}
  */
  readonly issuer: string;
  /**
  * Reference by name to Kubernetes secrets and corresponding signing algorithms. The secrets must contain a 'key.pem' entry whose value is the signing key formatted as PEM.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#signing_key_refs DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#signing_key_refs}
  */
  readonly signingKeyRefs: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefs[] | cdktf.IResolvable;
  /**
  * Time span of the wristband token, in seconds.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#token_duration DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#token_duration}
  */
  readonly tokenDuration?: number;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristband | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_claims: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandCustomClaimsToTerraform(struct!.customClaims),
    issuer: cdktf.stringToTerraform(struct!.issuer),
    signing_key_refs: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefsToTerraform, false)(struct!.signingKeyRefs),
    token_duration: cdktf.numberToTerraform(struct!.tokenDuration),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristband | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_claims: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandCustomClaimsToHclTerraform(struct!.customClaims),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandCustomClaims",
    },
    issuer: {
      value: cdktf.stringToHclTerraform(struct!.issuer),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    signing_key_refs: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefsToHclTerraform, false)(struct!.signingKeyRefs),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefsList",
    },
    token_duration: {
      value: cdktf.numberToHclTerraform(struct!.tokenDuration),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristband | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customClaims?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.customClaims = this._customClaims?.internalValue;
    }
    if (this._issuer !== undefined) {
      hasAnyValues = true;
      internalValueResult.issuer = this._issuer;
    }
    if (this._signingKeyRefs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.signingKeyRefs = this._signingKeyRefs?.internalValue;
    }
    if (this._tokenDuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenDuration = this._tokenDuration;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristband | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customClaims.internalValue = undefined;
      this._issuer = undefined;
      this._signingKeyRefs.internalValue = undefined;
      this._tokenDuration = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customClaims.internalValue = value.customClaims;
      this._issuer = value.issuer;
      this._signingKeyRefs.internalValue = value.signingKeyRefs;
      this._tokenDuration = value.tokenDuration;
    }
  }

  // custom_claims - computed: false, optional: true, required: false
  private _customClaims = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandCustomClaimsOutputReference(this, "custom_claims");
  public get customClaims() {
    return this._customClaims;
  }
  public putCustomClaims(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandCustomClaims) {
    this._customClaims.internalValue = value;
  }
  public resetCustomClaims() {
    this._customClaims.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customClaimsInput() {
    return this._customClaims.internalValue;
  }

  // issuer - computed: false, optional: false, required: true
  private _issuer?: string; 
  public get issuer() {
    return this.getStringAttribute('issuer');
  }
  public set issuer(value: string) {
    this._issuer = value;
  }
  // Temporarily expose input value. Use with caution.
  public get issuerInput() {
    return this._issuer;
  }

  // signing_key_refs - computed: false, optional: false, required: true
  private _signingKeyRefs = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefsList(this, "signing_key_refs", false);
  public get signingKeyRefs() {
    return this._signingKeyRefs;
  }
  public putSigningKeyRefs(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandSigningKeyRefs[] | cdktf.IResolvable) {
    this._signingKeyRefs.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get signingKeyRefsInput() {
    return this._signingKeyRefs.internalValue;
  }

  // token_duration - computed: false, optional: true, required: false
  private _tokenDuration?: number; 
  public get tokenDuration() {
    return this.getNumberAttribute('token_duration');
  }
  public set tokenDuration(value: number) {
    this._tokenDuration = value;
  }
  public resetTokenDuration() {
    this._tokenDuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenDurationInput() {
    return this._tokenDuration;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadata {
  /**
  * Caching options for the resolved object returned when applying this config. Omit it to avoid caching objects for this config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#cache DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#cache}
  */
  readonly cache?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCache;
  /**
  * JSON object Specify it as the list of properties of the object, whose values can combine static values and values selected from the authorization JSON.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#json DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#json}
  */
  readonly json?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJson;
  /**
  * The key used to add the custom response item (name of the HTTP header or root property of the Dynamic Metadata object). If omitted, it will be set to the name of the response config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key?: string;
  /**
  * Whether this config should generate individual observability metrics
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#metrics DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#metrics}
  */
  readonly metrics?: boolean | cdktf.IResolvable;
  /**
  * Plain text content
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#plain DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#plain}
  */
  readonly plain?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataPlain;
  /**
  * Priority group of the config. All configs in the same priority group are evaluated concurrently; consecutive priority groups are evaluated sequentially.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#priority DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#priority}
  */
  readonly priority?: number;
  /**
  * Top-level route selectors. If present, the elements will be used to select HTTPRoute rules that, when activated, trigger the auth rule. At least one selected HTTPRoute rule must match to trigger the auth rule. If no route selectors are specified, the auth rule will be evaluated at all requests to the protected routes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#route_selectors DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#route_selectors}
  */
  readonly routeSelectors?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectors[] | cdktf.IResolvable;
  /**
  * Conditions for Authorino to enforce this config. If omitted, the config will be enforced for all requests. If present, all conditions must match for the config to be enforced; otherwise, the config will be skipped.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#when DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#when}
  */
  readonly when?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhen[] | cdktf.IResolvable;
  /**
  * Authorino Festival Wristband token
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#wristband DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#wristband}
  */
  readonly wristband?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristband;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cache: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheToTerraform(struct!.cache),
    json: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonToTerraform(struct!.json),
    key: cdktf.stringToTerraform(struct!.key),
    metrics: cdktf.booleanToTerraform(struct!.metrics),
    plain: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataPlainToTerraform(struct!.plain),
    priority: cdktf.numberToTerraform(struct!.priority),
    route_selectors: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsToTerraform, false)(struct!.routeSelectors),
    when: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhenToTerraform, false)(struct!.when),
    wristband: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandToTerraform(struct!.wristband),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cache: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheToHclTerraform(struct!.cache),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCache",
    },
    json: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonToHclTerraform(struct!.json),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJson",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metrics: {
      value: cdktf.booleanToHclTerraform(struct!.metrics),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    plain: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataPlainToHclTerraform(struct!.plain),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataPlain",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    route_selectors: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsToHclTerraform, false)(struct!.routeSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsList",
    },
    when: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhenToHclTerraform, false)(struct!.when),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhenList",
    },
    wristband: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandToHclTerraform(struct!.wristband),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristband",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cache?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cache = this._cache?.internalValue;
    }
    if (this._json?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.json = this._json?.internalValue;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._metrics !== undefined) {
      hasAnyValues = true;
      internalValueResult.metrics = this._metrics;
    }
    if (this._plain?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.plain = this._plain?.internalValue;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._routeSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeSelectors = this._routeSelectors?.internalValue;
    }
    if (this._when?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.when = this._when?.internalValue;
    }
    if (this._wristband?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.wristband = this._wristband?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cache.internalValue = undefined;
      this._json.internalValue = undefined;
      this._key = undefined;
      this._metrics = undefined;
      this._plain.internalValue = undefined;
      this._priority = undefined;
      this._routeSelectors.internalValue = undefined;
      this._when.internalValue = undefined;
      this._wristband.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cache.internalValue = value.cache;
      this._json.internalValue = value.json;
      this._key = value.key;
      this._metrics = value.metrics;
      this._plain.internalValue = value.plain;
      this._priority = value.priority;
      this._routeSelectors.internalValue = value.routeSelectors;
      this._when.internalValue = value.when;
      this._wristband.internalValue = value.wristband;
    }
  }

  // cache - computed: false, optional: true, required: false
  private _cache = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCacheOutputReference(this, "cache");
  public get cache() {
    return this._cache;
  }
  public putCache(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataCache) {
    this._cache.internalValue = value;
  }
  public resetCache() {
    this._cache.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cacheInput() {
    return this._cache.internalValue;
  }

  // json - computed: false, optional: true, required: false
  private _json = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJsonOutputReference(this, "json");
  public get json() {
    return this._json;
  }
  public putJson(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataJson) {
    this._json.internalValue = value;
  }
  public resetJson() {
    this._json.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonInput() {
    return this._json.internalValue;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // metrics - computed: false, optional: true, required: false
  private _metrics?: boolean | cdktf.IResolvable; 
  public get metrics() {
    return this.getBooleanAttribute('metrics');
  }
  public set metrics(value: boolean | cdktf.IResolvable) {
    this._metrics = value;
  }
  public resetMetrics() {
    this._metrics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricsInput() {
    return this._metrics;
  }

  // plain - computed: false, optional: true, required: false
  private _plain = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataPlainOutputReference(this, "plain");
  public get plain() {
    return this._plain;
  }
  public putPlain(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataPlain) {
    this._plain.internalValue = value;
  }
  public resetPlain() {
    this._plain.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get plainInput() {
    return this._plain.internalValue;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // route_selectors - computed: false, optional: true, required: false
  private _routeSelectors = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectorsList(this, "route_selectors", false);
  public get routeSelectors() {
    return this._routeSelectors;
  }
  public putRouteSelectors(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataRouteSelectors[] | cdktf.IResolvable) {
    this._routeSelectors.internalValue = value;
  }
  public resetRouteSelectors() {
    this._routeSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeSelectorsInput() {
    return this._routeSelectors.internalValue;
  }

  // when - computed: false, optional: true, required: false
  private _when = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhenList(this, "when", false);
  public get when() {
    return this._when;
  }
  public putWhen(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWhen[] | cdktf.IResolvable) {
    this._when.internalValue = value;
  }
  public resetWhen() {
    this._when.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get whenInput() {
    return this._when.internalValue;
  }

  // wristband - computed: false, optional: true, required: false
  private _wristband = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristbandOutputReference(this, "wristband");
  public get wristband() {
    return this._wristband;
  }
  public putWristband(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataWristband) {
    this._wristband.internalValue = value;
  }
  public resetWristband() {
    this._wristband.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get wristbandInput() {
    return this._wristband.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheKey {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheKeyToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheKeyToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCache {
  /**
  * Key used to store the entry in the cache. The resolved key must be unique within the scope of this particular config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheKey;
  /**
  * Duration (in seconds) of the external data in the cache before pulled again from the source.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#ttl DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#ttl}
  */
  readonly ttl?: number;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCache | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheKeyToTerraform(struct!.key),
    ttl: cdktf.numberToTerraform(struct!.ttl),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCache | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheKeyToHclTerraform(struct!.key),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheKey",
    },
    ttl: {
      value: cdktf.numberToHclTerraform(struct!.ttl),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCache | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key?.internalValue;
    }
    if (this._ttl !== undefined) {
      hasAnyValues = true;
      internalValueResult.ttl = this._ttl;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCache | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key.internalValue = undefined;
      this._ttl = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key.internalValue = value.key;
      this._ttl = value.ttl;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheKeyOutputReference(this, "key");
  public get key() {
    return this._key;
  }
  public putKey(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheKey) {
    this._key.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key.internalValue;
  }

  // ttl - computed: false, optional: true, required: false
  private _ttl?: number; 
  public get ttl() {
    return this.getNumberAttribute('ttl');
  }
  public set ttl(value: number) {
    this._ttl = value;
  }
  public resetTtl() {
    this._ttl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ttlInput() {
    return this._ttl;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonProperties {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonPropertiesToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonProperties | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonPropertiesToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonProperties | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonPropertiesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonProperties | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonProperties | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJson {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#properties DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#properties}
  */
  readonly properties: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonProperties;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJson | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    properties: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonPropertiesToTerraform(struct!.properties),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJson | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    properties: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonPropertiesToHclTerraform(struct!.properties),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonProperties",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJson | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._properties?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.properties = this._properties?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJson | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._properties.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._properties.internalValue = value.properties;
    }
  }

  // properties - computed: false, optional: false, required: true
  private _properties = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonPropertiesOutputReference(this, "properties");
  public get properties() {
    return this._properties;
  }
  public putProperties(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonProperties) {
    this._properties.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get propertiesInput() {
    return this._properties.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersPlain {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersPlainToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersPlain | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersPlainToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersPlain | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersPlainOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersPlain | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersPlain | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeaders {
  /**
  * Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). If multiple entries specify equivalent header names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, 'foo' and 'Foo' are considered equivalent. When a header is repeated in an HTTP request, it is implementation-specific behavior as to how this is represented. Generally, proxies should follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding processing a repeated header, with special handling for 'Set-Cookie'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
  /**
  * Type specifies how to match against the value of the header. Support: Core (Exact) Support: Implementation-specific (RegularExpression) Since RegularExpression HeaderMatchType has implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value is the value of HTTP Header to be matched.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeadersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeadersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeadersOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesPath {
  /**
  * Type specifies how to match against the path Value. Support: Core (Exact, PathPrefix) Support: Implementation-specific (RegularExpression)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value of the HTTP path to match against.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesPathToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesPathToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParams {
  /**
  * Name is the name of the HTTP query param to be matched. This must be an exact string match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3). If multiple entries specify equivalent query param names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent query param name MUST be ignored. If a query param is repeated in an HTTP request, the behavior is purposely left undefined, since different data planes have different capabilities. However, it is *recommended* that implementations should match against the first value of the param if the data plane supports it, as this behavior is expected in other load balancing contexts outside of the Gateway API. Users SHOULD NOT route traffic based on repeated query params to guard themselves against potential differences in the implementations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
  /**
  * Type specifies how to match against the value of the query parameter. Support: Extended (Exact) Support: Implementation-specific (RegularExpression) Since RegularExpression QueryParamMatchType has Implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#type DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#type}
  */
  readonly type?: string;
  /**
  * Value is the value of HTTP query param to be matched.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParamsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParams | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParamsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParams | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParamsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParams | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParams | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParamsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParamsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParamsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatches {
  /**
  * Headers specifies HTTP request header matchers. Multiple match values are ANDed together, meaning, a request must match all the specified headers to select the route.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#headers DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#headers}
  */
  readonly headers?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeaders[] | cdktf.IResolvable;
  /**
  * Method specifies HTTP method matcher. When specified, this route will be matched only if the request has the specified method. Support: Extended
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#method DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#method}
  */
  readonly method?: string;
  /**
  * Path specifies a HTTP request path matcher. If this field is not specified, a default prefix match on the '/' path is provided.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#path DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#path}
  */
  readonly path?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesPath;
  /**
  * QueryParams specifies HTTP query parameter matchers. Multiple match values are ANDed together, meaning, a request must match all the specified query parameters to select the route. Support: Extended
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#query_params DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#query_params}
  */
  readonly queryParams?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    headers: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeadersToTerraform, false)(struct!.headers),
    method: cdktf.stringToTerraform(struct!.method),
    path: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesPathToTerraform(struct!.path),
    query_params: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParamsToTerraform, false)(struct!.queryParams),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    headers: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeadersList",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesPathToHclTerraform(struct!.path),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesPath",
    },
    query_params: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParamsToHclTerraform, false)(struct!.queryParams),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParamsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatches | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    if (this._queryParams?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryParams = this._queryParams?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatches | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._headers.internalValue = undefined;
      this._method = undefined;
      this._path.internalValue = undefined;
      this._queryParams.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._headers.internalValue = value.headers;
      this._method = value.method;
      this._path.internalValue = value.path;
      this._queryParams.internalValue = value.queryParams;
    }
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesPathOutputReference(this, "path");
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesPath) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }

  // query_params - computed: false, optional: true, required: false
  private _queryParams = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParamsList(this, "query_params", false);
  public get queryParams() {
    return this._queryParams;
  }
  public putQueryParams(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesQueryParams[] | cdktf.IResolvable) {
    this._queryParams.internalValue = value;
  }
  public resetQueryParams() {
    this._queryParams.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryParamsInput() {
    return this._queryParams.internalValue;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatches[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectors {
  /**
  * Hostnames defines a set of hostname that should match against the HTTP Host header to select a HTTPRoute to process the request https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteSpec
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#hostnames DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#hostnames}
  */
  readonly hostnames?: string[];
  /**
  * Matches define conditions used for matching the rule against incoming HTTP requests. https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteSpec
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#matches DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#matches}
  */
  readonly matches?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatches[] | cdktf.IResolvable;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    hostnames: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.hostnames),
    matches: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesToTerraform, false)(struct!.matches),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    hostnames: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.hostnames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    matches: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesToHclTerraform, false)(struct!.matches),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._hostnames !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostnames = this._hostnames;
    }
    if (this._matches?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matches = this._matches?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._hostnames = undefined;
      this._matches.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._hostnames = value.hostnames;
      this._matches.internalValue = value.matches;
    }
  }

  // hostnames - computed: false, optional: true, required: false
  private _hostnames?: string[]; 
  public get hostnames() {
    return this.getListAttribute('hostnames');
  }
  public set hostnames(value: string[]) {
    this._hostnames = value;
  }
  public resetHostnames() {
    this._hostnames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnamesInput() {
    return this._hostnames;
  }

  // matches - computed: false, optional: true, required: false
  private _matches = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatchesList(this, "matches", false);
  public get matches() {
    return this._matches;
  }
  public putMatches(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsMatches[] | cdktf.IResolvable) {
    this._matches.internalValue = value;
  }
  public resetMatches() {
    this._matches.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchesInput() {
    return this._matches.internalValue;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhen {
  /**
  * A list of pattern expressions to be evaluated as a logical AND.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#all DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#all}
  */
  readonly all?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * A list of pattern expressions to be evaluated as a logical OR.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#any DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#any}
  */
  readonly any?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * The binary operator to be applied to the content fetched from the authorization JSON, for comparison with 'value'. Possible values are: 'eq' (equal to), 'neq' (not equal to), 'incl' (includes; for arrays), 'excl' (excludes; for arrays), 'matches' (regex)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#operator DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Reference to a named set of pattern expressions
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#pattern_ref DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#pattern_ref}
  */
  readonly patternRef?: string;
  /**
  * Path selector to fetch content from the authorization JSON (e.g. 'request.method'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. Authorino custom JSON path modifiers are also supported.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * The value of reference for the comparison with the content fetched from the authorization JSON. If used with the 'matches' operator, the value must compile to a valid Golang regex.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhenToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhen | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    all: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.all),
    any: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.any),
    operator: cdktf.stringToTerraform(struct!.operator),
    pattern_ref: cdktf.stringToTerraform(struct!.patternRef),
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhenToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhen | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    all: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.all),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    any: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.any),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pattern_ref: {
      value: cdktf.stringToHclTerraform(struct!.patternRef),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhenOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhen | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._all !== undefined) {
      hasAnyValues = true;
      internalValueResult.all = this._all;
    }
    if (this._any !== undefined) {
      hasAnyValues = true;
      internalValueResult.any = this._any;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._patternRef !== undefined) {
      hasAnyValues = true;
      internalValueResult.patternRef = this._patternRef;
    }
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhen | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._all = undefined;
      this._any = undefined;
      this._operator = undefined;
      this._patternRef = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._all = value.all;
      this._any = value.any;
      this._operator = value.operator;
      this._patternRef = value.patternRef;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // all - computed: false, optional: true, required: false
  private _all?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get all() {
    return this.interpolationForAttribute('all');
  }
  public set all(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._all = value;
  }
  public resetAll() {
    this._all = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allInput() {
    return this._all;
  }

  // any - computed: false, optional: true, required: false
  private _any?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get any() {
    return this.interpolationForAttribute('any');
  }
  public set any(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._any = value;
  }
  public resetAny() {
    this._any = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get anyInput() {
    return this._any;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // pattern_ref - computed: false, optional: true, required: false
  private _patternRef?: string; 
  public get patternRef() {
    return this.getStringAttribute('pattern_ref');
  }
  public set patternRef(value: string) {
    this._patternRef = value;
  }
  public resetPatternRef() {
    this._patternRef = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternRefInput() {
    return this._patternRef;
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhenList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhen[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhenOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhenOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandCustomClaims {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandCustomClaimsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandCustomClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandCustomClaimsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandCustomClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandCustomClaimsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandCustomClaims | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandCustomClaims | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefs {
  /**
  * Algorithm to sign the wristband token using the signing key provided
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#algorithm DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#algorithm}
  */
  readonly algorithm: string;
  /**
  * Name of the signing key. The value is used to reference the Kubernetes secret that stores the key and in the 'kid' claim of the wristband token header.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#name DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#name}
  */
  readonly name: string;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefsToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    algorithm: cdktf.stringToTerraform(struct!.algorithm),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefsToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    algorithm: {
      value: cdktf.stringToHclTerraform(struct!.algorithm),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._algorithm !== undefined) {
      hasAnyValues = true;
      internalValueResult.algorithm = this._algorithm;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._algorithm = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._algorithm = value.algorithm;
      this._name = value.name;
    }
  }

  // algorithm - computed: false, optional: false, required: true
  private _algorithm?: string; 
  public get algorithm() {
    return this.getStringAttribute('algorithm');
  }
  public set algorithm(value: string) {
    this._algorithm = value;
  }
  // Temporarily expose input value. Use with caution.
  public get algorithmInput() {
    return this._algorithm;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefsList extends cdktf.ComplexList {
  public internalValue? : DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefs[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefsOutputReference {
    return new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristband {
  /**
  * Any claims to be added to the wristband token apart from the standard JWT claims (iss, iat, exp) added by default.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#custom_claims DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#custom_claims}
  */
  readonly customClaims?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandCustomClaims;
  /**
  * The endpoint to the Authorino service that issues the wristband (format: <scheme>://<host>:<port>/<realm>, where <realm> = <namespace>/<authorino-auth-config-resource-name/wristband-config-name)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#issuer DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#issuer}
  */
  readonly issuer: string;
  /**
  * Reference by name to Kubernetes secrets and corresponding signing algorithms. The secrets must contain a 'key.pem' entry whose value is the signing key formatted as PEM.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#signing_key_refs DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#signing_key_refs}
  */
  readonly signingKeyRefs: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefs[] | cdktf.IResolvable;
  /**
  * Time span of the wristband token, in seconds.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#token_duration DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#token_duration}
  */
  readonly tokenDuration?: number;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristband | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    custom_claims: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandCustomClaimsToTerraform(struct!.customClaims),
    issuer: cdktf.stringToTerraform(struct!.issuer),
    signing_key_refs: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefsToTerraform, false)(struct!.signingKeyRefs),
    token_duration: cdktf.numberToTerraform(struct!.tokenDuration),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristband | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    custom_claims: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandCustomClaimsToHclTerraform(struct!.customClaims),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandCustomClaims",
    },
    issuer: {
      value: cdktf.stringToHclTerraform(struct!.issuer),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    signing_key_refs: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefsToHclTerraform, false)(struct!.signingKeyRefs),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefsList",
    },
    token_duration: {
      value: cdktf.numberToHclTerraform(struct!.tokenDuration),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristband | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._customClaims?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.customClaims = this._customClaims?.internalValue;
    }
    if (this._issuer !== undefined) {
      hasAnyValues = true;
      internalValueResult.issuer = this._issuer;
    }
    if (this._signingKeyRefs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.signingKeyRefs = this._signingKeyRefs?.internalValue;
    }
    if (this._tokenDuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenDuration = this._tokenDuration;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristband | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._customClaims.internalValue = undefined;
      this._issuer = undefined;
      this._signingKeyRefs.internalValue = undefined;
      this._tokenDuration = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._customClaims.internalValue = value.customClaims;
      this._issuer = value.issuer;
      this._signingKeyRefs.internalValue = value.signingKeyRefs;
      this._tokenDuration = value.tokenDuration;
    }
  }

  // custom_claims - computed: false, optional: true, required: false
  private _customClaims = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandCustomClaimsOutputReference(this, "custom_claims");
  public get customClaims() {
    return this._customClaims;
  }
  public putCustomClaims(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandCustomClaims) {
    this._customClaims.internalValue = value;
  }
  public resetCustomClaims() {
    this._customClaims.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customClaimsInput() {
    return this._customClaims.internalValue;
  }

  // issuer - computed: false, optional: false, required: true
  private _issuer?: string; 
  public get issuer() {
    return this.getStringAttribute('issuer');
  }
  public set issuer(value: string) {
    this._issuer = value;
  }
  // Temporarily expose input value. Use with caution.
  public get issuerInput() {
    return this._issuer;
  }

  // signing_key_refs - computed: false, optional: false, required: true
  private _signingKeyRefs = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefsList(this, "signing_key_refs", false);
  public get signingKeyRefs() {
    return this._signingKeyRefs;
  }
  public putSigningKeyRefs(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandSigningKeyRefs[] | cdktf.IResolvable) {
    this._signingKeyRefs.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get signingKeyRefsInput() {
    return this._signingKeyRefs.internalValue;
  }

  // token_duration - computed: false, optional: true, required: false
  private _tokenDuration?: number; 
  public get tokenDuration() {
    return this.getNumberAttribute('token_duration');
  }
  public set tokenDuration(value: number) {
    this._tokenDuration = value;
  }
  public resetTokenDuration() {
    this._tokenDuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenDurationInput() {
    return this._tokenDuration;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeaders {
  /**
  * Caching options for the resolved object returned when applying this config. Omit it to avoid caching objects for this config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#cache DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#cache}
  */
  readonly cache?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCache;
  /**
  * JSON object Specify it as the list of properties of the object, whose values can combine static values and values selected from the authorization JSON.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#json DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#json}
  */
  readonly json?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJson;
  /**
  * The key used to add the custom response item (name of the HTTP header or root property of the Dynamic Metadata object). If omitted, it will be set to the name of the response config.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#key DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#key}
  */
  readonly key?: string;
  /**
  * Whether this config should generate individual observability metrics
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#metrics DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#metrics}
  */
  readonly metrics?: boolean | cdktf.IResolvable;
  /**
  * Plain text content
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#plain DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#plain}
  */
  readonly plain?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersPlain;
  /**
  * Priority group of the config. All configs in the same priority group are evaluated concurrently; consecutive priority groups are evaluated sequentially.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#priority DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#priority}
  */
  readonly priority?: number;
  /**
  * Top-level route selectors. If present, the elements will be used to select HTTPRoute rules that, when activated, trigger the auth rule. At least one selected HTTPRoute rule must match to trigger the auth rule. If no route selectors are specified, the auth rule will be evaluated at all requests to the protected routes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#route_selectors DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#route_selectors}
  */
  readonly routeSelectors?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectors[] | cdktf.IResolvable;
  /**
  * Conditions for Authorino to enforce this config. If omitted, the config will be enforced for all requests. If present, all conditions must match for the config to be enforced; otherwise, the config will be skipped.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#when DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#when}
  */
  readonly when?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhen[] | cdktf.IResolvable;
  /**
  * Authorino Festival Wristband token
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#wristband DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#wristband}
  */
  readonly wristband?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristband;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cache: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheToTerraform(struct!.cache),
    json: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonToTerraform(struct!.json),
    key: cdktf.stringToTerraform(struct!.key),
    metrics: cdktf.booleanToTerraform(struct!.metrics),
    plain: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersPlainToTerraform(struct!.plain),
    priority: cdktf.numberToTerraform(struct!.priority),
    route_selectors: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsToTerraform, false)(struct!.routeSelectors),
    when: cdktf.listMapper(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhenToTerraform, false)(struct!.when),
    wristband: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandToTerraform(struct!.wristband),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cache: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheToHclTerraform(struct!.cache),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCache",
    },
    json: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonToHclTerraform(struct!.json),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJson",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metrics: {
      value: cdktf.booleanToHclTerraform(struct!.metrics),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    plain: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersPlainToHclTerraform(struct!.plain),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersPlain",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    route_selectors: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsToHclTerraform, false)(struct!.routeSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsList",
    },
    when: {
      value: cdktf.listMapperHcl(dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhenToHclTerraform, false)(struct!.when),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhenList",
    },
    wristband: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandToHclTerraform(struct!.wristband),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristband",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cache?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cache = this._cache?.internalValue;
    }
    if (this._json?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.json = this._json?.internalValue;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._metrics !== undefined) {
      hasAnyValues = true;
      internalValueResult.metrics = this._metrics;
    }
    if (this._plain?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.plain = this._plain?.internalValue;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._routeSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.routeSelectors = this._routeSelectors?.internalValue;
    }
    if (this._when?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.when = this._when?.internalValue;
    }
    if (this._wristband?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.wristband = this._wristband?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cache.internalValue = undefined;
      this._json.internalValue = undefined;
      this._key = undefined;
      this._metrics = undefined;
      this._plain.internalValue = undefined;
      this._priority = undefined;
      this._routeSelectors.internalValue = undefined;
      this._when.internalValue = undefined;
      this._wristband.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cache.internalValue = value.cache;
      this._json.internalValue = value.json;
      this._key = value.key;
      this._metrics = value.metrics;
      this._plain.internalValue = value.plain;
      this._priority = value.priority;
      this._routeSelectors.internalValue = value.routeSelectors;
      this._when.internalValue = value.when;
      this._wristband.internalValue = value.wristband;
    }
  }

  // cache - computed: false, optional: true, required: false
  private _cache = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCacheOutputReference(this, "cache");
  public get cache() {
    return this._cache;
  }
  public putCache(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersCache) {
    this._cache.internalValue = value;
  }
  public resetCache() {
    this._cache.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cacheInput() {
    return this._cache.internalValue;
  }

  // json - computed: false, optional: true, required: false
  private _json = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJsonOutputReference(this, "json");
  public get json() {
    return this._json;
  }
  public putJson(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersJson) {
    this._json.internalValue = value;
  }
  public resetJson() {
    this._json.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonInput() {
    return this._json.internalValue;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // metrics - computed: false, optional: true, required: false
  private _metrics?: boolean | cdktf.IResolvable; 
  public get metrics() {
    return this.getBooleanAttribute('metrics');
  }
  public set metrics(value: boolean | cdktf.IResolvable) {
    this._metrics = value;
  }
  public resetMetrics() {
    this._metrics = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metricsInput() {
    return this._metrics;
  }

  // plain - computed: false, optional: true, required: false
  private _plain = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersPlainOutputReference(this, "plain");
  public get plain() {
    return this._plain;
  }
  public putPlain(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersPlain) {
    this._plain.internalValue = value;
  }
  public resetPlain() {
    this._plain.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get plainInput() {
    return this._plain.internalValue;
  }

  // priority - computed: false, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // route_selectors - computed: false, optional: true, required: false
  private _routeSelectors = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectorsList(this, "route_selectors", false);
  public get routeSelectors() {
    return this._routeSelectors;
  }
  public putRouteSelectors(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersRouteSelectors[] | cdktf.IResolvable) {
    this._routeSelectors.internalValue = value;
  }
  public resetRouteSelectors() {
    this._routeSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeSelectorsInput() {
    return this._routeSelectors.internalValue;
  }

  // when - computed: false, optional: true, required: false
  private _when = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhenList(this, "when", false);
  public get when() {
    return this._when;
  }
  public putWhen(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWhen[] | cdktf.IResolvable) {
    this._when.internalValue = value;
  }
  public resetWhen() {
    this._when.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get whenInput() {
    return this._when.internalValue;
  }

  // wristband - computed: false, optional: true, required: false
  private _wristband = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristbandOutputReference(this, "wristband");
  public get wristband() {
    return this._wristband;
  }
  public putWristband(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersWristband) {
    this._wristband.internalValue = value;
  }
  public resetWristband() {
    this._wristband.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get wristbandInput() {
    return this._wristband.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccess {
  /**
  * Custom success response items wrapped as HTTP headers. For integration of Authorino via proxy, the proxy must use these settings to propagate dynamic metadata. See https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#dynamic_metadata DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#dynamic_metadata}
  */
  readonly dynamicMetadata?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadata;
  /**
  * Custom success response items wrapped as HTTP headers. For integration of Authorino via proxy, the proxy must use these settings to inject data in the request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#headers DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#headers}
  */
  readonly headers?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeaders;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccess | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dynamic_metadata: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataToTerraform(struct!.dynamicMetadata),
    headers: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersToTerraform(struct!.headers),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccess | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dynamic_metadata: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataToHclTerraform(struct!.dynamicMetadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadata",
    },
    headers: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersToHclTerraform(struct!.headers),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeaders",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccess | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dynamicMetadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dynamicMetadata = this._dynamicMetadata?.internalValue;
    }
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccess | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dynamicMetadata.internalValue = undefined;
      this._headers.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dynamicMetadata.internalValue = value.dynamicMetadata;
      this._headers.internalValue = value.headers;
    }
  }

  // dynamic_metadata - computed: false, optional: true, required: false
  private _dynamicMetadata = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadataOutputReference(this, "dynamic_metadata");
  public get dynamicMetadata() {
    return this._dynamicMetadata;
  }
  public putDynamicMetadata(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessDynamicMetadata) {
    this._dynamicMetadata.internalValue = value;
  }
  public resetDynamicMetadata() {
    this._dynamicMetadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dynamicMetadataInput() {
    return this._dynamicMetadata.internalValue;
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeadersOutputReference(this, "headers");
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseSuccessHeaders) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedBody {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedBodyToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedBody | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedBodyToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedBody | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedBodyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedBody | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedBody | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedHeaders {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedHeadersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedHeadersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedMessage {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedMessageToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedMessage | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedMessageToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedMessage | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedMessageOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedMessage | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedMessage | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticated {
  /**
  * HTTP response body to override the default denial body.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#body DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#body}
  */
  readonly body?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedBody;
  /**
  * HTTP status code to override the default denial status code.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#code DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#code}
  */
  readonly code?: number;
  /**
  * HTTP response headers to override the default denial headers.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#headers DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#headers}
  */
  readonly headers?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedHeaders;
  /**
  * HTTP message to override the default denial message.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#message DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#message}
  */
  readonly message?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedMessage;
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticated | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    body: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedBodyToTerraform(struct!.body),
    code: cdktf.numberToTerraform(struct!.code),
    headers: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedHeadersToTerraform(struct!.headers),
    message: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedMessageToTerraform(struct!.message),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticated | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    body: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedBodyToHclTerraform(struct!.body),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedBody",
    },
    code: {
      value: cdktf.numberToHclTerraform(struct!.code),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    headers: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedHeadersToHclTerraform(struct!.headers),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedHeaders",
    },
    message: {
      value: dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedMessageToHclTerraform(struct!.message),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedMessage",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticated | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._body?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.body = this._body?.internalValue;
    }
    if (this._code !== undefined) {
      hasAnyValues = true;
      internalValueResult.code = this._code;
    }
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    if (this._message?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.message = this._message?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticated | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._body.internalValue = undefined;
      this._code = undefined;
      this._headers.internalValue = undefined;
      this._message.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._body.internalValue = value.body;
      this._code = value.code;
      this._headers.internalValue = value.headers;
      this._message.internalValue = value.message;
    }
  }

  // body - computed: false, optional: true, required: false
  private _body = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedBodyOutputReference(this, "body");
  public get body() {
    return this._body;
  }
  public putBody(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedBody) {
    this._body.internalValue = value;
  }
  public resetBody() {
    this._body.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bodyInput() {
    return this._body.internalValue;
  }

  // code - computed: false, optional: true, required: false
  private _code?: number; 
  public get code() {
    return this.getNumberAttribute('code');
  }
  public set code(value: number) {
    this._code = value;
  }
  public resetCode() {
    this._code = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get codeInput() {
    return this._code;
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedHeadersOutputReference(this, "headers");
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedHeaders) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }

  // message - computed: false, optional: true, required: false
  private _message = new DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedMessageOutputReference(this, "message");
  public get message() {
    return this._message;
  }
  public putMessage(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthenticatedMessage) {
    this._message.internalValue = value;
  }
  public resetMessage() {
    this._message.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageInput() {
    return this._message.internalValue;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedBody {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedBodyToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedBody | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedBodyToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedBody | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedBodyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedBody | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedBody | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedHeaders {
  /**
  * Simple path selector to fetch content from the authorization JSON (e.g. 'request.method') or a string template with variables that resolve to patterns (e.g. 'Hello, {auth.identity.name}!'). Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson can be used. The following Authorino custom modifiers are supported: @extract:{sep:' ',pos:0}, @replace{old:'',new:''}, @case:upper|lower, @base64:encode|decode and @strip.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#selector DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#selector}
  */
  readonly selector?: string;
  /**
  * Static value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/kuadrant_io_auth_policy_v1beta2_manifest#value DataK8SKuadrantIoAuthPolicyV1Beta2Manifest#value}
  */
  readonly value?: { [key: string]: string };
}

export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedHeadersToTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    selector: cdktf.stringToTerraform(struct!.selector),
    value: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.value),
  }
}


export function dataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedHeadersToHclTerraform(struct?: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    selector: {
      value: cdktf.stringToHclTerraform(struct!.selector),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.value),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._selector !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SKuadrantIoAuthPolicyV1Beta2ManifestSpecRulesResponseUnauthorizedHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._selector = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._selector = value.selector;
      this._value = value.value;
    }
  }

  // selector - computed: false, optional: true, required: false
  private _selector?: string; 
  public get selector() {
    return this.getStringAttribute('selector');
  }
  public set selector(value: string) {
    this._selector = value;
  }
  public resetSelector() {
    this._selector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector;
  }

  // value - computed: false, optional: true, required: false
  private _value?: { [key: string]: string }; 
  public get value() {
    return this.getStringMapAttribute('value');
  }
  public set value(value: { [key: string]: string }) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
