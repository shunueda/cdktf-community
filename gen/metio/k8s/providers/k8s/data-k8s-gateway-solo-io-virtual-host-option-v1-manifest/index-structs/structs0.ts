import * as cdktf from 'cdktf';
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestMetadata {
  /**
  * Keys and values that can be used by external tooling to store and retrieve arbitrary metadata about this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#annotations DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Keys and values that can be used to organize and categorize objects. See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#labels DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Unique identifier for this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name: string;
  /**
  * Namespaces provides a mechanism for isolating groups of resources within a single cluster. See https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#namespace DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#namespace}
  */
  readonly namespace: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestMetadataToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestMetadataToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._labels = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._labels = value.labels;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: false, required: true
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecNamespacedStatuses {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#statuses DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#statuses}
  */
  readonly statuses?: { [key: string]: string };
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecNamespacedStatusesToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecNamespacedStatuses | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    statuses: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.statuses),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecNamespacedStatusesToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecNamespacedStatuses | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    statuses: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.statuses),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecNamespacedStatusesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecNamespacedStatuses | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._statuses !== undefined) {
      hasAnyValues = true;
      internalValueResult.statuses = this._statuses;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecNamespacedStatuses | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._statuses = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._statuses = value.statuses;
    }
  }

  // statuses - computed: false, optional: true, required: false
  private _statuses?: { [key: string]: string }; 
  public get statuses() {
    return this.getStringMapAttribute('statuses');
  }
  public set statuses(value: { [key: string]: string }) {
    this._statuses = value;
  }
  public resetStatuses() {
    this._statuses = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get statusesInput() {
    return this._statuses;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteBuffer {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#max_request_bytes DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#max_request_bytes}
  */
  readonly maxRequestBytes?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteBufferToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteBuffer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    max_request_bytes: cdktf.numberToTerraform(struct!.maxRequestBytes),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteBufferToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteBuffer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    max_request_bytes: {
      value: cdktf.numberToHclTerraform(struct!.maxRequestBytes),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteBufferOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteBuffer | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._maxRequestBytes !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxRequestBytes = this._maxRequestBytes;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteBuffer | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._maxRequestBytes = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._maxRequestBytes = value.maxRequestBytes;
    }
  }

  // max_request_bytes - computed: false, optional: true, required: false
  private _maxRequestBytes?: number; 
  public get maxRequestBytes() {
    return this.getNumberAttribute('max_request_bytes');
  }
  public set maxRequestBytes(value: number) {
    this._maxRequestBytes = value;
  }
  public resetMaxRequestBytes() {
    this._maxRequestBytes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxRequestBytesInput() {
    return this._maxRequestBytes;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRoute {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#buffer DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#buffer}
  */
  readonly buffer?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteBuffer;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#disabled DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#disabled}
  */
  readonly disabled?: boolean | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRoute | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    buffer: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteBufferToTerraform(struct!.buffer),
    disabled: cdktf.booleanToTerraform(struct!.disabled),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRoute | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    buffer: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteBufferToHclTerraform(struct!.buffer),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteBuffer",
    },
    disabled: {
      value: cdktf.booleanToHclTerraform(struct!.disabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRoute | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._buffer?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.buffer = this._buffer?.internalValue;
    }
    if (this._disabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.disabled = this._disabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRoute | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._buffer.internalValue = undefined;
      this._disabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._buffer.internalValue = value.buffer;
      this._disabled = value.disabled;
    }
  }

  // buffer - computed: false, optional: true, required: false
  private _buffer = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteBufferOutputReference(this, "buffer");
  public get buffer() {
    return this._buffer;
  }
  public putBuffer(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsBufferPerRouteBuffer) {
    this._buffer.internalValue = value;
  }
  public resetBuffer() {
    this._buffer.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bufferInput() {
    return this._buffer.internalValue;
  }

  // disabled - computed: false, optional: true, required: false
  private _disabled?: boolean | cdktf.IResolvable; 
  public get disabled() {
    return this.getBooleanAttribute('disabled');
  }
  public set disabled(value: boolean | cdktf.IResolvable) {
    this._disabled = value;
  }
  public resetDisabled() {
    this._disabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disabledInput() {
    return this._disabled;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCors {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#allow_credentials DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#allow_credentials}
  */
  readonly allowCredentials?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#allow_headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#allow_headers}
  */
  readonly allowHeaders?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#allow_methods DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#allow_methods}
  */
  readonly allowMethods?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#allow_origin DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#allow_origin}
  */
  readonly allowOrigin?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#allow_origin_regex DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#allow_origin_regex}
  */
  readonly allowOriginRegex?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#disable_for_route DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#disable_for_route}
  */
  readonly disableForRoute?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#expose_headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#expose_headers}
  */
  readonly exposeHeaders?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#max_age DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#max_age}
  */
  readonly maxAge?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCorsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_credentials: cdktf.booleanToTerraform(struct!.allowCredentials),
    allow_headers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.allowHeaders),
    allow_methods: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.allowMethods),
    allow_origin: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.allowOrigin),
    allow_origin_regex: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.allowOriginRegex),
    disable_for_route: cdktf.booleanToTerraform(struct!.disableForRoute),
    expose_headers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.exposeHeaders),
    max_age: cdktf.stringToTerraform(struct!.maxAge),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCorsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_credentials: {
      value: cdktf.booleanToHclTerraform(struct!.allowCredentials),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    allow_headers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.allowHeaders),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    allow_methods: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.allowMethods),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    allow_origin: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.allowOrigin),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    allow_origin_regex: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.allowOriginRegex),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    disable_for_route: {
      value: cdktf.booleanToHclTerraform(struct!.disableForRoute),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    expose_headers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.exposeHeaders),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    max_age: {
      value: cdktf.stringToHclTerraform(struct!.maxAge),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowCredentials !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowCredentials = this._allowCredentials;
    }
    if (this._allowHeaders !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowHeaders = this._allowHeaders;
    }
    if (this._allowMethods !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowMethods = this._allowMethods;
    }
    if (this._allowOrigin !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowOrigin = this._allowOrigin;
    }
    if (this._allowOriginRegex !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowOriginRegex = this._allowOriginRegex;
    }
    if (this._disableForRoute !== undefined) {
      hasAnyValues = true;
      internalValueResult.disableForRoute = this._disableForRoute;
    }
    if (this._exposeHeaders !== undefined) {
      hasAnyValues = true;
      internalValueResult.exposeHeaders = this._exposeHeaders;
    }
    if (this._maxAge !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxAge = this._maxAge;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowCredentials = undefined;
      this._allowHeaders = undefined;
      this._allowMethods = undefined;
      this._allowOrigin = undefined;
      this._allowOriginRegex = undefined;
      this._disableForRoute = undefined;
      this._exposeHeaders = undefined;
      this._maxAge = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowCredentials = value.allowCredentials;
      this._allowHeaders = value.allowHeaders;
      this._allowMethods = value.allowMethods;
      this._allowOrigin = value.allowOrigin;
      this._allowOriginRegex = value.allowOriginRegex;
      this._disableForRoute = value.disableForRoute;
      this._exposeHeaders = value.exposeHeaders;
      this._maxAge = value.maxAge;
    }
  }

  // allow_credentials - computed: false, optional: true, required: false
  private _allowCredentials?: boolean | cdktf.IResolvable; 
  public get allowCredentials() {
    return this.getBooleanAttribute('allow_credentials');
  }
  public set allowCredentials(value: boolean | cdktf.IResolvable) {
    this._allowCredentials = value;
  }
  public resetAllowCredentials() {
    this._allowCredentials = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowCredentialsInput() {
    return this._allowCredentials;
  }

  // allow_headers - computed: false, optional: true, required: false
  private _allowHeaders?: string[]; 
  public get allowHeaders() {
    return this.getListAttribute('allow_headers');
  }
  public set allowHeaders(value: string[]) {
    this._allowHeaders = value;
  }
  public resetAllowHeaders() {
    this._allowHeaders = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowHeadersInput() {
    return this._allowHeaders;
  }

  // allow_methods - computed: false, optional: true, required: false
  private _allowMethods?: string[]; 
  public get allowMethods() {
    return this.getListAttribute('allow_methods');
  }
  public set allowMethods(value: string[]) {
    this._allowMethods = value;
  }
  public resetAllowMethods() {
    this._allowMethods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowMethodsInput() {
    return this._allowMethods;
  }

  // allow_origin - computed: false, optional: true, required: false
  private _allowOrigin?: string[]; 
  public get allowOrigin() {
    return this.getListAttribute('allow_origin');
  }
  public set allowOrigin(value: string[]) {
    this._allowOrigin = value;
  }
  public resetAllowOrigin() {
    this._allowOrigin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowOriginInput() {
    return this._allowOrigin;
  }

  // allow_origin_regex - computed: false, optional: true, required: false
  private _allowOriginRegex?: string[]; 
  public get allowOriginRegex() {
    return this.getListAttribute('allow_origin_regex');
  }
  public set allowOriginRegex(value: string[]) {
    this._allowOriginRegex = value;
  }
  public resetAllowOriginRegex() {
    this._allowOriginRegex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowOriginRegexInput() {
    return this._allowOriginRegex;
  }

  // disable_for_route - computed: false, optional: true, required: false
  private _disableForRoute?: boolean | cdktf.IResolvable; 
  public get disableForRoute() {
    return this.getBooleanAttribute('disable_for_route');
  }
  public set disableForRoute(value: boolean | cdktf.IResolvable) {
    this._disableForRoute = value;
  }
  public resetDisableForRoute() {
    this._disableForRoute = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableForRouteInput() {
    return this._disableForRoute;
  }

  // expose_headers - computed: false, optional: true, required: false
  private _exposeHeaders?: string[]; 
  public get exposeHeaders() {
    return this.getListAttribute('expose_headers');
  }
  public set exposeHeaders(value: string[]) {
    this._exposeHeaders = value;
  }
  public resetExposeHeaders() {
    this._exposeHeaders = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exposeHeadersInput() {
    return this._exposeHeaders;
  }

  // max_age - computed: false, optional: true, required: false
  private _maxAge?: string; 
  public get maxAge() {
    return this.getStringAttribute('max_age');
  }
  public set maxAge(value: string) {
    this._maxAge = value;
  }
  public resetMaxAge() {
    this._maxAge = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxAgeInput() {
    return this._maxAge;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCorsPolicyMergeSettings {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#expose_headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#expose_headers}
  */
  readonly exposeHeaders?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCorsPolicyMergeSettingsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCorsPolicyMergeSettings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    expose_headers: cdktf.stringToTerraform(struct!.exposeHeaders),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCorsPolicyMergeSettingsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCorsPolicyMergeSettings | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    expose_headers: {
      value: cdktf.stringToHclTerraform(struct!.exposeHeaders),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCorsPolicyMergeSettingsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCorsPolicyMergeSettings | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exposeHeaders !== undefined) {
      hasAnyValues = true;
      internalValueResult.exposeHeaders = this._exposeHeaders;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCorsPolicyMergeSettings | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exposeHeaders = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exposeHeaders = value.exposeHeaders;
    }
  }

  // expose_headers - computed: false, optional: true, required: false
  private _exposeHeaders?: string; 
  public get exposeHeaders() {
    return this.getStringAttribute('expose_headers');
  }
  public set exposeHeaders(value: string) {
    this._exposeHeaders = value;
  }
  public resetExposeHeaders() {
    this._exposeHeaders = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exposeHeadersInput() {
    return this._exposeHeaders;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexGoogleRe2 {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#max_program_size DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#max_program_size}
  */
  readonly maxProgramSize?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexGoogleRe2ToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexGoogleRe2 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    max_program_size: cdktf.numberToTerraform(struct!.maxProgramSize),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexGoogleRe2ToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexGoogleRe2 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    max_program_size: {
      value: cdktf.numberToHclTerraform(struct!.maxProgramSize),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexGoogleRe2OutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexGoogleRe2 | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._maxProgramSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxProgramSize = this._maxProgramSize;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexGoogleRe2 | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._maxProgramSize = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._maxProgramSize = value.maxProgramSize;
    }
  }

  // max_program_size - computed: false, optional: true, required: false
  private _maxProgramSize?: number; 
  public get maxProgramSize() {
    return this.getNumberAttribute('max_program_size');
  }
  public set maxProgramSize(value: number) {
    this._maxProgramSize = value;
  }
  public resetMaxProgramSize() {
    this._maxProgramSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxProgramSizeInput() {
    return this._maxProgramSize;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegex {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#google_re2 DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#google_re2}
  */
  readonly googleRe2?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexGoogleRe2;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#regex DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#regex}
  */
  readonly regex?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegex | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    google_re2: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexGoogleRe2ToTerraform(struct!.googleRe2),
    regex: cdktf.stringToTerraform(struct!.regex),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegex | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    google_re2: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexGoogleRe2ToHclTerraform(struct!.googleRe2),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexGoogleRe2",
    },
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegex | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._googleRe2?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.googleRe2 = this._googleRe2?.internalValue;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegex | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._googleRe2.internalValue = undefined;
      this._regex = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._googleRe2.internalValue = value.googleRe2;
      this._regex = value.regex;
    }
  }

  // google_re2 - computed: false, optional: true, required: false
  private _googleRe2 = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexGoogleRe2OutputReference(this, "google_re2");
  public get googleRe2() {
    return this._googleRe2;
  }
  public putGoogleRe2(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexGoogleRe2) {
    this._googleRe2.internalValue = value;
  }
  public resetGoogleRe2() {
    this._googleRe2.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get googleRe2Input() {
    return this._googleRe2.internalValue;
  }

  // regex - computed: false, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOrigins {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#exact DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#exact}
  */
  readonly exact?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#ignore_case DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#ignore_case}
  */
  readonly ignoreCase?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#prefix DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#prefix}
  */
  readonly prefix?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#safe_regex DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#safe_regex}
  */
  readonly safeRegex?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegex;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#suffix DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#suffix}
  */
  readonly suffix?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOrigins | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exact: cdktf.stringToTerraform(struct!.exact),
    ignore_case: cdktf.booleanToTerraform(struct!.ignoreCase),
    prefix: cdktf.stringToTerraform(struct!.prefix),
    safe_regex: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexToTerraform(struct!.safeRegex),
    suffix: cdktf.stringToTerraform(struct!.suffix),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOrigins | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exact: {
      value: cdktf.stringToHclTerraform(struct!.exact),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ignore_case: {
      value: cdktf.booleanToHclTerraform(struct!.ignoreCase),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    prefix: {
      value: cdktf.stringToHclTerraform(struct!.prefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    safe_regex: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexToHclTerraform(struct!.safeRegex),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegex",
    },
    suffix: {
      value: cdktf.stringToHclTerraform(struct!.suffix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOrigins | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exact !== undefined) {
      hasAnyValues = true;
      internalValueResult.exact = this._exact;
    }
    if (this._ignoreCase !== undefined) {
      hasAnyValues = true;
      internalValueResult.ignoreCase = this._ignoreCase;
    }
    if (this._prefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefix = this._prefix;
    }
    if (this._safeRegex?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.safeRegex = this._safeRegex?.internalValue;
    }
    if (this._suffix !== undefined) {
      hasAnyValues = true;
      internalValueResult.suffix = this._suffix;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOrigins | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exact = undefined;
      this._ignoreCase = undefined;
      this._prefix = undefined;
      this._safeRegex.internalValue = undefined;
      this._suffix = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exact = value.exact;
      this._ignoreCase = value.ignoreCase;
      this._prefix = value.prefix;
      this._safeRegex.internalValue = value.safeRegex;
      this._suffix = value.suffix;
    }
  }

  // exact - computed: false, optional: true, required: false
  private _exact?: string; 
  public get exact() {
    return this.getStringAttribute('exact');
  }
  public set exact(value: string) {
    this._exact = value;
  }
  public resetExact() {
    this._exact = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exactInput() {
    return this._exact;
  }

  // ignore_case - computed: false, optional: true, required: false
  private _ignoreCase?: boolean | cdktf.IResolvable; 
  public get ignoreCase() {
    return this.getBooleanAttribute('ignore_case');
  }
  public set ignoreCase(value: boolean | cdktf.IResolvable) {
    this._ignoreCase = value;
  }
  public resetIgnoreCase() {
    this._ignoreCase = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ignoreCaseInput() {
    return this._ignoreCase;
  }

  // prefix - computed: false, optional: true, required: false
  private _prefix?: string; 
  public get prefix() {
    return this.getStringAttribute('prefix');
  }
  public set prefix(value: string) {
    this._prefix = value;
  }
  public resetPrefix() {
    this._prefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixInput() {
    return this._prefix;
  }

  // safe_regex - computed: false, optional: true, required: false
  private _safeRegex = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegexOutputReference(this, "safe_regex");
  public get safeRegex() {
    return this._safeRegex;
  }
  public putSafeRegex(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsSafeRegex) {
    this._safeRegex.internalValue = value;
  }
  public resetSafeRegex() {
    this._safeRegex.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get safeRegexInput() {
    return this._safeRegex.internalValue;
  }

  // suffix - computed: false, optional: true, required: false
  private _suffix?: string; 
  public get suffix() {
    return this.getStringAttribute('suffix');
  }
  public set suffix(value: string) {
    this._suffix = value;
  }
  public resetSuffix() {
    this._suffix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get suffixInput() {
    return this._suffix;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOrigins[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledDefaultValue {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#denominator DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#denominator}
  */
  readonly denominator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#numerator DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#numerator}
  */
  readonly numerator?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledDefaultValueToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledDefaultValue | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    denominator: cdktf.stringToTerraform(struct!.denominator),
    numerator: cdktf.numberToTerraform(struct!.numerator),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledDefaultValueToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledDefaultValue | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    denominator: {
      value: cdktf.stringToHclTerraform(struct!.denominator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    numerator: {
      value: cdktf.numberToHclTerraform(struct!.numerator),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledDefaultValueOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledDefaultValue | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._denominator !== undefined) {
      hasAnyValues = true;
      internalValueResult.denominator = this._denominator;
    }
    if (this._numerator !== undefined) {
      hasAnyValues = true;
      internalValueResult.numerator = this._numerator;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledDefaultValue | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._denominator = undefined;
      this._numerator = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._denominator = value.denominator;
      this._numerator = value.numerator;
    }
  }

  // denominator - computed: false, optional: true, required: false
  private _denominator?: string; 
  public get denominator() {
    return this.getStringAttribute('denominator');
  }
  public set denominator(value: string) {
    this._denominator = value;
  }
  public resetDenominator() {
    this._denominator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get denominatorInput() {
    return this._denominator;
  }

  // numerator - computed: false, optional: true, required: false
  private _numerator?: number; 
  public get numerator() {
    return this.getNumberAttribute('numerator');
  }
  public set numerator(value: number) {
    this._numerator = value;
  }
  public resetNumerator() {
    this._numerator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get numeratorInput() {
    return this._numerator;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabled {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#default_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#default_value}
  */
  readonly defaultValue?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledDefaultValue;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#runtime_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#runtime_key}
  */
  readonly runtimeKey?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabled | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledDefaultValueToTerraform(struct!.defaultValue),
    runtime_key: cdktf.stringToTerraform(struct!.runtimeKey),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabled | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_value: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledDefaultValueToHclTerraform(struct!.defaultValue),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledDefaultValue",
    },
    runtime_key: {
      value: cdktf.stringToHclTerraform(struct!.runtimeKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabled | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultValue?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultValue = this._defaultValue?.internalValue;
    }
    if (this._runtimeKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.runtimeKey = this._runtimeKey;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabled | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultValue.internalValue = undefined;
      this._runtimeKey = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultValue.internalValue = value.defaultValue;
      this._runtimeKey = value.runtimeKey;
    }
  }

  // default_value - computed: false, optional: true, required: false
  private _defaultValue = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledDefaultValueOutputReference(this, "default_value");
  public get defaultValue() {
    return this._defaultValue;
  }
  public putDefaultValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledDefaultValue) {
    this._defaultValue.internalValue = value;
  }
  public resetDefaultValue() {
    this._defaultValue.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultValueInput() {
    return this._defaultValue.internalValue;
  }

  // runtime_key - computed: false, optional: true, required: false
  private _runtimeKey?: string; 
  public get runtimeKey() {
    return this.getStringAttribute('runtime_key');
  }
  public set runtimeKey(value: string) {
    this._runtimeKey = value;
  }
  public resetRuntimeKey() {
    this._runtimeKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runtimeKeyInput() {
    return this._runtimeKey;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledDefaultValue {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#denominator DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#denominator}
  */
  readonly denominator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#numerator DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#numerator}
  */
  readonly numerator?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledDefaultValueToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledDefaultValue | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    denominator: cdktf.stringToTerraform(struct!.denominator),
    numerator: cdktf.numberToTerraform(struct!.numerator),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledDefaultValueToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledDefaultValue | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    denominator: {
      value: cdktf.stringToHclTerraform(struct!.denominator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    numerator: {
      value: cdktf.numberToHclTerraform(struct!.numerator),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledDefaultValueOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledDefaultValue | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._denominator !== undefined) {
      hasAnyValues = true;
      internalValueResult.denominator = this._denominator;
    }
    if (this._numerator !== undefined) {
      hasAnyValues = true;
      internalValueResult.numerator = this._numerator;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledDefaultValue | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._denominator = undefined;
      this._numerator = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._denominator = value.denominator;
      this._numerator = value.numerator;
    }
  }

  // denominator - computed: false, optional: true, required: false
  private _denominator?: string; 
  public get denominator() {
    return this.getStringAttribute('denominator');
  }
  public set denominator(value: string) {
    this._denominator = value;
  }
  public resetDenominator() {
    this._denominator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get denominatorInput() {
    return this._denominator;
  }

  // numerator - computed: false, optional: true, required: false
  private _numerator?: number; 
  public get numerator() {
    return this.getNumberAttribute('numerator');
  }
  public set numerator(value: number) {
    this._numerator = value;
  }
  public resetNumerator() {
    this._numerator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get numeratorInput() {
    return this._numerator;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabled {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#default_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#default_value}
  */
  readonly defaultValue?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledDefaultValue;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#runtime_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#runtime_key}
  */
  readonly runtimeKey?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabled | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledDefaultValueToTerraform(struct!.defaultValue),
    runtime_key: cdktf.stringToTerraform(struct!.runtimeKey),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabled | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_value: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledDefaultValueToHclTerraform(struct!.defaultValue),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledDefaultValue",
    },
    runtime_key: {
      value: cdktf.stringToHclTerraform(struct!.runtimeKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabled | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultValue?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultValue = this._defaultValue?.internalValue;
    }
    if (this._runtimeKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.runtimeKey = this._runtimeKey;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabled | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultValue.internalValue = undefined;
      this._runtimeKey = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultValue.internalValue = value.defaultValue;
      this._runtimeKey = value.runtimeKey;
    }
  }

  // default_value - computed: false, optional: true, required: false
  private _defaultValue = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledDefaultValueOutputReference(this, "default_value");
  public get defaultValue() {
    return this._defaultValue;
  }
  public putDefaultValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledDefaultValue) {
    this._defaultValue.internalValue = value;
  }
  public resetDefaultValue() {
    this._defaultValue.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultValueInput() {
    return this._defaultValue.internalValue;
  }

  // runtime_key - computed: false, optional: true, required: false
  private _runtimeKey?: string; 
  public get runtimeKey() {
    return this.getStringAttribute('runtime_key');
  }
  public set runtimeKey(value: string) {
    this._runtimeKey = value;
  }
  public resetRuntimeKey() {
    this._runtimeKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runtimeKeyInput() {
    return this._runtimeKey;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrf {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#additional_origins DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#additional_origins}
  */
  readonly additionalOrigins?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOrigins[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#filter_enabled DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#filter_enabled}
  */
  readonly filterEnabled?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabled;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#shadow_enabled DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#shadow_enabled}
  */
  readonly shadowEnabled?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabled;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrf | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    additional_origins: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsToTerraform, false)(struct!.additionalOrigins),
    filter_enabled: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledToTerraform(struct!.filterEnabled),
    shadow_enabled: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledToTerraform(struct!.shadowEnabled),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrf | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    additional_origins: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsToHclTerraform, false)(struct!.additionalOrigins),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsList",
    },
    filter_enabled: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledToHclTerraform(struct!.filterEnabled),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabled",
    },
    shadow_enabled: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledToHclTerraform(struct!.shadowEnabled),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabled",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrf | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._additionalOrigins?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.additionalOrigins = this._additionalOrigins?.internalValue;
    }
    if (this._filterEnabled?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.filterEnabled = this._filterEnabled?.internalValue;
    }
    if (this._shadowEnabled?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.shadowEnabled = this._shadowEnabled?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrf | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._additionalOrigins.internalValue = undefined;
      this._filterEnabled.internalValue = undefined;
      this._shadowEnabled.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._additionalOrigins.internalValue = value.additionalOrigins;
      this._filterEnabled.internalValue = value.filterEnabled;
      this._shadowEnabled.internalValue = value.shadowEnabled;
    }
  }

  // additional_origins - computed: false, optional: true, required: false
  private _additionalOrigins = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOriginsList(this, "additional_origins", false);
  public get additionalOrigins() {
    return this._additionalOrigins;
  }
  public putAdditionalOrigins(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfAdditionalOrigins[] | cdktf.IResolvable) {
    this._additionalOrigins.internalValue = value;
  }
  public resetAdditionalOrigins() {
    this._additionalOrigins.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get additionalOriginsInput() {
    return this._additionalOrigins.internalValue;
  }

  // filter_enabled - computed: false, optional: true, required: false
  private _filterEnabled = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabledOutputReference(this, "filter_enabled");
  public get filterEnabled() {
    return this._filterEnabled;
  }
  public putFilterEnabled(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfFilterEnabled) {
    this._filterEnabled.internalValue = value;
  }
  public resetFilterEnabled() {
    this._filterEnabled.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filterEnabledInput() {
    return this._filterEnabled.internalValue;
  }

  // shadow_enabled - computed: false, optional: true, required: false
  private _shadowEnabled = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabledOutputReference(this, "shadow_enabled");
  public get shadowEnabled() {
    return this._shadowEnabled;
  }
  public putShadowEnabled(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsCsrfShadowEnabled) {
    this._shadowEnabled.internalValue = value;
  }
  public resetShadowEnabled() {
    this._shadowEnabled.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get shadowEnabledInput() {
    return this._shadowEnabled.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionPercent {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#value}
  */
  readonly value?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionPercentToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionPercent | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.numberToTerraform(struct!.value),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionPercentToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionPercent | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.numberToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionPercentOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionPercent | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionPercent | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: number; 
  public get value() {
    return this.getNumberAttribute('value');
  }
  public set value(value: number) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#regex DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#regex}
  */
  readonly regex?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#subgroup DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#subgroup}
  */
  readonly subgroup?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActionsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    regex: cdktf.stringToTerraform(struct!.regex),
    subgroup: cdktf.numberToTerraform(struct!.subgroup),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActionsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    regex: {
      value: cdktf.stringToHclTerraform(struct!.regex),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    subgroup: {
      value: cdktf.numberToHclTerraform(struct!.subgroup),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    if (this._subgroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.subgroup = this._subgroup;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._regex = undefined;
      this._subgroup = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._regex = value.regex;
      this._subgroup = value.subgroup;
    }
  }

  // regex - computed: false, optional: true, required: false
  private _regex?: string; 
  public get regex() {
    return this.getStringAttribute('regex');
  }
  public set regex(value: string) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }

  // subgroup - computed: false, optional: true, required: false
  private _subgroup?: number; 
  public get subgroup() {
    return this.getNumberAttribute('subgroup');
  }
  public set subgroup(value: number) {
    this._subgroup = value;
  }
  public resetSubgroup() {
    this._subgroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subgroupInput() {
    return this._subgroup;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActionsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomAction {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#mask_char DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#mask_char}
  */
  readonly maskChar?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#percent DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#percent}
  */
  readonly percent?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionPercent;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#regex DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#regex}
  */
  readonly regex?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#regex_actions DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#regex_actions}
  */
  readonly regexActions?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActions[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomAction | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    mask_char: cdktf.stringToTerraform(struct!.maskChar),
    name: cdktf.stringToTerraform(struct!.name),
    percent: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionPercentToTerraform(struct!.percent),
    regex: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.regex),
    regex_actions: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActionsToTerraform, false)(struct!.regexActions),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomAction | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    mask_char: {
      value: cdktf.stringToHclTerraform(struct!.maskChar),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    percent: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionPercentToHclTerraform(struct!.percent),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionPercent",
    },
    regex: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.regex),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    regex_actions: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActionsToHclTerraform, false)(struct!.regexActions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActionsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomAction | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._maskChar !== undefined) {
      hasAnyValues = true;
      internalValueResult.maskChar = this._maskChar;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._percent?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.percent = this._percent?.internalValue;
    }
    if (this._regex !== undefined) {
      hasAnyValues = true;
      internalValueResult.regex = this._regex;
    }
    if (this._regexActions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.regexActions = this._regexActions?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomAction | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._maskChar = undefined;
      this._name = undefined;
      this._percent.internalValue = undefined;
      this._regex = undefined;
      this._regexActions.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._maskChar = value.maskChar;
      this._name = value.name;
      this._percent.internalValue = value.percent;
      this._regex = value.regex;
      this._regexActions.internalValue = value.regexActions;
    }
  }

  // mask_char - computed: false, optional: true, required: false
  private _maskChar?: string; 
  public get maskChar() {
    return this.getStringAttribute('mask_char');
  }
  public set maskChar(value: string) {
    this._maskChar = value;
  }
  public resetMaskChar() {
    this._maskChar = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maskCharInput() {
    return this._maskChar;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // percent - computed: false, optional: true, required: false
  private _percent = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionPercentOutputReference(this, "percent");
  public get percent() {
    return this._percent;
  }
  public putPercent(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionPercent) {
    this._percent.internalValue = value;
  }
  public resetPercent() {
    this._percent.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get percentInput() {
    return this._percent.internalValue;
  }

  // regex - computed: false, optional: true, required: false
  private _regex?: string[]; 
  public get regex() {
    return this.getListAttribute('regex');
  }
  public set regex(value: string[]) {
    this._regex = value;
  }
  public resetRegex() {
    this._regex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexInput() {
    return this._regex;
  }

  // regex_actions - computed: false, optional: true, required: false
  private _regexActions = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActionsList(this, "regex_actions", false);
  public get regexActions() {
    return this._regexActions;
  }
  public putRegexActions(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionRegexActions[] | cdktf.IResolvable) {
    this._regexActions.internalValue = value;
  }
  public resetRegexActions() {
    this._regexActions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexActionsInput() {
    return this._regexActions.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionPercent {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#value}
  */
  readonly value?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionPercentToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionPercent | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    value: cdktf.numberToTerraform(struct!.value),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionPercentToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionPercent | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    value: {
      value: cdktf.numberToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionPercentOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionPercent | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionPercent | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._value = value.value;
    }
  }

  // value - computed: false, optional: true, required: false
  private _value?: number; 
  public get value() {
    return this.getNumberAttribute('value');
  }
  public set value(value: number) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueAction {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key_to_mask DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key_to_mask}
  */
  readonly keyToMask?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#mask_char DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#mask_char}
  */
  readonly maskChar?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#percent DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#percent}
  */
  readonly percent?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionPercent;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueAction | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key_to_mask: cdktf.stringToTerraform(struct!.keyToMask),
    mask_char: cdktf.stringToTerraform(struct!.maskChar),
    name: cdktf.stringToTerraform(struct!.name),
    percent: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionPercentToTerraform(struct!.percent),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueAction | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key_to_mask: {
      value: cdktf.stringToHclTerraform(struct!.keyToMask),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mask_char: {
      value: cdktf.stringToHclTerraform(struct!.maskChar),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    percent: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionPercentToHclTerraform(struct!.percent),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionPercent",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueAction | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._keyToMask !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyToMask = this._keyToMask;
    }
    if (this._maskChar !== undefined) {
      hasAnyValues = true;
      internalValueResult.maskChar = this._maskChar;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._percent?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.percent = this._percent?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueAction | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._keyToMask = undefined;
      this._maskChar = undefined;
      this._name = undefined;
      this._percent.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._keyToMask = value.keyToMask;
      this._maskChar = value.maskChar;
      this._name = value.name;
      this._percent.internalValue = value.percent;
    }
  }

  // key_to_mask - computed: false, optional: true, required: false
  private _keyToMask?: string; 
  public get keyToMask() {
    return this.getStringAttribute('key_to_mask');
  }
  public set keyToMask(value: string) {
    this._keyToMask = value;
  }
  public resetKeyToMask() {
    this._keyToMask = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyToMaskInput() {
    return this._keyToMask;
  }

  // mask_char - computed: false, optional: true, required: false
  private _maskChar?: string; 
  public get maskChar() {
    return this.getStringAttribute('mask_char');
  }
  public set maskChar(value: string) {
    this._maskChar = value;
  }
  public resetMaskChar() {
    this._maskChar = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maskCharInput() {
    return this._maskChar;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // percent - computed: false, optional: true, required: false
  private _percent = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionPercentOutputReference(this, "percent");
  public get percent() {
    return this._percent;
  }
  public putPercent(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionPercent) {
    this._percent.internalValue = value;
  }
  public resetPercent() {
    this._percent.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get percentInput() {
    return this._percent.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#action_type DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#action_type}
  */
  readonly actionType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#custom_action DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#custom_action}
  */
  readonly customAction?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomAction;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key_value_action DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key_value_action}
  */
  readonly keyValueAction?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueAction;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#shadow DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#shadow}
  */
  readonly shadow?: boolean | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action_type: cdktf.stringToTerraform(struct!.actionType),
    custom_action: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionToTerraform(struct!.customAction),
    key_value_action: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionToTerraform(struct!.keyValueAction),
    shadow: cdktf.booleanToTerraform(struct!.shadow),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action_type: {
      value: cdktf.stringToHclTerraform(struct!.actionType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    custom_action: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionToHclTerraform(struct!.customAction),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomAction",
    },
    key_value_action: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionToHclTerraform(struct!.keyValueAction),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueAction",
    },
    shadow: {
      value: cdktf.booleanToHclTerraform(struct!.shadow),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._actionType !== undefined) {
      hasAnyValues = true;
      internalValueResult.actionType = this._actionType;
    }
    if (this._customAction?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.customAction = this._customAction?.internalValue;
    }
    if (this._keyValueAction?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyValueAction = this._keyValueAction?.internalValue;
    }
    if (this._shadow !== undefined) {
      hasAnyValues = true;
      internalValueResult.shadow = this._shadow;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._actionType = undefined;
      this._customAction.internalValue = undefined;
      this._keyValueAction.internalValue = undefined;
      this._shadow = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._actionType = value.actionType;
      this._customAction.internalValue = value.customAction;
      this._keyValueAction.internalValue = value.keyValueAction;
      this._shadow = value.shadow;
    }
  }

  // action_type - computed: false, optional: true, required: false
  private _actionType?: string; 
  public get actionType() {
    return this.getStringAttribute('action_type');
  }
  public set actionType(value: string) {
    this._actionType = value;
  }
  public resetActionType() {
    this._actionType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionTypeInput() {
    return this._actionType;
  }

  // custom_action - computed: false, optional: true, required: false
  private _customAction = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomActionOutputReference(this, "custom_action");
  public get customAction() {
    return this._customAction;
  }
  public putCustomAction(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsCustomAction) {
    this._customAction.internalValue = value;
  }
  public resetCustomAction() {
    this._customAction.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customActionInput() {
    return this._customAction.internalValue;
  }

  // key_value_action - computed: false, optional: true, required: false
  private _keyValueAction = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueActionOutputReference(this, "key_value_action");
  public get keyValueAction() {
    return this._keyValueAction;
  }
  public putKeyValueAction(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsKeyValueAction) {
    this._keyValueAction.internalValue = value;
  }
  public resetKeyValueAction() {
    this._keyValueAction.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyValueActionInput() {
    return this._keyValueAction.internalValue;
  }

  // shadow - computed: false, optional: true, required: false
  private _shadow?: boolean | cdktf.IResolvable; 
  public get shadow() {
    return this.getBooleanAttribute('shadow');
  }
  public set shadow(value: boolean | cdktf.IResolvable) {
    this._shadow = value;
  }
  public resetShadow() {
    this._shadow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get shadowInput() {
    return this._shadow;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlp {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#actions DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#actions}
  */
  readonly actions?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#enabled_for DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#enabled_for}
  */
  readonly enabledFor?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    actions: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsToTerraform, false)(struct!.actions),
    enabled_for: cdktf.stringToTerraform(struct!.enabledFor),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    actions: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsToHclTerraform, false)(struct!.actions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsList",
    },
    enabled_for: {
      value: cdktf.stringToHclTerraform(struct!.enabledFor),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._actions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.actions = this._actions?.internalValue;
    }
    if (this._enabledFor !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabledFor = this._enabledFor;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._actions.internalValue = undefined;
      this._enabledFor = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._actions.internalValue = value.actions;
      this._enabledFor = value.enabledFor;
    }
  }

  // actions - computed: false, optional: true, required: false
  private _actions = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActionsList(this, "actions", false);
  public get actions() {
    return this._actions;
  }
  public putActions(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsDlpActions[] | cdktf.IResolvable) {
    this._actions.internalValue = value;
  }
  public resetActions() {
    this._actions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionsInput() {
    return this._actions.internalValue;
  }

  // enabled_for - computed: false, optional: true, required: false
  private _enabledFor?: string; 
  public get enabledFor() {
    return this.getStringAttribute('enabled_for');
  }
  public set enabledFor(value: string) {
    this._enabledFor = value;
  }
  public resetEnabledFor() {
    this._enabledFor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledForInput() {
    return this._enabledFor;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceExtProcServerRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#namespace DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#namespace}
  */
  readonly namespace?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceExtProcServerRefToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceExtProcServerRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceExtProcServerRefToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceExtProcServerRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceExtProcServerRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceExtProcServerRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceExtProcServerRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadataToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadataToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._value = value.value;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadataList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadata[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadataOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadataOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyRetryBackOff {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#base_interval DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#base_interval}
  */
  readonly baseInterval?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#max_interval DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#max_interval}
  */
  readonly maxInterval?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyRetryBackOffToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyRetryBackOff | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    base_interval: cdktf.stringToTerraform(struct!.baseInterval),
    max_interval: cdktf.stringToTerraform(struct!.maxInterval),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyRetryBackOffToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyRetryBackOff | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    base_interval: {
      value: cdktf.stringToHclTerraform(struct!.baseInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_interval: {
      value: cdktf.stringToHclTerraform(struct!.maxInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyRetryBackOffOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyRetryBackOff | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._baseInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.baseInterval = this._baseInterval;
    }
    if (this._maxInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxInterval = this._maxInterval;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyRetryBackOff | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._baseInterval = undefined;
      this._maxInterval = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._baseInterval = value.baseInterval;
      this._maxInterval = value.maxInterval;
    }
  }

  // base_interval - computed: false, optional: true, required: false
  private _baseInterval?: string; 
  public get baseInterval() {
    return this.getStringAttribute('base_interval');
  }
  public set baseInterval(value: string) {
    this._baseInterval = value;
  }
  public resetBaseInterval() {
    this._baseInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get baseIntervalInput() {
    return this._baseInterval;
  }

  // max_interval - computed: false, optional: true, required: false
  private _maxInterval?: string; 
  public get maxInterval() {
    return this.getStringAttribute('max_interval');
  }
  public set maxInterval(value: string) {
    this._maxInterval = value;
  }
  public resetMaxInterval() {
    this._maxInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxIntervalInput() {
    return this._maxInterval;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicy {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#num_retries DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#num_retries}
  */
  readonly numRetries?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#retry_back_off DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#retry_back_off}
  */
  readonly retryBackOff?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyRetryBackOff;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    num_retries: cdktf.numberToTerraform(struct!.numRetries),
    retry_back_off: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyRetryBackOffToTerraform(struct!.retryBackOff),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    num_retries: {
      value: cdktf.numberToHclTerraform(struct!.numRetries),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    retry_back_off: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyRetryBackOffToHclTerraform(struct!.retryBackOff),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyRetryBackOff",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._numRetries !== undefined) {
      hasAnyValues = true;
      internalValueResult.numRetries = this._numRetries;
    }
    if (this._retryBackOff?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.retryBackOff = this._retryBackOff?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._numRetries = undefined;
      this._retryBackOff.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._numRetries = value.numRetries;
      this._retryBackOff.internalValue = value.retryBackOff;
    }
  }

  // num_retries - computed: false, optional: true, required: false
  private _numRetries?: number; 
  public get numRetries() {
    return this.getNumberAttribute('num_retries');
  }
  public set numRetries(value: number) {
    this._numRetries = value;
  }
  public resetNumRetries() {
    this._numRetries = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get numRetriesInput() {
    return this._numRetries;
  }

  // retry_back_off - computed: false, optional: true, required: false
  private _retryBackOff = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyRetryBackOffOutputReference(this, "retry_back_off");
  public get retryBackOff() {
    return this._retryBackOff;
  }
  public putRetryBackOff(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyRetryBackOff) {
    this._retryBackOff.internalValue = value;
  }
  public resetRetryBackOff() {
    this._retryBackOff.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get retryBackOffInput() {
    return this._retryBackOff.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcService {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#authority DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#authority}
  */
  readonly authority?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#ext_proc_server_ref DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#ext_proc_server_ref}
  */
  readonly extProcServerRef?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceExtProcServerRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#initial_metadata DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#initial_metadata}
  */
  readonly initialMetadata?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadata[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#retry_policy DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#retry_policy}
  */
  readonly retryPolicy?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#timeout DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#timeout}
  */
  readonly timeout?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcService | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    authority: cdktf.stringToTerraform(struct!.authority),
    ext_proc_server_ref: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceExtProcServerRefToTerraform(struct!.extProcServerRef),
    initial_metadata: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadataToTerraform, false)(struct!.initialMetadata),
    retry_policy: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyToTerraform(struct!.retryPolicy),
    timeout: cdktf.stringToTerraform(struct!.timeout),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcService | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    authority: {
      value: cdktf.stringToHclTerraform(struct!.authority),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ext_proc_server_ref: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceExtProcServerRefToHclTerraform(struct!.extProcServerRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceExtProcServerRef",
    },
    initial_metadata: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadataToHclTerraform, false)(struct!.initialMetadata),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadataList",
    },
    retry_policy: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyToHclTerraform(struct!.retryPolicy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicy",
    },
    timeout: {
      value: cdktf.stringToHclTerraform(struct!.timeout),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcService | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authority !== undefined) {
      hasAnyValues = true;
      internalValueResult.authority = this._authority;
    }
    if (this._extProcServerRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.extProcServerRef = this._extProcServerRef?.internalValue;
    }
    if (this._initialMetadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.initialMetadata = this._initialMetadata?.internalValue;
    }
    if (this._retryPolicy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.retryPolicy = this._retryPolicy?.internalValue;
    }
    if (this._timeout !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeout = this._timeout;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcService | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authority = undefined;
      this._extProcServerRef.internalValue = undefined;
      this._initialMetadata.internalValue = undefined;
      this._retryPolicy.internalValue = undefined;
      this._timeout = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authority = value.authority;
      this._extProcServerRef.internalValue = value.extProcServerRef;
      this._initialMetadata.internalValue = value.initialMetadata;
      this._retryPolicy.internalValue = value.retryPolicy;
      this._timeout = value.timeout;
    }
  }

  // authority - computed: false, optional: true, required: false
  private _authority?: string; 
  public get authority() {
    return this.getStringAttribute('authority');
  }
  public set authority(value: string) {
    this._authority = value;
  }
  public resetAuthority() {
    this._authority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authorityInput() {
    return this._authority;
  }

  // ext_proc_server_ref - computed: false, optional: true, required: false
  private _extProcServerRef = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceExtProcServerRefOutputReference(this, "ext_proc_server_ref");
  public get extProcServerRef() {
    return this._extProcServerRef;
  }
  public putExtProcServerRef(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceExtProcServerRef) {
    this._extProcServerRef.internalValue = value;
  }
  public resetExtProcServerRef() {
    this._extProcServerRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extProcServerRefInput() {
    return this._extProcServerRef.internalValue;
  }

  // initial_metadata - computed: false, optional: true, required: false
  private _initialMetadata = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadataList(this, "initial_metadata", false);
  public get initialMetadata() {
    return this._initialMetadata;
  }
  public putInitialMetadata(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceInitialMetadata[] | cdktf.IResolvable) {
    this._initialMetadata.internalValue = value;
  }
  public resetInitialMetadata() {
    this._initialMetadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get initialMetadataInput() {
    return this._initialMetadata.internalValue;
  }

  // retry_policy - computed: false, optional: true, required: false
  private _retryPolicy = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicyOutputReference(this, "retry_policy");
  public get retryPolicy() {
    return this._retryPolicy;
  }
  public putRetryPolicy(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceRetryPolicy) {
    this._retryPolicy.internalValue = value;
  }
  public resetRetryPolicy() {
    this._retryPolicy.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get retryPolicyInput() {
    return this._retryPolicy.internalValue;
  }

  // timeout - computed: false, optional: true, required: false
  private _timeout?: string; 
  public get timeout() {
    return this.getStringAttribute('timeout');
  }
  public set timeout(value: string) {
    this._timeout = value;
  }
  public resetTimeout() {
    this._timeout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeoutInput() {
    return this._timeout;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesProcessingMode {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#request_body_mode DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#request_body_mode}
  */
  readonly requestBodyMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#request_header_mode DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#request_header_mode}
  */
  readonly requestHeaderMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#request_trailer_mode DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#request_trailer_mode}
  */
  readonly requestTrailerMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#response_body_mode DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#response_body_mode}
  */
  readonly responseBodyMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#response_header_mode DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#response_header_mode}
  */
  readonly responseHeaderMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#response_trailer_mode DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#response_trailer_mode}
  */
  readonly responseTrailerMode?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesProcessingModeToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesProcessingMode | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    request_body_mode: cdktf.stringToTerraform(struct!.requestBodyMode),
    request_header_mode: cdktf.stringToTerraform(struct!.requestHeaderMode),
    request_trailer_mode: cdktf.stringToTerraform(struct!.requestTrailerMode),
    response_body_mode: cdktf.stringToTerraform(struct!.responseBodyMode),
    response_header_mode: cdktf.stringToTerraform(struct!.responseHeaderMode),
    response_trailer_mode: cdktf.stringToTerraform(struct!.responseTrailerMode),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesProcessingModeToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesProcessingMode | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    request_body_mode: {
      value: cdktf.stringToHclTerraform(struct!.requestBodyMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    request_header_mode: {
      value: cdktf.stringToHclTerraform(struct!.requestHeaderMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    request_trailer_mode: {
      value: cdktf.stringToHclTerraform(struct!.requestTrailerMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    response_body_mode: {
      value: cdktf.stringToHclTerraform(struct!.responseBodyMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    response_header_mode: {
      value: cdktf.stringToHclTerraform(struct!.responseHeaderMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    response_trailer_mode: {
      value: cdktf.stringToHclTerraform(struct!.responseTrailerMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesProcessingModeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesProcessingMode | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._requestBodyMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestBodyMode = this._requestBodyMode;
    }
    if (this._requestHeaderMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestHeaderMode = this._requestHeaderMode;
    }
    if (this._requestTrailerMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestTrailerMode = this._requestTrailerMode;
    }
    if (this._responseBodyMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.responseBodyMode = this._responseBodyMode;
    }
    if (this._responseHeaderMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.responseHeaderMode = this._responseHeaderMode;
    }
    if (this._responseTrailerMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.responseTrailerMode = this._responseTrailerMode;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesProcessingMode | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._requestBodyMode = undefined;
      this._requestHeaderMode = undefined;
      this._requestTrailerMode = undefined;
      this._responseBodyMode = undefined;
      this._responseHeaderMode = undefined;
      this._responseTrailerMode = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._requestBodyMode = value.requestBodyMode;
      this._requestHeaderMode = value.requestHeaderMode;
      this._requestTrailerMode = value.requestTrailerMode;
      this._responseBodyMode = value.responseBodyMode;
      this._responseHeaderMode = value.responseHeaderMode;
      this._responseTrailerMode = value.responseTrailerMode;
    }
  }

  // request_body_mode - computed: false, optional: true, required: false
  private _requestBodyMode?: string; 
  public get requestBodyMode() {
    return this.getStringAttribute('request_body_mode');
  }
  public set requestBodyMode(value: string) {
    this._requestBodyMode = value;
  }
  public resetRequestBodyMode() {
    this._requestBodyMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestBodyModeInput() {
    return this._requestBodyMode;
  }

  // request_header_mode - computed: false, optional: true, required: false
  private _requestHeaderMode?: string; 
  public get requestHeaderMode() {
    return this.getStringAttribute('request_header_mode');
  }
  public set requestHeaderMode(value: string) {
    this._requestHeaderMode = value;
  }
  public resetRequestHeaderMode() {
    this._requestHeaderMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestHeaderModeInput() {
    return this._requestHeaderMode;
  }

  // request_trailer_mode - computed: false, optional: true, required: false
  private _requestTrailerMode?: string; 
  public get requestTrailerMode() {
    return this.getStringAttribute('request_trailer_mode');
  }
  public set requestTrailerMode(value: string) {
    this._requestTrailerMode = value;
  }
  public resetRequestTrailerMode() {
    this._requestTrailerMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestTrailerModeInput() {
    return this._requestTrailerMode;
  }

  // response_body_mode - computed: false, optional: true, required: false
  private _responseBodyMode?: string; 
  public get responseBodyMode() {
    return this.getStringAttribute('response_body_mode');
  }
  public set responseBodyMode(value: string) {
    this._responseBodyMode = value;
  }
  public resetResponseBodyMode() {
    this._responseBodyMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get responseBodyModeInput() {
    return this._responseBodyMode;
  }

  // response_header_mode - computed: false, optional: true, required: false
  private _responseHeaderMode?: string; 
  public get responseHeaderMode() {
    return this.getStringAttribute('response_header_mode');
  }
  public set responseHeaderMode(value: string) {
    this._responseHeaderMode = value;
  }
  public resetResponseHeaderMode() {
    this._responseHeaderMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get responseHeaderModeInput() {
    return this._responseHeaderMode;
  }

  // response_trailer_mode - computed: false, optional: true, required: false
  private _responseTrailerMode?: string; 
  public get responseTrailerMode() {
    return this.getStringAttribute('response_trailer_mode');
  }
  public set responseTrailerMode(value: string) {
    this._responseTrailerMode = value;
  }
  public resetResponseTrailerMode() {
    this._responseTrailerMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get responseTrailerModeInput() {
    return this._responseTrailerMode;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverrides {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#async_mode DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#async_mode}
  */
  readonly asyncMode?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#grpc_service DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#grpc_service}
  */
  readonly grpcService?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcService;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata_context_namespaces DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata_context_namespaces}
  */
  readonly metadataContextNamespaces?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#processing_mode DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#processing_mode}
  */
  readonly processingMode?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesProcessingMode;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#request_attributes DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#request_attributes}
  */
  readonly requestAttributes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#response_attributes DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#response_attributes}
  */
  readonly responseAttributes?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#typed_metadata_context_namespaces DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#typed_metadata_context_namespaces}
  */
  readonly typedMetadataContextNamespaces?: string[];
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverrides | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    async_mode: cdktf.booleanToTerraform(struct!.asyncMode),
    grpc_service: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceToTerraform(struct!.grpcService),
    metadata_context_namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.metadataContextNamespaces),
    processing_mode: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesProcessingModeToTerraform(struct!.processingMode),
    request_attributes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.requestAttributes),
    response_attributes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.responseAttributes),
    typed_metadata_context_namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.typedMetadataContextNamespaces),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverrides | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    async_mode: {
      value: cdktf.booleanToHclTerraform(struct!.asyncMode),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    grpc_service: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceToHclTerraform(struct!.grpcService),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcService",
    },
    metadata_context_namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.metadataContextNamespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    processing_mode: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesProcessingModeToHclTerraform(struct!.processingMode),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesProcessingMode",
    },
    request_attributes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.requestAttributes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    response_attributes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.responseAttributes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    typed_metadata_context_namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.typedMetadataContextNamespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverrides | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._asyncMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.asyncMode = this._asyncMode;
    }
    if (this._grpcService?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.grpcService = this._grpcService?.internalValue;
    }
    if (this._metadataContextNamespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataContextNamespaces = this._metadataContextNamespaces;
    }
    if (this._processingMode?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.processingMode = this._processingMode?.internalValue;
    }
    if (this._requestAttributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestAttributes = this._requestAttributes;
    }
    if (this._responseAttributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.responseAttributes = this._responseAttributes;
    }
    if (this._typedMetadataContextNamespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.typedMetadataContextNamespaces = this._typedMetadataContextNamespaces;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverrides | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._asyncMode = undefined;
      this._grpcService.internalValue = undefined;
      this._metadataContextNamespaces = undefined;
      this._processingMode.internalValue = undefined;
      this._requestAttributes = undefined;
      this._responseAttributes = undefined;
      this._typedMetadataContextNamespaces = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._asyncMode = value.asyncMode;
      this._grpcService.internalValue = value.grpcService;
      this._metadataContextNamespaces = value.metadataContextNamespaces;
      this._processingMode.internalValue = value.processingMode;
      this._requestAttributes = value.requestAttributes;
      this._responseAttributes = value.responseAttributes;
      this._typedMetadataContextNamespaces = value.typedMetadataContextNamespaces;
    }
  }

  // async_mode - computed: false, optional: true, required: false
  private _asyncMode?: boolean | cdktf.IResolvable; 
  public get asyncMode() {
    return this.getBooleanAttribute('async_mode');
  }
  public set asyncMode(value: boolean | cdktf.IResolvable) {
    this._asyncMode = value;
  }
  public resetAsyncMode() {
    this._asyncMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asyncModeInput() {
    return this._asyncMode;
  }

  // grpc_service - computed: false, optional: true, required: false
  private _grpcService = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcServiceOutputReference(this, "grpc_service");
  public get grpcService() {
    return this._grpcService;
  }
  public putGrpcService(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesGrpcService) {
    this._grpcService.internalValue = value;
  }
  public resetGrpcService() {
    this._grpcService.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get grpcServiceInput() {
    return this._grpcService.internalValue;
  }

  // metadata_context_namespaces - computed: false, optional: true, required: false
  private _metadataContextNamespaces?: string[]; 
  public get metadataContextNamespaces() {
    return this.getListAttribute('metadata_context_namespaces');
  }
  public set metadataContextNamespaces(value: string[]) {
    this._metadataContextNamespaces = value;
  }
  public resetMetadataContextNamespaces() {
    this._metadataContextNamespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataContextNamespacesInput() {
    return this._metadataContextNamespaces;
  }

  // processing_mode - computed: false, optional: true, required: false
  private _processingMode = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesProcessingModeOutputReference(this, "processing_mode");
  public get processingMode() {
    return this._processingMode;
  }
  public putProcessingMode(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesProcessingMode) {
    this._processingMode.internalValue = value;
  }
  public resetProcessingMode() {
    this._processingMode.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get processingModeInput() {
    return this._processingMode.internalValue;
  }

  // request_attributes - computed: false, optional: true, required: false
  private _requestAttributes?: string[]; 
  public get requestAttributes() {
    return this.getListAttribute('request_attributes');
  }
  public set requestAttributes(value: string[]) {
    this._requestAttributes = value;
  }
  public resetRequestAttributes() {
    this._requestAttributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestAttributesInput() {
    return this._requestAttributes;
  }

  // response_attributes - computed: false, optional: true, required: false
  private _responseAttributes?: string[]; 
  public get responseAttributes() {
    return this.getListAttribute('response_attributes');
  }
  public set responseAttributes(value: string[]) {
    this._responseAttributes = value;
  }
  public resetResponseAttributes() {
    this._responseAttributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get responseAttributesInput() {
    return this._responseAttributes;
  }

  // typed_metadata_context_namespaces - computed: false, optional: true, required: false
  private _typedMetadataContextNamespaces?: string[]; 
  public get typedMetadataContextNamespaces() {
    return this.getListAttribute('typed_metadata_context_namespaces');
  }
  public set typedMetadataContextNamespaces(value: string[]) {
    this._typedMetadataContextNamespaces = value;
  }
  public resetTypedMetadataContextNamespaces() {
    this._typedMetadataContextNamespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typedMetadataContextNamespacesInput() {
    return this._typedMetadataContextNamespaces;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProc {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#disabled DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#disabled}
  */
  readonly disabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#overrides DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#overrides}
  */
  readonly overrides?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverrides;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    disabled: cdktf.booleanToTerraform(struct!.disabled),
    overrides: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesToTerraform(struct!.overrides),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    disabled: {
      value: cdktf.booleanToHclTerraform(struct!.disabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    overrides: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesToHclTerraform(struct!.overrides),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverrides",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._disabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.disabled = this._disabled;
    }
    if (this._overrides?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.overrides = this._overrides?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._disabled = undefined;
      this._overrides.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._disabled = value.disabled;
      this._overrides.internalValue = value.overrides;
    }
  }

  // disabled - computed: false, optional: true, required: false
  private _disabled?: boolean | cdktf.IResolvable; 
  public get disabled() {
    return this.getBooleanAttribute('disabled');
  }
  public set disabled(value: boolean | cdktf.IResolvable) {
    this._disabled = value;
  }
  public resetDisabled() {
    this._disabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disabledInput() {
    return this._disabled;
  }

  // overrides - computed: false, optional: true, required: false
  private _overrides = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverridesOutputReference(this, "overrides");
  public get overrides() {
    return this._overrides;
  }
  public putOverrides(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtProcOverrides) {
    this._overrides.internalValue = value;
  }
  public resetOverrides() {
    this._overrides.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get overridesInput() {
    return this._overrides.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthConfigRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#namespace DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#namespace}
  */
  readonly namespace?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthConfigRefToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthConfigRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthConfigRefToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthConfigRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthConfigRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthConfigRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthConfigRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthCustomAuth {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#context_extensions DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#context_extensions}
  */
  readonly contextExtensions?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthCustomAuthToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthCustomAuth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    context_extensions: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.contextExtensions),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthCustomAuthToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthCustomAuth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    context_extensions: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.contextExtensions),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthCustomAuthOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthCustomAuth | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._contextExtensions !== undefined) {
      hasAnyValues = true;
      internalValueResult.contextExtensions = this._contextExtensions;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthCustomAuth | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._contextExtensions = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._contextExtensions = value.contextExtensions;
      this._name = value.name;
    }
  }

  // context_extensions - computed: false, optional: true, required: false
  private _contextExtensions?: { [key: string]: string }; 
  public get contextExtensions() {
    return this.getStringMapAttribute('context_extensions');
  }
  public set contextExtensions(value: { [key: string]: string }) {
    this._contextExtensions = value;
  }
  public resetContextExtensions() {
    this._contextExtensions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get contextExtensionsInput() {
    return this._contextExtensions;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauth {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#config_ref DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#config_ref}
  */
  readonly configRef?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthConfigRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#custom_auth DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#custom_auth}
  */
  readonly customAuth?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthCustomAuth;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#disable DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#disable}
  */
  readonly disable?: boolean | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config_ref: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthConfigRefToTerraform(struct!.configRef),
    custom_auth: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthCustomAuthToTerraform(struct!.customAuth),
    disable: cdktf.booleanToTerraform(struct!.disable),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config_ref: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthConfigRefToHclTerraform(struct!.configRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthConfigRef",
    },
    custom_auth: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthCustomAuthToHclTerraform(struct!.customAuth),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthCustomAuth",
    },
    disable: {
      value: cdktf.booleanToHclTerraform(struct!.disable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauth | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.configRef = this._configRef?.internalValue;
    }
    if (this._customAuth?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.customAuth = this._customAuth?.internalValue;
    }
    if (this._disable !== undefined) {
      hasAnyValues = true;
      internalValueResult.disable = this._disable;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauth | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configRef.internalValue = undefined;
      this._customAuth.internalValue = undefined;
      this._disable = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configRef.internalValue = value.configRef;
      this._customAuth.internalValue = value.customAuth;
      this._disable = value.disable;
    }
  }

  // config_ref - computed: false, optional: true, required: false
  private _configRef = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthConfigRefOutputReference(this, "config_ref");
  public get configRef() {
    return this._configRef;
  }
  public putConfigRef(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthConfigRef) {
    this._configRef.internalValue = value;
  }
  public resetConfigRef() {
    this._configRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configRefInput() {
    return this._configRef.internalValue;
  }

  // custom_auth - computed: false, optional: true, required: false
  private _customAuth = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthCustomAuthOutputReference(this, "custom_auth");
  public get customAuth() {
    return this._customAuth;
  }
  public putCustomAuth(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtauthCustomAuth) {
    this._customAuth.internalValue = value;
  }
  public resetCustomAuth() {
    this._customAuth.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get customAuthInput() {
    return this._customAuth.internalValue;
  }

  // disable - computed: false, optional: true, required: false
  private _disable?: boolean | cdktf.IResolvable; 
  public get disable() {
    return this.getBooleanAttribute('disable');
  }
  public set disable(value: boolean | cdktf.IResolvable) {
    this._disable = value;
  }
  public resetDisable() {
    this._disable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableInput() {
    return this._disable;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtensions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#configs DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#configs}
  */
  readonly configs?: { [key: string]: string };
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtensionsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtensions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configs: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configs),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtensionsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtensions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configs: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configs),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtensionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtensions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configs !== undefined) {
      hasAnyValues = true;
      internalValueResult.configs = this._configs;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsExtensions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configs = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configs = value.configs;
    }
  }

  // configs - computed: false, optional: true, required: false
  private _configs?: { [key: string]: string }; 
  public get configs() {
    return this.getStringMapAttribute('configs');
  }
  public set configs(value: { [key: string]: string }) {
    this._configs = value;
  }
  public resetConfigs() {
    this._configs = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configsInput() {
    return this._configs;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeader {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeader | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeader | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._value = value.value;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#namespace DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#namespace}
  */
  readonly namespace?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderSecretRefToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderSecretRefToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAdd {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#append DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#append}
  */
  readonly append?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header}
  */
  readonly header?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeader;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header_secret_ref DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header_secret_ref}
  */
  readonly headerSecretRef?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderSecretRef;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAdd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    append: cdktf.booleanToTerraform(struct!.append),
    header: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderToTerraform(struct!.header),
    header_secret_ref: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderSecretRefToTerraform(struct!.headerSecretRef),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAdd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    append: {
      value: cdktf.booleanToHclTerraform(struct!.append),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    header: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderToHclTerraform(struct!.header),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeader",
    },
    header_secret_ref: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderSecretRefToHclTerraform(struct!.headerSecretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderSecretRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAdd | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._append !== undefined) {
      hasAnyValues = true;
      internalValueResult.append = this._append;
    }
    if (this._header?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.header = this._header?.internalValue;
    }
    if (this._headerSecretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headerSecretRef = this._headerSecretRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAdd | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._append = undefined;
      this._header.internalValue = undefined;
      this._headerSecretRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._append = value.append;
      this._header.internalValue = value.header;
      this._headerSecretRef.internalValue = value.headerSecretRef;
    }
  }

  // append - computed: false, optional: true, required: false
  private _append?: boolean | cdktf.IResolvable; 
  public get append() {
    return this.getBooleanAttribute('append');
  }
  public set append(value: boolean | cdktf.IResolvable) {
    this._append = value;
  }
  public resetAppend() {
    this._append = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appendInput() {
    return this._append;
  }

  // header - computed: false, optional: true, required: false
  private _header = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderOutputReference(this, "header");
  public get header() {
    return this._header;
  }
  public putHeader(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeader) {
    this._header.internalValue = value;
  }
  public resetHeader() {
    this._header.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerInput() {
    return this._header.internalValue;
  }

  // header_secret_ref - computed: false, optional: true, required: false
  private _headerSecretRef = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderSecretRefOutputReference(this, "header_secret_ref");
  public get headerSecretRef() {
    return this._headerSecretRef;
  }
  public putHeaderSecretRef(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddHeaderSecretRef) {
    this._headerSecretRef.internalValue = value;
  }
  public resetHeaderSecretRef() {
    this._headerSecretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerSecretRefInput() {
    return this._headerSecretRef.internalValue;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAdd[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddHeader {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddHeaderToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddHeaderToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddHeader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddHeaderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddHeader | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddHeader | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._value = value.value;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAdd {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#append DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#append}
  */
  readonly append?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header}
  */
  readonly header?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddHeader;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAdd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    append: cdktf.booleanToTerraform(struct!.append),
    header: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddHeaderToTerraform(struct!.header),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAdd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    append: {
      value: cdktf.booleanToHclTerraform(struct!.append),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    header: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddHeaderToHclTerraform(struct!.header),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddHeader",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAdd | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._append !== undefined) {
      hasAnyValues = true;
      internalValueResult.append = this._append;
    }
    if (this._header?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.header = this._header?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAdd | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._append = undefined;
      this._header.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._append = value.append;
      this._header.internalValue = value.header;
    }
  }

  // append - computed: false, optional: true, required: false
  private _append?: boolean | cdktf.IResolvable; 
  public get append() {
    return this.getBooleanAttribute('append');
  }
  public set append(value: boolean | cdktf.IResolvable) {
    this._append = value;
  }
  public resetAppend() {
    this._append = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appendInput() {
    return this._append;
  }

  // header - computed: false, optional: true, required: false
  private _header = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddHeaderOutputReference(this, "header");
  public get header() {
    return this._header;
  }
  public putHeader(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddHeader) {
    this._header.internalValue = value;
  }
  public resetHeader() {
    this._header.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerInput() {
    return this._header.internalValue;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAdd[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulation {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#request_headers_to_add DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#request_headers_to_add}
  */
  readonly requestHeadersToAdd?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAdd[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#request_headers_to_remove DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#request_headers_to_remove}
  */
  readonly requestHeadersToRemove?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#response_headers_to_add DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#response_headers_to_add}
  */
  readonly responseHeadersToAdd?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAdd[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#response_headers_to_remove DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#response_headers_to_remove}
  */
  readonly responseHeadersToRemove?: string[];
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulation | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    request_headers_to_add: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddToTerraform, false)(struct!.requestHeadersToAdd),
    request_headers_to_remove: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.requestHeadersToRemove),
    response_headers_to_add: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddToTerraform, false)(struct!.responseHeadersToAdd),
    response_headers_to_remove: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.responseHeadersToRemove),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulation | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    request_headers_to_add: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddToHclTerraform, false)(struct!.requestHeadersToAdd),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddList",
    },
    request_headers_to_remove: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.requestHeadersToRemove),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    response_headers_to_add: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddToHclTerraform, false)(struct!.responseHeadersToAdd),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddList",
    },
    response_headers_to_remove: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.responseHeadersToRemove),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulation | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._requestHeadersToAdd?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestHeadersToAdd = this._requestHeadersToAdd?.internalValue;
    }
    if (this._requestHeadersToRemove !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestHeadersToRemove = this._requestHeadersToRemove;
    }
    if (this._responseHeadersToAdd?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.responseHeadersToAdd = this._responseHeadersToAdd?.internalValue;
    }
    if (this._responseHeadersToRemove !== undefined) {
      hasAnyValues = true;
      internalValueResult.responseHeadersToRemove = this._responseHeadersToRemove;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulation | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._requestHeadersToAdd.internalValue = undefined;
      this._requestHeadersToRemove = undefined;
      this._responseHeadersToAdd.internalValue = undefined;
      this._responseHeadersToRemove = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._requestHeadersToAdd.internalValue = value.requestHeadersToAdd;
      this._requestHeadersToRemove = value.requestHeadersToRemove;
      this._responseHeadersToAdd.internalValue = value.responseHeadersToAdd;
      this._responseHeadersToRemove = value.responseHeadersToRemove;
    }
  }

  // request_headers_to_add - computed: false, optional: true, required: false
  private _requestHeadersToAdd = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAddList(this, "request_headers_to_add", false);
  public get requestHeadersToAdd() {
    return this._requestHeadersToAdd;
  }
  public putRequestHeadersToAdd(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationRequestHeadersToAdd[] | cdktf.IResolvable) {
    this._requestHeadersToAdd.internalValue = value;
  }
  public resetRequestHeadersToAdd() {
    this._requestHeadersToAdd.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestHeadersToAddInput() {
    return this._requestHeadersToAdd.internalValue;
  }

  // request_headers_to_remove - computed: false, optional: true, required: false
  private _requestHeadersToRemove?: string[]; 
  public get requestHeadersToRemove() {
    return this.getListAttribute('request_headers_to_remove');
  }
  public set requestHeadersToRemove(value: string[]) {
    this._requestHeadersToRemove = value;
  }
  public resetRequestHeadersToRemove() {
    this._requestHeadersToRemove = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestHeadersToRemoveInput() {
    return this._requestHeadersToRemove;
  }

  // response_headers_to_add - computed: false, optional: true, required: false
  private _responseHeadersToAdd = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAddList(this, "response_headers_to_add", false);
  public get responseHeadersToAdd() {
    return this._responseHeadersToAdd;
  }
  public putResponseHeadersToAdd(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsHeaderManipulationResponseHeadersToAdd[] | cdktf.IResolvable) {
    this._responseHeadersToAdd.internalValue = value;
  }
  public resetResponseHeadersToAdd() {
    this._responseHeadersToAdd.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get responseHeadersToAddInput() {
    return this._responseHeadersToAdd.internalValue;
  }

  // response_headers_to_remove - computed: false, optional: true, required: false
  private _responseHeadersToRemove?: string[]; 
  public get responseHeadersToRemove() {
    return this.getListAttribute('response_headers_to_remove');
  }
  public set responseHeadersToRemove(value: string[]) {
    this._responseHeadersToRemove = value;
  }
  public resetResponseHeadersToRemove() {
    this._responseHeadersToRemove = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get responseHeadersToRemoveInput() {
    return this._responseHeadersToRemove;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#append DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#append}
  */
  readonly append?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#claim DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#claim}
  */
  readonly claim?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header}
  */
  readonly header?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    append: cdktf.booleanToTerraform(struct!.append),
    claim: cdktf.stringToTerraform(struct!.claim),
    header: cdktf.stringToTerraform(struct!.header),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    append: {
      value: cdktf.booleanToHclTerraform(struct!.append),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    claim: {
      value: cdktf.stringToHclTerraform(struct!.claim),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    header: {
      value: cdktf.stringToHclTerraform(struct!.header),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._append !== undefined) {
      hasAnyValues = true;
      internalValueResult.append = this._append;
    }
    if (this._claim !== undefined) {
      hasAnyValues = true;
      internalValueResult.claim = this._claim;
    }
    if (this._header !== undefined) {
      hasAnyValues = true;
      internalValueResult.header = this._header;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._append = undefined;
      this._claim = undefined;
      this._header = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._append = value.append;
      this._claim = value.claim;
      this._header = value.header;
    }
  }

  // append - computed: false, optional: true, required: false
  private _append?: boolean | cdktf.IResolvable; 
  public get append() {
    return this.getBooleanAttribute('append');
  }
  public set append(value: boolean | cdktf.IResolvable) {
    this._append = value;
  }
  public resetAppend() {
    this._append = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appendInput() {
    return this._append;
  }

  // claim - computed: false, optional: true, required: false
  private _claim?: string; 
  public get claim() {
    return this.getStringAttribute('claim');
  }
  public set claim(value: string) {
    this._claim = value;
  }
  public resetClaim() {
    this._claim = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get claimInput() {
    return this._claim;
  }

  // header - computed: false, optional: true, required: false
  private _header?: string; 
  public get header() {
    return this.getStringAttribute('header');
  }
  public set header(value: string) {
    this._header = value;
  }
  public resetHeader() {
    this._header = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerInput() {
    return this._header;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeadersOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksLocal {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksLocalToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksLocal | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksLocalToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksLocal | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksLocalOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksLocal | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksLocal | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteAsyncFetch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#fast_listener DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#fast_listener}
  */
  readonly fastListener?: boolean | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteAsyncFetchToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteAsyncFetch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fast_listener: cdktf.booleanToTerraform(struct!.fastListener),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteAsyncFetchToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteAsyncFetch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fast_listener: {
      value: cdktf.booleanToHclTerraform(struct!.fastListener),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteAsyncFetchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteAsyncFetch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fastListener !== undefined) {
      hasAnyValues = true;
      internalValueResult.fastListener = this._fastListener;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteAsyncFetch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fastListener = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fastListener = value.fastListener;
    }
  }

  // fast_listener - computed: false, optional: true, required: false
  private _fastListener?: boolean | cdktf.IResolvable; 
  public get fastListener() {
    return this.getBooleanAttribute('fast_listener');
  }
  public set fastListener(value: boolean | cdktf.IResolvable) {
    this._fastListener = value;
  }
  public resetFastListener() {
    this._fastListener = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fastListenerInput() {
    return this._fastListener;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteUpstreamRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#namespace DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#namespace}
  */
  readonly namespace?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteUpstreamRefToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteUpstreamRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteUpstreamRefToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteUpstreamRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteUpstreamRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteUpstreamRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteUpstreamRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemote {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#async_fetch DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#async_fetch}
  */
  readonly asyncFetch?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteAsyncFetch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#cache_duration DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#cache_duration}
  */
  readonly cacheDuration?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#upstream_ref DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#upstream_ref}
  */
  readonly upstreamRef?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteUpstreamRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#url DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#url}
  */
  readonly url?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemote | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    async_fetch: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteAsyncFetchToTerraform(struct!.asyncFetch),
    cache_duration: cdktf.stringToTerraform(struct!.cacheDuration),
    upstream_ref: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteUpstreamRefToTerraform(struct!.upstreamRef),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemote | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    async_fetch: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteAsyncFetchToHclTerraform(struct!.asyncFetch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteAsyncFetch",
    },
    cache_duration: {
      value: cdktf.stringToHclTerraform(struct!.cacheDuration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    upstream_ref: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteUpstreamRefToHclTerraform(struct!.upstreamRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteUpstreamRef",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemote | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._asyncFetch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.asyncFetch = this._asyncFetch?.internalValue;
    }
    if (this._cacheDuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.cacheDuration = this._cacheDuration;
    }
    if (this._upstreamRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.upstreamRef = this._upstreamRef?.internalValue;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemote | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._asyncFetch.internalValue = undefined;
      this._cacheDuration = undefined;
      this._upstreamRef.internalValue = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._asyncFetch.internalValue = value.asyncFetch;
      this._cacheDuration = value.cacheDuration;
      this._upstreamRef.internalValue = value.upstreamRef;
      this._url = value.url;
    }
  }

  // async_fetch - computed: false, optional: true, required: false
  private _asyncFetch = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteAsyncFetchOutputReference(this, "async_fetch");
  public get asyncFetch() {
    return this._asyncFetch;
  }
  public putAsyncFetch(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteAsyncFetch) {
    this._asyncFetch.internalValue = value;
  }
  public resetAsyncFetch() {
    this._asyncFetch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asyncFetchInput() {
    return this._asyncFetch.internalValue;
  }

  // cache_duration - computed: false, optional: true, required: false
  private _cacheDuration?: string; 
  public get cacheDuration() {
    return this.getStringAttribute('cache_duration');
  }
  public set cacheDuration(value: string) {
    this._cacheDuration = value;
  }
  public resetCacheDuration() {
    this._cacheDuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cacheDurationInput() {
    return this._cacheDuration;
  }

  // upstream_ref - computed: false, optional: true, required: false
  private _upstreamRef = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteUpstreamRefOutputReference(this, "upstream_ref");
  public get upstreamRef() {
    return this._upstreamRef;
  }
  public putUpstreamRef(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteUpstreamRef) {
    this._upstreamRef.internalValue = value;
  }
  public resetUpstreamRef() {
    this._upstreamRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get upstreamRefInput() {
    return this._upstreamRef.internalValue;
  }

  // url - computed: false, optional: true, required: false
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  public resetUrl() {
    this._url = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwks {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#local DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#local}
  */
  readonly local?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksLocal;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#remote DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#remote}
  */
  readonly remote?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemote;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    local: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksLocalToTerraform(struct!.local),
    remote: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteToTerraform(struct!.remote),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    local: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksLocalToHclTerraform(struct!.local),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksLocal",
    },
    remote: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteToHclTerraform(struct!.remote),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemote",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwks | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._local?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.local = this._local?.internalValue;
    }
    if (this._remote?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.remote = this._remote?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwks | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._local.internalValue = undefined;
      this._remote.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._local.internalValue = value.local;
      this._remote.internalValue = value.remote;
    }
  }

  // local - computed: false, optional: true, required: false
  private _local = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksLocalOutputReference(this, "local");
  public get local() {
    return this._local;
  }
  public putLocal(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksLocal) {
    this._local.internalValue = value;
  }
  public resetLocal() {
    this._local.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localInput() {
    return this._local.internalValue;
  }

  // remote - computed: false, optional: true, required: false
  private _remote = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemoteOutputReference(this, "remote");
  public get remote() {
    return this._remote;
  }
  public putRemote(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksRemote) {
    this._remote.internalValue = value;
  }
  public resetRemote() {
    this._remote.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteInput() {
    return this._remote.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header}
  */
  readonly header?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#prefix DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#prefix}
  */
  readonly prefix?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    header: cdktf.stringToTerraform(struct!.header),
    prefix: cdktf.stringToTerraform(struct!.prefix),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    header: {
      value: cdktf.stringToHclTerraform(struct!.header),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    prefix: {
      value: cdktf.stringToHclTerraform(struct!.prefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._header !== undefined) {
      hasAnyValues = true;
      internalValueResult.header = this._header;
    }
    if (this._prefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefix = this._prefix;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._header = undefined;
      this._prefix = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._header = value.header;
      this._prefix = value.prefix;
    }
  }

  // header - computed: false, optional: true, required: false
  private _header?: string; 
  public get header() {
    return this.getStringAttribute('header');
  }
  public set header(value: string) {
    this._header = value;
  }
  public resetHeader() {
    this._header = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerInput() {
    return this._header;
  }

  // prefix - computed: false, optional: true, required: false
  private _prefix?: string; 
  public get prefix() {
    return this.getStringAttribute('prefix');
  }
  public set prefix(value: string) {
    this._prefix = value;
  }
  public resetPrefix() {
    this._prefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixInput() {
    return this._prefix;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeadersOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSource {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#headers}
  */
  readonly headers?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeaders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#query_params DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#query_params}
  */
  readonly queryParams?: string[];
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    headers: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeadersToTerraform, false)(struct!.headers),
    query_params: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.queryParams),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    headers: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeadersList",
    },
    query_params: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.queryParams),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    if (this._queryParams !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryParams = this._queryParams;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._headers.internalValue = undefined;
      this._queryParams = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._headers.internalValue = value.headers;
      this._queryParams = value.queryParams;
    }
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }

  // query_params - computed: false, optional: true, required: false
  private _queryParams?: string[]; 
  public get queryParams() {
    return this.getListAttribute('query_params');
  }
  public set queryParams(value: string[]) {
    this._queryParams = value;
  }
  public resetQueryParams() {
    this._queryParams = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryParamsInput() {
    return this._queryParams;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProviders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#audiences DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#audiences}
  */
  readonly audiences?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#claims_to_headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#claims_to_headers}
  */
  readonly claimsToHeaders?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeaders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#clock_skew_seconds DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#clock_skew_seconds}
  */
  readonly clockSkewSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#issuer DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#issuer}
  */
  readonly issuer?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#jwks DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#jwks}
  */
  readonly jwks?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwks;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#keep_token DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#keep_token}
  */
  readonly keepToken?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#token_source DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#token_source}
  */
  readonly tokenSource?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSource;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProviders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    audiences: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.audiences),
    claims_to_headers: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeadersToTerraform, false)(struct!.claimsToHeaders),
    clock_skew_seconds: cdktf.numberToTerraform(struct!.clockSkewSeconds),
    issuer: cdktf.stringToTerraform(struct!.issuer),
    jwks: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksToTerraform(struct!.jwks),
    keep_token: cdktf.booleanToTerraform(struct!.keepToken),
    token_source: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceToTerraform(struct!.tokenSource),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProviders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    audiences: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.audiences),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    claims_to_headers: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeadersToHclTerraform, false)(struct!.claimsToHeaders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeadersList",
    },
    clock_skew_seconds: {
      value: cdktf.numberToHclTerraform(struct!.clockSkewSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    issuer: {
      value: cdktf.stringToHclTerraform(struct!.issuer),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    jwks: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksToHclTerraform(struct!.jwks),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwks",
    },
    keep_token: {
      value: cdktf.booleanToHclTerraform(struct!.keepToken),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    token_source: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceToHclTerraform(struct!.tokenSource),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSource",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProviders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._audiences !== undefined) {
      hasAnyValues = true;
      internalValueResult.audiences = this._audiences;
    }
    if (this._claimsToHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.claimsToHeaders = this._claimsToHeaders?.internalValue;
    }
    if (this._clockSkewSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.clockSkewSeconds = this._clockSkewSeconds;
    }
    if (this._issuer !== undefined) {
      hasAnyValues = true;
      internalValueResult.issuer = this._issuer;
    }
    if (this._jwks?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jwks = this._jwks?.internalValue;
    }
    if (this._keepToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.keepToken = this._keepToken;
    }
    if (this._tokenSource?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenSource = this._tokenSource?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProviders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._audiences = undefined;
      this._claimsToHeaders.internalValue = undefined;
      this._clockSkewSeconds = undefined;
      this._issuer = undefined;
      this._jwks.internalValue = undefined;
      this._keepToken = undefined;
      this._tokenSource.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._audiences = value.audiences;
      this._claimsToHeaders.internalValue = value.claimsToHeaders;
      this._clockSkewSeconds = value.clockSkewSeconds;
      this._issuer = value.issuer;
      this._jwks.internalValue = value.jwks;
      this._keepToken = value.keepToken;
      this._tokenSource.internalValue = value.tokenSource;
    }
  }

  // audiences - computed: false, optional: true, required: false
  private _audiences?: string[]; 
  public get audiences() {
    return this.getListAttribute('audiences');
  }
  public set audiences(value: string[]) {
    this._audiences = value;
  }
  public resetAudiences() {
    this._audiences = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get audiencesInput() {
    return this._audiences;
  }

  // claims_to_headers - computed: false, optional: true, required: false
  private _claimsToHeaders = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeadersList(this, "claims_to_headers", false);
  public get claimsToHeaders() {
    return this._claimsToHeaders;
  }
  public putClaimsToHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersClaimsToHeaders[] | cdktf.IResolvable) {
    this._claimsToHeaders.internalValue = value;
  }
  public resetClaimsToHeaders() {
    this._claimsToHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get claimsToHeadersInput() {
    return this._claimsToHeaders.internalValue;
  }

  // clock_skew_seconds - computed: false, optional: true, required: false
  private _clockSkewSeconds?: number; 
  public get clockSkewSeconds() {
    return this.getNumberAttribute('clock_skew_seconds');
  }
  public set clockSkewSeconds(value: number) {
    this._clockSkewSeconds = value;
  }
  public resetClockSkewSeconds() {
    this._clockSkewSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clockSkewSecondsInput() {
    return this._clockSkewSeconds;
  }

  // issuer - computed: false, optional: true, required: false
  private _issuer?: string; 
  public get issuer() {
    return this.getStringAttribute('issuer');
  }
  public set issuer(value: string) {
    this._issuer = value;
  }
  public resetIssuer() {
    this._issuer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get issuerInput() {
    return this._issuer;
  }

  // jwks - computed: false, optional: true, required: false
  private _jwks = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwksOutputReference(this, "jwks");
  public get jwks() {
    return this._jwks;
  }
  public putJwks(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersJwks) {
    this._jwks.internalValue = value;
  }
  public resetJwks() {
    this._jwks.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jwksInput() {
    return this._jwks.internalValue;
  }

  // keep_token - computed: false, optional: true, required: false
  private _keepToken?: boolean | cdktf.IResolvable; 
  public get keepToken() {
    return this.getBooleanAttribute('keep_token');
  }
  public set keepToken(value: boolean | cdktf.IResolvable) {
    this._keepToken = value;
  }
  public resetKeepToken() {
    this._keepToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keepTokenInput() {
    return this._keepToken;
  }

  // token_source - computed: false, optional: true, required: false
  private _tokenSource = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSourceOutputReference(this, "token_source");
  public get tokenSource() {
    return this._tokenSource;
  }
  public putTokenSource(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersTokenSource) {
    this._tokenSource.internalValue = value;
  }
  public resetTokenSource() {
    this._tokenSource.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenSourceInput() {
    return this._tokenSource.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwt {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#allow_missing_or_failed_jwt DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#allow_missing_or_failed_jwt}
  */
  readonly allowMissingOrFailedJwt?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#providers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#providers}
  */
  readonly providers?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProviders;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#validation_policy DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#validation_policy}
  */
  readonly validationPolicy?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwt | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_missing_or_failed_jwt: cdktf.booleanToTerraform(struct!.allowMissingOrFailedJwt),
    providers: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersToTerraform(struct!.providers),
    validation_policy: cdktf.stringToTerraform(struct!.validationPolicy),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwt | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_missing_or_failed_jwt: {
      value: cdktf.booleanToHclTerraform(struct!.allowMissingOrFailedJwt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    providers: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersToHclTerraform(struct!.providers),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProviders",
    },
    validation_policy: {
      value: cdktf.stringToHclTerraform(struct!.validationPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwt | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowMissingOrFailedJwt !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowMissingOrFailedJwt = this._allowMissingOrFailedJwt;
    }
    if (this._providers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.providers = this._providers?.internalValue;
    }
    if (this._validationPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.validationPolicy = this._validationPolicy;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwt | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowMissingOrFailedJwt = undefined;
      this._providers.internalValue = undefined;
      this._validationPolicy = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowMissingOrFailedJwt = value.allowMissingOrFailedJwt;
      this._providers.internalValue = value.providers;
      this._validationPolicy = value.validationPolicy;
    }
  }

  // allow_missing_or_failed_jwt - computed: false, optional: true, required: false
  private _allowMissingOrFailedJwt?: boolean | cdktf.IResolvable; 
  public get allowMissingOrFailedJwt() {
    return this.getBooleanAttribute('allow_missing_or_failed_jwt');
  }
  public set allowMissingOrFailedJwt(value: boolean | cdktf.IResolvable) {
    this._allowMissingOrFailedJwt = value;
  }
  public resetAllowMissingOrFailedJwt() {
    this._allowMissingOrFailedJwt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowMissingOrFailedJwtInput() {
    return this._allowMissingOrFailedJwt;
  }

  // providers - computed: false, optional: true, required: false
  private _providers = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProvidersOutputReference(this, "providers");
  public get providers() {
    return this._providers;
  }
  public putProviders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtProviders) {
    this._providers.internalValue = value;
  }
  public resetProviders() {
    this._providers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get providersInput() {
    return this._providers.internalValue;
  }

  // validation_policy - computed: false, optional: true, required: false
  private _validationPolicy?: string; 
  public get validationPolicy() {
    return this.getStringAttribute('validation_policy');
  }
  public set validationPolicy(value: string) {
    this._validationPolicy = value;
  }
  public resetValidationPolicy() {
    this._validationPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get validationPolicyInput() {
    return this._validationPolicy;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#append DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#append}
  */
  readonly append?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#claim DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#claim}
  */
  readonly claim?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header}
  */
  readonly header?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    append: cdktf.booleanToTerraform(struct!.append),
    claim: cdktf.stringToTerraform(struct!.claim),
    header: cdktf.stringToTerraform(struct!.header),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    append: {
      value: cdktf.booleanToHclTerraform(struct!.append),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    claim: {
      value: cdktf.stringToHclTerraform(struct!.claim),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    header: {
      value: cdktf.stringToHclTerraform(struct!.header),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._append !== undefined) {
      hasAnyValues = true;
      internalValueResult.append = this._append;
    }
    if (this._claim !== undefined) {
      hasAnyValues = true;
      internalValueResult.claim = this._claim;
    }
    if (this._header !== undefined) {
      hasAnyValues = true;
      internalValueResult.header = this._header;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._append = undefined;
      this._claim = undefined;
      this._header = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._append = value.append;
      this._claim = value.claim;
      this._header = value.header;
    }
  }

  // append - computed: false, optional: true, required: false
  private _append?: boolean | cdktf.IResolvable; 
  public get append() {
    return this.getBooleanAttribute('append');
  }
  public set append(value: boolean | cdktf.IResolvable) {
    this._append = value;
  }
  public resetAppend() {
    this._append = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appendInput() {
    return this._append;
  }

  // claim - computed: false, optional: true, required: false
  private _claim?: string; 
  public get claim() {
    return this.getStringAttribute('claim');
  }
  public set claim(value: string) {
    this._claim = value;
  }
  public resetClaim() {
    this._claim = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get claimInput() {
    return this._claim;
  }

  // header - computed: false, optional: true, required: false
  private _header?: string; 
  public get header() {
    return this.getStringAttribute('header');
  }
  public set header(value: string) {
    this._header = value;
  }
  public resetHeader() {
    this._header = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerInput() {
    return this._header;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeadersOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksLocal {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksLocalToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksLocal | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksLocalToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksLocal | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksLocalOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksLocal | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksLocal | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteAsyncFetch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#fast_listener DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#fast_listener}
  */
  readonly fastListener?: boolean | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteAsyncFetchToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteAsyncFetch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fast_listener: cdktf.booleanToTerraform(struct!.fastListener),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteAsyncFetchToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteAsyncFetch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fast_listener: {
      value: cdktf.booleanToHclTerraform(struct!.fastListener),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteAsyncFetchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteAsyncFetch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fastListener !== undefined) {
      hasAnyValues = true;
      internalValueResult.fastListener = this._fastListener;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteAsyncFetch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fastListener = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fastListener = value.fastListener;
    }
  }

  // fast_listener - computed: false, optional: true, required: false
  private _fastListener?: boolean | cdktf.IResolvable; 
  public get fastListener() {
    return this.getBooleanAttribute('fast_listener');
  }
  public set fastListener(value: boolean | cdktf.IResolvable) {
    this._fastListener = value;
  }
  public resetFastListener() {
    this._fastListener = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fastListenerInput() {
    return this._fastListener;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteUpstreamRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#namespace DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#namespace}
  */
  readonly namespace?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteUpstreamRefToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteUpstreamRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteUpstreamRefToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteUpstreamRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteUpstreamRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteUpstreamRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteUpstreamRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemote {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#async_fetch DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#async_fetch}
  */
  readonly asyncFetch?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteAsyncFetch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#cache_duration DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#cache_duration}
  */
  readonly cacheDuration?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#upstream_ref DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#upstream_ref}
  */
  readonly upstreamRef?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteUpstreamRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#url DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#url}
  */
  readonly url?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemote | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    async_fetch: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteAsyncFetchToTerraform(struct!.asyncFetch),
    cache_duration: cdktf.stringToTerraform(struct!.cacheDuration),
    upstream_ref: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteUpstreamRefToTerraform(struct!.upstreamRef),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemote | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    async_fetch: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteAsyncFetchToHclTerraform(struct!.asyncFetch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteAsyncFetch",
    },
    cache_duration: {
      value: cdktf.stringToHclTerraform(struct!.cacheDuration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    upstream_ref: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteUpstreamRefToHclTerraform(struct!.upstreamRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteUpstreamRef",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemote | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._asyncFetch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.asyncFetch = this._asyncFetch?.internalValue;
    }
    if (this._cacheDuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.cacheDuration = this._cacheDuration;
    }
    if (this._upstreamRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.upstreamRef = this._upstreamRef?.internalValue;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemote | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._asyncFetch.internalValue = undefined;
      this._cacheDuration = undefined;
      this._upstreamRef.internalValue = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._asyncFetch.internalValue = value.asyncFetch;
      this._cacheDuration = value.cacheDuration;
      this._upstreamRef.internalValue = value.upstreamRef;
      this._url = value.url;
    }
  }

  // async_fetch - computed: false, optional: true, required: false
  private _asyncFetch = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteAsyncFetchOutputReference(this, "async_fetch");
  public get asyncFetch() {
    return this._asyncFetch;
  }
  public putAsyncFetch(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteAsyncFetch) {
    this._asyncFetch.internalValue = value;
  }
  public resetAsyncFetch() {
    this._asyncFetch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asyncFetchInput() {
    return this._asyncFetch.internalValue;
  }

  // cache_duration - computed: false, optional: true, required: false
  private _cacheDuration?: string; 
  public get cacheDuration() {
    return this.getStringAttribute('cache_duration');
  }
  public set cacheDuration(value: string) {
    this._cacheDuration = value;
  }
  public resetCacheDuration() {
    this._cacheDuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cacheDurationInput() {
    return this._cacheDuration;
  }

  // upstream_ref - computed: false, optional: true, required: false
  private _upstreamRef = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteUpstreamRefOutputReference(this, "upstream_ref");
  public get upstreamRef() {
    return this._upstreamRef;
  }
  public putUpstreamRef(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteUpstreamRef) {
    this._upstreamRef.internalValue = value;
  }
  public resetUpstreamRef() {
    this._upstreamRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get upstreamRefInput() {
    return this._upstreamRef.internalValue;
  }

  // url - computed: false, optional: true, required: false
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  public resetUrl() {
    this._url = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwks {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#local DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#local}
  */
  readonly local?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksLocal;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#remote DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#remote}
  */
  readonly remote?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemote;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    local: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksLocalToTerraform(struct!.local),
    remote: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteToTerraform(struct!.remote),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    local: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksLocalToHclTerraform(struct!.local),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksLocal",
    },
    remote: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteToHclTerraform(struct!.remote),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemote",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwks | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._local?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.local = this._local?.internalValue;
    }
    if (this._remote?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.remote = this._remote?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwks | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._local.internalValue = undefined;
      this._remote.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._local.internalValue = value.local;
      this._remote.internalValue = value.remote;
    }
  }

  // local - computed: false, optional: true, required: false
  private _local = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksLocalOutputReference(this, "local");
  public get local() {
    return this._local;
  }
  public putLocal(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksLocal) {
    this._local.internalValue = value;
  }
  public resetLocal() {
    this._local.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localInput() {
    return this._local.internalValue;
  }

  // remote - computed: false, optional: true, required: false
  private _remote = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemoteOutputReference(this, "remote");
  public get remote() {
    return this._remote;
  }
  public putRemote(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksRemote) {
    this._remote.internalValue = value;
  }
  public resetRemote() {
    this._remote.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteInput() {
    return this._remote.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header}
  */
  readonly header?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#prefix DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#prefix}
  */
  readonly prefix?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    header: cdktf.stringToTerraform(struct!.header),
    prefix: cdktf.stringToTerraform(struct!.prefix),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    header: {
      value: cdktf.stringToHclTerraform(struct!.header),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    prefix: {
      value: cdktf.stringToHclTerraform(struct!.prefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._header !== undefined) {
      hasAnyValues = true;
      internalValueResult.header = this._header;
    }
    if (this._prefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefix = this._prefix;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._header = undefined;
      this._prefix = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._header = value.header;
      this._prefix = value.prefix;
    }
  }

  // header - computed: false, optional: true, required: false
  private _header?: string; 
  public get header() {
    return this.getStringAttribute('header');
  }
  public set header(value: string) {
    this._header = value;
  }
  public resetHeader() {
    this._header = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerInput() {
    return this._header;
  }

  // prefix - computed: false, optional: true, required: false
  private _prefix?: string; 
  public get prefix() {
    return this.getStringAttribute('prefix');
  }
  public set prefix(value: string) {
    this._prefix = value;
  }
  public resetPrefix() {
    this._prefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixInput() {
    return this._prefix;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeadersOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSource {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#headers}
  */
  readonly headers?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeaders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#query_params DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#query_params}
  */
  readonly queryParams?: string[];
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    headers: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeadersToTerraform, false)(struct!.headers),
    query_params: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.queryParams),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    headers: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeadersList",
    },
    query_params: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.queryParams),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    if (this._queryParams !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryParams = this._queryParams;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._headers.internalValue = undefined;
      this._queryParams = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._headers.internalValue = value.headers;
      this._queryParams = value.queryParams;
    }
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }

  // query_params - computed: false, optional: true, required: false
  private _queryParams?: string[]; 
  public get queryParams() {
    return this.getListAttribute('query_params');
  }
  public set queryParams(value: string[]) {
    this._queryParams = value;
  }
  public resetQueryParams() {
    this._queryParams = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryParamsInput() {
    return this._queryParams;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProviders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#audiences DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#audiences}
  */
  readonly audiences?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#claims_to_headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#claims_to_headers}
  */
  readonly claimsToHeaders?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeaders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#clock_skew_seconds DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#clock_skew_seconds}
  */
  readonly clockSkewSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#issuer DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#issuer}
  */
  readonly issuer?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#jwks DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#jwks}
  */
  readonly jwks?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwks;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#keep_token DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#keep_token}
  */
  readonly keepToken?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#token_source DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#token_source}
  */
  readonly tokenSource?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSource;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProviders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    audiences: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.audiences),
    claims_to_headers: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeadersToTerraform, false)(struct!.claimsToHeaders),
    clock_skew_seconds: cdktf.numberToTerraform(struct!.clockSkewSeconds),
    issuer: cdktf.stringToTerraform(struct!.issuer),
    jwks: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksToTerraform(struct!.jwks),
    keep_token: cdktf.booleanToTerraform(struct!.keepToken),
    token_source: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceToTerraform(struct!.tokenSource),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProviders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    audiences: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.audiences),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    claims_to_headers: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeadersToHclTerraform, false)(struct!.claimsToHeaders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeadersList",
    },
    clock_skew_seconds: {
      value: cdktf.numberToHclTerraform(struct!.clockSkewSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    issuer: {
      value: cdktf.stringToHclTerraform(struct!.issuer),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    jwks: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksToHclTerraform(struct!.jwks),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwks",
    },
    keep_token: {
      value: cdktf.booleanToHclTerraform(struct!.keepToken),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    token_source: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceToHclTerraform(struct!.tokenSource),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSource",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProviders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._audiences !== undefined) {
      hasAnyValues = true;
      internalValueResult.audiences = this._audiences;
    }
    if (this._claimsToHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.claimsToHeaders = this._claimsToHeaders?.internalValue;
    }
    if (this._clockSkewSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.clockSkewSeconds = this._clockSkewSeconds;
    }
    if (this._issuer !== undefined) {
      hasAnyValues = true;
      internalValueResult.issuer = this._issuer;
    }
    if (this._jwks?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jwks = this._jwks?.internalValue;
    }
    if (this._keepToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.keepToken = this._keepToken;
    }
    if (this._tokenSource?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenSource = this._tokenSource?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProviders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._audiences = undefined;
      this._claimsToHeaders.internalValue = undefined;
      this._clockSkewSeconds = undefined;
      this._issuer = undefined;
      this._jwks.internalValue = undefined;
      this._keepToken = undefined;
      this._tokenSource.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._audiences = value.audiences;
      this._claimsToHeaders.internalValue = value.claimsToHeaders;
      this._clockSkewSeconds = value.clockSkewSeconds;
      this._issuer = value.issuer;
      this._jwks.internalValue = value.jwks;
      this._keepToken = value.keepToken;
      this._tokenSource.internalValue = value.tokenSource;
    }
  }

  // audiences - computed: false, optional: true, required: false
  private _audiences?: string[]; 
  public get audiences() {
    return this.getListAttribute('audiences');
  }
  public set audiences(value: string[]) {
    this._audiences = value;
  }
  public resetAudiences() {
    this._audiences = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get audiencesInput() {
    return this._audiences;
  }

  // claims_to_headers - computed: false, optional: true, required: false
  private _claimsToHeaders = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeadersList(this, "claims_to_headers", false);
  public get claimsToHeaders() {
    return this._claimsToHeaders;
  }
  public putClaimsToHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersClaimsToHeaders[] | cdktf.IResolvable) {
    this._claimsToHeaders.internalValue = value;
  }
  public resetClaimsToHeaders() {
    this._claimsToHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get claimsToHeadersInput() {
    return this._claimsToHeaders.internalValue;
  }

  // clock_skew_seconds - computed: false, optional: true, required: false
  private _clockSkewSeconds?: number; 
  public get clockSkewSeconds() {
    return this.getNumberAttribute('clock_skew_seconds');
  }
  public set clockSkewSeconds(value: number) {
    this._clockSkewSeconds = value;
  }
  public resetClockSkewSeconds() {
    this._clockSkewSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clockSkewSecondsInput() {
    return this._clockSkewSeconds;
  }

  // issuer - computed: false, optional: true, required: false
  private _issuer?: string; 
  public get issuer() {
    return this.getStringAttribute('issuer');
  }
  public set issuer(value: string) {
    this._issuer = value;
  }
  public resetIssuer() {
    this._issuer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get issuerInput() {
    return this._issuer;
  }

  // jwks - computed: false, optional: true, required: false
  private _jwks = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwksOutputReference(this, "jwks");
  public get jwks() {
    return this._jwks;
  }
  public putJwks(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersJwks) {
    this._jwks.internalValue = value;
  }
  public resetJwks() {
    this._jwks.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jwksInput() {
    return this._jwks.internalValue;
  }

  // keep_token - computed: false, optional: true, required: false
  private _keepToken?: boolean | cdktf.IResolvable; 
  public get keepToken() {
    return this.getBooleanAttribute('keep_token');
  }
  public set keepToken(value: boolean | cdktf.IResolvable) {
    this._keepToken = value;
  }
  public resetKeepToken() {
    this._keepToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keepTokenInput() {
    return this._keepToken;
  }

  // token_source - computed: false, optional: true, required: false
  private _tokenSource = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSourceOutputReference(this, "token_source");
  public get tokenSource() {
    return this._tokenSource;
  }
  public putTokenSource(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersTokenSource) {
    this._tokenSource.internalValue = value;
  }
  public resetTokenSource() {
    this._tokenSource.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenSourceInput() {
    return this._tokenSource.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuth {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#allow_missing_or_failed_jwt DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#allow_missing_or_failed_jwt}
  */
  readonly allowMissingOrFailedJwt?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#providers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#providers}
  */
  readonly providers?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProviders;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#validation_policy DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#validation_policy}
  */
  readonly validationPolicy?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_missing_or_failed_jwt: cdktf.booleanToTerraform(struct!.allowMissingOrFailedJwt),
    providers: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersToTerraform(struct!.providers),
    validation_policy: cdktf.stringToTerraform(struct!.validationPolicy),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_missing_or_failed_jwt: {
      value: cdktf.booleanToHclTerraform(struct!.allowMissingOrFailedJwt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    providers: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersToHclTerraform(struct!.providers),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProviders",
    },
    validation_policy: {
      value: cdktf.stringToHclTerraform(struct!.validationPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuth | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowMissingOrFailedJwt !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowMissingOrFailedJwt = this._allowMissingOrFailedJwt;
    }
    if (this._providers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.providers = this._providers?.internalValue;
    }
    if (this._validationPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.validationPolicy = this._validationPolicy;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuth | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowMissingOrFailedJwt = undefined;
      this._providers.internalValue = undefined;
      this._validationPolicy = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowMissingOrFailedJwt = value.allowMissingOrFailedJwt;
      this._providers.internalValue = value.providers;
      this._validationPolicy = value.validationPolicy;
    }
  }

  // allow_missing_or_failed_jwt - computed: false, optional: true, required: false
  private _allowMissingOrFailedJwt?: boolean | cdktf.IResolvable; 
  public get allowMissingOrFailedJwt() {
    return this.getBooleanAttribute('allow_missing_or_failed_jwt');
  }
  public set allowMissingOrFailedJwt(value: boolean | cdktf.IResolvable) {
    this._allowMissingOrFailedJwt = value;
  }
  public resetAllowMissingOrFailedJwt() {
    this._allowMissingOrFailedJwt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowMissingOrFailedJwtInput() {
    return this._allowMissingOrFailedJwt;
  }

  // providers - computed: false, optional: true, required: false
  private _providers = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProvidersOutputReference(this, "providers");
  public get providers() {
    return this._providers;
  }
  public putProviders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthProviders) {
    this._providers.internalValue = value;
  }
  public resetProviders() {
    this._providers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get providersInput() {
    return this._providers.internalValue;
  }

  // validation_policy - computed: false, optional: true, required: false
  private _validationPolicy?: string; 
  public get validationPolicy() {
    return this.getStringAttribute('validation_policy');
  }
  public set validationPolicy(value: string) {
    this._validationPolicy = value;
  }
  public resetValidationPolicy() {
    this._validationPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get validationPolicyInput() {
    return this._validationPolicy;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#append DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#append}
  */
  readonly append?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#claim DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#claim}
  */
  readonly claim?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header}
  */
  readonly header?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    append: cdktf.booleanToTerraform(struct!.append),
    claim: cdktf.stringToTerraform(struct!.claim),
    header: cdktf.stringToTerraform(struct!.header),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    append: {
      value: cdktf.booleanToHclTerraform(struct!.append),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    claim: {
      value: cdktf.stringToHclTerraform(struct!.claim),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    header: {
      value: cdktf.stringToHclTerraform(struct!.header),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._append !== undefined) {
      hasAnyValues = true;
      internalValueResult.append = this._append;
    }
    if (this._claim !== undefined) {
      hasAnyValues = true;
      internalValueResult.claim = this._claim;
    }
    if (this._header !== undefined) {
      hasAnyValues = true;
      internalValueResult.header = this._header;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._append = undefined;
      this._claim = undefined;
      this._header = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._append = value.append;
      this._claim = value.claim;
      this._header = value.header;
    }
  }

  // append - computed: false, optional: true, required: false
  private _append?: boolean | cdktf.IResolvable; 
  public get append() {
    return this.getBooleanAttribute('append');
  }
  public set append(value: boolean | cdktf.IResolvable) {
    this._append = value;
  }
  public resetAppend() {
    this._append = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appendInput() {
    return this._append;
  }

  // claim - computed: false, optional: true, required: false
  private _claim?: string; 
  public get claim() {
    return this.getStringAttribute('claim');
  }
  public set claim(value: string) {
    this._claim = value;
  }
  public resetClaim() {
    this._claim = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get claimInput() {
    return this._claim;
  }

  // header - computed: false, optional: true, required: false
  private _header?: string; 
  public get header() {
    return this.getStringAttribute('header');
  }
  public set header(value: string) {
    this._header = value;
  }
  public resetHeader() {
    this._header = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerInput() {
    return this._header;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeadersOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksLocal {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksLocalToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksLocal | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksLocalToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksLocal | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksLocalOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksLocal | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksLocal | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteAsyncFetch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#fast_listener DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#fast_listener}
  */
  readonly fastListener?: boolean | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteAsyncFetchToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteAsyncFetch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fast_listener: cdktf.booleanToTerraform(struct!.fastListener),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteAsyncFetchToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteAsyncFetch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fast_listener: {
      value: cdktf.booleanToHclTerraform(struct!.fastListener),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteAsyncFetchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteAsyncFetch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fastListener !== undefined) {
      hasAnyValues = true;
      internalValueResult.fastListener = this._fastListener;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteAsyncFetch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fastListener = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fastListener = value.fastListener;
    }
  }

  // fast_listener - computed: false, optional: true, required: false
  private _fastListener?: boolean | cdktf.IResolvable; 
  public get fastListener() {
    return this.getBooleanAttribute('fast_listener');
  }
  public set fastListener(value: boolean | cdktf.IResolvable) {
    this._fastListener = value;
  }
  public resetFastListener() {
    this._fastListener = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fastListenerInput() {
    return this._fastListener;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteUpstreamRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#namespace DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#namespace}
  */
  readonly namespace?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteUpstreamRefToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteUpstreamRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteUpstreamRefToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteUpstreamRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteUpstreamRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteUpstreamRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteUpstreamRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemote {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#async_fetch DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#async_fetch}
  */
  readonly asyncFetch?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteAsyncFetch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#cache_duration DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#cache_duration}
  */
  readonly cacheDuration?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#upstream_ref DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#upstream_ref}
  */
  readonly upstreamRef?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteUpstreamRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#url DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#url}
  */
  readonly url?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemote | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    async_fetch: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteAsyncFetchToTerraform(struct!.asyncFetch),
    cache_duration: cdktf.stringToTerraform(struct!.cacheDuration),
    upstream_ref: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteUpstreamRefToTerraform(struct!.upstreamRef),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemote | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    async_fetch: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteAsyncFetchToHclTerraform(struct!.asyncFetch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteAsyncFetch",
    },
    cache_duration: {
      value: cdktf.stringToHclTerraform(struct!.cacheDuration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    upstream_ref: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteUpstreamRefToHclTerraform(struct!.upstreamRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteUpstreamRef",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemote | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._asyncFetch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.asyncFetch = this._asyncFetch?.internalValue;
    }
    if (this._cacheDuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.cacheDuration = this._cacheDuration;
    }
    if (this._upstreamRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.upstreamRef = this._upstreamRef?.internalValue;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemote | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._asyncFetch.internalValue = undefined;
      this._cacheDuration = undefined;
      this._upstreamRef.internalValue = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._asyncFetch.internalValue = value.asyncFetch;
      this._cacheDuration = value.cacheDuration;
      this._upstreamRef.internalValue = value.upstreamRef;
      this._url = value.url;
    }
  }

  // async_fetch - computed: false, optional: true, required: false
  private _asyncFetch = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteAsyncFetchOutputReference(this, "async_fetch");
  public get asyncFetch() {
    return this._asyncFetch;
  }
  public putAsyncFetch(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteAsyncFetch) {
    this._asyncFetch.internalValue = value;
  }
  public resetAsyncFetch() {
    this._asyncFetch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asyncFetchInput() {
    return this._asyncFetch.internalValue;
  }

  // cache_duration - computed: false, optional: true, required: false
  private _cacheDuration?: string; 
  public get cacheDuration() {
    return this.getStringAttribute('cache_duration');
  }
  public set cacheDuration(value: string) {
    this._cacheDuration = value;
  }
  public resetCacheDuration() {
    this._cacheDuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cacheDurationInput() {
    return this._cacheDuration;
  }

  // upstream_ref - computed: false, optional: true, required: false
  private _upstreamRef = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteUpstreamRefOutputReference(this, "upstream_ref");
  public get upstreamRef() {
    return this._upstreamRef;
  }
  public putUpstreamRef(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteUpstreamRef) {
    this._upstreamRef.internalValue = value;
  }
  public resetUpstreamRef() {
    this._upstreamRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get upstreamRefInput() {
    return this._upstreamRef.internalValue;
  }

  // url - computed: false, optional: true, required: false
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  public resetUrl() {
    this._url = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwks {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#local DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#local}
  */
  readonly local?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksLocal;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#remote DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#remote}
  */
  readonly remote?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemote;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    local: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksLocalToTerraform(struct!.local),
    remote: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteToTerraform(struct!.remote),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwks | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    local: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksLocalToHclTerraform(struct!.local),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksLocal",
    },
    remote: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteToHclTerraform(struct!.remote),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemote",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwks | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._local?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.local = this._local?.internalValue;
    }
    if (this._remote?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.remote = this._remote?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwks | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._local.internalValue = undefined;
      this._remote.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._local.internalValue = value.local;
      this._remote.internalValue = value.remote;
    }
  }

  // local - computed: false, optional: true, required: false
  private _local = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksLocalOutputReference(this, "local");
  public get local() {
    return this._local;
  }
  public putLocal(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksLocal) {
    this._local.internalValue = value;
  }
  public resetLocal() {
    this._local.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localInput() {
    return this._local.internalValue;
  }

  // remote - computed: false, optional: true, required: false
  private _remote = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemoteOutputReference(this, "remote");
  public get remote() {
    return this._remote;
  }
  public putRemote(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksRemote) {
    this._remote.internalValue = value;
  }
  public resetRemote() {
    this._remote.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteInput() {
    return this._remote.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header}
  */
  readonly header?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#prefix DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#prefix}
  */
  readonly prefix?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    header: cdktf.stringToTerraform(struct!.header),
    prefix: cdktf.stringToTerraform(struct!.prefix),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    header: {
      value: cdktf.stringToHclTerraform(struct!.header),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    prefix: {
      value: cdktf.stringToHclTerraform(struct!.prefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._header !== undefined) {
      hasAnyValues = true;
      internalValueResult.header = this._header;
    }
    if (this._prefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefix = this._prefix;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._header = undefined;
      this._prefix = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._header = value.header;
      this._prefix = value.prefix;
    }
  }

  // header - computed: false, optional: true, required: false
  private _header?: string; 
  public get header() {
    return this.getStringAttribute('header');
  }
  public set header(value: string) {
    this._header = value;
  }
  public resetHeader() {
    this._header = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerInput() {
    return this._header;
  }

  // prefix - computed: false, optional: true, required: false
  private _prefix?: string; 
  public get prefix() {
    return this.getStringAttribute('prefix');
  }
  public set prefix(value: string) {
    this._prefix = value;
  }
  public resetPrefix() {
    this._prefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixInput() {
    return this._prefix;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeadersOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSource {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#headers}
  */
  readonly headers?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeaders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#query_params DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#query_params}
  */
  readonly queryParams?: string[];
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    headers: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeadersToTerraform, false)(struct!.headers),
    query_params: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.queryParams),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    headers: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeadersList",
    },
    query_params: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.queryParams),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    if (this._queryParams !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryParams = this._queryParams;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._headers.internalValue = undefined;
      this._queryParams = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._headers.internalValue = value.headers;
      this._queryParams = value.queryParams;
    }
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }

  // query_params - computed: false, optional: true, required: false
  private _queryParams?: string[]; 
  public get queryParams() {
    return this.getListAttribute('query_params');
  }
  public set queryParams(value: string[]) {
    this._queryParams = value;
  }
  public resetQueryParams() {
    this._queryParams = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryParamsInput() {
    return this._queryParams;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProviders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#audiences DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#audiences}
  */
  readonly audiences?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#claims_to_headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#claims_to_headers}
  */
  readonly claimsToHeaders?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeaders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#clock_skew_seconds DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#clock_skew_seconds}
  */
  readonly clockSkewSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#issuer DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#issuer}
  */
  readonly issuer?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#jwks DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#jwks}
  */
  readonly jwks?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwks;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#keep_token DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#keep_token}
  */
  readonly keepToken?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#token_source DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#token_source}
  */
  readonly tokenSource?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSource;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProviders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    audiences: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.audiences),
    claims_to_headers: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeadersToTerraform, false)(struct!.claimsToHeaders),
    clock_skew_seconds: cdktf.numberToTerraform(struct!.clockSkewSeconds),
    issuer: cdktf.stringToTerraform(struct!.issuer),
    jwks: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksToTerraform(struct!.jwks),
    keep_token: cdktf.booleanToTerraform(struct!.keepToken),
    token_source: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceToTerraform(struct!.tokenSource),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProviders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    audiences: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.audiences),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    claims_to_headers: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeadersToHclTerraform, false)(struct!.claimsToHeaders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeadersList",
    },
    clock_skew_seconds: {
      value: cdktf.numberToHclTerraform(struct!.clockSkewSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    issuer: {
      value: cdktf.stringToHclTerraform(struct!.issuer),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    jwks: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksToHclTerraform(struct!.jwks),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwks",
    },
    keep_token: {
      value: cdktf.booleanToHclTerraform(struct!.keepToken),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    token_source: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceToHclTerraform(struct!.tokenSource),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSource",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProviders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._audiences !== undefined) {
      hasAnyValues = true;
      internalValueResult.audiences = this._audiences;
    }
    if (this._claimsToHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.claimsToHeaders = this._claimsToHeaders?.internalValue;
    }
    if (this._clockSkewSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.clockSkewSeconds = this._clockSkewSeconds;
    }
    if (this._issuer !== undefined) {
      hasAnyValues = true;
      internalValueResult.issuer = this._issuer;
    }
    if (this._jwks?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jwks = this._jwks?.internalValue;
    }
    if (this._keepToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.keepToken = this._keepToken;
    }
    if (this._tokenSource?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenSource = this._tokenSource?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProviders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._audiences = undefined;
      this._claimsToHeaders.internalValue = undefined;
      this._clockSkewSeconds = undefined;
      this._issuer = undefined;
      this._jwks.internalValue = undefined;
      this._keepToken = undefined;
      this._tokenSource.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._audiences = value.audiences;
      this._claimsToHeaders.internalValue = value.claimsToHeaders;
      this._clockSkewSeconds = value.clockSkewSeconds;
      this._issuer = value.issuer;
      this._jwks.internalValue = value.jwks;
      this._keepToken = value.keepToken;
      this._tokenSource.internalValue = value.tokenSource;
    }
  }

  // audiences - computed: false, optional: true, required: false
  private _audiences?: string[]; 
  public get audiences() {
    return this.getListAttribute('audiences');
  }
  public set audiences(value: string[]) {
    this._audiences = value;
  }
  public resetAudiences() {
    this._audiences = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get audiencesInput() {
    return this._audiences;
  }

  // claims_to_headers - computed: false, optional: true, required: false
  private _claimsToHeaders = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeadersList(this, "claims_to_headers", false);
  public get claimsToHeaders() {
    return this._claimsToHeaders;
  }
  public putClaimsToHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersClaimsToHeaders[] | cdktf.IResolvable) {
    this._claimsToHeaders.internalValue = value;
  }
  public resetClaimsToHeaders() {
    this._claimsToHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get claimsToHeadersInput() {
    return this._claimsToHeaders.internalValue;
  }

  // clock_skew_seconds - computed: false, optional: true, required: false
  private _clockSkewSeconds?: number; 
  public get clockSkewSeconds() {
    return this.getNumberAttribute('clock_skew_seconds');
  }
  public set clockSkewSeconds(value: number) {
    this._clockSkewSeconds = value;
  }
  public resetClockSkewSeconds() {
    this._clockSkewSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clockSkewSecondsInput() {
    return this._clockSkewSeconds;
  }

  // issuer - computed: false, optional: true, required: false
  private _issuer?: string; 
  public get issuer() {
    return this.getStringAttribute('issuer');
  }
  public set issuer(value: string) {
    this._issuer = value;
  }
  public resetIssuer() {
    this._issuer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get issuerInput() {
    return this._issuer;
  }

  // jwks - computed: false, optional: true, required: false
  private _jwks = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwksOutputReference(this, "jwks");
  public get jwks() {
    return this._jwks;
  }
  public putJwks(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersJwks) {
    this._jwks.internalValue = value;
  }
  public resetJwks() {
    this._jwks.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jwksInput() {
    return this._jwks.internalValue;
  }

  // keep_token - computed: false, optional: true, required: false
  private _keepToken?: boolean | cdktf.IResolvable; 
  public get keepToken() {
    return this.getBooleanAttribute('keep_token');
  }
  public set keepToken(value: boolean | cdktf.IResolvable) {
    this._keepToken = value;
  }
  public resetKeepToken() {
    this._keepToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keepTokenInput() {
    return this._keepToken;
  }

  // token_source - computed: false, optional: true, required: false
  private _tokenSource = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSourceOutputReference(this, "token_source");
  public get tokenSource() {
    return this._tokenSource;
  }
  public putTokenSource(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersTokenSource) {
    this._tokenSource.internalValue = value;
  }
  public resetTokenSource() {
    this._tokenSource.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenSourceInput() {
    return this._tokenSource.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuth {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#allow_missing_or_failed_jwt DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#allow_missing_or_failed_jwt}
  */
  readonly allowMissingOrFailedJwt?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#providers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#providers}
  */
  readonly providers?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProviders;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#validation_policy DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#validation_policy}
  */
  readonly validationPolicy?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_missing_or_failed_jwt: cdktf.booleanToTerraform(struct!.allowMissingOrFailedJwt),
    providers: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersToTerraform(struct!.providers),
    validation_policy: cdktf.stringToTerraform(struct!.validationPolicy),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_missing_or_failed_jwt: {
      value: cdktf.booleanToHclTerraform(struct!.allowMissingOrFailedJwt),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    providers: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersToHclTerraform(struct!.providers),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProviders",
    },
    validation_policy: {
      value: cdktf.stringToHclTerraform(struct!.validationPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuth | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowMissingOrFailedJwt !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowMissingOrFailedJwt = this._allowMissingOrFailedJwt;
    }
    if (this._providers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.providers = this._providers?.internalValue;
    }
    if (this._validationPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.validationPolicy = this._validationPolicy;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuth | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowMissingOrFailedJwt = undefined;
      this._providers.internalValue = undefined;
      this._validationPolicy = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowMissingOrFailedJwt = value.allowMissingOrFailedJwt;
      this._providers.internalValue = value.providers;
      this._validationPolicy = value.validationPolicy;
    }
  }

  // allow_missing_or_failed_jwt - computed: false, optional: true, required: false
  private _allowMissingOrFailedJwt?: boolean | cdktf.IResolvable; 
  public get allowMissingOrFailedJwt() {
    return this.getBooleanAttribute('allow_missing_or_failed_jwt');
  }
  public set allowMissingOrFailedJwt(value: boolean | cdktf.IResolvable) {
    this._allowMissingOrFailedJwt = value;
  }
  public resetAllowMissingOrFailedJwt() {
    this._allowMissingOrFailedJwt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowMissingOrFailedJwtInput() {
    return this._allowMissingOrFailedJwt;
  }

  // providers - computed: false, optional: true, required: false
  private _providers = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProvidersOutputReference(this, "providers");
  public get providers() {
    return this._providers;
  }
  public putProviders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthProviders) {
    this._providers.internalValue = value;
  }
  public resetProviders() {
    this._providers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get providersInput() {
    return this._providers.internalValue;
  }

  // validation_policy - computed: false, optional: true, required: false
  private _validationPolicy?: string; 
  public get validationPolicy() {
    return this.getStringAttribute('validation_policy');
  }
  public set validationPolicy(value: string) {
    this._validationPolicy = value;
  }
  public resetValidationPolicy() {
    this._validationPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get validationPolicyInput() {
    return this._validationPolicy;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStaged {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#after_ext_auth DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#after_ext_auth}
  */
  readonly afterExtAuth?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuth;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#before_ext_auth DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#before_ext_auth}
  */
  readonly beforeExtAuth?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuth;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStaged | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    after_ext_auth: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthToTerraform(struct!.afterExtAuth),
    before_ext_auth: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthToTerraform(struct!.beforeExtAuth),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStaged | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    after_ext_auth: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthToHclTerraform(struct!.afterExtAuth),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuth",
    },
    before_ext_auth: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthToHclTerraform(struct!.beforeExtAuth),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuth",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStaged | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._afterExtAuth?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.afterExtAuth = this._afterExtAuth?.internalValue;
    }
    if (this._beforeExtAuth?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.beforeExtAuth = this._beforeExtAuth?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStaged | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._afterExtAuth.internalValue = undefined;
      this._beforeExtAuth.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._afterExtAuth.internalValue = value.afterExtAuth;
      this._beforeExtAuth.internalValue = value.beforeExtAuth;
    }
  }

  // after_ext_auth - computed: false, optional: true, required: false
  private _afterExtAuth = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuthOutputReference(this, "after_ext_auth");
  public get afterExtAuth() {
    return this._afterExtAuth;
  }
  public putAfterExtAuth(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedAfterExtAuth) {
    this._afterExtAuth.internalValue = value;
  }
  public resetAfterExtAuth() {
    this._afterExtAuth.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get afterExtAuthInput() {
    return this._afterExtAuth.internalValue;
  }

  // before_ext_auth - computed: false, optional: true, required: false
  private _beforeExtAuth = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuthOutputReference(this, "before_ext_auth");
  public get beforeExtAuth() {
    return this._beforeExtAuth;
  }
  public putBeforeExtAuth(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsJwtStagedBeforeExtAuth) {
    this._beforeExtAuth.internalValue = value;
  }
  public resetBeforeExtAuth() {
    this._beforeExtAuth.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get beforeExtAuthInput() {
    return this._beforeExtAuth.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#namespace DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#namespace}
  */
  readonly namespace?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefs[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#refs DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#refs}
  */
  readonly refs?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefs[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    refs: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefsToTerraform, false)(struct!.refs),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    refs: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefsToHclTerraform, false)(struct!.refs),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._refs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.refs = this._refs?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._refs.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._refs.internalValue = value.refs;
    }
  }

  // refs - computed: false, optional: true, required: false
  private _refs = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefsList(this, "refs", false);
  public get refs() {
    return this._refs;
  }
  public putRefs(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitConfigsRefs[] | cdktf.IResolvable) {
    this._refs.internalValue = value;
  }
  public resetRefs() {
    this._refs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get refsInput() {
    return this._refs.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#namespace DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#namespace}
  */
  readonly namespace?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefs[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#refs DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#refs}
  */
  readonly refs?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefs[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    refs: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefsToTerraform, false)(struct!.refs),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    refs: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefsToHclTerraform, false)(struct!.refs),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._refs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.refs = this._refs?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._refs.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._refs.internalValue = value.refs;
    }
  }

  // refs - computed: false, optional: true, required: false
  private _refs = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefsList(this, "refs", false);
  public get refs() {
    return this._refs;
  }
  public putRefs(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitEarlyConfigsRefs[] | cdktf.IResolvable) {
    this._refs.internalValue = value;
  }
  public resetRefs() {
    this._refs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get refsInput() {
    return this._refs.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#namespace DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#namespace}
  */
  readonly namespace?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefs[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#refs DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#refs}
  */
  readonly refs?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefs[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    refs: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefsToTerraform, false)(struct!.refs),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    refs: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefsToHclTerraform, false)(struct!.refs),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._refs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.refs = this._refs?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._refs.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._refs.internalValue = value.refs;
    }
  }

  // refs - computed: false, optional: true, required: false
  private _refs = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefsList(this, "refs", false);
  public get refs() {
    return this._refs;
  }
  public putRefs(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRateLimitRegularConfigsRefs[] | cdktf.IResolvable) {
    this._refs.internalValue = value;
  }
  public resetRefs() {
    this._refs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get refsInput() {
    return this._refs.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitLocalRatelimit {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#fill_interval DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#fill_interval}
  */
  readonly fillInterval?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#max_tokens DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#max_tokens}
  */
  readonly maxTokens?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#tokens_per_fill DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#tokens_per_fill}
  */
  readonly tokensPerFill?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitLocalRatelimitToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitLocalRatelimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fill_interval: cdktf.stringToTerraform(struct!.fillInterval),
    max_tokens: cdktf.numberToTerraform(struct!.maxTokens),
    tokens_per_fill: cdktf.numberToTerraform(struct!.tokensPerFill),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitLocalRatelimitToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitLocalRatelimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fill_interval: {
      value: cdktf.stringToHclTerraform(struct!.fillInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_tokens: {
      value: cdktf.numberToHclTerraform(struct!.maxTokens),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    tokens_per_fill: {
      value: cdktf.numberToHclTerraform(struct!.tokensPerFill),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitLocalRatelimitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitLocalRatelimit | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fillInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.fillInterval = this._fillInterval;
    }
    if (this._maxTokens !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxTokens = this._maxTokens;
    }
    if (this._tokensPerFill !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokensPerFill = this._tokensPerFill;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitLocalRatelimit | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fillInterval = undefined;
      this._maxTokens = undefined;
      this._tokensPerFill = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fillInterval = value.fillInterval;
      this._maxTokens = value.maxTokens;
      this._tokensPerFill = value.tokensPerFill;
    }
  }

  // fill_interval - computed: false, optional: true, required: false
  private _fillInterval?: string; 
  public get fillInterval() {
    return this.getStringAttribute('fill_interval');
  }
  public set fillInterval(value: string) {
    this._fillInterval = value;
  }
  public resetFillInterval() {
    this._fillInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fillIntervalInput() {
    return this._fillInterval;
  }

  // max_tokens - computed: false, optional: true, required: false
  private _maxTokens?: number; 
  public get maxTokens() {
    return this.getNumberAttribute('max_tokens');
  }
  public set maxTokens(value: number) {
    this._maxTokens = value;
  }
  public resetMaxTokens() {
    this._maxTokens = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxTokensInput() {
    return this._maxTokens;
  }

  // tokens_per_fill - computed: false, optional: true, required: false
  private _tokensPerFill?: number; 
  public get tokensPerFill() {
    return this.getNumberAttribute('tokens_per_fill');
  }
  public set tokensPerFill(value: number) {
    this._tokensPerFill = value;
  }
  public resetTokensPerFill() {
    this._tokensPerFill = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokensPerFillInput() {
    return this._tokensPerFill;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsGenericKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_value}
  */
  readonly descriptorValue?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsGenericKeyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsGenericKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_value: cdktf.stringToTerraform(struct!.descriptorValue),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsGenericKeyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsGenericKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_value: {
      value: cdktf.stringToHclTerraform(struct!.descriptorValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsGenericKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsGenericKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorValue = this._descriptorValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsGenericKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorValue = value.descriptorValue;
    }
  }

  // descriptor_value - computed: false, optional: true, required: false
  private _descriptorValue?: string; 
  public get descriptorValue() {
    return this.getStringAttribute('descriptor_value');
  }
  public set descriptorValue(value: string) {
    this._descriptorValue = value;
  }
  public resetDescriptorValue() {
    this._descriptorValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorValueInput() {
    return this._descriptorValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersRangeMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#end DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#end}
  */
  readonly end?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#start DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#start}
  */
  readonly start?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersRangeMatchToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    end: cdktf.numberToTerraform(struct!.end),
    start: cdktf.numberToTerraform(struct!.start),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersRangeMatchToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    end: {
      value: cdktf.numberToHclTerraform(struct!.end),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    start: {
      value: cdktf.numberToHclTerraform(struct!.start),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersRangeMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._end !== undefined) {
      hasAnyValues = true;
      internalValueResult.end = this._end;
    }
    if (this._start !== undefined) {
      hasAnyValues = true;
      internalValueResult.start = this._start;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._end = undefined;
      this._start = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._end = value.end;
      this._start = value.start;
    }
  }

  // end - computed: false, optional: true, required: false
  private _end?: number; 
  public get end() {
    return this.getNumberAttribute('end');
  }
  public set end(value: number) {
    this._end = value;
  }
  public resetEnd() {
    this._end = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endInput() {
    return this._end;
  }

  // start - computed: false, optional: true, required: false
  private _start?: number; 
  public get start() {
    return this.getNumberAttribute('start');
  }
  public set start(value: number) {
    this._start = value;
  }
  public resetStart() {
    this._start = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startInput() {
    return this._start;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#exact_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#exact_match}
  */
  readonly exactMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#invert_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#invert_match}
  */
  readonly invertMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#prefix_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#prefix_match}
  */
  readonly prefixMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#present_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#present_match}
  */
  readonly presentMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#range_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#range_match}
  */
  readonly rangeMatch?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersRangeMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#regex_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#regex_match}
  */
  readonly regexMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#suffix_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#suffix_match}
  */
  readonly suffixMatch?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exact_match: cdktf.stringToTerraform(struct!.exactMatch),
    invert_match: cdktf.booleanToTerraform(struct!.invertMatch),
    name: cdktf.stringToTerraform(struct!.name),
    prefix_match: cdktf.stringToTerraform(struct!.prefixMatch),
    present_match: cdktf.booleanToTerraform(struct!.presentMatch),
    range_match: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersRangeMatchToTerraform(struct!.rangeMatch),
    regex_match: cdktf.stringToTerraform(struct!.regexMatch),
    suffix_match: cdktf.stringToTerraform(struct!.suffixMatch),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exact_match: {
      value: cdktf.stringToHclTerraform(struct!.exactMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    invert_match: {
      value: cdktf.booleanToHclTerraform(struct!.invertMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    prefix_match: {
      value: cdktf.stringToHclTerraform(struct!.prefixMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    present_match: {
      value: cdktf.booleanToHclTerraform(struct!.presentMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    range_match: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersRangeMatchToHclTerraform(struct!.rangeMatch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersRangeMatch",
    },
    regex_match: {
      value: cdktf.stringToHclTerraform(struct!.regexMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    suffix_match: {
      value: cdktf.stringToHclTerraform(struct!.suffixMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exactMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.exactMatch = this._exactMatch;
    }
    if (this._invertMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.invertMatch = this._invertMatch;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._prefixMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefixMatch = this._prefixMatch;
    }
    if (this._presentMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.presentMatch = this._presentMatch;
    }
    if (this._rangeMatch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rangeMatch = this._rangeMatch?.internalValue;
    }
    if (this._regexMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.regexMatch = this._regexMatch;
    }
    if (this._suffixMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.suffixMatch = this._suffixMatch;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exactMatch = undefined;
      this._invertMatch = undefined;
      this._name = undefined;
      this._prefixMatch = undefined;
      this._presentMatch = undefined;
      this._rangeMatch.internalValue = undefined;
      this._regexMatch = undefined;
      this._suffixMatch = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exactMatch = value.exactMatch;
      this._invertMatch = value.invertMatch;
      this._name = value.name;
      this._prefixMatch = value.prefixMatch;
      this._presentMatch = value.presentMatch;
      this._rangeMatch.internalValue = value.rangeMatch;
      this._regexMatch = value.regexMatch;
      this._suffixMatch = value.suffixMatch;
    }
  }

  // exact_match - computed: false, optional: true, required: false
  private _exactMatch?: string; 
  public get exactMatch() {
    return this.getStringAttribute('exact_match');
  }
  public set exactMatch(value: string) {
    this._exactMatch = value;
  }
  public resetExactMatch() {
    this._exactMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exactMatchInput() {
    return this._exactMatch;
  }

  // invert_match - computed: false, optional: true, required: false
  private _invertMatch?: boolean | cdktf.IResolvable; 
  public get invertMatch() {
    return this.getBooleanAttribute('invert_match');
  }
  public set invertMatch(value: boolean | cdktf.IResolvable) {
    this._invertMatch = value;
  }
  public resetInvertMatch() {
    this._invertMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get invertMatchInput() {
    return this._invertMatch;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // prefix_match - computed: false, optional: true, required: false
  private _prefixMatch?: string; 
  public get prefixMatch() {
    return this.getStringAttribute('prefix_match');
  }
  public set prefixMatch(value: string) {
    this._prefixMatch = value;
  }
  public resetPrefixMatch() {
    this._prefixMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixMatchInput() {
    return this._prefixMatch;
  }

  // present_match - computed: false, optional: true, required: false
  private _presentMatch?: boolean | cdktf.IResolvable; 
  public get presentMatch() {
    return this.getBooleanAttribute('present_match');
  }
  public set presentMatch(value: boolean | cdktf.IResolvable) {
    this._presentMatch = value;
  }
  public resetPresentMatch() {
    this._presentMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get presentMatchInput() {
    return this._presentMatch;
  }

  // range_match - computed: false, optional: true, required: false
  private _rangeMatch = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersRangeMatchOutputReference(this, "range_match");
  public get rangeMatch() {
    return this._rangeMatch;
  }
  public putRangeMatch(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersRangeMatch) {
    this._rangeMatch.internalValue = value;
  }
  public resetRangeMatch() {
    this._rangeMatch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rangeMatchInput() {
    return this._rangeMatch.internalValue;
  }

  // regex_match - computed: false, optional: true, required: false
  private _regexMatch?: string; 
  public get regexMatch() {
    return this.getStringAttribute('regex_match');
  }
  public set regexMatch(value: string) {
    this._regexMatch = value;
  }
  public resetRegexMatch() {
    this._regexMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexMatchInput() {
    return this._regexMatch;
  }

  // suffix_match - computed: false, optional: true, required: false
  private _suffixMatch?: string; 
  public get suffixMatch() {
    return this.getStringAttribute('suffix_match');
  }
  public set suffixMatch(value: string) {
    this._suffixMatch = value;
  }
  public resetSuffixMatch() {
    this._suffixMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get suffixMatchInput() {
    return this._suffixMatch;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_value}
  */
  readonly descriptorValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#expect_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#expect_match}
  */
  readonly expectMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#headers}
  */
  readonly headers?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeaders[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_value: cdktf.stringToTerraform(struct!.descriptorValue),
    expect_match: cdktf.booleanToTerraform(struct!.expectMatch),
    headers: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersToTerraform, false)(struct!.headers),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_value: {
      value: cdktf.stringToHclTerraform(struct!.descriptorValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    expect_match: {
      value: cdktf.booleanToHclTerraform(struct!.expectMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    headers: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorValue = this._descriptorValue;
    }
    if (this._expectMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.expectMatch = this._expectMatch;
    }
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorValue = undefined;
      this._expectMatch = undefined;
      this._headers.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorValue = value.descriptorValue;
      this._expectMatch = value.expectMatch;
      this._headers.internalValue = value.headers;
    }
  }

  // descriptor_value - computed: false, optional: true, required: false
  private _descriptorValue?: string; 
  public get descriptorValue() {
    return this.getStringAttribute('descriptor_value');
  }
  public set descriptorValue(value: string) {
    this._descriptorValue = value;
  }
  public resetDescriptorValue() {
    this._descriptorValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorValueInput() {
    return this._descriptorValue;
  }

  // expect_match - computed: false, optional: true, required: false
  private _expectMatch?: boolean | cdktf.IResolvable; 
  public get expectMatch() {
    return this.getBooleanAttribute('expect_match');
  }
  public set expectMatch(value: boolean | cdktf.IResolvable) {
    this._expectMatch = value;
  }
  public resetExpectMatch() {
    this._expectMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expectMatchInput() {
    return this._expectMatch;
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPath {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPathToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPathToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPathList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPath[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPathOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPathOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#path DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#path}
  */
  readonly path?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPath[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    path: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPathToTerraform, false)(struct!.path),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPathToHclTerraform, false)(struct!.path),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPathList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._path.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._path.internalValue = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPathList(this, "path", false);
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyPath[] | cdktf.IResolvable) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#default_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#default_value}
  */
  readonly defaultValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_key}
  */
  readonly descriptorKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata_key}
  */
  readonly metadataKey?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#source DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#source}
  */
  readonly source?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_value: cdktf.stringToTerraform(struct!.defaultValue),
    descriptor_key: cdktf.stringToTerraform(struct!.descriptorKey),
    metadata_key: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyToTerraform(struct!.metadataKey),
    source: cdktf.stringToTerraform(struct!.source),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_value: {
      value: cdktf.stringToHclTerraform(struct!.defaultValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    descriptor_key: {
      value: cdktf.stringToHclTerraform(struct!.descriptorKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metadata_key: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyToHclTerraform(struct!.metadataKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKey",
    },
    source: {
      value: cdktf.stringToHclTerraform(struct!.source),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultValue = this._defaultValue;
    }
    if (this._descriptorKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorKey = this._descriptorKey;
    }
    if (this._metadataKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataKey = this._metadataKey?.internalValue;
    }
    if (this._source !== undefined) {
      hasAnyValues = true;
      internalValueResult.source = this._source;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultValue = undefined;
      this._descriptorKey = undefined;
      this._metadataKey.internalValue = undefined;
      this._source = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultValue = value.defaultValue;
      this._descriptorKey = value.descriptorKey;
      this._metadataKey.internalValue = value.metadataKey;
      this._source = value.source;
    }
  }

  // default_value - computed: false, optional: true, required: false
  private _defaultValue?: string; 
  public get defaultValue() {
    return this.getStringAttribute('default_value');
  }
  public set defaultValue(value: string) {
    this._defaultValue = value;
  }
  public resetDefaultValue() {
    this._defaultValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultValueInput() {
    return this._defaultValue;
  }

  // descriptor_key - computed: false, optional: true, required: false
  private _descriptorKey?: string; 
  public get descriptorKey() {
    return this.getStringAttribute('descriptor_key');
  }
  public set descriptorKey(value: string) {
    this._descriptorKey = value;
  }
  public resetDescriptorKey() {
    this._descriptorKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorKeyInput() {
    return this._descriptorKey;
  }

  // metadata_key - computed: false, optional: true, required: false
  private _metadataKey = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKeyOutputReference(this, "metadata_key");
  public get metadataKey() {
    return this._metadataKey;
  }
  public putMetadataKey(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataMetadataKey) {
    this._metadataKey.internalValue = value;
  }
  public resetMetadataKey() {
    this._metadataKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataKeyInput() {
    return this._metadataKey.internalValue;
  }

  // source - computed: false, optional: true, required: false
  private _source?: string; 
  public get source() {
    return this.getStringAttribute('source');
  }
  public set source(value: string) {
    this._source = value;
  }
  public resetSource() {
    this._source = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceInput() {
    return this._source;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsRequestHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_key}
  */
  readonly descriptorKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header_name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header_name}
  */
  readonly headerName?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsRequestHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsRequestHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_key: cdktf.stringToTerraform(struct!.descriptorKey),
    header_name: cdktf.stringToTerraform(struct!.headerName),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsRequestHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsRequestHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_key: {
      value: cdktf.stringToHclTerraform(struct!.descriptorKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    header_name: {
      value: cdktf.stringToHclTerraform(struct!.headerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsRequestHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsRequestHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorKey = this._descriptorKey;
    }
    if (this._headerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.headerName = this._headerName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsRequestHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorKey = undefined;
      this._headerName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorKey = value.descriptorKey;
      this._headerName = value.headerName;
    }
  }

  // descriptor_key - computed: false, optional: true, required: false
  private _descriptorKey?: string; 
  public get descriptorKey() {
    return this.getStringAttribute('descriptor_key');
  }
  public set descriptorKey(value: string) {
    this._descriptorKey = value;
  }
  public resetDescriptorKey() {
    this._descriptorKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorKeyInput() {
    return this._descriptorKey;
  }

  // header_name - computed: false, optional: true, required: false
  private _headerName?: string; 
  public get headerName() {
    return this.getStringAttribute('header_name');
  }
  public set headerName(value: string) {
    this._headerName = value;
  }
  public resetHeaderName() {
    this._headerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerNameInput() {
    return this._headerName;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#destination_cluster DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#destination_cluster}
  */
  readonly destinationCluster?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#generic_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#generic_key}
  */
  readonly genericKey?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsGenericKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header_value_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header_value_match}
  */
  readonly headerValueMatch?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata}
  */
  readonly metadata?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#remote_address DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#remote_address}
  */
  readonly remoteAddress?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#request_headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#request_headers}
  */
  readonly requestHeaders?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsRequestHeaders;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#source_cluster DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#source_cluster}
  */
  readonly sourceCluster?: { [key: string]: string };
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    destination_cluster: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.destinationCluster),
    generic_key: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsGenericKeyToTerraform(struct!.genericKey),
    header_value_match: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchToTerraform(struct!.headerValueMatch),
    metadata: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataToTerraform(struct!.metadata),
    remote_address: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.remoteAddress),
    request_headers: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsRequestHeadersToTerraform(struct!.requestHeaders),
    source_cluster: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.sourceCluster),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    destination_cluster: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.destinationCluster),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    generic_key: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsGenericKeyToHclTerraform(struct!.genericKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsGenericKey",
    },
    header_value_match: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchToHclTerraform(struct!.headerValueMatch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatch",
    },
    metadata: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadata",
    },
    remote_address: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.remoteAddress),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    request_headers: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsRequestHeadersToHclTerraform(struct!.requestHeaders),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsRequestHeaders",
    },
    source_cluster: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.sourceCluster),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._destinationCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.destinationCluster = this._destinationCluster;
    }
    if (this._genericKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.genericKey = this._genericKey?.internalValue;
    }
    if (this._headerValueMatch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headerValueMatch = this._headerValueMatch?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._remoteAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteAddress = this._remoteAddress;
    }
    if (this._requestHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestHeaders = this._requestHeaders?.internalValue;
    }
    if (this._sourceCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourceCluster = this._sourceCluster;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._destinationCluster = undefined;
      this._genericKey.internalValue = undefined;
      this._headerValueMatch.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._remoteAddress = undefined;
      this._requestHeaders.internalValue = undefined;
      this._sourceCluster = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._destinationCluster = value.destinationCluster;
      this._genericKey.internalValue = value.genericKey;
      this._headerValueMatch.internalValue = value.headerValueMatch;
      this._metadata.internalValue = value.metadata;
      this._remoteAddress = value.remoteAddress;
      this._requestHeaders.internalValue = value.requestHeaders;
      this._sourceCluster = value.sourceCluster;
    }
  }

  // destination_cluster - computed: false, optional: true, required: false
  private _destinationCluster?: { [key: string]: string }; 
  public get destinationCluster() {
    return this.getStringMapAttribute('destination_cluster');
  }
  public set destinationCluster(value: { [key: string]: string }) {
    this._destinationCluster = value;
  }
  public resetDestinationCluster() {
    this._destinationCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get destinationClusterInput() {
    return this._destinationCluster;
  }

  // generic_key - computed: false, optional: true, required: false
  private _genericKey = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsGenericKeyOutputReference(this, "generic_key");
  public get genericKey() {
    return this._genericKey;
  }
  public putGenericKey(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsGenericKey) {
    this._genericKey.internalValue = value;
  }
  public resetGenericKey() {
    this._genericKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get genericKeyInput() {
    return this._genericKey.internalValue;
  }

  // header_value_match - computed: false, optional: true, required: false
  private _headerValueMatch = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatchOutputReference(this, "header_value_match");
  public get headerValueMatch() {
    return this._headerValueMatch;
  }
  public putHeaderValueMatch(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsHeaderValueMatch) {
    this._headerValueMatch.internalValue = value;
  }
  public resetHeaderValueMatch() {
    this._headerValueMatch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerValueMatchInput() {
    return this._headerValueMatch.internalValue;
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // remote_address - computed: false, optional: true, required: false
  private _remoteAddress?: { [key: string]: string }; 
  public get remoteAddress() {
    return this.getStringMapAttribute('remote_address');
  }
  public set remoteAddress(value: { [key: string]: string }) {
    this._remoteAddress = value;
  }
  public resetRemoteAddress() {
    this._remoteAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteAddressInput() {
    return this._remoteAddress;
  }

  // request_headers - computed: false, optional: true, required: false
  private _requestHeaders = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsRequestHeadersOutputReference(this, "request_headers");
  public get requestHeaders() {
    return this._requestHeaders;
  }
  public putRequestHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsRequestHeaders) {
    this._requestHeaders.internalValue = value;
  }
  public resetRequestHeaders() {
    this._requestHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestHeadersInput() {
    return this._requestHeaders.internalValue;
  }

  // source_cluster - computed: false, optional: true, required: false
  private _sourceCluster?: { [key: string]: string }; 
  public get sourceCluster() {
    return this.getStringMapAttribute('source_cluster');
  }
  public set sourceCluster(value: { [key: string]: string }) {
    this._sourceCluster = value;
  }
  public resetSourceCluster() {
    this._sourceCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceClusterInput() {
    return this._sourceCluster;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPath {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPathToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPathToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPathList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPath[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPathOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPathOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#path DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#path}
  */
  readonly path?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPath[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    path: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPathToTerraform, false)(struct!.path),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPathToHclTerraform, false)(struct!.path),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPathList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._path.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._path.internalValue = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPathList(this, "path", false);
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyPath[] | cdktf.IResolvable) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata_key}
  */
  readonly metadataKey?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKey;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata_key: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyToTerraform(struct!.metadataKey),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata_key: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyToHclTerraform(struct!.metadataKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKey",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadataKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataKey = this._metadataKey?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadataKey.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadataKey.internalValue = value.metadataKey;
    }
  }

  // metadata_key - computed: false, optional: true, required: false
  private _metadataKey = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKeyOutputReference(this, "metadata_key");
  public get metadataKey() {
    return this._metadataKey;
  }
  public putMetadataKey(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataMetadataKey) {
    this._metadataKey.internalValue = value;
  }
  public resetMetadataKey() {
    this._metadataKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataKeyInput() {
    return this._metadataKey.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimit {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#dynamic_metadata DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#dynamic_metadata}
  */
  readonly dynamicMetadata?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadata;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dynamic_metadata: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataToTerraform(struct!.dynamicMetadata),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dynamic_metadata: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataToHclTerraform(struct!.dynamicMetadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadata",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimit | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dynamicMetadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dynamicMetadata = this._dynamicMetadata?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimit | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dynamicMetadata.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dynamicMetadata.internalValue = value.dynamicMetadata;
    }
  }

  // dynamic_metadata - computed: false, optional: true, required: false
  private _dynamicMetadata = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadataOutputReference(this, "dynamic_metadata");
  public get dynamicMetadata() {
    return this._dynamicMetadata;
  }
  public putDynamicMetadata(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitDynamicMetadata) {
    this._dynamicMetadata.internalValue = value;
  }
  public resetDynamicMetadata() {
    this._dynamicMetadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dynamicMetadataInput() {
    return this._dynamicMetadata.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsGenericKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_value}
  */
  readonly descriptorValue?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsGenericKeyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsGenericKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_value: cdktf.stringToTerraform(struct!.descriptorValue),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsGenericKeyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsGenericKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_value: {
      value: cdktf.stringToHclTerraform(struct!.descriptorValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsGenericKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsGenericKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorValue = this._descriptorValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsGenericKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorValue = value.descriptorValue;
    }
  }

  // descriptor_value - computed: false, optional: true, required: false
  private _descriptorValue?: string; 
  public get descriptorValue() {
    return this.getStringAttribute('descriptor_value');
  }
  public set descriptorValue(value: string) {
    this._descriptorValue = value;
  }
  public resetDescriptorValue() {
    this._descriptorValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorValueInput() {
    return this._descriptorValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#end DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#end}
  */
  readonly end?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#start DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#start}
  */
  readonly start?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    end: cdktf.numberToTerraform(struct!.end),
    start: cdktf.numberToTerraform(struct!.start),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    end: {
      value: cdktf.numberToHclTerraform(struct!.end),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    start: {
      value: cdktf.numberToHclTerraform(struct!.start),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._end !== undefined) {
      hasAnyValues = true;
      internalValueResult.end = this._end;
    }
    if (this._start !== undefined) {
      hasAnyValues = true;
      internalValueResult.start = this._start;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._end = undefined;
      this._start = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._end = value.end;
      this._start = value.start;
    }
  }

  // end - computed: false, optional: true, required: false
  private _end?: number; 
  public get end() {
    return this.getNumberAttribute('end');
  }
  public set end(value: number) {
    this._end = value;
  }
  public resetEnd() {
    this._end = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endInput() {
    return this._end;
  }

  // start - computed: false, optional: true, required: false
  private _start?: number; 
  public get start() {
    return this.getNumberAttribute('start');
  }
  public set start(value: number) {
    this._start = value;
  }
  public resetStart() {
    this._start = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startInput() {
    return this._start;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#exact_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#exact_match}
  */
  readonly exactMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#invert_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#invert_match}
  */
  readonly invertMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#prefix_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#prefix_match}
  */
  readonly prefixMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#present_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#present_match}
  */
  readonly presentMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#range_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#range_match}
  */
  readonly rangeMatch?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#regex_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#regex_match}
  */
  readonly regexMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#suffix_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#suffix_match}
  */
  readonly suffixMatch?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exact_match: cdktf.stringToTerraform(struct!.exactMatch),
    invert_match: cdktf.booleanToTerraform(struct!.invertMatch),
    name: cdktf.stringToTerraform(struct!.name),
    prefix_match: cdktf.stringToTerraform(struct!.prefixMatch),
    present_match: cdktf.booleanToTerraform(struct!.presentMatch),
    range_match: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchToTerraform(struct!.rangeMatch),
    regex_match: cdktf.stringToTerraform(struct!.regexMatch),
    suffix_match: cdktf.stringToTerraform(struct!.suffixMatch),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exact_match: {
      value: cdktf.stringToHclTerraform(struct!.exactMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    invert_match: {
      value: cdktf.booleanToHclTerraform(struct!.invertMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    prefix_match: {
      value: cdktf.stringToHclTerraform(struct!.prefixMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    present_match: {
      value: cdktf.booleanToHclTerraform(struct!.presentMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    range_match: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchToHclTerraform(struct!.rangeMatch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch",
    },
    regex_match: {
      value: cdktf.stringToHclTerraform(struct!.regexMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    suffix_match: {
      value: cdktf.stringToHclTerraform(struct!.suffixMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exactMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.exactMatch = this._exactMatch;
    }
    if (this._invertMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.invertMatch = this._invertMatch;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._prefixMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefixMatch = this._prefixMatch;
    }
    if (this._presentMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.presentMatch = this._presentMatch;
    }
    if (this._rangeMatch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rangeMatch = this._rangeMatch?.internalValue;
    }
    if (this._regexMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.regexMatch = this._regexMatch;
    }
    if (this._suffixMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.suffixMatch = this._suffixMatch;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exactMatch = undefined;
      this._invertMatch = undefined;
      this._name = undefined;
      this._prefixMatch = undefined;
      this._presentMatch = undefined;
      this._rangeMatch.internalValue = undefined;
      this._regexMatch = undefined;
      this._suffixMatch = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exactMatch = value.exactMatch;
      this._invertMatch = value.invertMatch;
      this._name = value.name;
      this._prefixMatch = value.prefixMatch;
      this._presentMatch = value.presentMatch;
      this._rangeMatch.internalValue = value.rangeMatch;
      this._regexMatch = value.regexMatch;
      this._suffixMatch = value.suffixMatch;
    }
  }

  // exact_match - computed: false, optional: true, required: false
  private _exactMatch?: string; 
  public get exactMatch() {
    return this.getStringAttribute('exact_match');
  }
  public set exactMatch(value: string) {
    this._exactMatch = value;
  }
  public resetExactMatch() {
    this._exactMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exactMatchInput() {
    return this._exactMatch;
  }

  // invert_match - computed: false, optional: true, required: false
  private _invertMatch?: boolean | cdktf.IResolvable; 
  public get invertMatch() {
    return this.getBooleanAttribute('invert_match');
  }
  public set invertMatch(value: boolean | cdktf.IResolvable) {
    this._invertMatch = value;
  }
  public resetInvertMatch() {
    this._invertMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get invertMatchInput() {
    return this._invertMatch;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // prefix_match - computed: false, optional: true, required: false
  private _prefixMatch?: string; 
  public get prefixMatch() {
    return this.getStringAttribute('prefix_match');
  }
  public set prefixMatch(value: string) {
    this._prefixMatch = value;
  }
  public resetPrefixMatch() {
    this._prefixMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixMatchInput() {
    return this._prefixMatch;
  }

  // present_match - computed: false, optional: true, required: false
  private _presentMatch?: boolean | cdktf.IResolvable; 
  public get presentMatch() {
    return this.getBooleanAttribute('present_match');
  }
  public set presentMatch(value: boolean | cdktf.IResolvable) {
    this._presentMatch = value;
  }
  public resetPresentMatch() {
    this._presentMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get presentMatchInput() {
    return this._presentMatch;
  }

  // range_match - computed: false, optional: true, required: false
  private _rangeMatch = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchOutputReference(this, "range_match");
  public get rangeMatch() {
    return this._rangeMatch;
  }
  public putRangeMatch(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch) {
    this._rangeMatch.internalValue = value;
  }
  public resetRangeMatch() {
    this._rangeMatch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rangeMatchInput() {
    return this._rangeMatch.internalValue;
  }

  // regex_match - computed: false, optional: true, required: false
  private _regexMatch?: string; 
  public get regexMatch() {
    return this.getStringAttribute('regex_match');
  }
  public set regexMatch(value: string) {
    this._regexMatch = value;
  }
  public resetRegexMatch() {
    this._regexMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexMatchInput() {
    return this._regexMatch;
  }

  // suffix_match - computed: false, optional: true, required: false
  private _suffixMatch?: string; 
  public get suffixMatch() {
    return this.getStringAttribute('suffix_match');
  }
  public set suffixMatch(value: string) {
    this._suffixMatch = value;
  }
  public resetSuffixMatch() {
    this._suffixMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get suffixMatchInput() {
    return this._suffixMatch;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_value}
  */
  readonly descriptorValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#expect_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#expect_match}
  */
  readonly expectMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#headers}
  */
  readonly headers?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeaders[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_value: cdktf.stringToTerraform(struct!.descriptorValue),
    expect_match: cdktf.booleanToTerraform(struct!.expectMatch),
    headers: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersToTerraform, false)(struct!.headers),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_value: {
      value: cdktf.stringToHclTerraform(struct!.descriptorValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    expect_match: {
      value: cdktf.booleanToHclTerraform(struct!.expectMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    headers: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorValue = this._descriptorValue;
    }
    if (this._expectMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.expectMatch = this._expectMatch;
    }
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorValue = undefined;
      this._expectMatch = undefined;
      this._headers.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorValue = value.descriptorValue;
      this._expectMatch = value.expectMatch;
      this._headers.internalValue = value.headers;
    }
  }

  // descriptor_value - computed: false, optional: true, required: false
  private _descriptorValue?: string; 
  public get descriptorValue() {
    return this.getStringAttribute('descriptor_value');
  }
  public set descriptorValue(value: string) {
    this._descriptorValue = value;
  }
  public resetDescriptorValue() {
    this._descriptorValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorValueInput() {
    return this._descriptorValue;
  }

  // expect_match - computed: false, optional: true, required: false
  private _expectMatch?: boolean | cdktf.IResolvable; 
  public get expectMatch() {
    return this.getBooleanAttribute('expect_match');
  }
  public set expectMatch(value: boolean | cdktf.IResolvable) {
    this._expectMatch = value;
  }
  public resetExpectMatch() {
    this._expectMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expectMatchInput() {
    return this._expectMatch;
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPath {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPathToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPathToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPathList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPath[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPathOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPathOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#path DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#path}
  */
  readonly path?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPath[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    path: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPathToTerraform, false)(struct!.path),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPathToHclTerraform, false)(struct!.path),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPathList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._path.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._path.internalValue = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPathList(this, "path", false);
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyPath[] | cdktf.IResolvable) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#default_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#default_value}
  */
  readonly defaultValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_key}
  */
  readonly descriptorKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata_key}
  */
  readonly metadataKey?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#source DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#source}
  */
  readonly source?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_value: cdktf.stringToTerraform(struct!.defaultValue),
    descriptor_key: cdktf.stringToTerraform(struct!.descriptorKey),
    metadata_key: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyToTerraform(struct!.metadataKey),
    source: cdktf.stringToTerraform(struct!.source),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_value: {
      value: cdktf.stringToHclTerraform(struct!.defaultValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    descriptor_key: {
      value: cdktf.stringToHclTerraform(struct!.descriptorKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metadata_key: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyToHclTerraform(struct!.metadataKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKey",
    },
    source: {
      value: cdktf.stringToHclTerraform(struct!.source),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultValue = this._defaultValue;
    }
    if (this._descriptorKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorKey = this._descriptorKey;
    }
    if (this._metadataKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataKey = this._metadataKey?.internalValue;
    }
    if (this._source !== undefined) {
      hasAnyValues = true;
      internalValueResult.source = this._source;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultValue = undefined;
      this._descriptorKey = undefined;
      this._metadataKey.internalValue = undefined;
      this._source = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultValue = value.defaultValue;
      this._descriptorKey = value.descriptorKey;
      this._metadataKey.internalValue = value.metadataKey;
      this._source = value.source;
    }
  }

  // default_value - computed: false, optional: true, required: false
  private _defaultValue?: string; 
  public get defaultValue() {
    return this.getStringAttribute('default_value');
  }
  public set defaultValue(value: string) {
    this._defaultValue = value;
  }
  public resetDefaultValue() {
    this._defaultValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultValueInput() {
    return this._defaultValue;
  }

  // descriptor_key - computed: false, optional: true, required: false
  private _descriptorKey?: string; 
  public get descriptorKey() {
    return this.getStringAttribute('descriptor_key');
  }
  public set descriptorKey(value: string) {
    this._descriptorKey = value;
  }
  public resetDescriptorKey() {
    this._descriptorKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorKeyInput() {
    return this._descriptorKey;
  }

  // metadata_key - computed: false, optional: true, required: false
  private _metadataKey = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKeyOutputReference(this, "metadata_key");
  public get metadataKey() {
    return this._metadataKey;
  }
  public putMetadataKey(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataMetadataKey) {
    this._metadataKey.internalValue = value;
  }
  public resetMetadataKey() {
    this._metadataKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataKeyInput() {
    return this._metadataKey.internalValue;
  }

  // source - computed: false, optional: true, required: false
  private _source?: string; 
  public get source() {
    return this.getStringAttribute('source');
  }
  public set source(value: string) {
    this._source = value;
  }
  public resetSource() {
    this._source = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceInput() {
    return this._source;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsRequestHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_key}
  */
  readonly descriptorKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header_name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header_name}
  */
  readonly headerName?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsRequestHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsRequestHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_key: cdktf.stringToTerraform(struct!.descriptorKey),
    header_name: cdktf.stringToTerraform(struct!.headerName),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsRequestHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsRequestHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_key: {
      value: cdktf.stringToHclTerraform(struct!.descriptorKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    header_name: {
      value: cdktf.stringToHclTerraform(struct!.headerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsRequestHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsRequestHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorKey = this._descriptorKey;
    }
    if (this._headerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.headerName = this._headerName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsRequestHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorKey = undefined;
      this._headerName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorKey = value.descriptorKey;
      this._headerName = value.headerName;
    }
  }

  // descriptor_key - computed: false, optional: true, required: false
  private _descriptorKey?: string; 
  public get descriptorKey() {
    return this.getStringAttribute('descriptor_key');
  }
  public set descriptorKey(value: string) {
    this._descriptorKey = value;
  }
  public resetDescriptorKey() {
    this._descriptorKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorKeyInput() {
    return this._descriptorKey;
  }

  // header_name - computed: false, optional: true, required: false
  private _headerName?: string; 
  public get headerName() {
    return this.getStringAttribute('header_name');
  }
  public set headerName(value: string) {
    this._headerName = value;
  }
  public resetHeaderName() {
    this._headerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerNameInput() {
    return this._headerName;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#destination_cluster DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#destination_cluster}
  */
  readonly destinationCluster?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#generic_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#generic_key}
  */
  readonly genericKey?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsGenericKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header_value_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header_value_match}
  */
  readonly headerValueMatch?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata}
  */
  readonly metadata?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#remote_address DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#remote_address}
  */
  readonly remoteAddress?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#request_headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#request_headers}
  */
  readonly requestHeaders?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsRequestHeaders;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#source_cluster DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#source_cluster}
  */
  readonly sourceCluster?: { [key: string]: string };
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    destination_cluster: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.destinationCluster),
    generic_key: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsGenericKeyToTerraform(struct!.genericKey),
    header_value_match: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchToTerraform(struct!.headerValueMatch),
    metadata: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataToTerraform(struct!.metadata),
    remote_address: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.remoteAddress),
    request_headers: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsRequestHeadersToTerraform(struct!.requestHeaders),
    source_cluster: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.sourceCluster),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    destination_cluster: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.destinationCluster),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    generic_key: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsGenericKeyToHclTerraform(struct!.genericKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsGenericKey",
    },
    header_value_match: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchToHclTerraform(struct!.headerValueMatch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatch",
    },
    metadata: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadata",
    },
    remote_address: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.remoteAddress),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    request_headers: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsRequestHeadersToHclTerraform(struct!.requestHeaders),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsRequestHeaders",
    },
    source_cluster: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.sourceCluster),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._destinationCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.destinationCluster = this._destinationCluster;
    }
    if (this._genericKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.genericKey = this._genericKey?.internalValue;
    }
    if (this._headerValueMatch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headerValueMatch = this._headerValueMatch?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._remoteAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteAddress = this._remoteAddress;
    }
    if (this._requestHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestHeaders = this._requestHeaders?.internalValue;
    }
    if (this._sourceCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourceCluster = this._sourceCluster;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._destinationCluster = undefined;
      this._genericKey.internalValue = undefined;
      this._headerValueMatch.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._remoteAddress = undefined;
      this._requestHeaders.internalValue = undefined;
      this._sourceCluster = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._destinationCluster = value.destinationCluster;
      this._genericKey.internalValue = value.genericKey;
      this._headerValueMatch.internalValue = value.headerValueMatch;
      this._metadata.internalValue = value.metadata;
      this._remoteAddress = value.remoteAddress;
      this._requestHeaders.internalValue = value.requestHeaders;
      this._sourceCluster = value.sourceCluster;
    }
  }

  // destination_cluster - computed: false, optional: true, required: false
  private _destinationCluster?: { [key: string]: string }; 
  public get destinationCluster() {
    return this.getStringMapAttribute('destination_cluster');
  }
  public set destinationCluster(value: { [key: string]: string }) {
    this._destinationCluster = value;
  }
  public resetDestinationCluster() {
    this._destinationCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get destinationClusterInput() {
    return this._destinationCluster;
  }

  // generic_key - computed: false, optional: true, required: false
  private _genericKey = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsGenericKeyOutputReference(this, "generic_key");
  public get genericKey() {
    return this._genericKey;
  }
  public putGenericKey(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsGenericKey) {
    this._genericKey.internalValue = value;
  }
  public resetGenericKey() {
    this._genericKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get genericKeyInput() {
    return this._genericKey.internalValue;
  }

  // header_value_match - computed: false, optional: true, required: false
  private _headerValueMatch = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatchOutputReference(this, "header_value_match");
  public get headerValueMatch() {
    return this._headerValueMatch;
  }
  public putHeaderValueMatch(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsHeaderValueMatch) {
    this._headerValueMatch.internalValue = value;
  }
  public resetHeaderValueMatch() {
    this._headerValueMatch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerValueMatchInput() {
    return this._headerValueMatch.internalValue;
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // remote_address - computed: false, optional: true, required: false
  private _remoteAddress?: { [key: string]: string }; 
  public get remoteAddress() {
    return this.getStringMapAttribute('remote_address');
  }
  public set remoteAddress(value: { [key: string]: string }) {
    this._remoteAddress = value;
  }
  public resetRemoteAddress() {
    this._remoteAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteAddressInput() {
    return this._remoteAddress;
  }

  // request_headers - computed: false, optional: true, required: false
  private _requestHeaders = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsRequestHeadersOutputReference(this, "request_headers");
  public get requestHeaders() {
    return this._requestHeaders;
  }
  public putRequestHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsRequestHeaders) {
    this._requestHeaders.internalValue = value;
  }
  public resetRequestHeaders() {
    this._requestHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestHeadersInput() {
    return this._requestHeaders.internalValue;
  }

  // source_cluster - computed: false, optional: true, required: false
  private _sourceCluster?: { [key: string]: string }; 
  public get sourceCluster() {
    return this.getStringMapAttribute('source_cluster');
  }
  public set sourceCluster(value: { [key: string]: string }) {
    this._sourceCluster = value;
  }
  public resetSourceCluster() {
    this._sourceCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceClusterInput() {
    return this._sourceCluster;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimits {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#actions DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#actions}
  */
  readonly actions?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#limit DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#limit}
  */
  readonly limit?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimit;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#set_actions DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#set_actions}
  */
  readonly setActions?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActions[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    actions: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsToTerraform, false)(struct!.actions),
    limit: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitToTerraform(struct!.limit),
    set_actions: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsToTerraform, false)(struct!.setActions),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    actions: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsToHclTerraform, false)(struct!.actions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsList",
    },
    limit: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitToHclTerraform(struct!.limit),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimit",
    },
    set_actions: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsToHclTerraform, false)(struct!.setActions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimits | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._actions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.actions = this._actions?.internalValue;
    }
    if (this._limit?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.limit = this._limit?.internalValue;
    }
    if (this._setActions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.setActions = this._setActions?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimits | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._actions.internalValue = undefined;
      this._limit.internalValue = undefined;
      this._setActions.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._actions.internalValue = value.actions;
      this._limit.internalValue = value.limit;
      this._setActions.internalValue = value.setActions;
    }
  }

  // actions - computed: false, optional: true, required: false
  private _actions = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActionsList(this, "actions", false);
  public get actions() {
    return this._actions;
  }
  public putActions(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsActions[] | cdktf.IResolvable) {
    this._actions.internalValue = value;
  }
  public resetActions() {
    this._actions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionsInput() {
    return this._actions.internalValue;
  }

  // limit - computed: false, optional: true, required: false
  private _limit = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimitOutputReference(this, "limit");
  public get limit() {
    return this._limit;
  }
  public putLimit(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsLimit) {
    this._limit.internalValue = value;
  }
  public resetLimit() {
    this._limit.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitInput() {
    return this._limit.internalValue;
  }

  // set_actions - computed: false, optional: true, required: false
  private _setActions = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActionsList(this, "set_actions", false);
  public get setActions() {
    return this._setActions;
  }
  public putSetActions(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsSetActions[] | cdktf.IResolvable) {
    this._setActions.internalValue = value;
  }
  public resetSetActions() {
    this._setActions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get setActionsInput() {
    return this._setActions.internalValue;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimits[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimit {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#local_ratelimit DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#local_ratelimit}
  */
  readonly localRatelimit?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitLocalRatelimit;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#rate_limits DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#rate_limits}
  */
  readonly rateLimits?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimits[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    local_ratelimit: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitLocalRatelimitToTerraform(struct!.localRatelimit),
    rate_limits: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsToTerraform, false)(struct!.rateLimits),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    local_ratelimit: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitLocalRatelimitToHclTerraform(struct!.localRatelimit),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitLocalRatelimit",
    },
    rate_limits: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsToHclTerraform, false)(struct!.rateLimits),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimit | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._localRatelimit?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.localRatelimit = this._localRatelimit?.internalValue;
    }
    if (this._rateLimits?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rateLimits = this._rateLimits?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimit | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._localRatelimit.internalValue = undefined;
      this._rateLimits.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._localRatelimit.internalValue = value.localRatelimit;
      this._rateLimits.internalValue = value.rateLimits;
    }
  }

  // local_ratelimit - computed: false, optional: true, required: false
  private _localRatelimit = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitLocalRatelimitOutputReference(this, "local_ratelimit");
  public get localRatelimit() {
    return this._localRatelimit;
  }
  public putLocalRatelimit(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitLocalRatelimit) {
    this._localRatelimit.internalValue = value;
  }
  public resetLocalRatelimit() {
    this._localRatelimit.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localRatelimitInput() {
    return this._localRatelimit.internalValue;
  }

  // rate_limits - computed: false, optional: true, required: false
  private _rateLimits = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimitsList(this, "rate_limits", false);
  public get rateLimits() {
    return this._rateLimits;
  }
  public putRateLimits(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRateLimits[] | cdktf.IResolvable) {
    this._rateLimits.internalValue = value;
  }
  public resetRateLimits() {
    this._rateLimits.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rateLimitsInput() {
    return this._rateLimits.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAnonymousLimits {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#requests_per_unit DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#requests_per_unit}
  */
  readonly requestsPerUnit?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#unit DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#unit}
  */
  readonly unit?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAnonymousLimitsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAnonymousLimits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    requests_per_unit: cdktf.numberToTerraform(struct!.requestsPerUnit),
    unit: cdktf.stringToTerraform(struct!.unit),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAnonymousLimitsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAnonymousLimits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    requests_per_unit: {
      value: cdktf.numberToHclTerraform(struct!.requestsPerUnit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    unit: {
      value: cdktf.stringToHclTerraform(struct!.unit),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAnonymousLimitsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAnonymousLimits | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._requestsPerUnit !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestsPerUnit = this._requestsPerUnit;
    }
    if (this._unit !== undefined) {
      hasAnyValues = true;
      internalValueResult.unit = this._unit;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAnonymousLimits | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._requestsPerUnit = undefined;
      this._unit = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._requestsPerUnit = value.requestsPerUnit;
      this._unit = value.unit;
    }
  }

  // requests_per_unit - computed: false, optional: true, required: false
  private _requestsPerUnit?: number; 
  public get requestsPerUnit() {
    return this.getNumberAttribute('requests_per_unit');
  }
  public set requestsPerUnit(value: number) {
    this._requestsPerUnit = value;
  }
  public resetRequestsPerUnit() {
    this._requestsPerUnit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestsPerUnitInput() {
    return this._requestsPerUnit;
  }

  // unit - computed: false, optional: true, required: false
  private _unit?: string; 
  public get unit() {
    return this.getStringAttribute('unit');
  }
  public set unit(value: string) {
    this._unit = value;
  }
  public resetUnit() {
    this._unit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get unitInput() {
    return this._unit;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAuthorizedLimits {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#requests_per_unit DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#requests_per_unit}
  */
  readonly requestsPerUnit?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#unit DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#unit}
  */
  readonly unit?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAuthorizedLimitsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAuthorizedLimits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    requests_per_unit: cdktf.numberToTerraform(struct!.requestsPerUnit),
    unit: cdktf.stringToTerraform(struct!.unit),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAuthorizedLimitsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAuthorizedLimits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    requests_per_unit: {
      value: cdktf.numberToHclTerraform(struct!.requestsPerUnit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    unit: {
      value: cdktf.stringToHclTerraform(struct!.unit),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAuthorizedLimitsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAuthorizedLimits | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._requestsPerUnit !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestsPerUnit = this._requestsPerUnit;
    }
    if (this._unit !== undefined) {
      hasAnyValues = true;
      internalValueResult.unit = this._unit;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAuthorizedLimits | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._requestsPerUnit = undefined;
      this._unit = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._requestsPerUnit = value.requestsPerUnit;
      this._unit = value.unit;
    }
  }

  // requests_per_unit - computed: false, optional: true, required: false
  private _requestsPerUnit?: number; 
  public get requestsPerUnit() {
    return this.getNumberAttribute('requests_per_unit');
  }
  public set requestsPerUnit(value: number) {
    this._requestsPerUnit = value;
  }
  public resetRequestsPerUnit() {
    this._requestsPerUnit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestsPerUnitInput() {
    return this._requestsPerUnit;
  }

  // unit - computed: false, optional: true, required: false
  private _unit?: string; 
  public get unit() {
    return this.getStringAttribute('unit');
  }
  public set unit(value: string) {
    this._unit = value;
  }
  public resetUnit() {
    this._unit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get unitInput() {
    return this._unit;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasic {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#anonymous_limits DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#anonymous_limits}
  */
  readonly anonymousLimits?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAnonymousLimits;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#authorized_limits DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#authorized_limits}
  */
  readonly authorizedLimits?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAuthorizedLimits;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasic | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    anonymous_limits: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAnonymousLimitsToTerraform(struct!.anonymousLimits),
    authorized_limits: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAuthorizedLimitsToTerraform(struct!.authorizedLimits),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasic | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    anonymous_limits: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAnonymousLimitsToHclTerraform(struct!.anonymousLimits),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAnonymousLimits",
    },
    authorized_limits: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAuthorizedLimitsToHclTerraform(struct!.authorizedLimits),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAuthorizedLimits",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasic | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._anonymousLimits?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.anonymousLimits = this._anonymousLimits?.internalValue;
    }
    if (this._authorizedLimits?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authorizedLimits = this._authorizedLimits?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasic | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._anonymousLimits.internalValue = undefined;
      this._authorizedLimits.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._anonymousLimits.internalValue = value.anonymousLimits;
      this._authorizedLimits.internalValue = value.authorizedLimits;
    }
  }

  // anonymous_limits - computed: false, optional: true, required: false
  private _anonymousLimits = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAnonymousLimitsOutputReference(this, "anonymous_limits");
  public get anonymousLimits() {
    return this._anonymousLimits;
  }
  public putAnonymousLimits(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAnonymousLimits) {
    this._anonymousLimits.internalValue = value;
  }
  public resetAnonymousLimits() {
    this._anonymousLimits.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get anonymousLimitsInput() {
    return this._anonymousLimits.internalValue;
  }

  // authorized_limits - computed: false, optional: true, required: false
  private _authorizedLimits = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAuthorizedLimitsOutputReference(this, "authorized_limits");
  public get authorizedLimits() {
    return this._authorizedLimits;
  }
  public putAuthorizedLimits(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitBasicAuthorizedLimits) {
    this._authorizedLimits.internalValue = value;
  }
  public resetAuthorizedLimits() {
    this._authorizedLimits.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authorizedLimitsInput() {
    return this._authorizedLimits.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyLocalRatelimit {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#fill_interval DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#fill_interval}
  */
  readonly fillInterval?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#max_tokens DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#max_tokens}
  */
  readonly maxTokens?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#tokens_per_fill DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#tokens_per_fill}
  */
  readonly tokensPerFill?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyLocalRatelimitToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyLocalRatelimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fill_interval: cdktf.stringToTerraform(struct!.fillInterval),
    max_tokens: cdktf.numberToTerraform(struct!.maxTokens),
    tokens_per_fill: cdktf.numberToTerraform(struct!.tokensPerFill),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyLocalRatelimitToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyLocalRatelimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fill_interval: {
      value: cdktf.stringToHclTerraform(struct!.fillInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_tokens: {
      value: cdktf.numberToHclTerraform(struct!.maxTokens),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    tokens_per_fill: {
      value: cdktf.numberToHclTerraform(struct!.tokensPerFill),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyLocalRatelimitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyLocalRatelimit | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fillInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.fillInterval = this._fillInterval;
    }
    if (this._maxTokens !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxTokens = this._maxTokens;
    }
    if (this._tokensPerFill !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokensPerFill = this._tokensPerFill;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyLocalRatelimit | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fillInterval = undefined;
      this._maxTokens = undefined;
      this._tokensPerFill = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fillInterval = value.fillInterval;
      this._maxTokens = value.maxTokens;
      this._tokensPerFill = value.tokensPerFill;
    }
  }

  // fill_interval - computed: false, optional: true, required: false
  private _fillInterval?: string; 
  public get fillInterval() {
    return this.getStringAttribute('fill_interval');
  }
  public set fillInterval(value: string) {
    this._fillInterval = value;
  }
  public resetFillInterval() {
    this._fillInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fillIntervalInput() {
    return this._fillInterval;
  }

  // max_tokens - computed: false, optional: true, required: false
  private _maxTokens?: number; 
  public get maxTokens() {
    return this.getNumberAttribute('max_tokens');
  }
  public set maxTokens(value: number) {
    this._maxTokens = value;
  }
  public resetMaxTokens() {
    this._maxTokens = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxTokensInput() {
    return this._maxTokens;
  }

  // tokens_per_fill - computed: false, optional: true, required: false
  private _tokensPerFill?: number; 
  public get tokensPerFill() {
    return this.getNumberAttribute('tokens_per_fill');
  }
  public set tokensPerFill(value: number) {
    this._tokensPerFill = value;
  }
  public resetTokensPerFill() {
    this._tokensPerFill = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokensPerFillInput() {
    return this._tokensPerFill;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsGenericKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_value}
  */
  readonly descriptorValue?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsGenericKeyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsGenericKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_value: cdktf.stringToTerraform(struct!.descriptorValue),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsGenericKeyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsGenericKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_value: {
      value: cdktf.stringToHclTerraform(struct!.descriptorValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsGenericKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsGenericKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorValue = this._descriptorValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsGenericKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorValue = value.descriptorValue;
    }
  }

  // descriptor_value - computed: false, optional: true, required: false
  private _descriptorValue?: string; 
  public get descriptorValue() {
    return this.getStringAttribute('descriptor_value');
  }
  public set descriptorValue(value: string) {
    this._descriptorValue = value;
  }
  public resetDescriptorValue() {
    this._descriptorValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorValueInput() {
    return this._descriptorValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersRangeMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#end DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#end}
  */
  readonly end?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#start DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#start}
  */
  readonly start?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersRangeMatchToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    end: cdktf.numberToTerraform(struct!.end),
    start: cdktf.numberToTerraform(struct!.start),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersRangeMatchToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    end: {
      value: cdktf.numberToHclTerraform(struct!.end),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    start: {
      value: cdktf.numberToHclTerraform(struct!.start),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersRangeMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._end !== undefined) {
      hasAnyValues = true;
      internalValueResult.end = this._end;
    }
    if (this._start !== undefined) {
      hasAnyValues = true;
      internalValueResult.start = this._start;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._end = undefined;
      this._start = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._end = value.end;
      this._start = value.start;
    }
  }

  // end - computed: false, optional: true, required: false
  private _end?: number; 
  public get end() {
    return this.getNumberAttribute('end');
  }
  public set end(value: number) {
    this._end = value;
  }
  public resetEnd() {
    this._end = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endInput() {
    return this._end;
  }

  // start - computed: false, optional: true, required: false
  private _start?: number; 
  public get start() {
    return this.getNumberAttribute('start');
  }
  public set start(value: number) {
    this._start = value;
  }
  public resetStart() {
    this._start = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startInput() {
    return this._start;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#exact_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#exact_match}
  */
  readonly exactMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#invert_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#invert_match}
  */
  readonly invertMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#prefix_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#prefix_match}
  */
  readonly prefixMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#present_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#present_match}
  */
  readonly presentMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#range_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#range_match}
  */
  readonly rangeMatch?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersRangeMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#regex_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#regex_match}
  */
  readonly regexMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#suffix_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#suffix_match}
  */
  readonly suffixMatch?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exact_match: cdktf.stringToTerraform(struct!.exactMatch),
    invert_match: cdktf.booleanToTerraform(struct!.invertMatch),
    name: cdktf.stringToTerraform(struct!.name),
    prefix_match: cdktf.stringToTerraform(struct!.prefixMatch),
    present_match: cdktf.booleanToTerraform(struct!.presentMatch),
    range_match: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersRangeMatchToTerraform(struct!.rangeMatch),
    regex_match: cdktf.stringToTerraform(struct!.regexMatch),
    suffix_match: cdktf.stringToTerraform(struct!.suffixMatch),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exact_match: {
      value: cdktf.stringToHclTerraform(struct!.exactMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    invert_match: {
      value: cdktf.booleanToHclTerraform(struct!.invertMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    prefix_match: {
      value: cdktf.stringToHclTerraform(struct!.prefixMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    present_match: {
      value: cdktf.booleanToHclTerraform(struct!.presentMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    range_match: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersRangeMatchToHclTerraform(struct!.rangeMatch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersRangeMatch",
    },
    regex_match: {
      value: cdktf.stringToHclTerraform(struct!.regexMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    suffix_match: {
      value: cdktf.stringToHclTerraform(struct!.suffixMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exactMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.exactMatch = this._exactMatch;
    }
    if (this._invertMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.invertMatch = this._invertMatch;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._prefixMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefixMatch = this._prefixMatch;
    }
    if (this._presentMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.presentMatch = this._presentMatch;
    }
    if (this._rangeMatch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rangeMatch = this._rangeMatch?.internalValue;
    }
    if (this._regexMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.regexMatch = this._regexMatch;
    }
    if (this._suffixMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.suffixMatch = this._suffixMatch;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exactMatch = undefined;
      this._invertMatch = undefined;
      this._name = undefined;
      this._prefixMatch = undefined;
      this._presentMatch = undefined;
      this._rangeMatch.internalValue = undefined;
      this._regexMatch = undefined;
      this._suffixMatch = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exactMatch = value.exactMatch;
      this._invertMatch = value.invertMatch;
      this._name = value.name;
      this._prefixMatch = value.prefixMatch;
      this._presentMatch = value.presentMatch;
      this._rangeMatch.internalValue = value.rangeMatch;
      this._regexMatch = value.regexMatch;
      this._suffixMatch = value.suffixMatch;
    }
  }

  // exact_match - computed: false, optional: true, required: false
  private _exactMatch?: string; 
  public get exactMatch() {
    return this.getStringAttribute('exact_match');
  }
  public set exactMatch(value: string) {
    this._exactMatch = value;
  }
  public resetExactMatch() {
    this._exactMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exactMatchInput() {
    return this._exactMatch;
  }

  // invert_match - computed: false, optional: true, required: false
  private _invertMatch?: boolean | cdktf.IResolvable; 
  public get invertMatch() {
    return this.getBooleanAttribute('invert_match');
  }
  public set invertMatch(value: boolean | cdktf.IResolvable) {
    this._invertMatch = value;
  }
  public resetInvertMatch() {
    this._invertMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get invertMatchInput() {
    return this._invertMatch;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // prefix_match - computed: false, optional: true, required: false
  private _prefixMatch?: string; 
  public get prefixMatch() {
    return this.getStringAttribute('prefix_match');
  }
  public set prefixMatch(value: string) {
    this._prefixMatch = value;
  }
  public resetPrefixMatch() {
    this._prefixMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixMatchInput() {
    return this._prefixMatch;
  }

  // present_match - computed: false, optional: true, required: false
  private _presentMatch?: boolean | cdktf.IResolvable; 
  public get presentMatch() {
    return this.getBooleanAttribute('present_match');
  }
  public set presentMatch(value: boolean | cdktf.IResolvable) {
    this._presentMatch = value;
  }
  public resetPresentMatch() {
    this._presentMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get presentMatchInput() {
    return this._presentMatch;
  }

  // range_match - computed: false, optional: true, required: false
  private _rangeMatch = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersRangeMatchOutputReference(this, "range_match");
  public get rangeMatch() {
    return this._rangeMatch;
  }
  public putRangeMatch(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersRangeMatch) {
    this._rangeMatch.internalValue = value;
  }
  public resetRangeMatch() {
    this._rangeMatch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rangeMatchInput() {
    return this._rangeMatch.internalValue;
  }

  // regex_match - computed: false, optional: true, required: false
  private _regexMatch?: string; 
  public get regexMatch() {
    return this.getStringAttribute('regex_match');
  }
  public set regexMatch(value: string) {
    this._regexMatch = value;
  }
  public resetRegexMatch() {
    this._regexMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexMatchInput() {
    return this._regexMatch;
  }

  // suffix_match - computed: false, optional: true, required: false
  private _suffixMatch?: string; 
  public get suffixMatch() {
    return this.getStringAttribute('suffix_match');
  }
  public set suffixMatch(value: string) {
    this._suffixMatch = value;
  }
  public resetSuffixMatch() {
    this._suffixMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get suffixMatchInput() {
    return this._suffixMatch;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_value}
  */
  readonly descriptorValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#expect_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#expect_match}
  */
  readonly expectMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#headers}
  */
  readonly headers?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeaders[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_value: cdktf.stringToTerraform(struct!.descriptorValue),
    expect_match: cdktf.booleanToTerraform(struct!.expectMatch),
    headers: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersToTerraform, false)(struct!.headers),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_value: {
      value: cdktf.stringToHclTerraform(struct!.descriptorValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    expect_match: {
      value: cdktf.booleanToHclTerraform(struct!.expectMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    headers: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorValue = this._descriptorValue;
    }
    if (this._expectMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.expectMatch = this._expectMatch;
    }
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorValue = undefined;
      this._expectMatch = undefined;
      this._headers.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorValue = value.descriptorValue;
      this._expectMatch = value.expectMatch;
      this._headers.internalValue = value.headers;
    }
  }

  // descriptor_value - computed: false, optional: true, required: false
  private _descriptorValue?: string; 
  public get descriptorValue() {
    return this.getStringAttribute('descriptor_value');
  }
  public set descriptorValue(value: string) {
    this._descriptorValue = value;
  }
  public resetDescriptorValue() {
    this._descriptorValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorValueInput() {
    return this._descriptorValue;
  }

  // expect_match - computed: false, optional: true, required: false
  private _expectMatch?: boolean | cdktf.IResolvable; 
  public get expectMatch() {
    return this.getBooleanAttribute('expect_match');
  }
  public set expectMatch(value: boolean | cdktf.IResolvable) {
    this._expectMatch = value;
  }
  public resetExpectMatch() {
    this._expectMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expectMatchInput() {
    return this._expectMatch;
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPath {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPathToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPathToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPathList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPath[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPathOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPathOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#path DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#path}
  */
  readonly path?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPath[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    path: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPathToTerraform, false)(struct!.path),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPathToHclTerraform, false)(struct!.path),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPathList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._path.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._path.internalValue = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPathList(this, "path", false);
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyPath[] | cdktf.IResolvable) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#default_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#default_value}
  */
  readonly defaultValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_key}
  */
  readonly descriptorKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata_key}
  */
  readonly metadataKey?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#source DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#source}
  */
  readonly source?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_value: cdktf.stringToTerraform(struct!.defaultValue),
    descriptor_key: cdktf.stringToTerraform(struct!.descriptorKey),
    metadata_key: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyToTerraform(struct!.metadataKey),
    source: cdktf.stringToTerraform(struct!.source),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_value: {
      value: cdktf.stringToHclTerraform(struct!.defaultValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    descriptor_key: {
      value: cdktf.stringToHclTerraform(struct!.descriptorKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metadata_key: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyToHclTerraform(struct!.metadataKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKey",
    },
    source: {
      value: cdktf.stringToHclTerraform(struct!.source),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultValue = this._defaultValue;
    }
    if (this._descriptorKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorKey = this._descriptorKey;
    }
    if (this._metadataKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataKey = this._metadataKey?.internalValue;
    }
    if (this._source !== undefined) {
      hasAnyValues = true;
      internalValueResult.source = this._source;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultValue = undefined;
      this._descriptorKey = undefined;
      this._metadataKey.internalValue = undefined;
      this._source = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultValue = value.defaultValue;
      this._descriptorKey = value.descriptorKey;
      this._metadataKey.internalValue = value.metadataKey;
      this._source = value.source;
    }
  }

  // default_value - computed: false, optional: true, required: false
  private _defaultValue?: string; 
  public get defaultValue() {
    return this.getStringAttribute('default_value');
  }
  public set defaultValue(value: string) {
    this._defaultValue = value;
  }
  public resetDefaultValue() {
    this._defaultValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultValueInput() {
    return this._defaultValue;
  }

  // descriptor_key - computed: false, optional: true, required: false
  private _descriptorKey?: string; 
  public get descriptorKey() {
    return this.getStringAttribute('descriptor_key');
  }
  public set descriptorKey(value: string) {
    this._descriptorKey = value;
  }
  public resetDescriptorKey() {
    this._descriptorKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorKeyInput() {
    return this._descriptorKey;
  }

  // metadata_key - computed: false, optional: true, required: false
  private _metadataKey = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKeyOutputReference(this, "metadata_key");
  public get metadataKey() {
    return this._metadataKey;
  }
  public putMetadataKey(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataMetadataKey) {
    this._metadataKey.internalValue = value;
  }
  public resetMetadataKey() {
    this._metadataKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataKeyInput() {
    return this._metadataKey.internalValue;
  }

  // source - computed: false, optional: true, required: false
  private _source?: string; 
  public get source() {
    return this.getStringAttribute('source');
  }
  public set source(value: string) {
    this._source = value;
  }
  public resetSource() {
    this._source = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceInput() {
    return this._source;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsRequestHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_key}
  */
  readonly descriptorKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header_name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header_name}
  */
  readonly headerName?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsRequestHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsRequestHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_key: cdktf.stringToTerraform(struct!.descriptorKey),
    header_name: cdktf.stringToTerraform(struct!.headerName),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsRequestHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsRequestHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_key: {
      value: cdktf.stringToHclTerraform(struct!.descriptorKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    header_name: {
      value: cdktf.stringToHclTerraform(struct!.headerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsRequestHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsRequestHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorKey = this._descriptorKey;
    }
    if (this._headerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.headerName = this._headerName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsRequestHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorKey = undefined;
      this._headerName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorKey = value.descriptorKey;
      this._headerName = value.headerName;
    }
  }

  // descriptor_key - computed: false, optional: true, required: false
  private _descriptorKey?: string; 
  public get descriptorKey() {
    return this.getStringAttribute('descriptor_key');
  }
  public set descriptorKey(value: string) {
    this._descriptorKey = value;
  }
  public resetDescriptorKey() {
    this._descriptorKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorKeyInput() {
    return this._descriptorKey;
  }

  // header_name - computed: false, optional: true, required: false
  private _headerName?: string; 
  public get headerName() {
    return this.getStringAttribute('header_name');
  }
  public set headerName(value: string) {
    this._headerName = value;
  }
  public resetHeaderName() {
    this._headerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerNameInput() {
    return this._headerName;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#destination_cluster DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#destination_cluster}
  */
  readonly destinationCluster?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#generic_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#generic_key}
  */
  readonly genericKey?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsGenericKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header_value_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header_value_match}
  */
  readonly headerValueMatch?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata}
  */
  readonly metadata?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#remote_address DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#remote_address}
  */
  readonly remoteAddress?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#request_headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#request_headers}
  */
  readonly requestHeaders?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsRequestHeaders;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#source_cluster DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#source_cluster}
  */
  readonly sourceCluster?: { [key: string]: string };
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    destination_cluster: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.destinationCluster),
    generic_key: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsGenericKeyToTerraform(struct!.genericKey),
    header_value_match: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchToTerraform(struct!.headerValueMatch),
    metadata: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataToTerraform(struct!.metadata),
    remote_address: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.remoteAddress),
    request_headers: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsRequestHeadersToTerraform(struct!.requestHeaders),
    source_cluster: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.sourceCluster),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    destination_cluster: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.destinationCluster),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    generic_key: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsGenericKeyToHclTerraform(struct!.genericKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsGenericKey",
    },
    header_value_match: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchToHclTerraform(struct!.headerValueMatch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatch",
    },
    metadata: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadata",
    },
    remote_address: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.remoteAddress),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    request_headers: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsRequestHeadersToHclTerraform(struct!.requestHeaders),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsRequestHeaders",
    },
    source_cluster: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.sourceCluster),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._destinationCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.destinationCluster = this._destinationCluster;
    }
    if (this._genericKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.genericKey = this._genericKey?.internalValue;
    }
    if (this._headerValueMatch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headerValueMatch = this._headerValueMatch?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._remoteAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteAddress = this._remoteAddress;
    }
    if (this._requestHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestHeaders = this._requestHeaders?.internalValue;
    }
    if (this._sourceCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourceCluster = this._sourceCluster;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._destinationCluster = undefined;
      this._genericKey.internalValue = undefined;
      this._headerValueMatch.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._remoteAddress = undefined;
      this._requestHeaders.internalValue = undefined;
      this._sourceCluster = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._destinationCluster = value.destinationCluster;
      this._genericKey.internalValue = value.genericKey;
      this._headerValueMatch.internalValue = value.headerValueMatch;
      this._metadata.internalValue = value.metadata;
      this._remoteAddress = value.remoteAddress;
      this._requestHeaders.internalValue = value.requestHeaders;
      this._sourceCluster = value.sourceCluster;
    }
  }

  // destination_cluster - computed: false, optional: true, required: false
  private _destinationCluster?: { [key: string]: string }; 
  public get destinationCluster() {
    return this.getStringMapAttribute('destination_cluster');
  }
  public set destinationCluster(value: { [key: string]: string }) {
    this._destinationCluster = value;
  }
  public resetDestinationCluster() {
    this._destinationCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get destinationClusterInput() {
    return this._destinationCluster;
  }

  // generic_key - computed: false, optional: true, required: false
  private _genericKey = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsGenericKeyOutputReference(this, "generic_key");
  public get genericKey() {
    return this._genericKey;
  }
  public putGenericKey(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsGenericKey) {
    this._genericKey.internalValue = value;
  }
  public resetGenericKey() {
    this._genericKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get genericKeyInput() {
    return this._genericKey.internalValue;
  }

  // header_value_match - computed: false, optional: true, required: false
  private _headerValueMatch = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatchOutputReference(this, "header_value_match");
  public get headerValueMatch() {
    return this._headerValueMatch;
  }
  public putHeaderValueMatch(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsHeaderValueMatch) {
    this._headerValueMatch.internalValue = value;
  }
  public resetHeaderValueMatch() {
    this._headerValueMatch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerValueMatchInput() {
    return this._headerValueMatch.internalValue;
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // remote_address - computed: false, optional: true, required: false
  private _remoteAddress?: { [key: string]: string }; 
  public get remoteAddress() {
    return this.getStringMapAttribute('remote_address');
  }
  public set remoteAddress(value: { [key: string]: string }) {
    this._remoteAddress = value;
  }
  public resetRemoteAddress() {
    this._remoteAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteAddressInput() {
    return this._remoteAddress;
  }

  // request_headers - computed: false, optional: true, required: false
  private _requestHeaders = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsRequestHeadersOutputReference(this, "request_headers");
  public get requestHeaders() {
    return this._requestHeaders;
  }
  public putRequestHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsRequestHeaders) {
    this._requestHeaders.internalValue = value;
  }
  public resetRequestHeaders() {
    this._requestHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestHeadersInput() {
    return this._requestHeaders.internalValue;
  }

  // source_cluster - computed: false, optional: true, required: false
  private _sourceCluster?: { [key: string]: string }; 
  public get sourceCluster() {
    return this.getStringMapAttribute('source_cluster');
  }
  public set sourceCluster(value: { [key: string]: string }) {
    this._sourceCluster = value;
  }
  public resetSourceCluster() {
    this._sourceCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceClusterInput() {
    return this._sourceCluster;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPath {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPathToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPathToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPathList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPath[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPathOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPathOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#path DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#path}
  */
  readonly path?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPath[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    path: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPathToTerraform, false)(struct!.path),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPathToHclTerraform, false)(struct!.path),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPathList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._path.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._path.internalValue = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPathList(this, "path", false);
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyPath[] | cdktf.IResolvable) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata_key}
  */
  readonly metadataKey?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKey;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata_key: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyToTerraform(struct!.metadataKey),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata_key: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyToHclTerraform(struct!.metadataKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKey",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadataKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataKey = this._metadataKey?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadataKey.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadataKey.internalValue = value.metadataKey;
    }
  }

  // metadata_key - computed: false, optional: true, required: false
  private _metadataKey = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKeyOutputReference(this, "metadata_key");
  public get metadataKey() {
    return this._metadataKey;
  }
  public putMetadataKey(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataMetadataKey) {
    this._metadataKey.internalValue = value;
  }
  public resetMetadataKey() {
    this._metadataKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataKeyInput() {
    return this._metadataKey.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimit {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#dynamic_metadata DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#dynamic_metadata}
  */
  readonly dynamicMetadata?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadata;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dynamic_metadata: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataToTerraform(struct!.dynamicMetadata),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dynamic_metadata: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataToHclTerraform(struct!.dynamicMetadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadata",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimit | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dynamicMetadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dynamicMetadata = this._dynamicMetadata?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimit | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dynamicMetadata.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dynamicMetadata.internalValue = value.dynamicMetadata;
    }
  }

  // dynamic_metadata - computed: false, optional: true, required: false
  private _dynamicMetadata = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadataOutputReference(this, "dynamic_metadata");
  public get dynamicMetadata() {
    return this._dynamicMetadata;
  }
  public putDynamicMetadata(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitDynamicMetadata) {
    this._dynamicMetadata.internalValue = value;
  }
  public resetDynamicMetadata() {
    this._dynamicMetadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dynamicMetadataInput() {
    return this._dynamicMetadata.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsGenericKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_value}
  */
  readonly descriptorValue?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsGenericKeyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsGenericKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_value: cdktf.stringToTerraform(struct!.descriptorValue),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsGenericKeyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsGenericKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_value: {
      value: cdktf.stringToHclTerraform(struct!.descriptorValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsGenericKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsGenericKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorValue = this._descriptorValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsGenericKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorValue = value.descriptorValue;
    }
  }

  // descriptor_value - computed: false, optional: true, required: false
  private _descriptorValue?: string; 
  public get descriptorValue() {
    return this.getStringAttribute('descriptor_value');
  }
  public set descriptorValue(value: string) {
    this._descriptorValue = value;
  }
  public resetDescriptorValue() {
    this._descriptorValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorValueInput() {
    return this._descriptorValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#end DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#end}
  */
  readonly end?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#start DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#start}
  */
  readonly start?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    end: cdktf.numberToTerraform(struct!.end),
    start: cdktf.numberToTerraform(struct!.start),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    end: {
      value: cdktf.numberToHclTerraform(struct!.end),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    start: {
      value: cdktf.numberToHclTerraform(struct!.start),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._end !== undefined) {
      hasAnyValues = true;
      internalValueResult.end = this._end;
    }
    if (this._start !== undefined) {
      hasAnyValues = true;
      internalValueResult.start = this._start;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._end = undefined;
      this._start = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._end = value.end;
      this._start = value.start;
    }
  }

  // end - computed: false, optional: true, required: false
  private _end?: number; 
  public get end() {
    return this.getNumberAttribute('end');
  }
  public set end(value: number) {
    this._end = value;
  }
  public resetEnd() {
    this._end = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endInput() {
    return this._end;
  }

  // start - computed: false, optional: true, required: false
  private _start?: number; 
  public get start() {
    return this.getNumberAttribute('start');
  }
  public set start(value: number) {
    this._start = value;
  }
  public resetStart() {
    this._start = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startInput() {
    return this._start;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#exact_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#exact_match}
  */
  readonly exactMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#invert_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#invert_match}
  */
  readonly invertMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#prefix_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#prefix_match}
  */
  readonly prefixMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#present_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#present_match}
  */
  readonly presentMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#range_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#range_match}
  */
  readonly rangeMatch?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#regex_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#regex_match}
  */
  readonly regexMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#suffix_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#suffix_match}
  */
  readonly suffixMatch?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exact_match: cdktf.stringToTerraform(struct!.exactMatch),
    invert_match: cdktf.booleanToTerraform(struct!.invertMatch),
    name: cdktf.stringToTerraform(struct!.name),
    prefix_match: cdktf.stringToTerraform(struct!.prefixMatch),
    present_match: cdktf.booleanToTerraform(struct!.presentMatch),
    range_match: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchToTerraform(struct!.rangeMatch),
    regex_match: cdktf.stringToTerraform(struct!.regexMatch),
    suffix_match: cdktf.stringToTerraform(struct!.suffixMatch),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exact_match: {
      value: cdktf.stringToHclTerraform(struct!.exactMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    invert_match: {
      value: cdktf.booleanToHclTerraform(struct!.invertMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    prefix_match: {
      value: cdktf.stringToHclTerraform(struct!.prefixMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    present_match: {
      value: cdktf.booleanToHclTerraform(struct!.presentMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    range_match: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchToHclTerraform(struct!.rangeMatch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch",
    },
    regex_match: {
      value: cdktf.stringToHclTerraform(struct!.regexMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    suffix_match: {
      value: cdktf.stringToHclTerraform(struct!.suffixMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exactMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.exactMatch = this._exactMatch;
    }
    if (this._invertMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.invertMatch = this._invertMatch;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._prefixMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefixMatch = this._prefixMatch;
    }
    if (this._presentMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.presentMatch = this._presentMatch;
    }
    if (this._rangeMatch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rangeMatch = this._rangeMatch?.internalValue;
    }
    if (this._regexMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.regexMatch = this._regexMatch;
    }
    if (this._suffixMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.suffixMatch = this._suffixMatch;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exactMatch = undefined;
      this._invertMatch = undefined;
      this._name = undefined;
      this._prefixMatch = undefined;
      this._presentMatch = undefined;
      this._rangeMatch.internalValue = undefined;
      this._regexMatch = undefined;
      this._suffixMatch = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exactMatch = value.exactMatch;
      this._invertMatch = value.invertMatch;
      this._name = value.name;
      this._prefixMatch = value.prefixMatch;
      this._presentMatch = value.presentMatch;
      this._rangeMatch.internalValue = value.rangeMatch;
      this._regexMatch = value.regexMatch;
      this._suffixMatch = value.suffixMatch;
    }
  }

  // exact_match - computed: false, optional: true, required: false
  private _exactMatch?: string; 
  public get exactMatch() {
    return this.getStringAttribute('exact_match');
  }
  public set exactMatch(value: string) {
    this._exactMatch = value;
  }
  public resetExactMatch() {
    this._exactMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exactMatchInput() {
    return this._exactMatch;
  }

  // invert_match - computed: false, optional: true, required: false
  private _invertMatch?: boolean | cdktf.IResolvable; 
  public get invertMatch() {
    return this.getBooleanAttribute('invert_match');
  }
  public set invertMatch(value: boolean | cdktf.IResolvable) {
    this._invertMatch = value;
  }
  public resetInvertMatch() {
    this._invertMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get invertMatchInput() {
    return this._invertMatch;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // prefix_match - computed: false, optional: true, required: false
  private _prefixMatch?: string; 
  public get prefixMatch() {
    return this.getStringAttribute('prefix_match');
  }
  public set prefixMatch(value: string) {
    this._prefixMatch = value;
  }
  public resetPrefixMatch() {
    this._prefixMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixMatchInput() {
    return this._prefixMatch;
  }

  // present_match - computed: false, optional: true, required: false
  private _presentMatch?: boolean | cdktf.IResolvable; 
  public get presentMatch() {
    return this.getBooleanAttribute('present_match');
  }
  public set presentMatch(value: boolean | cdktf.IResolvable) {
    this._presentMatch = value;
  }
  public resetPresentMatch() {
    this._presentMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get presentMatchInput() {
    return this._presentMatch;
  }

  // range_match - computed: false, optional: true, required: false
  private _rangeMatch = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchOutputReference(this, "range_match");
  public get rangeMatch() {
    return this._rangeMatch;
  }
  public putRangeMatch(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch) {
    this._rangeMatch.internalValue = value;
  }
  public resetRangeMatch() {
    this._rangeMatch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rangeMatchInput() {
    return this._rangeMatch.internalValue;
  }

  // regex_match - computed: false, optional: true, required: false
  private _regexMatch?: string; 
  public get regexMatch() {
    return this.getStringAttribute('regex_match');
  }
  public set regexMatch(value: string) {
    this._regexMatch = value;
  }
  public resetRegexMatch() {
    this._regexMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexMatchInput() {
    return this._regexMatch;
  }

  // suffix_match - computed: false, optional: true, required: false
  private _suffixMatch?: string; 
  public get suffixMatch() {
    return this.getStringAttribute('suffix_match');
  }
  public set suffixMatch(value: string) {
    this._suffixMatch = value;
  }
  public resetSuffixMatch() {
    this._suffixMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get suffixMatchInput() {
    return this._suffixMatch;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_value}
  */
  readonly descriptorValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#expect_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#expect_match}
  */
  readonly expectMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#headers}
  */
  readonly headers?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeaders[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_value: cdktf.stringToTerraform(struct!.descriptorValue),
    expect_match: cdktf.booleanToTerraform(struct!.expectMatch),
    headers: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersToTerraform, false)(struct!.headers),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_value: {
      value: cdktf.stringToHclTerraform(struct!.descriptorValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    expect_match: {
      value: cdktf.booleanToHclTerraform(struct!.expectMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    headers: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorValue = this._descriptorValue;
    }
    if (this._expectMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.expectMatch = this._expectMatch;
    }
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorValue = undefined;
      this._expectMatch = undefined;
      this._headers.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorValue = value.descriptorValue;
      this._expectMatch = value.expectMatch;
      this._headers.internalValue = value.headers;
    }
  }

  // descriptor_value - computed: false, optional: true, required: false
  private _descriptorValue?: string; 
  public get descriptorValue() {
    return this.getStringAttribute('descriptor_value');
  }
  public set descriptorValue(value: string) {
    this._descriptorValue = value;
  }
  public resetDescriptorValue() {
    this._descriptorValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorValueInput() {
    return this._descriptorValue;
  }

  // expect_match - computed: false, optional: true, required: false
  private _expectMatch?: boolean | cdktf.IResolvable; 
  public get expectMatch() {
    return this.getBooleanAttribute('expect_match');
  }
  public set expectMatch(value: boolean | cdktf.IResolvable) {
    this._expectMatch = value;
  }
  public resetExpectMatch() {
    this._expectMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expectMatchInput() {
    return this._expectMatch;
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPath {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPathToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPathToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPathList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPath[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPathOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPathOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#path DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#path}
  */
  readonly path?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPath[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    path: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPathToTerraform, false)(struct!.path),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPathToHclTerraform, false)(struct!.path),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPathList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._path.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._path.internalValue = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPathList(this, "path", false);
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyPath[] | cdktf.IResolvable) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#default_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#default_value}
  */
  readonly defaultValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_key}
  */
  readonly descriptorKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata_key}
  */
  readonly metadataKey?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#source DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#source}
  */
  readonly source?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_value: cdktf.stringToTerraform(struct!.defaultValue),
    descriptor_key: cdktf.stringToTerraform(struct!.descriptorKey),
    metadata_key: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyToTerraform(struct!.metadataKey),
    source: cdktf.stringToTerraform(struct!.source),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_value: {
      value: cdktf.stringToHclTerraform(struct!.defaultValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    descriptor_key: {
      value: cdktf.stringToHclTerraform(struct!.descriptorKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metadata_key: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyToHclTerraform(struct!.metadataKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKey",
    },
    source: {
      value: cdktf.stringToHclTerraform(struct!.source),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultValue = this._defaultValue;
    }
    if (this._descriptorKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorKey = this._descriptorKey;
    }
    if (this._metadataKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataKey = this._metadataKey?.internalValue;
    }
    if (this._source !== undefined) {
      hasAnyValues = true;
      internalValueResult.source = this._source;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultValue = undefined;
      this._descriptorKey = undefined;
      this._metadataKey.internalValue = undefined;
      this._source = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultValue = value.defaultValue;
      this._descriptorKey = value.descriptorKey;
      this._metadataKey.internalValue = value.metadataKey;
      this._source = value.source;
    }
  }

  // default_value - computed: false, optional: true, required: false
  private _defaultValue?: string; 
  public get defaultValue() {
    return this.getStringAttribute('default_value');
  }
  public set defaultValue(value: string) {
    this._defaultValue = value;
  }
  public resetDefaultValue() {
    this._defaultValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultValueInput() {
    return this._defaultValue;
  }

  // descriptor_key - computed: false, optional: true, required: false
  private _descriptorKey?: string; 
  public get descriptorKey() {
    return this.getStringAttribute('descriptor_key');
  }
  public set descriptorKey(value: string) {
    this._descriptorKey = value;
  }
  public resetDescriptorKey() {
    this._descriptorKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorKeyInput() {
    return this._descriptorKey;
  }

  // metadata_key - computed: false, optional: true, required: false
  private _metadataKey = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKeyOutputReference(this, "metadata_key");
  public get metadataKey() {
    return this._metadataKey;
  }
  public putMetadataKey(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataMetadataKey) {
    this._metadataKey.internalValue = value;
  }
  public resetMetadataKey() {
    this._metadataKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataKeyInput() {
    return this._metadataKey.internalValue;
  }

  // source - computed: false, optional: true, required: false
  private _source?: string; 
  public get source() {
    return this.getStringAttribute('source');
  }
  public set source(value: string) {
    this._source = value;
  }
  public resetSource() {
    this._source = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceInput() {
    return this._source;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsRequestHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_key}
  */
  readonly descriptorKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header_name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header_name}
  */
  readonly headerName?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsRequestHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsRequestHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_key: cdktf.stringToTerraform(struct!.descriptorKey),
    header_name: cdktf.stringToTerraform(struct!.headerName),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsRequestHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsRequestHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_key: {
      value: cdktf.stringToHclTerraform(struct!.descriptorKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    header_name: {
      value: cdktf.stringToHclTerraform(struct!.headerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsRequestHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsRequestHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorKey = this._descriptorKey;
    }
    if (this._headerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.headerName = this._headerName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsRequestHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorKey = undefined;
      this._headerName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorKey = value.descriptorKey;
      this._headerName = value.headerName;
    }
  }

  // descriptor_key - computed: false, optional: true, required: false
  private _descriptorKey?: string; 
  public get descriptorKey() {
    return this.getStringAttribute('descriptor_key');
  }
  public set descriptorKey(value: string) {
    this._descriptorKey = value;
  }
  public resetDescriptorKey() {
    this._descriptorKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorKeyInput() {
    return this._descriptorKey;
  }

  // header_name - computed: false, optional: true, required: false
  private _headerName?: string; 
  public get headerName() {
    return this.getStringAttribute('header_name');
  }
  public set headerName(value: string) {
    this._headerName = value;
  }
  public resetHeaderName() {
    this._headerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerNameInput() {
    return this._headerName;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#destination_cluster DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#destination_cluster}
  */
  readonly destinationCluster?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#generic_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#generic_key}
  */
  readonly genericKey?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsGenericKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header_value_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header_value_match}
  */
  readonly headerValueMatch?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata}
  */
  readonly metadata?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#remote_address DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#remote_address}
  */
  readonly remoteAddress?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#request_headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#request_headers}
  */
  readonly requestHeaders?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsRequestHeaders;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#source_cluster DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#source_cluster}
  */
  readonly sourceCluster?: { [key: string]: string };
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    destination_cluster: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.destinationCluster),
    generic_key: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsGenericKeyToTerraform(struct!.genericKey),
    header_value_match: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchToTerraform(struct!.headerValueMatch),
    metadata: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataToTerraform(struct!.metadata),
    remote_address: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.remoteAddress),
    request_headers: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsRequestHeadersToTerraform(struct!.requestHeaders),
    source_cluster: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.sourceCluster),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    destination_cluster: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.destinationCluster),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    generic_key: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsGenericKeyToHclTerraform(struct!.genericKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsGenericKey",
    },
    header_value_match: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchToHclTerraform(struct!.headerValueMatch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatch",
    },
    metadata: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadata",
    },
    remote_address: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.remoteAddress),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    request_headers: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsRequestHeadersToHclTerraform(struct!.requestHeaders),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsRequestHeaders",
    },
    source_cluster: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.sourceCluster),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._destinationCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.destinationCluster = this._destinationCluster;
    }
    if (this._genericKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.genericKey = this._genericKey?.internalValue;
    }
    if (this._headerValueMatch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headerValueMatch = this._headerValueMatch?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._remoteAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteAddress = this._remoteAddress;
    }
    if (this._requestHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestHeaders = this._requestHeaders?.internalValue;
    }
    if (this._sourceCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourceCluster = this._sourceCluster;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._destinationCluster = undefined;
      this._genericKey.internalValue = undefined;
      this._headerValueMatch.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._remoteAddress = undefined;
      this._requestHeaders.internalValue = undefined;
      this._sourceCluster = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._destinationCluster = value.destinationCluster;
      this._genericKey.internalValue = value.genericKey;
      this._headerValueMatch.internalValue = value.headerValueMatch;
      this._metadata.internalValue = value.metadata;
      this._remoteAddress = value.remoteAddress;
      this._requestHeaders.internalValue = value.requestHeaders;
      this._sourceCluster = value.sourceCluster;
    }
  }

  // destination_cluster - computed: false, optional: true, required: false
  private _destinationCluster?: { [key: string]: string }; 
  public get destinationCluster() {
    return this.getStringMapAttribute('destination_cluster');
  }
  public set destinationCluster(value: { [key: string]: string }) {
    this._destinationCluster = value;
  }
  public resetDestinationCluster() {
    this._destinationCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get destinationClusterInput() {
    return this._destinationCluster;
  }

  // generic_key - computed: false, optional: true, required: false
  private _genericKey = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsGenericKeyOutputReference(this, "generic_key");
  public get genericKey() {
    return this._genericKey;
  }
  public putGenericKey(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsGenericKey) {
    this._genericKey.internalValue = value;
  }
  public resetGenericKey() {
    this._genericKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get genericKeyInput() {
    return this._genericKey.internalValue;
  }

  // header_value_match - computed: false, optional: true, required: false
  private _headerValueMatch = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatchOutputReference(this, "header_value_match");
  public get headerValueMatch() {
    return this._headerValueMatch;
  }
  public putHeaderValueMatch(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsHeaderValueMatch) {
    this._headerValueMatch.internalValue = value;
  }
  public resetHeaderValueMatch() {
    this._headerValueMatch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerValueMatchInput() {
    return this._headerValueMatch.internalValue;
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // remote_address - computed: false, optional: true, required: false
  private _remoteAddress?: { [key: string]: string }; 
  public get remoteAddress() {
    return this.getStringMapAttribute('remote_address');
  }
  public set remoteAddress(value: { [key: string]: string }) {
    this._remoteAddress = value;
  }
  public resetRemoteAddress() {
    this._remoteAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteAddressInput() {
    return this._remoteAddress;
  }

  // request_headers - computed: false, optional: true, required: false
  private _requestHeaders = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsRequestHeadersOutputReference(this, "request_headers");
  public get requestHeaders() {
    return this._requestHeaders;
  }
  public putRequestHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsRequestHeaders) {
    this._requestHeaders.internalValue = value;
  }
  public resetRequestHeaders() {
    this._requestHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestHeadersInput() {
    return this._requestHeaders.internalValue;
  }

  // source_cluster - computed: false, optional: true, required: false
  private _sourceCluster?: { [key: string]: string }; 
  public get sourceCluster() {
    return this.getStringMapAttribute('source_cluster');
  }
  public set sourceCluster(value: { [key: string]: string }) {
    this._sourceCluster = value;
  }
  public resetSourceCluster() {
    this._sourceCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceClusterInput() {
    return this._sourceCluster;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimits {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#actions DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#actions}
  */
  readonly actions?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#limit DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#limit}
  */
  readonly limit?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimit;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#set_actions DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#set_actions}
  */
  readonly setActions?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActions[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    actions: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsToTerraform, false)(struct!.actions),
    limit: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitToTerraform(struct!.limit),
    set_actions: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsToTerraform, false)(struct!.setActions),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    actions: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsToHclTerraform, false)(struct!.actions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsList",
    },
    limit: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitToHclTerraform(struct!.limit),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimit",
    },
    set_actions: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsToHclTerraform, false)(struct!.setActions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimits | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._actions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.actions = this._actions?.internalValue;
    }
    if (this._limit?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.limit = this._limit?.internalValue;
    }
    if (this._setActions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.setActions = this._setActions?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimits | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._actions.internalValue = undefined;
      this._limit.internalValue = undefined;
      this._setActions.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._actions.internalValue = value.actions;
      this._limit.internalValue = value.limit;
      this._setActions.internalValue = value.setActions;
    }
  }

  // actions - computed: false, optional: true, required: false
  private _actions = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActionsList(this, "actions", false);
  public get actions() {
    return this._actions;
  }
  public putActions(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsActions[] | cdktf.IResolvable) {
    this._actions.internalValue = value;
  }
  public resetActions() {
    this._actions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionsInput() {
    return this._actions.internalValue;
  }

  // limit - computed: false, optional: true, required: false
  private _limit = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimitOutputReference(this, "limit");
  public get limit() {
    return this._limit;
  }
  public putLimit(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsLimit) {
    this._limit.internalValue = value;
  }
  public resetLimit() {
    this._limit.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitInput() {
    return this._limit.internalValue;
  }

  // set_actions - computed: false, optional: true, required: false
  private _setActions = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActionsList(this, "set_actions", false);
  public get setActions() {
    return this._setActions;
  }
  public putSetActions(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsSetActions[] | cdktf.IResolvable) {
    this._setActions.internalValue = value;
  }
  public resetSetActions() {
    this._setActions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get setActionsInput() {
    return this._setActions.internalValue;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimits[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarly {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#local_ratelimit DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#local_ratelimit}
  */
  readonly localRatelimit?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyLocalRatelimit;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#rate_limits DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#rate_limits}
  */
  readonly rateLimits?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimits[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarly | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    local_ratelimit: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyLocalRatelimitToTerraform(struct!.localRatelimit),
    rate_limits: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsToTerraform, false)(struct!.rateLimits),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarly | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    local_ratelimit: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyLocalRatelimitToHclTerraform(struct!.localRatelimit),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyLocalRatelimit",
    },
    rate_limits: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsToHclTerraform, false)(struct!.rateLimits),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarly | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._localRatelimit?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.localRatelimit = this._localRatelimit?.internalValue;
    }
    if (this._rateLimits?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rateLimits = this._rateLimits?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarly | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._localRatelimit.internalValue = undefined;
      this._rateLimits.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._localRatelimit.internalValue = value.localRatelimit;
      this._rateLimits.internalValue = value.rateLimits;
    }
  }

  // local_ratelimit - computed: false, optional: true, required: false
  private _localRatelimit = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyLocalRatelimitOutputReference(this, "local_ratelimit");
  public get localRatelimit() {
    return this._localRatelimit;
  }
  public putLocalRatelimit(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyLocalRatelimit) {
    this._localRatelimit.internalValue = value;
  }
  public resetLocalRatelimit() {
    this._localRatelimit.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localRatelimitInput() {
    return this._localRatelimit.internalValue;
  }

  // rate_limits - computed: false, optional: true, required: false
  private _rateLimits = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimitsList(this, "rate_limits", false);
  public get rateLimits() {
    return this._rateLimits;
  }
  public putRateLimits(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitEarlyRateLimits[] | cdktf.IResolvable) {
    this._rateLimits.internalValue = value;
  }
  public resetRateLimits() {
    this._rateLimits.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rateLimitsInput() {
    return this._rateLimits.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularLocalRatelimit {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#fill_interval DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#fill_interval}
  */
  readonly fillInterval?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#max_tokens DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#max_tokens}
  */
  readonly maxTokens?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#tokens_per_fill DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#tokens_per_fill}
  */
  readonly tokensPerFill?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularLocalRatelimitToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularLocalRatelimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fill_interval: cdktf.stringToTerraform(struct!.fillInterval),
    max_tokens: cdktf.numberToTerraform(struct!.maxTokens),
    tokens_per_fill: cdktf.numberToTerraform(struct!.tokensPerFill),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularLocalRatelimitToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularLocalRatelimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fill_interval: {
      value: cdktf.stringToHclTerraform(struct!.fillInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_tokens: {
      value: cdktf.numberToHclTerraform(struct!.maxTokens),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    tokens_per_fill: {
      value: cdktf.numberToHclTerraform(struct!.tokensPerFill),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularLocalRatelimitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularLocalRatelimit | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fillInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.fillInterval = this._fillInterval;
    }
    if (this._maxTokens !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxTokens = this._maxTokens;
    }
    if (this._tokensPerFill !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokensPerFill = this._tokensPerFill;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularLocalRatelimit | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fillInterval = undefined;
      this._maxTokens = undefined;
      this._tokensPerFill = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fillInterval = value.fillInterval;
      this._maxTokens = value.maxTokens;
      this._tokensPerFill = value.tokensPerFill;
    }
  }

  // fill_interval - computed: false, optional: true, required: false
  private _fillInterval?: string; 
  public get fillInterval() {
    return this.getStringAttribute('fill_interval');
  }
  public set fillInterval(value: string) {
    this._fillInterval = value;
  }
  public resetFillInterval() {
    this._fillInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fillIntervalInput() {
    return this._fillInterval;
  }

  // max_tokens - computed: false, optional: true, required: false
  private _maxTokens?: number; 
  public get maxTokens() {
    return this.getNumberAttribute('max_tokens');
  }
  public set maxTokens(value: number) {
    this._maxTokens = value;
  }
  public resetMaxTokens() {
    this._maxTokens = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxTokensInput() {
    return this._maxTokens;
  }

  // tokens_per_fill - computed: false, optional: true, required: false
  private _tokensPerFill?: number; 
  public get tokensPerFill() {
    return this.getNumberAttribute('tokens_per_fill');
  }
  public set tokensPerFill(value: number) {
    this._tokensPerFill = value;
  }
  public resetTokensPerFill() {
    this._tokensPerFill = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokensPerFillInput() {
    return this._tokensPerFill;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsGenericKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_value}
  */
  readonly descriptorValue?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsGenericKeyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsGenericKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_value: cdktf.stringToTerraform(struct!.descriptorValue),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsGenericKeyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsGenericKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_value: {
      value: cdktf.stringToHclTerraform(struct!.descriptorValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsGenericKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsGenericKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorValue = this._descriptorValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsGenericKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorValue = value.descriptorValue;
    }
  }

  // descriptor_value - computed: false, optional: true, required: false
  private _descriptorValue?: string; 
  public get descriptorValue() {
    return this.getStringAttribute('descriptor_value');
  }
  public set descriptorValue(value: string) {
    this._descriptorValue = value;
  }
  public resetDescriptorValue() {
    this._descriptorValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorValueInput() {
    return this._descriptorValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersRangeMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#end DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#end}
  */
  readonly end?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#start DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#start}
  */
  readonly start?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersRangeMatchToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    end: cdktf.numberToTerraform(struct!.end),
    start: cdktf.numberToTerraform(struct!.start),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersRangeMatchToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    end: {
      value: cdktf.numberToHclTerraform(struct!.end),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    start: {
      value: cdktf.numberToHclTerraform(struct!.start),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersRangeMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._end !== undefined) {
      hasAnyValues = true;
      internalValueResult.end = this._end;
    }
    if (this._start !== undefined) {
      hasAnyValues = true;
      internalValueResult.start = this._start;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._end = undefined;
      this._start = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._end = value.end;
      this._start = value.start;
    }
  }

  // end - computed: false, optional: true, required: false
  private _end?: number; 
  public get end() {
    return this.getNumberAttribute('end');
  }
  public set end(value: number) {
    this._end = value;
  }
  public resetEnd() {
    this._end = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endInput() {
    return this._end;
  }

  // start - computed: false, optional: true, required: false
  private _start?: number; 
  public get start() {
    return this.getNumberAttribute('start');
  }
  public set start(value: number) {
    this._start = value;
  }
  public resetStart() {
    this._start = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startInput() {
    return this._start;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#exact_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#exact_match}
  */
  readonly exactMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#invert_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#invert_match}
  */
  readonly invertMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#prefix_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#prefix_match}
  */
  readonly prefixMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#present_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#present_match}
  */
  readonly presentMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#range_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#range_match}
  */
  readonly rangeMatch?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersRangeMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#regex_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#regex_match}
  */
  readonly regexMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#suffix_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#suffix_match}
  */
  readonly suffixMatch?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exact_match: cdktf.stringToTerraform(struct!.exactMatch),
    invert_match: cdktf.booleanToTerraform(struct!.invertMatch),
    name: cdktf.stringToTerraform(struct!.name),
    prefix_match: cdktf.stringToTerraform(struct!.prefixMatch),
    present_match: cdktf.booleanToTerraform(struct!.presentMatch),
    range_match: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersRangeMatchToTerraform(struct!.rangeMatch),
    regex_match: cdktf.stringToTerraform(struct!.regexMatch),
    suffix_match: cdktf.stringToTerraform(struct!.suffixMatch),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exact_match: {
      value: cdktf.stringToHclTerraform(struct!.exactMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    invert_match: {
      value: cdktf.booleanToHclTerraform(struct!.invertMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    prefix_match: {
      value: cdktf.stringToHclTerraform(struct!.prefixMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    present_match: {
      value: cdktf.booleanToHclTerraform(struct!.presentMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    range_match: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersRangeMatchToHclTerraform(struct!.rangeMatch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersRangeMatch",
    },
    regex_match: {
      value: cdktf.stringToHclTerraform(struct!.regexMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    suffix_match: {
      value: cdktf.stringToHclTerraform(struct!.suffixMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exactMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.exactMatch = this._exactMatch;
    }
    if (this._invertMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.invertMatch = this._invertMatch;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._prefixMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefixMatch = this._prefixMatch;
    }
    if (this._presentMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.presentMatch = this._presentMatch;
    }
    if (this._rangeMatch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rangeMatch = this._rangeMatch?.internalValue;
    }
    if (this._regexMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.regexMatch = this._regexMatch;
    }
    if (this._suffixMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.suffixMatch = this._suffixMatch;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exactMatch = undefined;
      this._invertMatch = undefined;
      this._name = undefined;
      this._prefixMatch = undefined;
      this._presentMatch = undefined;
      this._rangeMatch.internalValue = undefined;
      this._regexMatch = undefined;
      this._suffixMatch = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exactMatch = value.exactMatch;
      this._invertMatch = value.invertMatch;
      this._name = value.name;
      this._prefixMatch = value.prefixMatch;
      this._presentMatch = value.presentMatch;
      this._rangeMatch.internalValue = value.rangeMatch;
      this._regexMatch = value.regexMatch;
      this._suffixMatch = value.suffixMatch;
    }
  }

  // exact_match - computed: false, optional: true, required: false
  private _exactMatch?: string; 
  public get exactMatch() {
    return this.getStringAttribute('exact_match');
  }
  public set exactMatch(value: string) {
    this._exactMatch = value;
  }
  public resetExactMatch() {
    this._exactMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exactMatchInput() {
    return this._exactMatch;
  }

  // invert_match - computed: false, optional: true, required: false
  private _invertMatch?: boolean | cdktf.IResolvable; 
  public get invertMatch() {
    return this.getBooleanAttribute('invert_match');
  }
  public set invertMatch(value: boolean | cdktf.IResolvable) {
    this._invertMatch = value;
  }
  public resetInvertMatch() {
    this._invertMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get invertMatchInput() {
    return this._invertMatch;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // prefix_match - computed: false, optional: true, required: false
  private _prefixMatch?: string; 
  public get prefixMatch() {
    return this.getStringAttribute('prefix_match');
  }
  public set prefixMatch(value: string) {
    this._prefixMatch = value;
  }
  public resetPrefixMatch() {
    this._prefixMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixMatchInput() {
    return this._prefixMatch;
  }

  // present_match - computed: false, optional: true, required: false
  private _presentMatch?: boolean | cdktf.IResolvable; 
  public get presentMatch() {
    return this.getBooleanAttribute('present_match');
  }
  public set presentMatch(value: boolean | cdktf.IResolvable) {
    this._presentMatch = value;
  }
  public resetPresentMatch() {
    this._presentMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get presentMatchInput() {
    return this._presentMatch;
  }

  // range_match - computed: false, optional: true, required: false
  private _rangeMatch = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersRangeMatchOutputReference(this, "range_match");
  public get rangeMatch() {
    return this._rangeMatch;
  }
  public putRangeMatch(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersRangeMatch) {
    this._rangeMatch.internalValue = value;
  }
  public resetRangeMatch() {
    this._rangeMatch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rangeMatchInput() {
    return this._rangeMatch.internalValue;
  }

  // regex_match - computed: false, optional: true, required: false
  private _regexMatch?: string; 
  public get regexMatch() {
    return this.getStringAttribute('regex_match');
  }
  public set regexMatch(value: string) {
    this._regexMatch = value;
  }
  public resetRegexMatch() {
    this._regexMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexMatchInput() {
    return this._regexMatch;
  }

  // suffix_match - computed: false, optional: true, required: false
  private _suffixMatch?: string; 
  public get suffixMatch() {
    return this.getStringAttribute('suffix_match');
  }
  public set suffixMatch(value: string) {
    this._suffixMatch = value;
  }
  public resetSuffixMatch() {
    this._suffixMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get suffixMatchInput() {
    return this._suffixMatch;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_value}
  */
  readonly descriptorValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#expect_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#expect_match}
  */
  readonly expectMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#headers}
  */
  readonly headers?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeaders[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_value: cdktf.stringToTerraform(struct!.descriptorValue),
    expect_match: cdktf.booleanToTerraform(struct!.expectMatch),
    headers: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersToTerraform, false)(struct!.headers),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_value: {
      value: cdktf.stringToHclTerraform(struct!.descriptorValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    expect_match: {
      value: cdktf.booleanToHclTerraform(struct!.expectMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    headers: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorValue = this._descriptorValue;
    }
    if (this._expectMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.expectMatch = this._expectMatch;
    }
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorValue = undefined;
      this._expectMatch = undefined;
      this._headers.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorValue = value.descriptorValue;
      this._expectMatch = value.expectMatch;
      this._headers.internalValue = value.headers;
    }
  }

  // descriptor_value - computed: false, optional: true, required: false
  private _descriptorValue?: string; 
  public get descriptorValue() {
    return this.getStringAttribute('descriptor_value');
  }
  public set descriptorValue(value: string) {
    this._descriptorValue = value;
  }
  public resetDescriptorValue() {
    this._descriptorValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorValueInput() {
    return this._descriptorValue;
  }

  // expect_match - computed: false, optional: true, required: false
  private _expectMatch?: boolean | cdktf.IResolvable; 
  public get expectMatch() {
    return this.getBooleanAttribute('expect_match');
  }
  public set expectMatch(value: boolean | cdktf.IResolvable) {
    this._expectMatch = value;
  }
  public resetExpectMatch() {
    this._expectMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expectMatchInput() {
    return this._expectMatch;
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPath {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPathToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPathToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPathList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPath[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPathOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPathOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#path DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#path}
  */
  readonly path?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPath[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    path: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPathToTerraform, false)(struct!.path),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPathToHclTerraform, false)(struct!.path),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPathList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._path.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._path.internalValue = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPathList(this, "path", false);
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyPath[] | cdktf.IResolvable) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#default_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#default_value}
  */
  readonly defaultValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_key}
  */
  readonly descriptorKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata_key}
  */
  readonly metadataKey?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#source DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#source}
  */
  readonly source?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_value: cdktf.stringToTerraform(struct!.defaultValue),
    descriptor_key: cdktf.stringToTerraform(struct!.descriptorKey),
    metadata_key: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyToTerraform(struct!.metadataKey),
    source: cdktf.stringToTerraform(struct!.source),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_value: {
      value: cdktf.stringToHclTerraform(struct!.defaultValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    descriptor_key: {
      value: cdktf.stringToHclTerraform(struct!.descriptorKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metadata_key: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyToHclTerraform(struct!.metadataKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKey",
    },
    source: {
      value: cdktf.stringToHclTerraform(struct!.source),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultValue = this._defaultValue;
    }
    if (this._descriptorKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorKey = this._descriptorKey;
    }
    if (this._metadataKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataKey = this._metadataKey?.internalValue;
    }
    if (this._source !== undefined) {
      hasAnyValues = true;
      internalValueResult.source = this._source;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultValue = undefined;
      this._descriptorKey = undefined;
      this._metadataKey.internalValue = undefined;
      this._source = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultValue = value.defaultValue;
      this._descriptorKey = value.descriptorKey;
      this._metadataKey.internalValue = value.metadataKey;
      this._source = value.source;
    }
  }

  // default_value - computed: false, optional: true, required: false
  private _defaultValue?: string; 
  public get defaultValue() {
    return this.getStringAttribute('default_value');
  }
  public set defaultValue(value: string) {
    this._defaultValue = value;
  }
  public resetDefaultValue() {
    this._defaultValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultValueInput() {
    return this._defaultValue;
  }

  // descriptor_key - computed: false, optional: true, required: false
  private _descriptorKey?: string; 
  public get descriptorKey() {
    return this.getStringAttribute('descriptor_key');
  }
  public set descriptorKey(value: string) {
    this._descriptorKey = value;
  }
  public resetDescriptorKey() {
    this._descriptorKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorKeyInput() {
    return this._descriptorKey;
  }

  // metadata_key - computed: false, optional: true, required: false
  private _metadataKey = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKeyOutputReference(this, "metadata_key");
  public get metadataKey() {
    return this._metadataKey;
  }
  public putMetadataKey(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataMetadataKey) {
    this._metadataKey.internalValue = value;
  }
  public resetMetadataKey() {
    this._metadataKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataKeyInput() {
    return this._metadataKey.internalValue;
  }

  // source - computed: false, optional: true, required: false
  private _source?: string; 
  public get source() {
    return this.getStringAttribute('source');
  }
  public set source(value: string) {
    this._source = value;
  }
  public resetSource() {
    this._source = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceInput() {
    return this._source;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsRequestHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_key}
  */
  readonly descriptorKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header_name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header_name}
  */
  readonly headerName?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsRequestHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsRequestHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_key: cdktf.stringToTerraform(struct!.descriptorKey),
    header_name: cdktf.stringToTerraform(struct!.headerName),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsRequestHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsRequestHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_key: {
      value: cdktf.stringToHclTerraform(struct!.descriptorKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    header_name: {
      value: cdktf.stringToHclTerraform(struct!.headerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsRequestHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsRequestHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorKey = this._descriptorKey;
    }
    if (this._headerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.headerName = this._headerName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsRequestHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorKey = undefined;
      this._headerName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorKey = value.descriptorKey;
      this._headerName = value.headerName;
    }
  }

  // descriptor_key - computed: false, optional: true, required: false
  private _descriptorKey?: string; 
  public get descriptorKey() {
    return this.getStringAttribute('descriptor_key');
  }
  public set descriptorKey(value: string) {
    this._descriptorKey = value;
  }
  public resetDescriptorKey() {
    this._descriptorKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorKeyInput() {
    return this._descriptorKey;
  }

  // header_name - computed: false, optional: true, required: false
  private _headerName?: string; 
  public get headerName() {
    return this.getStringAttribute('header_name');
  }
  public set headerName(value: string) {
    this._headerName = value;
  }
  public resetHeaderName() {
    this._headerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerNameInput() {
    return this._headerName;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#destination_cluster DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#destination_cluster}
  */
  readonly destinationCluster?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#generic_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#generic_key}
  */
  readonly genericKey?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsGenericKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header_value_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header_value_match}
  */
  readonly headerValueMatch?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata}
  */
  readonly metadata?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#remote_address DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#remote_address}
  */
  readonly remoteAddress?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#request_headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#request_headers}
  */
  readonly requestHeaders?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsRequestHeaders;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#source_cluster DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#source_cluster}
  */
  readonly sourceCluster?: { [key: string]: string };
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    destination_cluster: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.destinationCluster),
    generic_key: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsGenericKeyToTerraform(struct!.genericKey),
    header_value_match: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchToTerraform(struct!.headerValueMatch),
    metadata: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataToTerraform(struct!.metadata),
    remote_address: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.remoteAddress),
    request_headers: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsRequestHeadersToTerraform(struct!.requestHeaders),
    source_cluster: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.sourceCluster),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    destination_cluster: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.destinationCluster),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    generic_key: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsGenericKeyToHclTerraform(struct!.genericKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsGenericKey",
    },
    header_value_match: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchToHclTerraform(struct!.headerValueMatch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatch",
    },
    metadata: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadata",
    },
    remote_address: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.remoteAddress),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    request_headers: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsRequestHeadersToHclTerraform(struct!.requestHeaders),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsRequestHeaders",
    },
    source_cluster: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.sourceCluster),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._destinationCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.destinationCluster = this._destinationCluster;
    }
    if (this._genericKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.genericKey = this._genericKey?.internalValue;
    }
    if (this._headerValueMatch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headerValueMatch = this._headerValueMatch?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._remoteAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteAddress = this._remoteAddress;
    }
    if (this._requestHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestHeaders = this._requestHeaders?.internalValue;
    }
    if (this._sourceCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourceCluster = this._sourceCluster;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._destinationCluster = undefined;
      this._genericKey.internalValue = undefined;
      this._headerValueMatch.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._remoteAddress = undefined;
      this._requestHeaders.internalValue = undefined;
      this._sourceCluster = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._destinationCluster = value.destinationCluster;
      this._genericKey.internalValue = value.genericKey;
      this._headerValueMatch.internalValue = value.headerValueMatch;
      this._metadata.internalValue = value.metadata;
      this._remoteAddress = value.remoteAddress;
      this._requestHeaders.internalValue = value.requestHeaders;
      this._sourceCluster = value.sourceCluster;
    }
  }

  // destination_cluster - computed: false, optional: true, required: false
  private _destinationCluster?: { [key: string]: string }; 
  public get destinationCluster() {
    return this.getStringMapAttribute('destination_cluster');
  }
  public set destinationCluster(value: { [key: string]: string }) {
    this._destinationCluster = value;
  }
  public resetDestinationCluster() {
    this._destinationCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get destinationClusterInput() {
    return this._destinationCluster;
  }

  // generic_key - computed: false, optional: true, required: false
  private _genericKey = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsGenericKeyOutputReference(this, "generic_key");
  public get genericKey() {
    return this._genericKey;
  }
  public putGenericKey(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsGenericKey) {
    this._genericKey.internalValue = value;
  }
  public resetGenericKey() {
    this._genericKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get genericKeyInput() {
    return this._genericKey.internalValue;
  }

  // header_value_match - computed: false, optional: true, required: false
  private _headerValueMatch = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatchOutputReference(this, "header_value_match");
  public get headerValueMatch() {
    return this._headerValueMatch;
  }
  public putHeaderValueMatch(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsHeaderValueMatch) {
    this._headerValueMatch.internalValue = value;
  }
  public resetHeaderValueMatch() {
    this._headerValueMatch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerValueMatchInput() {
    return this._headerValueMatch.internalValue;
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // remote_address - computed: false, optional: true, required: false
  private _remoteAddress?: { [key: string]: string }; 
  public get remoteAddress() {
    return this.getStringMapAttribute('remote_address');
  }
  public set remoteAddress(value: { [key: string]: string }) {
    this._remoteAddress = value;
  }
  public resetRemoteAddress() {
    this._remoteAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteAddressInput() {
    return this._remoteAddress;
  }

  // request_headers - computed: false, optional: true, required: false
  private _requestHeaders = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsRequestHeadersOutputReference(this, "request_headers");
  public get requestHeaders() {
    return this._requestHeaders;
  }
  public putRequestHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsRequestHeaders) {
    this._requestHeaders.internalValue = value;
  }
  public resetRequestHeaders() {
    this._requestHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestHeadersInput() {
    return this._requestHeaders.internalValue;
  }

  // source_cluster - computed: false, optional: true, required: false
  private _sourceCluster?: { [key: string]: string }; 
  public get sourceCluster() {
    return this.getStringMapAttribute('source_cluster');
  }
  public set sourceCluster(value: { [key: string]: string }) {
    this._sourceCluster = value;
  }
  public resetSourceCluster() {
    this._sourceCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceClusterInput() {
    return this._sourceCluster;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPath {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPathToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPathToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPathList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPath[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPathOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPathOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#path DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#path}
  */
  readonly path?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPath[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    path: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPathToTerraform, false)(struct!.path),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPathToHclTerraform, false)(struct!.path),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPathList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._path.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._path.internalValue = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPathList(this, "path", false);
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyPath[] | cdktf.IResolvable) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata_key}
  */
  readonly metadataKey?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKey;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata_key: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyToTerraform(struct!.metadataKey),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata_key: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyToHclTerraform(struct!.metadataKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKey",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadataKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataKey = this._metadataKey?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadataKey.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadataKey.internalValue = value.metadataKey;
    }
  }

  // metadata_key - computed: false, optional: true, required: false
  private _metadataKey = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKeyOutputReference(this, "metadata_key");
  public get metadataKey() {
    return this._metadataKey;
  }
  public putMetadataKey(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataMetadataKey) {
    this._metadataKey.internalValue = value;
  }
  public resetMetadataKey() {
    this._metadataKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataKeyInput() {
    return this._metadataKey.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimit {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#dynamic_metadata DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#dynamic_metadata}
  */
  readonly dynamicMetadata?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadata;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dynamic_metadata: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataToTerraform(struct!.dynamicMetadata),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dynamic_metadata: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataToHclTerraform(struct!.dynamicMetadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadata",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimit | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dynamicMetadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dynamicMetadata = this._dynamicMetadata?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimit | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dynamicMetadata.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dynamicMetadata.internalValue = value.dynamicMetadata;
    }
  }

  // dynamic_metadata - computed: false, optional: true, required: false
  private _dynamicMetadata = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadataOutputReference(this, "dynamic_metadata");
  public get dynamicMetadata() {
    return this._dynamicMetadata;
  }
  public putDynamicMetadata(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitDynamicMetadata) {
    this._dynamicMetadata.internalValue = value;
  }
  public resetDynamicMetadata() {
    this._dynamicMetadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dynamicMetadataInput() {
    return this._dynamicMetadata.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsGenericKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_value}
  */
  readonly descriptorValue?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsGenericKeyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsGenericKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_value: cdktf.stringToTerraform(struct!.descriptorValue),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsGenericKeyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsGenericKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_value: {
      value: cdktf.stringToHclTerraform(struct!.descriptorValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsGenericKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsGenericKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorValue = this._descriptorValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsGenericKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorValue = value.descriptorValue;
    }
  }

  // descriptor_value - computed: false, optional: true, required: false
  private _descriptorValue?: string; 
  public get descriptorValue() {
    return this.getStringAttribute('descriptor_value');
  }
  public set descriptorValue(value: string) {
    this._descriptorValue = value;
  }
  public resetDescriptorValue() {
    this._descriptorValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorValueInput() {
    return this._descriptorValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#end DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#end}
  */
  readonly end?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#start DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#start}
  */
  readonly start?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    end: cdktf.numberToTerraform(struct!.end),
    start: cdktf.numberToTerraform(struct!.start),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    end: {
      value: cdktf.numberToHclTerraform(struct!.end),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    start: {
      value: cdktf.numberToHclTerraform(struct!.start),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._end !== undefined) {
      hasAnyValues = true;
      internalValueResult.end = this._end;
    }
    if (this._start !== undefined) {
      hasAnyValues = true;
      internalValueResult.start = this._start;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._end = undefined;
      this._start = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._end = value.end;
      this._start = value.start;
    }
  }

  // end - computed: false, optional: true, required: false
  private _end?: number; 
  public get end() {
    return this.getNumberAttribute('end');
  }
  public set end(value: number) {
    this._end = value;
  }
  public resetEnd() {
    this._end = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endInput() {
    return this._end;
  }

  // start - computed: false, optional: true, required: false
  private _start?: number; 
  public get start() {
    return this.getNumberAttribute('start');
  }
  public set start(value: number) {
    this._start = value;
  }
  public resetStart() {
    this._start = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startInput() {
    return this._start;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#exact_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#exact_match}
  */
  readonly exactMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#invert_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#invert_match}
  */
  readonly invertMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#prefix_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#prefix_match}
  */
  readonly prefixMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#present_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#present_match}
  */
  readonly presentMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#range_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#range_match}
  */
  readonly rangeMatch?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#regex_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#regex_match}
  */
  readonly regexMatch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#suffix_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#suffix_match}
  */
  readonly suffixMatch?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exact_match: cdktf.stringToTerraform(struct!.exactMatch),
    invert_match: cdktf.booleanToTerraform(struct!.invertMatch),
    name: cdktf.stringToTerraform(struct!.name),
    prefix_match: cdktf.stringToTerraform(struct!.prefixMatch),
    present_match: cdktf.booleanToTerraform(struct!.presentMatch),
    range_match: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchToTerraform(struct!.rangeMatch),
    regex_match: cdktf.stringToTerraform(struct!.regexMatch),
    suffix_match: cdktf.stringToTerraform(struct!.suffixMatch),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exact_match: {
      value: cdktf.stringToHclTerraform(struct!.exactMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    invert_match: {
      value: cdktf.booleanToHclTerraform(struct!.invertMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    prefix_match: {
      value: cdktf.stringToHclTerraform(struct!.prefixMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    present_match: {
      value: cdktf.booleanToHclTerraform(struct!.presentMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    range_match: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchToHclTerraform(struct!.rangeMatch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch",
    },
    regex_match: {
      value: cdktf.stringToHclTerraform(struct!.regexMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    suffix_match: {
      value: cdktf.stringToHclTerraform(struct!.suffixMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exactMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.exactMatch = this._exactMatch;
    }
    if (this._invertMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.invertMatch = this._invertMatch;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._prefixMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefixMatch = this._prefixMatch;
    }
    if (this._presentMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.presentMatch = this._presentMatch;
    }
    if (this._rangeMatch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rangeMatch = this._rangeMatch?.internalValue;
    }
    if (this._regexMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.regexMatch = this._regexMatch;
    }
    if (this._suffixMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.suffixMatch = this._suffixMatch;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exactMatch = undefined;
      this._invertMatch = undefined;
      this._name = undefined;
      this._prefixMatch = undefined;
      this._presentMatch = undefined;
      this._rangeMatch.internalValue = undefined;
      this._regexMatch = undefined;
      this._suffixMatch = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exactMatch = value.exactMatch;
      this._invertMatch = value.invertMatch;
      this._name = value.name;
      this._prefixMatch = value.prefixMatch;
      this._presentMatch = value.presentMatch;
      this._rangeMatch.internalValue = value.rangeMatch;
      this._regexMatch = value.regexMatch;
      this._suffixMatch = value.suffixMatch;
    }
  }

  // exact_match - computed: false, optional: true, required: false
  private _exactMatch?: string; 
  public get exactMatch() {
    return this.getStringAttribute('exact_match');
  }
  public set exactMatch(value: string) {
    this._exactMatch = value;
  }
  public resetExactMatch() {
    this._exactMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exactMatchInput() {
    return this._exactMatch;
  }

  // invert_match - computed: false, optional: true, required: false
  private _invertMatch?: boolean | cdktf.IResolvable; 
  public get invertMatch() {
    return this.getBooleanAttribute('invert_match');
  }
  public set invertMatch(value: boolean | cdktf.IResolvable) {
    this._invertMatch = value;
  }
  public resetInvertMatch() {
    this._invertMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get invertMatchInput() {
    return this._invertMatch;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // prefix_match - computed: false, optional: true, required: false
  private _prefixMatch?: string; 
  public get prefixMatch() {
    return this.getStringAttribute('prefix_match');
  }
  public set prefixMatch(value: string) {
    this._prefixMatch = value;
  }
  public resetPrefixMatch() {
    this._prefixMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixMatchInput() {
    return this._prefixMatch;
  }

  // present_match - computed: false, optional: true, required: false
  private _presentMatch?: boolean | cdktf.IResolvable; 
  public get presentMatch() {
    return this.getBooleanAttribute('present_match');
  }
  public set presentMatch(value: boolean | cdktf.IResolvable) {
    this._presentMatch = value;
  }
  public resetPresentMatch() {
    this._presentMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get presentMatchInput() {
    return this._presentMatch;
  }

  // range_match - computed: false, optional: true, required: false
  private _rangeMatch = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersRangeMatchOutputReference(this, "range_match");
  public get rangeMatch() {
    return this._rangeMatch;
  }
  public putRangeMatch(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersRangeMatch) {
    this._rangeMatch.internalValue = value;
  }
  public resetRangeMatch() {
    this._rangeMatch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rangeMatchInput() {
    return this._rangeMatch.internalValue;
  }

  // regex_match - computed: false, optional: true, required: false
  private _regexMatch?: string; 
  public get regexMatch() {
    return this.getStringAttribute('regex_match');
  }
  public set regexMatch(value: string) {
    this._regexMatch = value;
  }
  public resetRegexMatch() {
    this._regexMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regexMatchInput() {
    return this._regexMatch;
  }

  // suffix_match - computed: false, optional: true, required: false
  private _suffixMatch?: string; 
  public get suffixMatch() {
    return this.getStringAttribute('suffix_match');
  }
  public set suffixMatch(value: string) {
    this._suffixMatch = value;
  }
  public resetSuffixMatch() {
    this._suffixMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get suffixMatchInput() {
    return this._suffixMatch;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatch {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_value}
  */
  readonly descriptorValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#expect_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#expect_match}
  */
  readonly expectMatch?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#headers}
  */
  readonly headers?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeaders[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_value: cdktf.stringToTerraform(struct!.descriptorValue),
    expect_match: cdktf.booleanToTerraform(struct!.expectMatch),
    headers: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersToTerraform, false)(struct!.headers),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_value: {
      value: cdktf.stringToHclTerraform(struct!.descriptorValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    expect_match: {
      value: cdktf.booleanToHclTerraform(struct!.expectMatch),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    headers: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersToHclTerraform, false)(struct!.headers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorValue = this._descriptorValue;
    }
    if (this._expectMatch !== undefined) {
      hasAnyValues = true;
      internalValueResult.expectMatch = this._expectMatch;
    }
    if (this._headers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorValue = undefined;
      this._expectMatch = undefined;
      this._headers.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorValue = value.descriptorValue;
      this._expectMatch = value.expectMatch;
      this._headers.internalValue = value.headers;
    }
  }

  // descriptor_value - computed: false, optional: true, required: false
  private _descriptorValue?: string; 
  public get descriptorValue() {
    return this.getStringAttribute('descriptor_value');
  }
  public set descriptorValue(value: string) {
    this._descriptorValue = value;
  }
  public resetDescriptorValue() {
    this._descriptorValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorValueInput() {
    return this._descriptorValue;
  }

  // expect_match - computed: false, optional: true, required: false
  private _expectMatch?: boolean | cdktf.IResolvable; 
  public get expectMatch() {
    return this.getBooleanAttribute('expect_match');
  }
  public set expectMatch(value: boolean | cdktf.IResolvable) {
    this._expectMatch = value;
  }
  public resetExpectMatch() {
    this._expectMatch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expectMatchInput() {
    return this._expectMatch;
  }

  // headers - computed: false, optional: true, required: false
  private _headers = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeadersList(this, "headers", false);
  public get headers() {
    return this._headers;
  }
  public putHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchHeaders[] | cdktf.IResolvable) {
    this._headers.internalValue = value;
  }
  public resetHeaders() {
    this._headers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPath {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPathToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPathToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPathList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPath[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPathOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPathOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKey {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#path DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#path}
  */
  readonly path?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPath[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    path: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPathToTerraform, false)(struct!.path),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKey | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPathToHclTerraform, false)(struct!.path),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPathList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKey | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._path?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKey | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._path.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._path.internalValue = value.path;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // path - computed: false, optional: true, required: false
  private _path = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPathList(this, "path", false);
  public get path() {
    return this._path;
  }
  public putPath(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyPath[] | cdktf.IResolvable) {
    this._path.internalValue = value;
  }
  public resetPath() {
    this._path.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#default_value DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#default_value}
  */
  readonly defaultValue?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_key}
  */
  readonly descriptorKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata_key}
  */
  readonly metadataKey?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#source DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#source}
  */
  readonly source?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_value: cdktf.stringToTerraform(struct!.defaultValue),
    descriptor_key: cdktf.stringToTerraform(struct!.descriptorKey),
    metadata_key: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyToTerraform(struct!.metadataKey),
    source: cdktf.stringToTerraform(struct!.source),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_value: {
      value: cdktf.stringToHclTerraform(struct!.defaultValue),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    descriptor_key: {
      value: cdktf.stringToHclTerraform(struct!.descriptorKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metadata_key: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyToHclTerraform(struct!.metadataKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKey",
    },
    source: {
      value: cdktf.stringToHclTerraform(struct!.source),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultValue = this._defaultValue;
    }
    if (this._descriptorKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorKey = this._descriptorKey;
    }
    if (this._metadataKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataKey = this._metadataKey?.internalValue;
    }
    if (this._source !== undefined) {
      hasAnyValues = true;
      internalValueResult.source = this._source;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultValue = undefined;
      this._descriptorKey = undefined;
      this._metadataKey.internalValue = undefined;
      this._source = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultValue = value.defaultValue;
      this._descriptorKey = value.descriptorKey;
      this._metadataKey.internalValue = value.metadataKey;
      this._source = value.source;
    }
  }

  // default_value - computed: false, optional: true, required: false
  private _defaultValue?: string; 
  public get defaultValue() {
    return this.getStringAttribute('default_value');
  }
  public set defaultValue(value: string) {
    this._defaultValue = value;
  }
  public resetDefaultValue() {
    this._defaultValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultValueInput() {
    return this._defaultValue;
  }

  // descriptor_key - computed: false, optional: true, required: false
  private _descriptorKey?: string; 
  public get descriptorKey() {
    return this.getStringAttribute('descriptor_key');
  }
  public set descriptorKey(value: string) {
    this._descriptorKey = value;
  }
  public resetDescriptorKey() {
    this._descriptorKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorKeyInput() {
    return this._descriptorKey;
  }

  // metadata_key - computed: false, optional: true, required: false
  private _metadataKey = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKeyOutputReference(this, "metadata_key");
  public get metadataKey() {
    return this._metadataKey;
  }
  public putMetadataKey(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataMetadataKey) {
    this._metadataKey.internalValue = value;
  }
  public resetMetadataKey() {
    this._metadataKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataKeyInput() {
    return this._metadataKey.internalValue;
  }

  // source - computed: false, optional: true, required: false
  private _source?: string; 
  public get source() {
    return this.getStringAttribute('source');
  }
  public set source(value: string) {
    this._source = value;
  }
  public resetSource() {
    this._source = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceInput() {
    return this._source;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsRequestHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#descriptor_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#descriptor_key}
  */
  readonly descriptorKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header_name DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header_name}
  */
  readonly headerName?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsRequestHeadersToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsRequestHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    descriptor_key: cdktf.stringToTerraform(struct!.descriptorKey),
    header_name: cdktf.stringToTerraform(struct!.headerName),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsRequestHeadersToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsRequestHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    descriptor_key: {
      value: cdktf.stringToHclTerraform(struct!.descriptorKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    header_name: {
      value: cdktf.stringToHclTerraform(struct!.headerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsRequestHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsRequestHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._descriptorKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.descriptorKey = this._descriptorKey;
    }
    if (this._headerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.headerName = this._headerName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsRequestHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._descriptorKey = undefined;
      this._headerName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._descriptorKey = value.descriptorKey;
      this._headerName = value.headerName;
    }
  }

  // descriptor_key - computed: false, optional: true, required: false
  private _descriptorKey?: string; 
  public get descriptorKey() {
    return this.getStringAttribute('descriptor_key');
  }
  public set descriptorKey(value: string) {
    this._descriptorKey = value;
  }
  public resetDescriptorKey() {
    this._descriptorKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptorKeyInput() {
    return this._descriptorKey;
  }

  // header_name - computed: false, optional: true, required: false
  private _headerName?: string; 
  public get headerName() {
    return this.getStringAttribute('header_name');
  }
  public set headerName(value: string) {
    this._headerName = value;
  }
  public resetHeaderName() {
    this._headerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerNameInput() {
    return this._headerName;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#destination_cluster DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#destination_cluster}
  */
  readonly destinationCluster?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#generic_key DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#generic_key}
  */
  readonly genericKey?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsGenericKey;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#header_value_match DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#header_value_match}
  */
  readonly headerValueMatch?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatch;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#metadata DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#metadata}
  */
  readonly metadata?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#remote_address DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#remote_address}
  */
  readonly remoteAddress?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#request_headers DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#request_headers}
  */
  readonly requestHeaders?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsRequestHeaders;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#source_cluster DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#source_cluster}
  */
  readonly sourceCluster?: { [key: string]: string };
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    destination_cluster: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.destinationCluster),
    generic_key: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsGenericKeyToTerraform(struct!.genericKey),
    header_value_match: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchToTerraform(struct!.headerValueMatch),
    metadata: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataToTerraform(struct!.metadata),
    remote_address: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.remoteAddress),
    request_headers: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsRequestHeadersToTerraform(struct!.requestHeaders),
    source_cluster: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.sourceCluster),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    destination_cluster: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.destinationCluster),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    generic_key: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsGenericKeyToHclTerraform(struct!.genericKey),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsGenericKey",
    },
    header_value_match: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchToHclTerraform(struct!.headerValueMatch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatch",
    },
    metadata: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadata",
    },
    remote_address: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.remoteAddress),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    request_headers: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsRequestHeadersToHclTerraform(struct!.requestHeaders),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsRequestHeaders",
    },
    source_cluster: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.sourceCluster),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._destinationCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.destinationCluster = this._destinationCluster;
    }
    if (this._genericKey?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.genericKey = this._genericKey?.internalValue;
    }
    if (this._headerValueMatch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.headerValueMatch = this._headerValueMatch?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._remoteAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteAddress = this._remoteAddress;
    }
    if (this._requestHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestHeaders = this._requestHeaders?.internalValue;
    }
    if (this._sourceCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourceCluster = this._sourceCluster;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._destinationCluster = undefined;
      this._genericKey.internalValue = undefined;
      this._headerValueMatch.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._remoteAddress = undefined;
      this._requestHeaders.internalValue = undefined;
      this._sourceCluster = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._destinationCluster = value.destinationCluster;
      this._genericKey.internalValue = value.genericKey;
      this._headerValueMatch.internalValue = value.headerValueMatch;
      this._metadata.internalValue = value.metadata;
      this._remoteAddress = value.remoteAddress;
      this._requestHeaders.internalValue = value.requestHeaders;
      this._sourceCluster = value.sourceCluster;
    }
  }

  // destination_cluster - computed: false, optional: true, required: false
  private _destinationCluster?: { [key: string]: string }; 
  public get destinationCluster() {
    return this.getStringMapAttribute('destination_cluster');
  }
  public set destinationCluster(value: { [key: string]: string }) {
    this._destinationCluster = value;
  }
  public resetDestinationCluster() {
    this._destinationCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get destinationClusterInput() {
    return this._destinationCluster;
  }

  // generic_key - computed: false, optional: true, required: false
  private _genericKey = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsGenericKeyOutputReference(this, "generic_key");
  public get genericKey() {
    return this._genericKey;
  }
  public putGenericKey(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsGenericKey) {
    this._genericKey.internalValue = value;
  }
  public resetGenericKey() {
    this._genericKey.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get genericKeyInput() {
    return this._genericKey.internalValue;
  }

  // header_value_match - computed: false, optional: true, required: false
  private _headerValueMatch = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatchOutputReference(this, "header_value_match");
  public get headerValueMatch() {
    return this._headerValueMatch;
  }
  public putHeaderValueMatch(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsHeaderValueMatch) {
    this._headerValueMatch.internalValue = value;
  }
  public resetHeaderValueMatch() {
    this._headerValueMatch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headerValueMatchInput() {
    return this._headerValueMatch.internalValue;
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // remote_address - computed: false, optional: true, required: false
  private _remoteAddress?: { [key: string]: string }; 
  public get remoteAddress() {
    return this.getStringMapAttribute('remote_address');
  }
  public set remoteAddress(value: { [key: string]: string }) {
    this._remoteAddress = value;
  }
  public resetRemoteAddress() {
    this._remoteAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteAddressInput() {
    return this._remoteAddress;
  }

  // request_headers - computed: false, optional: true, required: false
  private _requestHeaders = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsRequestHeadersOutputReference(this, "request_headers");
  public get requestHeaders() {
    return this._requestHeaders;
  }
  public putRequestHeaders(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsRequestHeaders) {
    this._requestHeaders.internalValue = value;
  }
  public resetRequestHeaders() {
    this._requestHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestHeadersInput() {
    return this._requestHeaders.internalValue;
  }

  // source_cluster - computed: false, optional: true, required: false
  private _sourceCluster?: { [key: string]: string }; 
  public get sourceCluster() {
    return this.getStringMapAttribute('source_cluster');
  }
  public set sourceCluster(value: { [key: string]: string }) {
    this._sourceCluster = value;
  }
  public resetSourceCluster() {
    this._sourceCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceClusterInput() {
    return this._sourceCluster;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimits {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#actions DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#actions}
  */
  readonly actions?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#limit DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#limit}
  */
  readonly limit?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimit;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#set_actions DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#set_actions}
  */
  readonly setActions?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActions[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    actions: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsToTerraform, false)(struct!.actions),
    limit: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitToTerraform(struct!.limit),
    set_actions: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsToTerraform, false)(struct!.setActions),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    actions: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsToHclTerraform, false)(struct!.actions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsList",
    },
    limit: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitToHclTerraform(struct!.limit),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimit",
    },
    set_actions: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsToHclTerraform, false)(struct!.setActions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimits | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._actions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.actions = this._actions?.internalValue;
    }
    if (this._limit?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.limit = this._limit?.internalValue;
    }
    if (this._setActions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.setActions = this._setActions?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimits | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._actions.internalValue = undefined;
      this._limit.internalValue = undefined;
      this._setActions.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._actions.internalValue = value.actions;
      this._limit.internalValue = value.limit;
      this._setActions.internalValue = value.setActions;
    }
  }

  // actions - computed: false, optional: true, required: false
  private _actions = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActionsList(this, "actions", false);
  public get actions() {
    return this._actions;
  }
  public putActions(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsActions[] | cdktf.IResolvable) {
    this._actions.internalValue = value;
  }
  public resetActions() {
    this._actions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get actionsInput() {
    return this._actions.internalValue;
  }

  // limit - computed: false, optional: true, required: false
  private _limit = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimitOutputReference(this, "limit");
  public get limit() {
    return this._limit;
  }
  public putLimit(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsLimit) {
    this._limit.internalValue = value;
  }
  public resetLimit() {
    this._limit.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitInput() {
    return this._limit.internalValue;
  }

  // set_actions - computed: false, optional: true, required: false
  private _setActions = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActionsList(this, "set_actions", false);
  public get setActions() {
    return this._setActions;
  }
  public putSetActions(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsSetActions[] | cdktf.IResolvable) {
    this._setActions.internalValue = value;
  }
  public resetSetActions() {
    this._setActions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get setActionsInput() {
    return this._setActions.internalValue;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimits[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegular {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#local_ratelimit DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#local_ratelimit}
  */
  readonly localRatelimit?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularLocalRatelimit;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#rate_limits DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#rate_limits}
  */
  readonly rateLimits?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimits[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegular | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    local_ratelimit: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularLocalRatelimitToTerraform(struct!.localRatelimit),
    rate_limits: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsToTerraform, false)(struct!.rateLimits),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegular | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    local_ratelimit: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularLocalRatelimitToHclTerraform(struct!.localRatelimit),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularLocalRatelimit",
    },
    rate_limits: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsToHclTerraform, false)(struct!.rateLimits),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegular | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._localRatelimit?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.localRatelimit = this._localRatelimit?.internalValue;
    }
    if (this._rateLimits?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rateLimits = this._rateLimits?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegular | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._localRatelimit.internalValue = undefined;
      this._rateLimits.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._localRatelimit.internalValue = value.localRatelimit;
      this._rateLimits.internalValue = value.rateLimits;
    }
  }

  // local_ratelimit - computed: false, optional: true, required: false
  private _localRatelimit = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularLocalRatelimitOutputReference(this, "local_ratelimit");
  public get localRatelimit() {
    return this._localRatelimit;
  }
  public putLocalRatelimit(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularLocalRatelimit) {
    this._localRatelimit.internalValue = value;
  }
  public resetLocalRatelimit() {
    this._localRatelimit.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localRatelimitInput() {
    return this._localRatelimit.internalValue;
  }

  // rate_limits - computed: false, optional: true, required: false
  private _rateLimits = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimitsList(this, "rate_limits", false);
  public get rateLimits() {
    return this._rateLimits;
  }
  public putRateLimits(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRatelimitRegularRateLimits[] | cdktf.IResolvable) {
    this._rateLimits.internalValue = value;
  }
  public resetRateLimits() {
    this._rateLimits.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rateLimitsInput() {
    return this._rateLimits.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPermissions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#methods DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#methods}
  */
  readonly methods?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#path_prefix DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#path_prefix}
  */
  readonly pathPrefix?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPermissionsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPermissions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    methods: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.methods),
    path_prefix: cdktf.stringToTerraform(struct!.pathPrefix),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPermissionsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPermissions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    methods: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.methods),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    path_prefix: {
      value: cdktf.stringToHclTerraform(struct!.pathPrefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPermissionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPermissions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._methods !== undefined) {
      hasAnyValues = true;
      internalValueResult.methods = this._methods;
    }
    if (this._pathPrefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.pathPrefix = this._pathPrefix;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPermissions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._methods = undefined;
      this._pathPrefix = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._methods = value.methods;
      this._pathPrefix = value.pathPrefix;
    }
  }

  // methods - computed: false, optional: true, required: false
  private _methods?: string[]; 
  public get methods() {
    return this.getListAttribute('methods');
  }
  public set methods(value: string[]) {
    this._methods = value;
  }
  public resetMethods() {
    this._methods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodsInput() {
    return this._methods;
  }

  // path_prefix - computed: false, optional: true, required: false
  private _pathPrefix?: string; 
  public get pathPrefix() {
    return this.getStringAttribute('path_prefix');
  }
  public set pathPrefix(value: string) {
    this._pathPrefix = value;
  }
  public resetPathPrefix() {
    this._pathPrefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathPrefixInput() {
    return this._pathPrefix;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsJwtPrincipal {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#claims DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#claims}
  */
  readonly claims?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#matcher DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#matcher}
  */
  readonly matcher?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#provider DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#provider}
  */
  readonly provider?: string;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsJwtPrincipalToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsJwtPrincipal | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    claims: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.claims),
    matcher: cdktf.stringToTerraform(struct!.matcher),
    provider: cdktf.stringToTerraform(struct!.provider),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsJwtPrincipalToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsJwtPrincipal | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    claims: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.claims),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    matcher: {
      value: cdktf.stringToHclTerraform(struct!.matcher),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    provider: {
      value: cdktf.stringToHclTerraform(struct!.provider),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsJwtPrincipalOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsJwtPrincipal | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._claims !== undefined) {
      hasAnyValues = true;
      internalValueResult.claims = this._claims;
    }
    if (this._matcher !== undefined) {
      hasAnyValues = true;
      internalValueResult.matcher = this._matcher;
    }
    if (this._provider !== undefined) {
      hasAnyValues = true;
      internalValueResult.provider = this._provider;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsJwtPrincipal | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._claims = undefined;
      this._matcher = undefined;
      this._provider = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._claims = value.claims;
      this._matcher = value.matcher;
      this._provider = value.provider;
    }
  }

  // claims - computed: false, optional: true, required: false
  private _claims?: { [key: string]: string }; 
  public get claims() {
    return this.getStringMapAttribute('claims');
  }
  public set claims(value: { [key: string]: string }) {
    this._claims = value;
  }
  public resetClaims() {
    this._claims = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get claimsInput() {
    return this._claims;
  }

  // matcher - computed: false, optional: true, required: false
  private _matcher?: string; 
  public get matcher() {
    return this.getStringAttribute('matcher');
  }
  public set matcher(value: string) {
    this._matcher = value;
  }
  public resetMatcher() {
    this._matcher = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matcherInput() {
    return this._matcher;
  }

  // provider - computed: false, optional: true, required: false
  private _provider?: string; 
  public get provider() {
    return this.getStringAttribute('provider');
  }
  public set provider(value: string) {
    this._provider = value;
  }
  public resetProvider() {
    this._provider = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get providerInput() {
    return this._provider;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipals {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#jwt_principal DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#jwt_principal}
  */
  readonly jwtPrincipal?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsJwtPrincipal;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipals | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    jwt_principal: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsJwtPrincipalToTerraform(struct!.jwtPrincipal),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipals | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    jwt_principal: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsJwtPrincipalToHclTerraform(struct!.jwtPrincipal),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsJwtPrincipal",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipals | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._jwtPrincipal?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jwtPrincipal = this._jwtPrincipal?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipals | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._jwtPrincipal.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._jwtPrincipal.internalValue = value.jwtPrincipal;
    }
  }

  // jwt_principal - computed: false, optional: true, required: false
  private _jwtPrincipal = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsJwtPrincipalOutputReference(this, "jwt_principal");
  public get jwtPrincipal() {
    return this._jwtPrincipal;
  }
  public putJwtPrincipal(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsJwtPrincipal) {
    this._jwtPrincipal.internalValue = value;
  }
  public resetJwtPrincipal() {
    this._jwtPrincipal.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jwtPrincipalInput() {
    return this._jwtPrincipal.internalValue;
  }
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsList extends cdktf.ComplexList {
  public internalValue? : DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipals[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsOutputReference {
    return new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPolicies {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#nested_claim_delimiter DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#nested_claim_delimiter}
  */
  readonly nestedClaimDelimiter?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#permissions DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#permissions}
  */
  readonly permissions?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPermissions;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#principals DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#principals}
  */
  readonly principals?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipals[] | cdktf.IResolvable;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPolicies | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nested_claim_delimiter: cdktf.stringToTerraform(struct!.nestedClaimDelimiter),
    permissions: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPermissionsToTerraform(struct!.permissions),
    principals: cdktf.listMapper(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsToTerraform, false)(struct!.principals),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPolicies | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nested_claim_delimiter: {
      value: cdktf.stringToHclTerraform(struct!.nestedClaimDelimiter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    permissions: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPermissionsToHclTerraform(struct!.permissions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPermissions",
    },
    principals: {
      value: cdktf.listMapperHcl(dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsToHclTerraform, false)(struct!.principals),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPolicies | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nestedClaimDelimiter !== undefined) {
      hasAnyValues = true;
      internalValueResult.nestedClaimDelimiter = this._nestedClaimDelimiter;
    }
    if (this._permissions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.permissions = this._permissions?.internalValue;
    }
    if (this._principals?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.principals = this._principals?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPolicies | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nestedClaimDelimiter = undefined;
      this._permissions.internalValue = undefined;
      this._principals.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nestedClaimDelimiter = value.nestedClaimDelimiter;
      this._permissions.internalValue = value.permissions;
      this._principals.internalValue = value.principals;
    }
  }

  // nested_claim_delimiter - computed: false, optional: true, required: false
  private _nestedClaimDelimiter?: string; 
  public get nestedClaimDelimiter() {
    return this.getStringAttribute('nested_claim_delimiter');
  }
  public set nestedClaimDelimiter(value: string) {
    this._nestedClaimDelimiter = value;
  }
  public resetNestedClaimDelimiter() {
    this._nestedClaimDelimiter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nestedClaimDelimiterInput() {
    return this._nestedClaimDelimiter;
  }

  // permissions - computed: false, optional: true, required: false
  private _permissions = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPermissionsOutputReference(this, "permissions");
  public get permissions() {
    return this._permissions;
  }
  public putPermissions(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPermissions) {
    this._permissions.internalValue = value;
  }
  public resetPermissions() {
    this._permissions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get permissionsInput() {
    return this._permissions.internalValue;
  }

  // principals - computed: false, optional: true, required: false
  private _principals = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipalsList(this, "principals", false);
  public get principals() {
    return this._principals;
  }
  public putPrincipals(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesPrincipals[] | cdktf.IResolvable) {
    this._principals.internalValue = value;
  }
  public resetPrincipals() {
    this._principals.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get principalsInput() {
    return this._principals.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbac {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#disable DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#disable}
  */
  readonly disable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#policies DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#policies}
  */
  readonly policies?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPolicies;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbac | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    disable: cdktf.booleanToTerraform(struct!.disable),
    policies: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesToTerraform(struct!.policies),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbac | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    disable: {
      value: cdktf.booleanToHclTerraform(struct!.disable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    policies: {
      value: dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesToHclTerraform(struct!.policies),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPolicies",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbac | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._disable !== undefined) {
      hasAnyValues = true;
      internalValueResult.disable = this._disable;
    }
    if (this._policies?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.policies = this._policies?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbac | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._disable = undefined;
      this._policies.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._disable = value.disable;
      this._policies.internalValue = value.policies;
    }
  }

  // disable - computed: false, optional: true, required: false
  private _disable?: boolean | cdktf.IResolvable; 
  public get disable() {
    return this.getBooleanAttribute('disable');
  }
  public set disable(value: boolean | cdktf.IResolvable) {
    this._disable = value;
  }
  public resetDisable() {
    this._disable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get disableInput() {
    return this._disable;
  }

  // policies - computed: false, optional: true, required: false
  private _policies = new DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPoliciesOutputReference(this, "policies");
  public get policies() {
    return this._policies;
  }
  public putPolicies(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRbacPolicies) {
    this._policies.internalValue = value;
  }
  public resetPolicies() {
    this._policies.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get policiesInput() {
    return this._policies.internalValue;
  }
}
export interface DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRetriesPreviousPriorities {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/gateway_solo_io_virtual_host_option_v1_manifest#update_frequency DataK8SGatewaySoloIoVirtualHostOptionV1Manifest#update_frequency}
  */
  readonly updateFrequency?: number;
}

export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRetriesPreviousPrioritiesToTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRetriesPreviousPriorities | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    update_frequency: cdktf.numberToTerraform(struct!.updateFrequency),
  }
}


export function dataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRetriesPreviousPrioritiesToHclTerraform(struct?: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRetriesPreviousPriorities | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    update_frequency: {
      value: cdktf.numberToHclTerraform(struct!.updateFrequency),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRetriesPreviousPrioritiesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRetriesPreviousPriorities | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._updateFrequency !== undefined) {
      hasAnyValues = true;
      internalValueResult.updateFrequency = this._updateFrequency;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SGatewaySoloIoVirtualHostOptionV1ManifestSpecOptionsRetriesPreviousPriorities | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._updateFrequency = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._updateFrequency = value.updateFrequency;
    }
  }

  // update_frequency - computed: false, optional: true, required: false
  private _updateFrequency?: number; 
  public get updateFrequency() {
    return this.getNumberAttribute('update_frequency');
  }
  public set updateFrequency(value: number) {
    this._updateFrequency = value;
  }
  public resetUpdateFrequency() {
    this._updateFrequency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get updateFrequencyInput() {
    return this._updateFrequency;
  }
}
