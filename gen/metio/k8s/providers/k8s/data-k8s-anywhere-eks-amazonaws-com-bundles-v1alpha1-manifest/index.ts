// https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestConfig extends cdktf.TerraformMetaArguments {
  /**
  * Data that helps uniquely identify this object. See https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#metadata DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#metadata}
  */
  readonly metadata: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestMetadata;
  /**
  * BundlesSpec defines the desired state of Bundles.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#spec DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpec;
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestMetadata {
  /**
  * Keys and values that can be used by external tooling to store and retrieve arbitrary metadata about this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#annotations DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Keys and values that can be used to organize and categorize objects. See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#labels DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Unique identifier for this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * Namespaces provides a mechanism for isolating groups of resources within a single cluster. See https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#namespace DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#namespace}
  */
  readonly namespace: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestMetadataToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestMetadataToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._labels = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._labels = value.labels;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: false, required: true
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsClusterTemplate {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsClusterTemplateToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsClusterTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsClusterTemplateToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsClusterTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsClusterTemplateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsClusterTemplate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsClusterTemplate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsComponents {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsComponentsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsComponentsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsComponentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsComponents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsComponents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsKubeProxy {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsKubeProxyToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsKubeProxyToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsKubeProxyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsKubeProxy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsKubeProxy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsMetadata {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsMetadataToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsMetadataToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAws {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cluster_template DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cluster_template}
  */
  readonly clusterTemplate: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsClusterTemplate;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#components DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#components}
  */
  readonly components: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsComponents;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#controller}
  */
  readonly controller: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_proxy DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_proxy}
  */
  readonly kubeProxy: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsKubeProxy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#metadata DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#metadata}
  */
  readonly metadata: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAws | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cluster_template: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsClusterTemplateToTerraform(struct!.clusterTemplate),
    components: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsComponentsToTerraform(struct!.components),
    controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsControllerToTerraform(struct!.controller),
    kube_proxy: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsKubeProxyToTerraform(struct!.kubeProxy),
    metadata: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsMetadataToTerraform(struct!.metadata),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAws | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cluster_template: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsClusterTemplateToHclTerraform(struct!.clusterTemplate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsClusterTemplate",
    },
    components: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsComponentsToHclTerraform(struct!.components),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsComponents",
    },
    controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsControllerToHclTerraform(struct!.controller),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsController",
    },
    kube_proxy: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsKubeProxyToHclTerraform(struct!.kubeProxy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsKubeProxy",
    },
    metadata: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsMetadata",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAws | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clusterTemplate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterTemplate = this._clusterTemplate?.internalValue;
    }
    if (this._components?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components?.internalValue;
    }
    if (this._controller?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.controller = this._controller?.internalValue;
    }
    if (this._kubeProxy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeProxy = this._kubeProxy?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAws | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clusterTemplate.internalValue = undefined;
      this._components.internalValue = undefined;
      this._controller.internalValue = undefined;
      this._kubeProxy.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clusterTemplate.internalValue = value.clusterTemplate;
      this._components.internalValue = value.components;
      this._controller.internalValue = value.controller;
      this._kubeProxy.internalValue = value.kubeProxy;
      this._metadata.internalValue = value.metadata;
      this._version = value.version;
    }
  }

  // cluster_template - computed: false, optional: false, required: true
  private _clusterTemplate = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsClusterTemplateOutputReference(this, "cluster_template");
  public get clusterTemplate() {
    return this._clusterTemplate;
  }
  public putClusterTemplate(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsClusterTemplate) {
    this._clusterTemplate.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterTemplateInput() {
    return this._clusterTemplate.internalValue;
  }

  // components - computed: false, optional: false, required: true
  private _components = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsComponentsOutputReference(this, "components");
  public get components() {
    return this._components;
  }
  public putComponents(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsComponents) {
    this._components.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components.internalValue;
  }

  // controller - computed: false, optional: false, required: true
  private _controller = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsControllerOutputReference(this, "controller");
  public get controller() {
    return this._controller;
  }
  public putController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsController) {
    this._controller.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get controllerInput() {
    return this._controller.internalValue;
  }

  // kube_proxy - computed: false, optional: false, required: true
  private _kubeProxy = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsKubeProxyOutputReference(this, "kube_proxy");
  public get kubeProxy() {
    return this._kubeProxy;
  }
  public putKubeProxy(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsKubeProxy) {
    this._kubeProxy.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeProxyInput() {
    return this._kubeProxy.internalValue;
  }

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // version - computed: false, optional: false, required: true
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapComponents {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapComponentsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapComponentsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapComponentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapComponents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapComponents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapKubeProxy {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapKubeProxyToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapKubeProxyToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapKubeProxyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapKubeProxy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapKubeProxy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapMetadata {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapMetadataToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapMetadataToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrap {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#components DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#components}
  */
  readonly components: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapComponents;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#controller}
  */
  readonly controller: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_proxy DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_proxy}
  */
  readonly kubeProxy: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapKubeProxy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#metadata DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#metadata}
  */
  readonly metadata: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    components: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapComponentsToTerraform(struct!.components),
    controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapControllerToTerraform(struct!.controller),
    kube_proxy: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapKubeProxyToTerraform(struct!.kubeProxy),
    metadata: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapMetadataToTerraform(struct!.metadata),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    components: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapComponentsToHclTerraform(struct!.components),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapComponents",
    },
    controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapControllerToHclTerraform(struct!.controller),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapController",
    },
    kube_proxy: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapKubeProxyToHclTerraform(struct!.kubeProxy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapKubeProxy",
    },
    metadata: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapMetadata",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrap | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._components?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components?.internalValue;
    }
    if (this._controller?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.controller = this._controller?.internalValue;
    }
    if (this._kubeProxy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeProxy = this._kubeProxy?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrap | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._components.internalValue = undefined;
      this._controller.internalValue = undefined;
      this._kubeProxy.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._components.internalValue = value.components;
      this._controller.internalValue = value.controller;
      this._kubeProxy.internalValue = value.kubeProxy;
      this._metadata.internalValue = value.metadata;
      this._version = value.version;
    }
  }

  // components - computed: false, optional: false, required: true
  private _components = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapComponentsOutputReference(this, "components");
  public get components() {
    return this._components;
  }
  public putComponents(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapComponents) {
    this._components.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components.internalValue;
  }

  // controller - computed: false, optional: false, required: true
  private _controller = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapControllerOutputReference(this, "controller");
  public get controller() {
    return this._controller;
  }
  public putController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapController) {
    this._controller.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get controllerInput() {
    return this._controller.internalValue;
  }

  // kube_proxy - computed: false, optional: false, required: true
  private _kubeProxy = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapKubeProxyOutputReference(this, "kube_proxy");
  public get kubeProxy() {
    return this._kubeProxy;
  }
  public putKubeProxy(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapKubeProxy) {
    this._kubeProxy.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeProxyInput() {
    return this._kubeProxy.internalValue;
  }

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // version - computed: false, optional: false, required: true
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersAdmin {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersAdminToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersAdmin | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersAdminToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersAdmin | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersAdminOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersAdmin | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersAdmin | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersControl {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersControlToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersControl | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersControlToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersControl | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersControlOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersControl | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersControl | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersKubeadmBootstrap {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersKubeadmBootstrapToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersKubeadmBootstrap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersKubeadmBootstrapToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersKubeadmBootstrap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersKubeadmBootstrapOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersKubeadmBootstrap | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersKubeadmBootstrap | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#admin DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#admin}
  */
  readonly admin: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersAdmin;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#control DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#control}
  */
  readonly control: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersControl;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kubeadm_bootstrap DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kubeadm_bootstrap}
  */
  readonly kubeadmBootstrap: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersKubeadmBootstrap;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    admin: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersAdminToTerraform(struct!.admin),
    control: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersControlToTerraform(struct!.control),
    kubeadm_bootstrap: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersKubeadmBootstrapToTerraform(struct!.kubeadmBootstrap),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    admin: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersAdminToHclTerraform(struct!.admin),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersAdmin",
    },
    control: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersControlToHclTerraform(struct!.control),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersControl",
    },
    kubeadm_bootstrap: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersKubeadmBootstrapToHclTerraform(struct!.kubeadmBootstrap),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersKubeadmBootstrap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._admin?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.admin = this._admin?.internalValue;
    }
    if (this._control?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.control = this._control?.internalValue;
    }
    if (this._kubeadmBootstrap?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeadmBootstrap = this._kubeadmBootstrap?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._admin.internalValue = undefined;
      this._control.internalValue = undefined;
      this._kubeadmBootstrap.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._admin.internalValue = value.admin;
      this._control.internalValue = value.control;
      this._kubeadmBootstrap.internalValue = value.kubeadmBootstrap;
    }
  }

  // admin - computed: false, optional: false, required: true
  private _admin = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersAdminOutputReference(this, "admin");
  public get admin() {
    return this._admin;
  }
  public putAdmin(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersAdmin) {
    this._admin.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get adminInput() {
    return this._admin.internalValue;
  }

  // control - computed: false, optional: false, required: true
  private _control = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersControlOutputReference(this, "control");
  public get control() {
    return this._control;
  }
  public putControl(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersControl) {
    this._control.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get controlInput() {
    return this._control.internalValue;
  }

  // kubeadm_bootstrap - computed: false, optional: false, required: true
  private _kubeadmBootstrap = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersKubeadmBootstrapOutputReference(this, "kubeadm_bootstrap");
  public get kubeadmBootstrap() {
    return this._kubeadmBootstrap;
  }
  public putKubeadmBootstrap(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersKubeadmBootstrap) {
    this._kubeadmBootstrap.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeadmBootstrapInput() {
    return this._kubeadmBootstrap.internalValue;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerAcmesolver {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerAcmesolverToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerAcmesolver | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerAcmesolverToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerAcmesolver | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerAcmesolverOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerAcmesolver | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerAcmesolver | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCainjector {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCainjectorToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCainjector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCainjectorToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCainjector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCainjectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCainjector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCainjector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCtl {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCtlToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCtl | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCtlToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCtl | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCtlOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCtl | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCtl | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerManifest {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerManifestToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerManifest | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerManifestToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerManifest | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerManifestOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerManifest | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerManifest | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerStartupapicheck {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerStartupapicheckToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerStartupapicheck | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerStartupapicheckToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerStartupapicheck | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerStartupapicheckOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerStartupapicheck | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerStartupapicheck | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerWebhook {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerWebhookToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerWebhook | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerWebhookToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerWebhook | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerWebhookOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerWebhook | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerWebhook | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManager {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#acmesolver DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#acmesolver}
  */
  readonly acmesolver: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerAcmesolver;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cainjector DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cainjector}
  */
  readonly cainjector: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCainjector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#controller}
  */
  readonly controller: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerController;
  /**
  * This field has been deprecated
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#ctl DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#ctl}
  */
  readonly ctl?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCtl;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#manifest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#manifest}
  */
  readonly manifest: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerManifest;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#startupapicheck DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#startupapicheck}
  */
  readonly startupapicheck: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerStartupapicheck;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#webhook DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#webhook}
  */
  readonly webhook: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerWebhook;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManager | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    acmesolver: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerAcmesolverToTerraform(struct!.acmesolver),
    cainjector: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCainjectorToTerraform(struct!.cainjector),
    controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerControllerToTerraform(struct!.controller),
    ctl: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCtlToTerraform(struct!.ctl),
    manifest: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerManifestToTerraform(struct!.manifest),
    startupapicheck: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerStartupapicheckToTerraform(struct!.startupapicheck),
    version: cdktf.stringToTerraform(struct!.version),
    webhook: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerWebhookToTerraform(struct!.webhook),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManager | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    acmesolver: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerAcmesolverToHclTerraform(struct!.acmesolver),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerAcmesolver",
    },
    cainjector: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCainjectorToHclTerraform(struct!.cainjector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCainjector",
    },
    controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerControllerToHclTerraform(struct!.controller),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerController",
    },
    ctl: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCtlToHclTerraform(struct!.ctl),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCtl",
    },
    manifest: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerManifestToHclTerraform(struct!.manifest),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerManifest",
    },
    startupapicheck: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerStartupapicheckToHclTerraform(struct!.startupapicheck),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerStartupapicheck",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    webhook: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerWebhookToHclTerraform(struct!.webhook),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerWebhook",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManager | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._acmesolver?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.acmesolver = this._acmesolver?.internalValue;
    }
    if (this._cainjector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cainjector = this._cainjector?.internalValue;
    }
    if (this._controller?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.controller = this._controller?.internalValue;
    }
    if (this._ctl?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ctl = this._ctl?.internalValue;
    }
    if (this._manifest?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.manifest = this._manifest?.internalValue;
    }
    if (this._startupapicheck?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.startupapicheck = this._startupapicheck?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    if (this._webhook?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.webhook = this._webhook?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManager | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._acmesolver.internalValue = undefined;
      this._cainjector.internalValue = undefined;
      this._controller.internalValue = undefined;
      this._ctl.internalValue = undefined;
      this._manifest.internalValue = undefined;
      this._startupapicheck.internalValue = undefined;
      this._version = undefined;
      this._webhook.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._acmesolver.internalValue = value.acmesolver;
      this._cainjector.internalValue = value.cainjector;
      this._controller.internalValue = value.controller;
      this._ctl.internalValue = value.ctl;
      this._manifest.internalValue = value.manifest;
      this._startupapicheck.internalValue = value.startupapicheck;
      this._version = value.version;
      this._webhook.internalValue = value.webhook;
    }
  }

  // acmesolver - computed: false, optional: false, required: true
  private _acmesolver = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerAcmesolverOutputReference(this, "acmesolver");
  public get acmesolver() {
    return this._acmesolver;
  }
  public putAcmesolver(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerAcmesolver) {
    this._acmesolver.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get acmesolverInput() {
    return this._acmesolver.internalValue;
  }

  // cainjector - computed: false, optional: false, required: true
  private _cainjector = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCainjectorOutputReference(this, "cainjector");
  public get cainjector() {
    return this._cainjector;
  }
  public putCainjector(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCainjector) {
    this._cainjector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get cainjectorInput() {
    return this._cainjector.internalValue;
  }

  // controller - computed: false, optional: false, required: true
  private _controller = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerControllerOutputReference(this, "controller");
  public get controller() {
    return this._controller;
  }
  public putController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerController) {
    this._controller.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get controllerInput() {
    return this._controller.internalValue;
  }

  // ctl - computed: false, optional: true, required: false
  private _ctl = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCtlOutputReference(this, "ctl");
  public get ctl() {
    return this._ctl;
  }
  public putCtl(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerCtl) {
    this._ctl.internalValue = value;
  }
  public resetCtl() {
    this._ctl.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ctlInput() {
    return this._ctl.internalValue;
  }

  // manifest - computed: false, optional: false, required: true
  private _manifest = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerManifestOutputReference(this, "manifest");
  public get manifest() {
    return this._manifest;
  }
  public putManifest(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerManifest) {
    this._manifest.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get manifestInput() {
    return this._manifest.internalValue;
  }

  // startupapicheck - computed: false, optional: false, required: true
  private _startupapicheck = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerStartupapicheckOutputReference(this, "startupapicheck");
  public get startupapicheck() {
    return this._startupapicheck;
  }
  public putStartupapicheck(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerStartupapicheck) {
    this._startupapicheck.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get startupapicheckInput() {
    return this._startupapicheck.internalValue;
  }

  // version - computed: false, optional: true, required: false
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  public resetVersion() {
    this._version = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }

  // webhook - computed: false, optional: false, required: true
  private _webhook = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerWebhookOutputReference(this, "webhook");
  public get webhook() {
    return this._webhook;
  }
  public putWebhook(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerWebhook) {
    this._webhook.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get webhookInput() {
    return this._webhook.internalValue;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumCilium {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumCiliumToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumCilium | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumCiliumToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumCilium | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumCiliumOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumCilium | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumCilium | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumHelmChart {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumHelmChartToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumHelmChart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumHelmChartToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumHelmChart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumHelmChartOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumHelmChart | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumHelmChart | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumManifest {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumManifestToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumManifest | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumManifestToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumManifest | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumManifestOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumManifest | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumManifest | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOperator {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOperatorToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOperator | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOperatorToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOperator | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOperatorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOperator | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOperator | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCilium {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cilium DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cilium}
  */
  readonly cilium: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumCilium;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#helm_chart DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#helm_chart}
  */
  readonly helmChart?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumHelmChart;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#manifest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#manifest}
  */
  readonly manifest: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumManifest;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#operator DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#operator}
  */
  readonly operator: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOperator;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCilium | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cilium: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumCiliumToTerraform(struct!.cilium),
    helm_chart: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumHelmChartToTerraform(struct!.helmChart),
    manifest: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumManifestToTerraform(struct!.manifest),
    operator: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOperatorToTerraform(struct!.operator),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCilium | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cilium: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumCiliumToHclTerraform(struct!.cilium),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumCilium",
    },
    helm_chart: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumHelmChartToHclTerraform(struct!.helmChart),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumHelmChart",
    },
    manifest: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumManifestToHclTerraform(struct!.manifest),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumManifest",
    },
    operator: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOperatorToHclTerraform(struct!.operator),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOperator",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCilium | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cilium?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cilium = this._cilium?.internalValue;
    }
    if (this._helmChart?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.helmChart = this._helmChart?.internalValue;
    }
    if (this._manifest?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.manifest = this._manifest?.internalValue;
    }
    if (this._operator?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCilium | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cilium.internalValue = undefined;
      this._helmChart.internalValue = undefined;
      this._manifest.internalValue = undefined;
      this._operator.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cilium.internalValue = value.cilium;
      this._helmChart.internalValue = value.helmChart;
      this._manifest.internalValue = value.manifest;
      this._operator.internalValue = value.operator;
      this._version = value.version;
    }
  }

  // cilium - computed: false, optional: false, required: true
  private _cilium = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumCiliumOutputReference(this, "cilium");
  public get cilium() {
    return this._cilium;
  }
  public putCilium(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumCilium) {
    this._cilium.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get ciliumInput() {
    return this._cilium.internalValue;
  }

  // helm_chart - computed: false, optional: true, required: false
  private _helmChart = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumHelmChartOutputReference(this, "helm_chart");
  public get helmChart() {
    return this._helmChart;
  }
  public putHelmChart(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumHelmChart) {
    this._helmChart.internalValue = value;
  }
  public resetHelmChart() {
    this._helmChart.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get helmChartInput() {
    return this._helmChart.internalValue;
  }

  // manifest - computed: false, optional: false, required: true
  private _manifest = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumManifestOutputReference(this, "manifest");
  public get manifest() {
    return this._manifest;
  }
  public putManifest(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumManifest) {
    this._manifest.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get manifestInput() {
    return this._manifest.internalValue;
  }

  // operator - computed: false, optional: false, required: true
  private _operator = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOperatorOutputReference(this, "operator");
  public get operator() {
    return this._operator;
  }
  public putOperator(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOperator) {
    this._operator.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator.internalValue;
  }

  // version - computed: false, optional: true, required: false
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  public resetVersion() {
    this._version = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackClusterApiController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackClusterApiControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackClusterApiController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackClusterApiControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackClusterApiController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackClusterApiControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackClusterApiController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackClusterApiController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackComponents {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackComponentsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackComponentsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackComponentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackComponents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackComponents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeRbacProxy {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeRbacProxyToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeRbacProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeRbacProxyToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeRbacProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeRbacProxyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeRbacProxy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeRbacProxy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeVip {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeVipToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeVip | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeVipToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeVip | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeVipOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeVip | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeVip | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackMetadata {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackMetadataToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackMetadataToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStack {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cluster_api_controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cluster_api_controller}
  */
  readonly clusterApiController: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackClusterApiController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#components DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#components}
  */
  readonly components: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackComponents;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_rbac_proxy DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_rbac_proxy}
  */
  readonly kubeRbacProxy: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeRbacProxy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_vip DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_vip}
  */
  readonly kubeVip: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeVip;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#metadata DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#metadata}
  */
  readonly metadata: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStack | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cluster_api_controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackClusterApiControllerToTerraform(struct!.clusterApiController),
    components: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackComponentsToTerraform(struct!.components),
    kube_rbac_proxy: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeRbacProxyToTerraform(struct!.kubeRbacProxy),
    kube_vip: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeVipToTerraform(struct!.kubeVip),
    metadata: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackMetadataToTerraform(struct!.metadata),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStack | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cluster_api_controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackClusterApiControllerToHclTerraform(struct!.clusterApiController),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackClusterApiController",
    },
    components: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackComponentsToHclTerraform(struct!.components),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackComponents",
    },
    kube_rbac_proxy: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeRbacProxyToHclTerraform(struct!.kubeRbacProxy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeRbacProxy",
    },
    kube_vip: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeVipToHclTerraform(struct!.kubeVip),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeVip",
    },
    metadata: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackMetadata",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStack | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clusterApiController?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterApiController = this._clusterApiController?.internalValue;
    }
    if (this._components?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components?.internalValue;
    }
    if (this._kubeRbacProxy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeRbacProxy = this._kubeRbacProxy?.internalValue;
    }
    if (this._kubeVip?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeVip = this._kubeVip?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStack | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clusterApiController.internalValue = undefined;
      this._components.internalValue = undefined;
      this._kubeRbacProxy.internalValue = undefined;
      this._kubeVip.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clusterApiController.internalValue = value.clusterApiController;
      this._components.internalValue = value.components;
      this._kubeRbacProxy.internalValue = value.kubeRbacProxy;
      this._kubeVip.internalValue = value.kubeVip;
      this._metadata.internalValue = value.metadata;
      this._version = value.version;
    }
  }

  // cluster_api_controller - computed: false, optional: false, required: true
  private _clusterApiController = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackClusterApiControllerOutputReference(this, "cluster_api_controller");
  public get clusterApiController() {
    return this._clusterApiController;
  }
  public putClusterApiController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackClusterApiController) {
    this._clusterApiController.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterApiControllerInput() {
    return this._clusterApiController.internalValue;
  }

  // components - computed: false, optional: false, required: true
  private _components = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackComponentsOutputReference(this, "components");
  public get components() {
    return this._components;
  }
  public putComponents(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackComponents) {
    this._components.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components.internalValue;
  }

  // kube_rbac_proxy - computed: false, optional: false, required: true
  private _kubeRbacProxy = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeRbacProxyOutputReference(this, "kube_rbac_proxy");
  public get kubeRbacProxy() {
    return this._kubeRbacProxy;
  }
  public putKubeRbacProxy(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeRbacProxy) {
    this._kubeRbacProxy.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeRbacProxyInput() {
    return this._kubeRbacProxy.internalValue;
  }

  // kube_vip - computed: false, optional: false, required: true
  private _kubeVip = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeVipOutputReference(this, "kube_vip");
  public get kubeVip() {
    return this._kubeVip;
  }
  public putKubeVip(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackKubeVip) {
    this._kubeVip.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeVipInput() {
    return this._kubeVip.internalValue;
  }

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // version - computed: false, optional: false, required: true
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiComponents {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiComponentsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiComponentsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiComponentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiComponents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiComponents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiKubeProxy {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiKubeProxyToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiKubeProxyToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiKubeProxyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiKubeProxy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiKubeProxy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiMetadata {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiMetadataToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiMetadataToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApi {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#components DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#components}
  */
  readonly components: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiComponents;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#controller}
  */
  readonly controller: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_proxy DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_proxy}
  */
  readonly kubeProxy: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiKubeProxy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#metadata DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#metadata}
  */
  readonly metadata: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    components: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiComponentsToTerraform(struct!.components),
    controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiControllerToTerraform(struct!.controller),
    kube_proxy: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiKubeProxyToTerraform(struct!.kubeProxy),
    metadata: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiMetadataToTerraform(struct!.metadata),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    components: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiComponentsToHclTerraform(struct!.components),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiComponents",
    },
    controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiControllerToHclTerraform(struct!.controller),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiController",
    },
    kube_proxy: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiKubeProxyToHclTerraform(struct!.kubeProxy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiKubeProxy",
    },
    metadata: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiMetadata",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._components?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components?.internalValue;
    }
    if (this._controller?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.controller = this._controller?.internalValue;
    }
    if (this._kubeProxy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeProxy = this._kubeProxy?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._components.internalValue = undefined;
      this._controller.internalValue = undefined;
      this._kubeProxy.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._components.internalValue = value.components;
      this._controller.internalValue = value.controller;
      this._kubeProxy.internalValue = value.kubeProxy;
      this._metadata.internalValue = value.metadata;
      this._version = value.version;
    }
  }

  // components - computed: false, optional: false, required: true
  private _components = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiComponentsOutputReference(this, "components");
  public get components() {
    return this._components;
  }
  public putComponents(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiComponents) {
    this._components.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components.internalValue;
  }

  // controller - computed: false, optional: false, required: true
  private _controller = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiControllerOutputReference(this, "controller");
  public get controller() {
    return this._controller;
  }
  public putController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiController) {
    this._controller.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get controllerInput() {
    return this._controller.internalValue;
  }

  // kube_proxy - computed: false, optional: false, required: true
  private _kubeProxy = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiKubeProxyOutputReference(this, "kube_proxy");
  public get kubeProxy() {
    return this._kubeProxy;
  }
  public putKubeProxy(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiKubeProxy) {
    this._kubeProxy.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeProxyInput() {
    return this._kubeProxy.internalValue;
  }

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // version - computed: false, optional: false, required: true
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneComponents {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneComponentsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneComponentsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneComponentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneComponents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneComponents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneKubeProxy {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneKubeProxyToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneKubeProxyToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneKubeProxyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneKubeProxy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneKubeProxy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneMetadata {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneMetadataToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneMetadataToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlane {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#components DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#components}
  */
  readonly components: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneComponents;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#controller}
  */
  readonly controller: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_proxy DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_proxy}
  */
  readonly kubeProxy: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneKubeProxy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#metadata DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#metadata}
  */
  readonly metadata: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlane | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    components: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneComponentsToTerraform(struct!.components),
    controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneControllerToTerraform(struct!.controller),
    kube_proxy: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneKubeProxyToTerraform(struct!.kubeProxy),
    metadata: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneMetadataToTerraform(struct!.metadata),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlane | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    components: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneComponentsToHclTerraform(struct!.components),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneComponents",
    },
    controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneControllerToHclTerraform(struct!.controller),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneController",
    },
    kube_proxy: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneKubeProxyToHclTerraform(struct!.kubeProxy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneKubeProxy",
    },
    metadata: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneMetadata",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlane | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._components?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components?.internalValue;
    }
    if (this._controller?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.controller = this._controller?.internalValue;
    }
    if (this._kubeProxy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeProxy = this._kubeProxy?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlane | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._components.internalValue = undefined;
      this._controller.internalValue = undefined;
      this._kubeProxy.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._components.internalValue = value.components;
      this._controller.internalValue = value.controller;
      this._kubeProxy.internalValue = value.kubeProxy;
      this._metadata.internalValue = value.metadata;
      this._version = value.version;
    }
  }

  // components - computed: false, optional: false, required: true
  private _components = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneComponentsOutputReference(this, "components");
  public get components() {
    return this._components;
  }
  public putComponents(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneComponents) {
    this._components.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components.internalValue;
  }

  // controller - computed: false, optional: false, required: true
  private _controller = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneControllerOutputReference(this, "controller");
  public get controller() {
    return this._controller;
  }
  public putController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneController) {
    this._controller.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get controllerInput() {
    return this._controller.internalValue;
  }

  // kube_proxy - computed: false, optional: false, required: true
  private _kubeProxy = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneKubeProxyOutputReference(this, "kube_proxy");
  public get kubeProxy() {
    return this._kubeProxy;
  }
  public putKubeProxy(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneKubeProxy) {
    this._kubeProxy.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeProxyInput() {
    return this._kubeProxy.internalValue;
  }

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // version - computed: false, optional: false, required: true
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerClusterTemplate {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerClusterTemplateToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerClusterTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerClusterTemplateToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerClusterTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerClusterTemplateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerClusterTemplate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerClusterTemplate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerComponents {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerComponentsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerComponentsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerComponentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerComponents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerComponents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerKubeProxy {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerKubeProxyToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerKubeProxyToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerKubeProxyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerKubeProxy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerKubeProxy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerManager {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerManagerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerManager | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerManagerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerManager | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerManagerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerManager | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerManager | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerMetadata {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerMetadataToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerMetadataToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDocker {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cluster_template DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cluster_template}
  */
  readonly clusterTemplate: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerClusterTemplate;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#components DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#components}
  */
  readonly components: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerComponents;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_proxy DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_proxy}
  */
  readonly kubeProxy: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerKubeProxy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#manager DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#manager}
  */
  readonly manager: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerManager;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#metadata DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#metadata}
  */
  readonly metadata: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDocker | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cluster_template: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerClusterTemplateToTerraform(struct!.clusterTemplate),
    components: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerComponentsToTerraform(struct!.components),
    kube_proxy: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerKubeProxyToTerraform(struct!.kubeProxy),
    manager: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerManagerToTerraform(struct!.manager),
    metadata: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerMetadataToTerraform(struct!.metadata),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDocker | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cluster_template: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerClusterTemplateToHclTerraform(struct!.clusterTemplate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerClusterTemplate",
    },
    components: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerComponentsToHclTerraform(struct!.components),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerComponents",
    },
    kube_proxy: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerKubeProxyToHclTerraform(struct!.kubeProxy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerKubeProxy",
    },
    manager: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerManagerToHclTerraform(struct!.manager),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerManager",
    },
    metadata: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerMetadata",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDocker | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clusterTemplate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterTemplate = this._clusterTemplate?.internalValue;
    }
    if (this._components?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components?.internalValue;
    }
    if (this._kubeProxy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeProxy = this._kubeProxy?.internalValue;
    }
    if (this._manager?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.manager = this._manager?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDocker | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clusterTemplate.internalValue = undefined;
      this._components.internalValue = undefined;
      this._kubeProxy.internalValue = undefined;
      this._manager.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clusterTemplate.internalValue = value.clusterTemplate;
      this._components.internalValue = value.components;
      this._kubeProxy.internalValue = value.kubeProxy;
      this._manager.internalValue = value.manager;
      this._metadata.internalValue = value.metadata;
      this._version = value.version;
    }
  }

  // cluster_template - computed: false, optional: false, required: true
  private _clusterTemplate = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerClusterTemplateOutputReference(this, "cluster_template");
  public get clusterTemplate() {
    return this._clusterTemplate;
  }
  public putClusterTemplate(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerClusterTemplate) {
    this._clusterTemplate.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterTemplateInput() {
    return this._clusterTemplate.internalValue;
  }

  // components - computed: false, optional: false, required: true
  private _components = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerComponentsOutputReference(this, "components");
  public get components() {
    return this._components;
  }
  public putComponents(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerComponents) {
    this._components.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components.internalValue;
  }

  // kube_proxy - computed: false, optional: false, required: true
  private _kubeProxy = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerKubeProxyOutputReference(this, "kube_proxy");
  public get kubeProxy() {
    return this._kubeProxy;
  }
  public putKubeProxy(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerKubeProxy) {
    this._kubeProxy.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeProxyInput() {
    return this._kubeProxy.internalValue;
  }

  // manager - computed: false, optional: false, required: true
  private _manager = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerManagerOutputReference(this, "manager");
  public get manager() {
    return this._manager;
  }
  public putManager(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerManager) {
    this._manager.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get managerInput() {
    return this._manager.internalValue;
  }

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // version - computed: false, optional: false, required: true
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiBottlerocket {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The sha256 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha256 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha256}
  */
  readonly sha256?: string;
  /**
  * The sha512 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha512 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha512}
  */
  readonly sha512?: string;
  /**
  * The URI where the asset is located
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiBottlerocketToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiBottlerocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    sha256: cdktf.stringToTerraform(struct!.sha256),
    sha512: cdktf.stringToTerraform(struct!.sha512),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiBottlerocketToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiBottlerocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha256: {
      value: cdktf.stringToHclTerraform(struct!.sha256),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha512: {
      value: cdktf.stringToHclTerraform(struct!.sha512),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiBottlerocketOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiBottlerocket | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._sha256 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha256 = this._sha256;
    }
    if (this._sha512 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha512 = this._sha512;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiBottlerocket | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._sha256 = undefined;
      this._sha512 = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._sha256 = value.sha256;
      this._sha512 = value.sha512;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // sha256 - computed: false, optional: true, required: false
  private _sha256?: string; 
  public get sha256() {
    return this.getStringAttribute('sha256');
  }
  public set sha256(value: string) {
    this._sha256 = value;
  }
  public resetSha256() {
    this._sha256 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha256Input() {
    return this._sha256;
  }

  // sha512 - computed: false, optional: true, required: false
  private _sha512?: string; 
  public get sha512() {
    return this.getStringAttribute('sha512');
  }
  public set sha512(value: string) {
    this._sha512 = value;
  }
  public resetSha512() {
    this._sha512 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha512Input() {
    return this._sha512;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmi {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#bottlerocket DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#bottlerocket}
  */
  readonly bottlerocket?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiBottlerocket;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    bottlerocket: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiBottlerocketToTerraform(struct!.bottlerocket),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    bottlerocket: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiBottlerocketToHclTerraform(struct!.bottlerocket),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiBottlerocket",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._bottlerocket?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bottlerocket = this._bottlerocket?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._bottlerocket.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._bottlerocket.internalValue = value.bottlerocket;
    }
  }

  // bottlerocket - computed: false, optional: true, required: false
  private _bottlerocket = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiBottlerocketOutputReference(this, "bottlerocket");
  public get bottlerocket() {
    return this._bottlerocket;
  }
  public putBottlerocket(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiBottlerocket) {
    this._bottlerocket.internalValue = value;
  }
  public resetBottlerocket() {
    this._bottlerocket.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bottlerocketInput() {
    return this._bottlerocket.internalValue;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDContainerd {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The sha256 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha256 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha256}
  */
  readonly sha256?: string;
  /**
  * The sha512 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha512 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha512}
  */
  readonly sha512?: string;
  /**
  * The URI where the asset is located
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDContainerdToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDContainerd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    sha256: cdktf.stringToTerraform(struct!.sha256),
    sha512: cdktf.stringToTerraform(struct!.sha512),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDContainerdToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDContainerd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha256: {
      value: cdktf.stringToHclTerraform(struct!.sha256),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha512: {
      value: cdktf.stringToHclTerraform(struct!.sha512),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDContainerdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDContainerd | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._sha256 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha256 = this._sha256;
    }
    if (this._sha512 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha512 = this._sha512;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDContainerd | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._sha256 = undefined;
      this._sha512 = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._sha256 = value.sha256;
      this._sha512 = value.sha512;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // sha256 - computed: false, optional: true, required: false
  private _sha256?: string; 
  public get sha256() {
    return this.getStringAttribute('sha256');
  }
  public set sha256(value: string) {
    this._sha256 = value;
  }
  public resetSha256() {
    this._sha256 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha256Input() {
    return this._sha256;
  }

  // sha512 - computed: false, optional: true, required: false
  private _sha512?: string; 
  public get sha512() {
    return this.getStringAttribute('sha512');
  }
  public set sha512(value: string) {
    this._sha512 = value;
  }
  public resetSha512() {
    this._sha512 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha512Input() {
    return this._sha512;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDCrictl {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The sha256 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha256 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha256}
  */
  readonly sha256?: string;
  /**
  * The sha512 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha512 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha512}
  */
  readonly sha512?: string;
  /**
  * The URI where the asset is located
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDCrictlToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDCrictl | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    sha256: cdktf.stringToTerraform(struct!.sha256),
    sha512: cdktf.stringToTerraform(struct!.sha512),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDCrictlToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDCrictl | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha256: {
      value: cdktf.stringToHclTerraform(struct!.sha256),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha512: {
      value: cdktf.stringToHclTerraform(struct!.sha512),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDCrictlOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDCrictl | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._sha256 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha256 = this._sha256;
    }
    if (this._sha512 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha512 = this._sha512;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDCrictl | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._sha256 = undefined;
      this._sha512 = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._sha256 = value.sha256;
      this._sha512 = value.sha512;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // sha256 - computed: false, optional: true, required: false
  private _sha256?: string; 
  public get sha256() {
    return this.getStringAttribute('sha256');
  }
  public set sha256(value: string) {
    this._sha256 = value;
  }
  public resetSha256() {
    this._sha256 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha256Input() {
    return this._sha256;
  }

  // sha512 - computed: false, optional: true, required: false
  private _sha512?: string; 
  public get sha512() {
    return this.getStringAttribute('sha512');
  }
  public set sha512(value: string) {
    this._sha512 = value;
  }
  public resetSha512() {
    this._sha512 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha512Input() {
    return this._sha512;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDEtcdadm {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The sha256 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha256 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha256}
  */
  readonly sha256?: string;
  /**
  * The sha512 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha512 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha512}
  */
  readonly sha512?: string;
  /**
  * The URI where the asset is located
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDEtcdadmToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDEtcdadm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    sha256: cdktf.stringToTerraform(struct!.sha256),
    sha512: cdktf.stringToTerraform(struct!.sha512),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDEtcdadmToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDEtcdadm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha256: {
      value: cdktf.stringToHclTerraform(struct!.sha256),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha512: {
      value: cdktf.stringToHclTerraform(struct!.sha512),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDEtcdadmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDEtcdadm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._sha256 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha256 = this._sha256;
    }
    if (this._sha512 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha512 = this._sha512;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDEtcdadm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._sha256 = undefined;
      this._sha512 = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._sha256 = value.sha256;
      this._sha512 = value.sha512;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // sha256 - computed: false, optional: true, required: false
  private _sha256?: string; 
  public get sha256() {
    return this.getStringAttribute('sha256');
  }
  public set sha256(value: string) {
    this._sha256 = value;
  }
  public resetSha256() {
    this._sha256 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha256Input() {
    return this._sha256;
  }

  // sha512 - computed: false, optional: true, required: false
  private _sha512?: string; 
  public get sha512() {
    return this.getStringAttribute('sha512');
  }
  public set sha512(value: string) {
    this._sha512 = value;
  }
  public resetSha512() {
    this._sha512 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha512Input() {
    return this._sha512;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDImagebuilder {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The sha256 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha256 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha256}
  */
  readonly sha256?: string;
  /**
  * The sha512 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha512 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha512}
  */
  readonly sha512?: string;
  /**
  * The URI where the asset is located
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDImagebuilderToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDImagebuilder | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    sha256: cdktf.stringToTerraform(struct!.sha256),
    sha512: cdktf.stringToTerraform(struct!.sha512),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDImagebuilderToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDImagebuilder | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha256: {
      value: cdktf.stringToHclTerraform(struct!.sha256),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha512: {
      value: cdktf.stringToHclTerraform(struct!.sha512),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDImagebuilderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDImagebuilder | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._sha256 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha256 = this._sha256;
    }
    if (this._sha512 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha512 = this._sha512;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDImagebuilder | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._sha256 = undefined;
      this._sha512 = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._sha256 = value.sha256;
      this._sha512 = value.sha512;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // sha256 - computed: false, optional: true, required: false
  private _sha256?: string; 
  public get sha256() {
    return this.getStringAttribute('sha256');
  }
  public set sha256(value: string) {
    this._sha256 = value;
  }
  public resetSha256() {
    this._sha256 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha256Input() {
    return this._sha256;
  }

  // sha512 - computed: false, optional: true, required: false
  private _sha512?: string; 
  public get sha512() {
    return this.getStringAttribute('sha512');
  }
  public set sha512(value: string) {
    this._sha512 = value;
  }
  public resetSha512() {
    this._sha512 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha512Input() {
    return this._sha512;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDKindNode {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDKindNodeToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDKindNode | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDKindNodeToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDKindNode | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDKindNodeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDKindNode | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDKindNode | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaBottlerocket {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The sha256 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha256 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha256}
  */
  readonly sha256?: string;
  /**
  * The sha512 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha512 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha512}
  */
  readonly sha512?: string;
  /**
  * The URI where the asset is located
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaBottlerocketToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaBottlerocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    sha256: cdktf.stringToTerraform(struct!.sha256),
    sha512: cdktf.stringToTerraform(struct!.sha512),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaBottlerocketToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaBottlerocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha256: {
      value: cdktf.stringToHclTerraform(struct!.sha256),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha512: {
      value: cdktf.stringToHclTerraform(struct!.sha512),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaBottlerocketOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaBottlerocket | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._sha256 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha256 = this._sha256;
    }
    if (this._sha512 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha512 = this._sha512;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaBottlerocket | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._sha256 = undefined;
      this._sha512 = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._sha256 = value.sha256;
      this._sha512 = value.sha512;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // sha256 - computed: false, optional: true, required: false
  private _sha256?: string; 
  public get sha256() {
    return this.getStringAttribute('sha256');
  }
  public set sha256(value: string) {
    this._sha256 = value;
  }
  public resetSha256() {
    this._sha256 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha256Input() {
    return this._sha256;
  }

  // sha512 - computed: false, optional: true, required: false
  private _sha512?: string; 
  public get sha512() {
    return this.getStringAttribute('sha512');
  }
  public set sha512(value: string) {
    this._sha512 = value;
  }
  public resetSha512() {
    this._sha512 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha512Input() {
    return this._sha512;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOva {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#bottlerocket DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#bottlerocket}
  */
  readonly bottlerocket?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaBottlerocket;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOva | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    bottlerocket: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaBottlerocketToTerraform(struct!.bottlerocket),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOva | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    bottlerocket: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaBottlerocketToHclTerraform(struct!.bottlerocket),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaBottlerocket",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOva | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._bottlerocket?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bottlerocket = this._bottlerocket?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOva | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._bottlerocket.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._bottlerocket.internalValue = value.bottlerocket;
    }
  }

  // bottlerocket - computed: false, optional: true, required: false
  private _bottlerocket = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaBottlerocketOutputReference(this, "bottlerocket");
  public get bottlerocket() {
    return this._bottlerocket;
  }
  public putBottlerocket(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaBottlerocket) {
    this._bottlerocket.internalValue = value;
  }
  public resetBottlerocket() {
    this._bottlerocket.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bottlerocketInput() {
    return this._bottlerocket.internalValue;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawBottlerocket {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The sha256 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha256 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha256}
  */
  readonly sha256?: string;
  /**
  * The sha512 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha512 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha512}
  */
  readonly sha512?: string;
  /**
  * The URI where the asset is located
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawBottlerocketToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawBottlerocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    sha256: cdktf.stringToTerraform(struct!.sha256),
    sha512: cdktf.stringToTerraform(struct!.sha512),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawBottlerocketToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawBottlerocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha256: {
      value: cdktf.stringToHclTerraform(struct!.sha256),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha512: {
      value: cdktf.stringToHclTerraform(struct!.sha512),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawBottlerocketOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawBottlerocket | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._sha256 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha256 = this._sha256;
    }
    if (this._sha512 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha512 = this._sha512;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawBottlerocket | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._sha256 = undefined;
      this._sha512 = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._sha256 = value.sha256;
      this._sha512 = value.sha512;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // sha256 - computed: false, optional: true, required: false
  private _sha256?: string; 
  public get sha256() {
    return this.getStringAttribute('sha256');
  }
  public set sha256(value: string) {
    this._sha256 = value;
  }
  public resetSha256() {
    this._sha256 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha256Input() {
    return this._sha256;
  }

  // sha512 - computed: false, optional: true, required: false
  private _sha512?: string; 
  public get sha512() {
    return this.getStringAttribute('sha512');
  }
  public set sha512(value: string) {
    this._sha512 = value;
  }
  public resetSha512() {
    this._sha512 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha512Input() {
    return this._sha512;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRaw {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#bottlerocket DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#bottlerocket}
  */
  readonly bottlerocket?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawBottlerocket;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRaw | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    bottlerocket: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawBottlerocketToTerraform(struct!.bottlerocket),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRaw | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    bottlerocket: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawBottlerocketToHclTerraform(struct!.bottlerocket),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawBottlerocket",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRaw | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._bottlerocket?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bottlerocket = this._bottlerocket?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRaw | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._bottlerocket.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._bottlerocket.internalValue = value.bottlerocket;
    }
  }

  // bottlerocket - computed: false, optional: true, required: false
  private _bottlerocket = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawBottlerocketOutputReference(this, "bottlerocket");
  public get bottlerocket() {
    return this._bottlerocket;
  }
  public putBottlerocket(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawBottlerocket) {
    this._bottlerocket.internalValue = value;
  }
  public resetBottlerocket() {
    this._bottlerocket.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bottlerocketInput() {
    return this._bottlerocket.internalValue;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksD {
  /**
  * Ami points to a collection of AMIs built with this eks-d version
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#ami DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#ami}
  */
  readonly ami?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmi;
  /**
  * Release branch of the EKS-D release like 1-19, 1-20
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#channel DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#channel}
  */
  readonly channel?: string;
  /**
  * Components refers to the url that points to the EKS-D release CRD
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#components DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#components}
  */
  readonly components?: string;
  /**
  * Containerd points to the containerd binary baked into this eks-D based node image
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#containerd DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#containerd}
  */
  readonly containerd?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDContainerd;
  /**
  * Crictl points to the crictl binary/tarball built for this eks-d kube version
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#crictl DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#crictl}
  */
  readonly crictl?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDCrictl;
  /**
  * Etcdadm points to the etcdadm binary/tarball built for this eks-d kube version
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#etcdadm DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#etcdadm}
  */
  readonly etcdadm?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDEtcdadm;
  /**
  * Git commit the component is built from, before any patches
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#git_commit DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#git_commit}
  */
  readonly gitCommit?: string;
  /**
  * ImageBuilder points to the image-builder binary used to build eks-D based node images
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#imagebuilder DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#imagebuilder}
  */
  readonly imagebuilder?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDImagebuilder;
  /**
  * KindNode points to a kind image built with this eks-d version
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kind_node DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kind_node}
  */
  readonly kindNode?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDKindNode;
  /**
  * Release number of EKS-D release
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_version}
  */
  readonly kubeVersion?: string;
  /**
  * Url pointing to the EKS-D release manifest using which assets where created
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#manifest_url DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#manifest_url}
  */
  readonly manifestUrl?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Ova points to a collection of OVAs built with this eks-d version
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#ova DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#ova}
  */
  readonly ova?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOva;
  /**
  * Raw points to a collection of Raw images built with this eks-d version
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#raw DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#raw}
  */
  readonly raw?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRaw;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksD | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ami: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiToTerraform(struct!.ami),
    channel: cdktf.stringToTerraform(struct!.channel),
    components: cdktf.stringToTerraform(struct!.components),
    containerd: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDContainerdToTerraform(struct!.containerd),
    crictl: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDCrictlToTerraform(struct!.crictl),
    etcdadm: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDEtcdadmToTerraform(struct!.etcdadm),
    git_commit: cdktf.stringToTerraform(struct!.gitCommit),
    imagebuilder: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDImagebuilderToTerraform(struct!.imagebuilder),
    kind_node: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDKindNodeToTerraform(struct!.kindNode),
    kube_version: cdktf.stringToTerraform(struct!.kubeVersion),
    manifest_url: cdktf.stringToTerraform(struct!.manifestUrl),
    name: cdktf.stringToTerraform(struct!.name),
    ova: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaToTerraform(struct!.ova),
    raw: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawToTerraform(struct!.raw),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksD | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ami: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiToHclTerraform(struct!.ami),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmi",
    },
    channel: {
      value: cdktf.stringToHclTerraform(struct!.channel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    components: {
      value: cdktf.stringToHclTerraform(struct!.components),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    containerd: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDContainerdToHclTerraform(struct!.containerd),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDContainerd",
    },
    crictl: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDCrictlToHclTerraform(struct!.crictl),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDCrictl",
    },
    etcdadm: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDEtcdadmToHclTerraform(struct!.etcdadm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDEtcdadm",
    },
    git_commit: {
      value: cdktf.stringToHclTerraform(struct!.gitCommit),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    imagebuilder: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDImagebuilderToHclTerraform(struct!.imagebuilder),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDImagebuilder",
    },
    kind_node: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDKindNodeToHclTerraform(struct!.kindNode),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDKindNode",
    },
    kube_version: {
      value: cdktf.stringToHclTerraform(struct!.kubeVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    manifest_url: {
      value: cdktf.stringToHclTerraform(struct!.manifestUrl),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ova: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaToHclTerraform(struct!.ova),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOva",
    },
    raw: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawToHclTerraform(struct!.raw),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRaw",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksD | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._ami?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ami = this._ami?.internalValue;
    }
    if (this._channel !== undefined) {
      hasAnyValues = true;
      internalValueResult.channel = this._channel;
    }
    if (this._components !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components;
    }
    if (this._containerd?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerd = this._containerd?.internalValue;
    }
    if (this._crictl?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.crictl = this._crictl?.internalValue;
    }
    if (this._etcdadm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.etcdadm = this._etcdadm?.internalValue;
    }
    if (this._gitCommit !== undefined) {
      hasAnyValues = true;
      internalValueResult.gitCommit = this._gitCommit;
    }
    if (this._imagebuilder?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagebuilder = this._imagebuilder?.internalValue;
    }
    if (this._kindNode?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kindNode = this._kindNode?.internalValue;
    }
    if (this._kubeVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeVersion = this._kubeVersion;
    }
    if (this._manifestUrl !== undefined) {
      hasAnyValues = true;
      internalValueResult.manifestUrl = this._manifestUrl;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._ova?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ova = this._ova?.internalValue;
    }
    if (this._raw?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.raw = this._raw?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksD | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._ami.internalValue = undefined;
      this._channel = undefined;
      this._components = undefined;
      this._containerd.internalValue = undefined;
      this._crictl.internalValue = undefined;
      this._etcdadm.internalValue = undefined;
      this._gitCommit = undefined;
      this._imagebuilder.internalValue = undefined;
      this._kindNode.internalValue = undefined;
      this._kubeVersion = undefined;
      this._manifestUrl = undefined;
      this._name = undefined;
      this._ova.internalValue = undefined;
      this._raw.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._ami.internalValue = value.ami;
      this._channel = value.channel;
      this._components = value.components;
      this._containerd.internalValue = value.containerd;
      this._crictl.internalValue = value.crictl;
      this._etcdadm.internalValue = value.etcdadm;
      this._gitCommit = value.gitCommit;
      this._imagebuilder.internalValue = value.imagebuilder;
      this._kindNode.internalValue = value.kindNode;
      this._kubeVersion = value.kubeVersion;
      this._manifestUrl = value.manifestUrl;
      this._name = value.name;
      this._ova.internalValue = value.ova;
      this._raw.internalValue = value.raw;
    }
  }

  // ami - computed: false, optional: true, required: false
  private _ami = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmiOutputReference(this, "ami");
  public get ami() {
    return this._ami;
  }
  public putAmi(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDAmi) {
    this._ami.internalValue = value;
  }
  public resetAmi() {
    this._ami.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get amiInput() {
    return this._ami.internalValue;
  }

  // channel - computed: false, optional: true, required: false
  private _channel?: string; 
  public get channel() {
    return this.getStringAttribute('channel');
  }
  public set channel(value: string) {
    this._channel = value;
  }
  public resetChannel() {
    this._channel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get channelInput() {
    return this._channel;
  }

  // components - computed: false, optional: true, required: false
  private _components?: string; 
  public get components() {
    return this.getStringAttribute('components');
  }
  public set components(value: string) {
    this._components = value;
  }
  public resetComponents() {
    this._components = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components;
  }

  // containerd - computed: false, optional: true, required: false
  private _containerd = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDContainerdOutputReference(this, "containerd");
  public get containerd() {
    return this._containerd;
  }
  public putContainerd(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDContainerd) {
    this._containerd.internalValue = value;
  }
  public resetContainerd() {
    this._containerd.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerdInput() {
    return this._containerd.internalValue;
  }

  // crictl - computed: false, optional: true, required: false
  private _crictl = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDCrictlOutputReference(this, "crictl");
  public get crictl() {
    return this._crictl;
  }
  public putCrictl(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDCrictl) {
    this._crictl.internalValue = value;
  }
  public resetCrictl() {
    this._crictl.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get crictlInput() {
    return this._crictl.internalValue;
  }

  // etcdadm - computed: false, optional: true, required: false
  private _etcdadm = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDEtcdadmOutputReference(this, "etcdadm");
  public get etcdadm() {
    return this._etcdadm;
  }
  public putEtcdadm(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDEtcdadm) {
    this._etcdadm.internalValue = value;
  }
  public resetEtcdadm() {
    this._etcdadm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get etcdadmInput() {
    return this._etcdadm.internalValue;
  }

  // git_commit - computed: false, optional: true, required: false
  private _gitCommit?: string; 
  public get gitCommit() {
    return this.getStringAttribute('git_commit');
  }
  public set gitCommit(value: string) {
    this._gitCommit = value;
  }
  public resetGitCommit() {
    this._gitCommit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gitCommitInput() {
    return this._gitCommit;
  }

  // imagebuilder - computed: false, optional: true, required: false
  private _imagebuilder = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDImagebuilderOutputReference(this, "imagebuilder");
  public get imagebuilder() {
    return this._imagebuilder;
  }
  public putImagebuilder(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDImagebuilder) {
    this._imagebuilder.internalValue = value;
  }
  public resetImagebuilder() {
    this._imagebuilder.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagebuilderInput() {
    return this._imagebuilder.internalValue;
  }

  // kind_node - computed: false, optional: true, required: false
  private _kindNode = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDKindNodeOutputReference(this, "kind_node");
  public get kindNode() {
    return this._kindNode;
  }
  public putKindNode(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDKindNode) {
    this._kindNode.internalValue = value;
  }
  public resetKindNode() {
    this._kindNode.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindNodeInput() {
    return this._kindNode.internalValue;
  }

  // kube_version - computed: false, optional: true, required: false
  private _kubeVersion?: string; 
  public get kubeVersion() {
    return this.getStringAttribute('kube_version');
  }
  public set kubeVersion(value: string) {
    this._kubeVersion = value;
  }
  public resetKubeVersion() {
    this._kubeVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeVersionInput() {
    return this._kubeVersion;
  }

  // manifest_url - computed: false, optional: true, required: false
  private _manifestUrl?: string; 
  public get manifestUrl() {
    return this.getStringAttribute('manifest_url');
  }
  public set manifestUrl(value: string) {
    this._manifestUrl = value;
  }
  public resetManifestUrl() {
    this._manifestUrl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get manifestUrlInput() {
    return this._manifestUrl;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // ova - computed: false, optional: true, required: false
  private _ova = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOvaOutputReference(this, "ova");
  public get ova() {
    return this._ova;
  }
  public putOva(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOva) {
    this._ova.internalValue = value;
  }
  public resetOva() {
    this._ova.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ovaInput() {
    return this._ova.internalValue;
  }

  // raw - computed: false, optional: true, required: false
  private _raw = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRawOutputReference(this, "raw");
  public get raw() {
    return this._raw;
  }
  public putRaw(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDRaw) {
    this._raw.internalValue = value;
  }
  public resetRaw() {
    this._raw.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rawInput() {
    return this._raw.internalValue;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaCliTools {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaCliToolsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaCliTools | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaCliToolsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaCliTools | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaCliToolsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaCliTools | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaCliTools | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaClusterController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaClusterControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaClusterController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaClusterControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaClusterController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaClusterControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaClusterController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaClusterController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaComponents {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaComponentsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaComponentsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaComponentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaComponents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaComponents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaDiagnosticCollector {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaDiagnosticCollectorToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaDiagnosticCollector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaDiagnosticCollectorToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaDiagnosticCollector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaDiagnosticCollectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaDiagnosticCollector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaDiagnosticCollector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksa {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cli_tools DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cli_tools}
  */
  readonly cliTools: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaCliTools;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cluster_controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cluster_controller}
  */
  readonly clusterController: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaClusterController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#components DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#components}
  */
  readonly components: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaComponents;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#diagnostic_collector DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#diagnostic_collector}
  */
  readonly diagnosticCollector: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaDiagnosticCollector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksa | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cli_tools: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaCliToolsToTerraform(struct!.cliTools),
    cluster_controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaClusterControllerToTerraform(struct!.clusterController),
    components: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaComponentsToTerraform(struct!.components),
    diagnostic_collector: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaDiagnosticCollectorToTerraform(struct!.diagnosticCollector),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksa | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cli_tools: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaCliToolsToHclTerraform(struct!.cliTools),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaCliTools",
    },
    cluster_controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaClusterControllerToHclTerraform(struct!.clusterController),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaClusterController",
    },
    components: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaComponentsToHclTerraform(struct!.components),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaComponents",
    },
    diagnostic_collector: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaDiagnosticCollectorToHclTerraform(struct!.diagnosticCollector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaDiagnosticCollector",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksa | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cliTools?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cliTools = this._cliTools?.internalValue;
    }
    if (this._clusterController?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterController = this._clusterController?.internalValue;
    }
    if (this._components?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components?.internalValue;
    }
    if (this._diagnosticCollector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.diagnosticCollector = this._diagnosticCollector?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksa | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cliTools.internalValue = undefined;
      this._clusterController.internalValue = undefined;
      this._components.internalValue = undefined;
      this._diagnosticCollector.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cliTools.internalValue = value.cliTools;
      this._clusterController.internalValue = value.clusterController;
      this._components.internalValue = value.components;
      this._diagnosticCollector.internalValue = value.diagnosticCollector;
      this._version = value.version;
    }
  }

  // cli_tools - computed: false, optional: false, required: true
  private _cliTools = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaCliToolsOutputReference(this, "cli_tools");
  public get cliTools() {
    return this._cliTools;
  }
  public putCliTools(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaCliTools) {
    this._cliTools.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get cliToolsInput() {
    return this._cliTools.internalValue;
  }

  // cluster_controller - computed: false, optional: false, required: true
  private _clusterController = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaClusterControllerOutputReference(this, "cluster_controller");
  public get clusterController() {
    return this._clusterController;
  }
  public putClusterController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaClusterController) {
    this._clusterController.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterControllerInput() {
    return this._clusterController.internalValue;
  }

  // components - computed: false, optional: false, required: true
  private _components = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaComponentsOutputReference(this, "components");
  public get components() {
    return this._components;
  }
  public putComponents(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaComponents) {
    this._components.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components.internalValue;
  }

  // diagnostic_collector - computed: false, optional: false, required: true
  private _diagnosticCollector = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaDiagnosticCollectorOutputReference(this, "diagnostic_collector");
  public get diagnosticCollector() {
    return this._diagnosticCollector;
  }
  public putDiagnosticCollector(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaDiagnosticCollector) {
    this._diagnosticCollector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get diagnosticCollectorInput() {
    return this._diagnosticCollector.internalValue;
  }

  // version - computed: false, optional: true, required: false
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  public resetVersion() {
    this._version = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapComponents {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapComponentsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapComponentsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapComponentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapComponents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapComponents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapKubeProxy {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapKubeProxyToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapKubeProxyToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapKubeProxyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapKubeProxy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapKubeProxy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapMetadata {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapMetadataToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapMetadataToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrap {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#components DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#components}
  */
  readonly components: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapComponents;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#controller}
  */
  readonly controller: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_proxy DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_proxy}
  */
  readonly kubeProxy: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapKubeProxy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#metadata DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#metadata}
  */
  readonly metadata: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    components: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapComponentsToTerraform(struct!.components),
    controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapControllerToTerraform(struct!.controller),
    kube_proxy: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapKubeProxyToTerraform(struct!.kubeProxy),
    metadata: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapMetadataToTerraform(struct!.metadata),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    components: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapComponentsToHclTerraform(struct!.components),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapComponents",
    },
    controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapControllerToHclTerraform(struct!.controller),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapController",
    },
    kube_proxy: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapKubeProxyToHclTerraform(struct!.kubeProxy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapKubeProxy",
    },
    metadata: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapMetadata",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrap | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._components?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components?.internalValue;
    }
    if (this._controller?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.controller = this._controller?.internalValue;
    }
    if (this._kubeProxy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeProxy = this._kubeProxy?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrap | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._components.internalValue = undefined;
      this._controller.internalValue = undefined;
      this._kubeProxy.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._components.internalValue = value.components;
      this._controller.internalValue = value.controller;
      this._kubeProxy.internalValue = value.kubeProxy;
      this._metadata.internalValue = value.metadata;
      this._version = value.version;
    }
  }

  // components - computed: false, optional: false, required: true
  private _components = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapComponentsOutputReference(this, "components");
  public get components() {
    return this._components;
  }
  public putComponents(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapComponents) {
    this._components.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components.internalValue;
  }

  // controller - computed: false, optional: false, required: true
  private _controller = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapControllerOutputReference(this, "controller");
  public get controller() {
    return this._controller;
  }
  public putController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapController) {
    this._controller.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get controllerInput() {
    return this._controller.internalValue;
  }

  // kube_proxy - computed: false, optional: false, required: true
  private _kubeProxy = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapKubeProxyOutputReference(this, "kube_proxy");
  public get kubeProxy() {
    return this._kubeProxy;
  }
  public putKubeProxy(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapKubeProxy) {
    this._kubeProxy.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeProxyInput() {
    return this._kubeProxy.internalValue;
  }

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // version - computed: false, optional: false, required: true
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerComponents {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerComponentsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerComponentsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerComponentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerComponents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerComponents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerKubeProxy {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerKubeProxyToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerKubeProxyToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerKubeProxyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerKubeProxy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerKubeProxy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerMetadata {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerMetadataToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerMetadataToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmController {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#components DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#components}
  */
  readonly components: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerComponents;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#controller}
  */
  readonly controller: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_proxy DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_proxy}
  */
  readonly kubeProxy: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerKubeProxy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#metadata DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#metadata}
  */
  readonly metadata: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    components: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerComponentsToTerraform(struct!.components),
    controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerControllerToTerraform(struct!.controller),
    kube_proxy: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerKubeProxyToTerraform(struct!.kubeProxy),
    metadata: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerMetadataToTerraform(struct!.metadata),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    components: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerComponentsToHclTerraform(struct!.components),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerComponents",
    },
    controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerControllerToHclTerraform(struct!.controller),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerController",
    },
    kube_proxy: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerKubeProxyToHclTerraform(struct!.kubeProxy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerKubeProxy",
    },
    metadata: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerMetadata",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._components?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components?.internalValue;
    }
    if (this._controller?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.controller = this._controller?.internalValue;
    }
    if (this._kubeProxy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeProxy = this._kubeProxy?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._components.internalValue = undefined;
      this._controller.internalValue = undefined;
      this._kubeProxy.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._components.internalValue = value.components;
      this._controller.internalValue = value.controller;
      this._kubeProxy.internalValue = value.kubeProxy;
      this._metadata.internalValue = value.metadata;
      this._version = value.version;
    }
  }

  // components - computed: false, optional: false, required: true
  private _components = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerComponentsOutputReference(this, "components");
  public get components() {
    return this._components;
  }
  public putComponents(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerComponents) {
    this._components.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components.internalValue;
  }

  // controller - computed: false, optional: false, required: true
  private _controller = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerControllerOutputReference(this, "controller");
  public get controller() {
    return this._controller;
  }
  public putController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerController) {
    this._controller.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get controllerInput() {
    return this._controller.internalValue;
  }

  // kube_proxy - computed: false, optional: false, required: true
  private _kubeProxy = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerKubeProxyOutputReference(this, "kube_proxy");
  public get kubeProxy() {
    return this._kubeProxy;
  }
  public putKubeProxy(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerKubeProxy) {
    this._kubeProxy.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeProxyInput() {
    return this._kubeProxy.internalValue;
  }

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // version - computed: false, optional: false, required: true
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxHelmController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxHelmControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxHelmController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxHelmControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxHelmController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxHelmControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxHelmController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxHelmController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxKustomizeController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxKustomizeControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxKustomizeController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxKustomizeControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxKustomizeController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxKustomizeControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxKustomizeController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxKustomizeController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxNotificationController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxNotificationControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxNotificationController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxNotificationControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxNotificationController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxNotificationControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxNotificationController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxNotificationController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxSourceController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxSourceControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxSourceController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxSourceControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxSourceController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxSourceControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxSourceController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxSourceController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFlux {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#helm_controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#helm_controller}
  */
  readonly helmController: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxHelmController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kustomize_controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kustomize_controller}
  */
  readonly kustomizeController: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxKustomizeController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#notification_controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#notification_controller}
  */
  readonly notificationController: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxNotificationController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#source_controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#source_controller}
  */
  readonly sourceController: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxSourceController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFlux | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    helm_controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxHelmControllerToTerraform(struct!.helmController),
    kustomize_controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxKustomizeControllerToTerraform(struct!.kustomizeController),
    notification_controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxNotificationControllerToTerraform(struct!.notificationController),
    source_controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxSourceControllerToTerraform(struct!.sourceController),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFlux | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    helm_controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxHelmControllerToHclTerraform(struct!.helmController),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxHelmController",
    },
    kustomize_controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxKustomizeControllerToHclTerraform(struct!.kustomizeController),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxKustomizeController",
    },
    notification_controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxNotificationControllerToHclTerraform(struct!.notificationController),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxNotificationController",
    },
    source_controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxSourceControllerToHclTerraform(struct!.sourceController),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxSourceController",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFlux | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._helmController?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.helmController = this._helmController?.internalValue;
    }
    if (this._kustomizeController?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kustomizeController = this._kustomizeController?.internalValue;
    }
    if (this._notificationController?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.notificationController = this._notificationController?.internalValue;
    }
    if (this._sourceController?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourceController = this._sourceController?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFlux | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._helmController.internalValue = undefined;
      this._kustomizeController.internalValue = undefined;
      this._notificationController.internalValue = undefined;
      this._sourceController.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._helmController.internalValue = value.helmController;
      this._kustomizeController.internalValue = value.kustomizeController;
      this._notificationController.internalValue = value.notificationController;
      this._sourceController.internalValue = value.sourceController;
      this._version = value.version;
    }
  }

  // helm_controller - computed: false, optional: false, required: true
  private _helmController = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxHelmControllerOutputReference(this, "helm_controller");
  public get helmController() {
    return this._helmController;
  }
  public putHelmController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxHelmController) {
    this._helmController.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get helmControllerInput() {
    return this._helmController.internalValue;
  }

  // kustomize_controller - computed: false, optional: false, required: true
  private _kustomizeController = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxKustomizeControllerOutputReference(this, "kustomize_controller");
  public get kustomizeController() {
    return this._kustomizeController;
  }
  public putKustomizeController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxKustomizeController) {
    this._kustomizeController.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kustomizeControllerInput() {
    return this._kustomizeController.internalValue;
  }

  // notification_controller - computed: false, optional: false, required: true
  private _notificationController = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxNotificationControllerOutputReference(this, "notification_controller");
  public get notificationController() {
    return this._notificationController;
  }
  public putNotificationController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxNotificationController) {
    this._notificationController.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get notificationControllerInput() {
    return this._notificationController.internalValue;
  }

  // source_controller - computed: false, optional: false, required: true
  private _sourceController = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxSourceControllerOutputReference(this, "source_controller");
  public get sourceController() {
    return this._sourceController;
  }
  public putSourceController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxSourceController) {
    this._sourceController.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceControllerInput() {
    return this._sourceController.internalValue;
  }

  // version - computed: false, optional: true, required: false
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  public resetVersion() {
    this._version = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyImage {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyImageToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyImage | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyImageToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyImage | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyImageOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyImage | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyImage | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxy {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image}
  */
  readonly image: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyImage;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    image: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyImageToTerraform(struct!.image),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    image: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyImageToHclTerraform(struct!.image),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyImage",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._image?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._image.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._image.internalValue = value.image;
    }
  }

  // image - computed: false, optional: false, required: true
  private _image = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyImageOutputReference(this, "image");
  public get image() {
    return this._image;
  }
  public putImage(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyImage) {
    this._image.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image.internalValue;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdManifest {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdManifestToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdManifest | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdManifestToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdManifest | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdManifestOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdManifest | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdManifest | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetd {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#manifest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#manifest}
  */
  readonly manifest: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdManifest;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    manifest: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdManifestToTerraform(struct!.manifest),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    manifest: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdManifestToHclTerraform(struct!.manifest),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdManifest",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetd | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._manifest?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.manifest = this._manifest?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetd | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._manifest.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._manifest.internalValue = value.manifest;
      this._version = value.version;
    }
  }

  // manifest - computed: false, optional: false, required: true
  private _manifest = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdManifestOutputReference(this, "manifest");
  public get manifest() {
    return this._manifest;
  }
  public putManifest(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdManifest) {
    this._manifest.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get manifestInput() {
    return this._manifest.internalValue;
  }

  // version - computed: false, optional: true, required: false
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  public resetVersion() {
    this._version = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixCloudProvider {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixCloudProviderToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixCloudProvider | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixCloudProviderToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixCloudProvider | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixCloudProviderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixCloudProvider | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixCloudProvider | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterApiController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterApiControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterApiController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterApiControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterApiController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterApiControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterApiController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterApiController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterTemplate {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterTemplateToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterTemplateToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterTemplateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterTemplate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterTemplate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixComponents {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixComponentsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixComponentsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixComponentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixComponents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixComponents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixKubeVip {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixKubeVipToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixKubeVip | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixKubeVipToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixKubeVip | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixKubeVipOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixKubeVip | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixKubeVip | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixMetadata {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixMetadataToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixMetadataToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanix {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cloud_provider DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cloud_provider}
  */
  readonly cloudProvider?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixCloudProvider;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cluster_api_controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cluster_api_controller}
  */
  readonly clusterApiController: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterApiController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cluster_template DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cluster_template}
  */
  readonly clusterTemplate: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterTemplate;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#components DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#components}
  */
  readonly components: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixComponents;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_vip DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_vip}
  */
  readonly kubeVip: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixKubeVip;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#metadata DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#metadata}
  */
  readonly metadata: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanix | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cloud_provider: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixCloudProviderToTerraform(struct!.cloudProvider),
    cluster_api_controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterApiControllerToTerraform(struct!.clusterApiController),
    cluster_template: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterTemplateToTerraform(struct!.clusterTemplate),
    components: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixComponentsToTerraform(struct!.components),
    kube_vip: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixKubeVipToTerraform(struct!.kubeVip),
    metadata: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixMetadataToTerraform(struct!.metadata),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanix | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cloud_provider: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixCloudProviderToHclTerraform(struct!.cloudProvider),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixCloudProvider",
    },
    cluster_api_controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterApiControllerToHclTerraform(struct!.clusterApiController),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterApiController",
    },
    cluster_template: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterTemplateToHclTerraform(struct!.clusterTemplate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterTemplate",
    },
    components: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixComponentsToHclTerraform(struct!.components),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixComponents",
    },
    kube_vip: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixKubeVipToHclTerraform(struct!.kubeVip),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixKubeVip",
    },
    metadata: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixMetadata",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanix | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cloudProvider?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cloudProvider = this._cloudProvider?.internalValue;
    }
    if (this._clusterApiController?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterApiController = this._clusterApiController?.internalValue;
    }
    if (this._clusterTemplate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterTemplate = this._clusterTemplate?.internalValue;
    }
    if (this._components?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components?.internalValue;
    }
    if (this._kubeVip?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeVip = this._kubeVip?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanix | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cloudProvider.internalValue = undefined;
      this._clusterApiController.internalValue = undefined;
      this._clusterTemplate.internalValue = undefined;
      this._components.internalValue = undefined;
      this._kubeVip.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cloudProvider.internalValue = value.cloudProvider;
      this._clusterApiController.internalValue = value.clusterApiController;
      this._clusterTemplate.internalValue = value.clusterTemplate;
      this._components.internalValue = value.components;
      this._kubeVip.internalValue = value.kubeVip;
      this._metadata.internalValue = value.metadata;
      this._version = value.version;
    }
  }

  // cloud_provider - computed: false, optional: true, required: false
  private _cloudProvider = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixCloudProviderOutputReference(this, "cloud_provider");
  public get cloudProvider() {
    return this._cloudProvider;
  }
  public putCloudProvider(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixCloudProvider) {
    this._cloudProvider.internalValue = value;
  }
  public resetCloudProvider() {
    this._cloudProvider.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cloudProviderInput() {
    return this._cloudProvider.internalValue;
  }

  // cluster_api_controller - computed: false, optional: false, required: true
  private _clusterApiController = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterApiControllerOutputReference(this, "cluster_api_controller");
  public get clusterApiController() {
    return this._clusterApiController;
  }
  public putClusterApiController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterApiController) {
    this._clusterApiController.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterApiControllerInput() {
    return this._clusterApiController.internalValue;
  }

  // cluster_template - computed: false, optional: false, required: true
  private _clusterTemplate = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterTemplateOutputReference(this, "cluster_template");
  public get clusterTemplate() {
    return this._clusterTemplate;
  }
  public putClusterTemplate(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixClusterTemplate) {
    this._clusterTemplate.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterTemplateInput() {
    return this._clusterTemplate.internalValue;
  }

  // components - computed: false, optional: false, required: true
  private _components = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixComponentsOutputReference(this, "components");
  public get components() {
    return this._components;
  }
  public putComponents(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixComponents) {
    this._components.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components.internalValue;
  }

  // kube_vip - computed: false, optional: false, required: true
  private _kubeVip = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixKubeVipOutputReference(this, "kube_vip");
  public get kubeVip() {
    return this._kubeVip;
  }
  public putKubeVip(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixKubeVip) {
    this._kubeVip.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeVipInput() {
    return this._kubeVip.internalValue;
  }

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // version - computed: false, optional: false, required: true
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerCredentialProviderPackage {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerCredentialProviderPackageToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerCredentialProviderPackage | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerCredentialProviderPackageToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerCredentialProviderPackage | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerCredentialProviderPackageOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerCredentialProviderPackage | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerCredentialProviderPackage | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerHelmChart {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerHelmChartToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerHelmChart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerHelmChartToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerHelmChart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerHelmChartOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerHelmChart | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerHelmChart | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerPackageController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerPackageControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerPackageController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerPackageControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerPackageController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerPackageControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerPackageController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerPackageController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerTokenRefresher {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerTokenRefresherToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerTokenRefresher | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerTokenRefresherToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerTokenRefresher | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerTokenRefresherOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerTokenRefresher | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerTokenRefresher | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageController {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#credential_provider_package DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#credential_provider_package}
  */
  readonly credentialProviderPackage?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerCredentialProviderPackage;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#helm_chart DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#helm_chart}
  */
  readonly helmChart?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerHelmChart;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#package_controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#package_controller}
  */
  readonly packageController: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerPackageController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#token_refresher DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#token_refresher}
  */
  readonly tokenRefresher: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerTokenRefresher;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    credential_provider_package: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerCredentialProviderPackageToTerraform(struct!.credentialProviderPackage),
    helm_chart: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerHelmChartToTerraform(struct!.helmChart),
    package_controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerPackageControllerToTerraform(struct!.packageController),
    token_refresher: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerTokenRefresherToTerraform(struct!.tokenRefresher),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    credential_provider_package: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerCredentialProviderPackageToHclTerraform(struct!.credentialProviderPackage),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerCredentialProviderPackage",
    },
    helm_chart: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerHelmChartToHclTerraform(struct!.helmChart),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerHelmChart",
    },
    package_controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerPackageControllerToHclTerraform(struct!.packageController),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerPackageController",
    },
    token_refresher: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerTokenRefresherToHclTerraform(struct!.tokenRefresher),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerTokenRefresher",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._credentialProviderPackage?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.credentialProviderPackage = this._credentialProviderPackage?.internalValue;
    }
    if (this._helmChart?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.helmChart = this._helmChart?.internalValue;
    }
    if (this._packageController?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.packageController = this._packageController?.internalValue;
    }
    if (this._tokenRefresher?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tokenRefresher = this._tokenRefresher?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._credentialProviderPackage.internalValue = undefined;
      this._helmChart.internalValue = undefined;
      this._packageController.internalValue = undefined;
      this._tokenRefresher.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._credentialProviderPackage.internalValue = value.credentialProviderPackage;
      this._helmChart.internalValue = value.helmChart;
      this._packageController.internalValue = value.packageController;
      this._tokenRefresher.internalValue = value.tokenRefresher;
      this._version = value.version;
    }
  }

  // credential_provider_package - computed: false, optional: true, required: false
  private _credentialProviderPackage = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerCredentialProviderPackageOutputReference(this, "credential_provider_package");
  public get credentialProviderPackage() {
    return this._credentialProviderPackage;
  }
  public putCredentialProviderPackage(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerCredentialProviderPackage) {
    this._credentialProviderPackage.internalValue = value;
  }
  public resetCredentialProviderPackage() {
    this._credentialProviderPackage.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get credentialProviderPackageInput() {
    return this._credentialProviderPackage.internalValue;
  }

  // helm_chart - computed: false, optional: true, required: false
  private _helmChart = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerHelmChartOutputReference(this, "helm_chart");
  public get helmChart() {
    return this._helmChart;
  }
  public putHelmChart(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerHelmChart) {
    this._helmChart.internalValue = value;
  }
  public resetHelmChart() {
    this._helmChart.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get helmChartInput() {
    return this._helmChart.internalValue;
  }

  // package_controller - computed: false, optional: false, required: true
  private _packageController = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerPackageControllerOutputReference(this, "package_controller");
  public get packageController() {
    return this._packageController;
  }
  public putPackageController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerPackageController) {
    this._packageController.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get packageControllerInput() {
    return this._packageController.internalValue;
  }

  // token_refresher - computed: false, optional: false, required: true
  private _tokenRefresher = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerTokenRefresherOutputReference(this, "token_refresher");
  public get tokenRefresher() {
    return this._tokenRefresher;
  }
  public putTokenRefresher(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerTokenRefresher) {
    this._tokenRefresher.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenRefresherInput() {
    return this._tokenRefresher.internalValue;
  }

  // version - computed: false, optional: true, required: false
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  public resetVersion() {
    this._version = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowBottlerocketBootstrapSnow {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowBottlerocketBootstrapSnowToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowBottlerocketBootstrapSnow | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowBottlerocketBootstrapSnowToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowBottlerocketBootstrapSnow | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowBottlerocketBootstrapSnowOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowBottlerocketBootstrapSnow | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowBottlerocketBootstrapSnow | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowComponents {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowComponentsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowComponentsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowComponentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowComponents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowComponents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowKubeVip {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowKubeVipToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowKubeVip | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowKubeVipToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowKubeVip | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowKubeVipOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowKubeVip | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowKubeVip | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowManager {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowManagerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowManager | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowManagerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowManager | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowManagerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowManager | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowManager | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowMetadata {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowMetadataToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowMetadataToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnow {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#bottlerocket_bootstrap_snow DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#bottlerocket_bootstrap_snow}
  */
  readonly bottlerocketBootstrapSnow: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowBottlerocketBootstrapSnow;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#components DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#components}
  */
  readonly components: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowComponents;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_vip DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_vip}
  */
  readonly kubeVip: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowKubeVip;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#manager DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#manager}
  */
  readonly manager: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowManager;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#metadata DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#metadata}
  */
  readonly metadata: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnow | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    bottlerocket_bootstrap_snow: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowBottlerocketBootstrapSnowToTerraform(struct!.bottlerocketBootstrapSnow),
    components: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowComponentsToTerraform(struct!.components),
    kube_vip: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowKubeVipToTerraform(struct!.kubeVip),
    manager: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowManagerToTerraform(struct!.manager),
    metadata: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowMetadataToTerraform(struct!.metadata),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnow | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    bottlerocket_bootstrap_snow: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowBottlerocketBootstrapSnowToHclTerraform(struct!.bottlerocketBootstrapSnow),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowBottlerocketBootstrapSnow",
    },
    components: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowComponentsToHclTerraform(struct!.components),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowComponents",
    },
    kube_vip: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowKubeVipToHclTerraform(struct!.kubeVip),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowKubeVip",
    },
    manager: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowManagerToHclTerraform(struct!.manager),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowManager",
    },
    metadata: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowMetadata",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnow | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._bottlerocketBootstrapSnow?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bottlerocketBootstrapSnow = this._bottlerocketBootstrapSnow?.internalValue;
    }
    if (this._components?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components?.internalValue;
    }
    if (this._kubeVip?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeVip = this._kubeVip?.internalValue;
    }
    if (this._manager?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.manager = this._manager?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnow | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._bottlerocketBootstrapSnow.internalValue = undefined;
      this._components.internalValue = undefined;
      this._kubeVip.internalValue = undefined;
      this._manager.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._bottlerocketBootstrapSnow.internalValue = value.bottlerocketBootstrapSnow;
      this._components.internalValue = value.components;
      this._kubeVip.internalValue = value.kubeVip;
      this._manager.internalValue = value.manager;
      this._metadata.internalValue = value.metadata;
      this._version = value.version;
    }
  }

  // bottlerocket_bootstrap_snow - computed: false, optional: false, required: true
  private _bottlerocketBootstrapSnow = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowBottlerocketBootstrapSnowOutputReference(this, "bottlerocket_bootstrap_snow");
  public get bottlerocketBootstrapSnow() {
    return this._bottlerocketBootstrapSnow;
  }
  public putBottlerocketBootstrapSnow(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowBottlerocketBootstrapSnow) {
    this._bottlerocketBootstrapSnow.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get bottlerocketBootstrapSnowInput() {
    return this._bottlerocketBootstrapSnow.internalValue;
  }

  // components - computed: false, optional: false, required: true
  private _components = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowComponentsOutputReference(this, "components");
  public get components() {
    return this._components;
  }
  public putComponents(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowComponents) {
    this._components.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components.internalValue;
  }

  // kube_vip - computed: false, optional: false, required: true
  private _kubeVip = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowKubeVipOutputReference(this, "kube_vip");
  public get kubeVip() {
    return this._kubeVip;
  }
  public putKubeVip(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowKubeVip) {
    this._kubeVip.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeVipInput() {
    return this._kubeVip.internalValue;
  }

  // manager - computed: false, optional: false, required: true
  private _manager = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowManagerOutputReference(this, "manager");
  public get manager() {
    return this._manager;
  }
  public putManager(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowManager) {
    this._manager.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get managerInput() {
    return this._manager.internalValue;
  }

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // version - computed: false, optional: false, required: true
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterApiController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterApiControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterApiController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterApiControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterApiController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterApiControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterApiController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterApiController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterTemplate {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterTemplateToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterTemplateToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterTemplateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterTemplate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterTemplate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellComponents {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellComponentsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellComponentsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellComponentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellComponents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellComponents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellEnvoy {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellEnvoyToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellEnvoy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellEnvoyToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellEnvoy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellEnvoyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellEnvoy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellEnvoy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellKubeVip {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellKubeVipToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellKubeVip | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellKubeVipToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellKubeVip | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellKubeVipOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellKubeVip | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellKubeVip | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellMetadata {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellMetadataToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellMetadataToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsCexec {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsCexecToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsCexec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsCexecToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsCexec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsCexecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsCexec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsCexec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsImageToDisk {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsImageToDiskToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsImageToDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsImageToDiskToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsImageToDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsImageToDiskOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsImageToDisk | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsImageToDisk | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsKexec {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsKexecToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsKexec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsKexecToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsKexec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsKexecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsKexec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsKexec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOciToDisk {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOciToDiskToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOciToDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOciToDiskToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOciToDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOciToDiskOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOciToDisk | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOciToDisk | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsReboot {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsRebootToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsReboot | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsRebootToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsReboot | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsRebootOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsReboot | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsReboot | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsWriteFile {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsWriteFileToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsWriteFile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsWriteFileToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsWriteFile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsWriteFileOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsWriteFile | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsWriteFile | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cexec DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cexec}
  */
  readonly cexec: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsCexec;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_to_disk DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_to_disk}
  */
  readonly imageToDisk: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsImageToDisk;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kexec DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kexec}
  */
  readonly kexec: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsKexec;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#oci_to_disk DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#oci_to_disk}
  */
  readonly ociToDisk: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOciToDisk;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#reboot DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#reboot}
  */
  readonly reboot: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsReboot;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#write_file DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#write_file}
  */
  readonly writeFile: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsWriteFile;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cexec: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsCexecToTerraform(struct!.cexec),
    image_to_disk: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsImageToDiskToTerraform(struct!.imageToDisk),
    kexec: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsKexecToTerraform(struct!.kexec),
    oci_to_disk: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOciToDiskToTerraform(struct!.ociToDisk),
    reboot: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsRebootToTerraform(struct!.reboot),
    write_file: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsWriteFileToTerraform(struct!.writeFile),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cexec: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsCexecToHclTerraform(struct!.cexec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsCexec",
    },
    image_to_disk: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsImageToDiskToHclTerraform(struct!.imageToDisk),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsImageToDisk",
    },
    kexec: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsKexecToHclTerraform(struct!.kexec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsKexec",
    },
    oci_to_disk: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOciToDiskToHclTerraform(struct!.ociToDisk),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOciToDisk",
    },
    reboot: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsRebootToHclTerraform(struct!.reboot),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsReboot",
    },
    write_file: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsWriteFileToHclTerraform(struct!.writeFile),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsWriteFile",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cexec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cexec = this._cexec?.internalValue;
    }
    if (this._imageToDisk?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageToDisk = this._imageToDisk?.internalValue;
    }
    if (this._kexec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kexec = this._kexec?.internalValue;
    }
    if (this._ociToDisk?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ociToDisk = this._ociToDisk?.internalValue;
    }
    if (this._reboot?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.reboot = this._reboot?.internalValue;
    }
    if (this._writeFile?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.writeFile = this._writeFile?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cexec.internalValue = undefined;
      this._imageToDisk.internalValue = undefined;
      this._kexec.internalValue = undefined;
      this._ociToDisk.internalValue = undefined;
      this._reboot.internalValue = undefined;
      this._writeFile.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cexec.internalValue = value.cexec;
      this._imageToDisk.internalValue = value.imageToDisk;
      this._kexec.internalValue = value.kexec;
      this._ociToDisk.internalValue = value.ociToDisk;
      this._reboot.internalValue = value.reboot;
      this._writeFile.internalValue = value.writeFile;
    }
  }

  // cexec - computed: false, optional: false, required: true
  private _cexec = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsCexecOutputReference(this, "cexec");
  public get cexec() {
    return this._cexec;
  }
  public putCexec(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsCexec) {
    this._cexec.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get cexecInput() {
    return this._cexec.internalValue;
  }

  // image_to_disk - computed: false, optional: false, required: true
  private _imageToDisk = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsImageToDiskOutputReference(this, "image_to_disk");
  public get imageToDisk() {
    return this._imageToDisk;
  }
  public putImageToDisk(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsImageToDisk) {
    this._imageToDisk.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get imageToDiskInput() {
    return this._imageToDisk.internalValue;
  }

  // kexec - computed: false, optional: false, required: true
  private _kexec = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsKexecOutputReference(this, "kexec");
  public get kexec() {
    return this._kexec;
  }
  public putKexec(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsKexec) {
    this._kexec.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kexecInput() {
    return this._kexec.internalValue;
  }

  // oci_to_disk - computed: false, optional: false, required: true
  private _ociToDisk = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOciToDiskOutputReference(this, "oci_to_disk");
  public get ociToDisk() {
    return this._ociToDisk;
  }
  public putOciToDisk(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOciToDisk) {
    this._ociToDisk.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get ociToDiskInput() {
    return this._ociToDisk.internalValue;
  }

  // reboot - computed: false, optional: false, required: true
  private _reboot = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsRebootOutputReference(this, "reboot");
  public get reboot() {
    return this._reboot;
  }
  public putReboot(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsReboot) {
    this._reboot.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get rebootInput() {
    return this._reboot.internalValue;
  }

  // write_file - computed: false, optional: false, required: true
  private _writeFile = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsWriteFileOutputReference(this, "write_file");
  public get writeFile() {
    return this._writeFile;
  }
  public putWriteFile(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsWriteFile) {
    this._writeFile.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get writeFileInput() {
    return this._writeFile.internalValue;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackBoots {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackBootsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackBoots | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackBootsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackBoots | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackBootsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackBoots | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackBoots | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHegel {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHegelToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHegel | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHegelToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHegel | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHegelOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHegel | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHegel | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookBootkit {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookBootkitToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookBootkit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookBootkitToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookBootkit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookBootkitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookBootkit | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookBootkit | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookDocker {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookDockerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookDocker | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookDockerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookDocker | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookDockerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookDocker | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookDocker | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsAmd {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The sha256 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha256 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha256}
  */
  readonly sha256?: string;
  /**
  * The sha512 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha512 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha512}
  */
  readonly sha512?: string;
  /**
  * The URI where the asset is located
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsAmdToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsAmd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    sha256: cdktf.stringToTerraform(struct!.sha256),
    sha512: cdktf.stringToTerraform(struct!.sha512),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsAmdToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsAmd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha256: {
      value: cdktf.stringToHclTerraform(struct!.sha256),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha512: {
      value: cdktf.stringToHclTerraform(struct!.sha512),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsAmdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsAmd | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._sha256 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha256 = this._sha256;
    }
    if (this._sha512 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha512 = this._sha512;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsAmd | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._sha256 = undefined;
      this._sha512 = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._sha256 = value.sha256;
      this._sha512 = value.sha512;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // sha256 - computed: false, optional: true, required: false
  private _sha256?: string; 
  public get sha256() {
    return this.getStringAttribute('sha256');
  }
  public set sha256(value: string) {
    this._sha256 = value;
  }
  public resetSha256() {
    this._sha256 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha256Input() {
    return this._sha256;
  }

  // sha512 - computed: false, optional: true, required: false
  private _sha512?: string; 
  public get sha512() {
    return this.getStringAttribute('sha512');
  }
  public set sha512(value: string) {
    this._sha512 = value;
  }
  public resetSha512() {
    this._sha512 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha512Input() {
    return this._sha512;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsArm {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The sha256 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha256 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha256}
  */
  readonly sha256?: string;
  /**
  * The sha512 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha512 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha512}
  */
  readonly sha512?: string;
  /**
  * The URI where the asset is located
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsArmToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsArm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    sha256: cdktf.stringToTerraform(struct!.sha256),
    sha512: cdktf.stringToTerraform(struct!.sha512),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsArmToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsArm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha256: {
      value: cdktf.stringToHclTerraform(struct!.sha256),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha512: {
      value: cdktf.stringToHclTerraform(struct!.sha512),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsArmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsArm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._sha256 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha256 = this._sha256;
    }
    if (this._sha512 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha512 = this._sha512;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsArm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._sha256 = undefined;
      this._sha512 = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._sha256 = value.sha256;
      this._sha512 = value.sha512;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // sha256 - computed: false, optional: true, required: false
  private _sha256?: string; 
  public get sha256() {
    return this.getStringAttribute('sha256');
  }
  public set sha256(value: string) {
    this._sha256 = value;
  }
  public resetSha256() {
    this._sha256 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha256Input() {
    return this._sha256;
  }

  // sha512 - computed: false, optional: true, required: false
  private _sha512?: string; 
  public get sha512() {
    return this.getStringAttribute('sha512');
  }
  public set sha512(value: string) {
    this._sha512 = value;
  }
  public resetSha512() {
    this._sha512 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha512Input() {
    return this._sha512;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#amd DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#amd}
  */
  readonly amd: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsAmd;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arm DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arm}
  */
  readonly arm: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsArm;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    amd: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsAmdToTerraform(struct!.amd),
    arm: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsArmToTerraform(struct!.arm),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    amd: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsAmdToHclTerraform(struct!.amd),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsAmd",
    },
    arm: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsArmToHclTerraform(struct!.arm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsArm",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._amd?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.amd = this._amd?.internalValue;
    }
    if (this._arm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.arm = this._arm?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._amd.internalValue = undefined;
      this._arm.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._amd.internalValue = value.amd;
      this._arm.internalValue = value.arm;
    }
  }

  // amd - computed: false, optional: false, required: true
  private _amd = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsAmdOutputReference(this, "amd");
  public get amd() {
    return this._amd;
  }
  public putAmd(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsAmd) {
    this._amd.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get amdInput() {
    return this._amd.internalValue;
  }

  // arm - computed: false, optional: false, required: true
  private _arm = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsArmOutputReference(this, "arm");
  public get arm() {
    return this._arm;
  }
  public putArm(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsArm) {
    this._arm.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get armInput() {
    return this._arm.internalValue;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookKernel {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookKernelToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookKernel | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookKernelToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookKernel | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookKernelOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookKernel | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookKernel | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzAmd {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The sha256 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha256 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha256}
  */
  readonly sha256?: string;
  /**
  * The sha512 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha512 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha512}
  */
  readonly sha512?: string;
  /**
  * The URI where the asset is located
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzAmdToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzAmd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    sha256: cdktf.stringToTerraform(struct!.sha256),
    sha512: cdktf.stringToTerraform(struct!.sha512),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzAmdToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzAmd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha256: {
      value: cdktf.stringToHclTerraform(struct!.sha256),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha512: {
      value: cdktf.stringToHclTerraform(struct!.sha512),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzAmdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzAmd | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._sha256 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha256 = this._sha256;
    }
    if (this._sha512 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha512 = this._sha512;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzAmd | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._sha256 = undefined;
      this._sha512 = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._sha256 = value.sha256;
      this._sha512 = value.sha512;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // sha256 - computed: false, optional: true, required: false
  private _sha256?: string; 
  public get sha256() {
    return this.getStringAttribute('sha256');
  }
  public set sha256(value: string) {
    this._sha256 = value;
  }
  public resetSha256() {
    this._sha256 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha256Input() {
    return this._sha256;
  }

  // sha512 - computed: false, optional: true, required: false
  private _sha512?: string; 
  public get sha512() {
    return this.getStringAttribute('sha512');
  }
  public set sha512(value: string) {
    this._sha512 = value;
  }
  public resetSha512() {
    this._sha512 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha512Input() {
    return this._sha512;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzArm {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The sha256 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha256 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha256}
  */
  readonly sha256?: string;
  /**
  * The sha512 of the asset, only applies for 'file' store
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#sha512 DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#sha512}
  */
  readonly sha512?: string;
  /**
  * The URI where the asset is located
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzArmToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzArm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    sha256: cdktf.stringToTerraform(struct!.sha256),
    sha512: cdktf.stringToTerraform(struct!.sha512),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzArmToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzArm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha256: {
      value: cdktf.stringToHclTerraform(struct!.sha256),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sha512: {
      value: cdktf.stringToHclTerraform(struct!.sha512),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzArmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzArm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._sha256 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha256 = this._sha256;
    }
    if (this._sha512 !== undefined) {
      hasAnyValues = true;
      internalValueResult.sha512 = this._sha512;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzArm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._sha256 = undefined;
      this._sha512 = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._sha256 = value.sha256;
      this._sha512 = value.sha512;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // sha256 - computed: false, optional: true, required: false
  private _sha256?: string; 
  public get sha256() {
    return this.getStringAttribute('sha256');
  }
  public set sha256(value: string) {
    this._sha256 = value;
  }
  public resetSha256() {
    this._sha256 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha256Input() {
    return this._sha256;
  }

  // sha512 - computed: false, optional: true, required: false
  private _sha512?: string; 
  public get sha512() {
    return this.getStringAttribute('sha512');
  }
  public set sha512(value: string) {
    this._sha512 = value;
  }
  public resetSha512() {
    this._sha512 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sha512Input() {
    return this._sha512;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuz {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#amd DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#amd}
  */
  readonly amd: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzAmd;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arm DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arm}
  */
  readonly arm: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzArm;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuz | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    amd: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzAmdToTerraform(struct!.amd),
    arm: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzArmToTerraform(struct!.arm),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuz | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    amd: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzAmdToHclTerraform(struct!.amd),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzAmd",
    },
    arm: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzArmToHclTerraform(struct!.arm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzArm",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuz | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._amd?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.amd = this._amd?.internalValue;
    }
    if (this._arm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.arm = this._arm?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuz | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._amd.internalValue = undefined;
      this._arm.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._amd.internalValue = value.amd;
      this._arm.internalValue = value.arm;
    }
  }

  // amd - computed: false, optional: false, required: true
  private _amd = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzAmdOutputReference(this, "amd");
  public get amd() {
    return this._amd;
  }
  public putAmd(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzAmd) {
    this._amd.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get amdInput() {
    return this._amd.internalValue;
  }

  // arm - computed: false, optional: false, required: true
  private _arm = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzArmOutputReference(this, "arm");
  public get arm() {
    return this._arm;
  }
  public putArm(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzArm) {
    this._arm.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get armInput() {
    return this._arm.internalValue;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHook {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#bootkit DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#bootkit}
  */
  readonly bootkit: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookBootkit;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#docker DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#docker}
  */
  readonly docker: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookDocker;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#initramfs DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#initramfs}
  */
  readonly initramfs: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfs;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kernel DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kernel}
  */
  readonly kernel: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookKernel;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#vmlinuz DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#vmlinuz}
  */
  readonly vmlinuz: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuz;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHook | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    bootkit: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookBootkitToTerraform(struct!.bootkit),
    docker: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookDockerToTerraform(struct!.docker),
    initramfs: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsToTerraform(struct!.initramfs),
    kernel: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookKernelToTerraform(struct!.kernel),
    vmlinuz: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzToTerraform(struct!.vmlinuz),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHook | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    bootkit: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookBootkitToHclTerraform(struct!.bootkit),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookBootkit",
    },
    docker: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookDockerToHclTerraform(struct!.docker),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookDocker",
    },
    initramfs: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsToHclTerraform(struct!.initramfs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfs",
    },
    kernel: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookKernelToHclTerraform(struct!.kernel),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookKernel",
    },
    vmlinuz: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzToHclTerraform(struct!.vmlinuz),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuz",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHook | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._bootkit?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bootkit = this._bootkit?.internalValue;
    }
    if (this._docker?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.docker = this._docker?.internalValue;
    }
    if (this._initramfs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.initramfs = this._initramfs?.internalValue;
    }
    if (this._kernel?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kernel = this._kernel?.internalValue;
    }
    if (this._vmlinuz?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vmlinuz = this._vmlinuz?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHook | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._bootkit.internalValue = undefined;
      this._docker.internalValue = undefined;
      this._initramfs.internalValue = undefined;
      this._kernel.internalValue = undefined;
      this._vmlinuz.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._bootkit.internalValue = value.bootkit;
      this._docker.internalValue = value.docker;
      this._initramfs.internalValue = value.initramfs;
      this._kernel.internalValue = value.kernel;
      this._vmlinuz.internalValue = value.vmlinuz;
    }
  }

  // bootkit - computed: false, optional: false, required: true
  private _bootkit = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookBootkitOutputReference(this, "bootkit");
  public get bootkit() {
    return this._bootkit;
  }
  public putBootkit(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookBootkit) {
    this._bootkit.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get bootkitInput() {
    return this._bootkit.internalValue;
  }

  // docker - computed: false, optional: false, required: true
  private _docker = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookDockerOutputReference(this, "docker");
  public get docker() {
    return this._docker;
  }
  public putDocker(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookDocker) {
    this._docker.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get dockerInput() {
    return this._docker.internalValue;
  }

  // initramfs - computed: false, optional: false, required: true
  private _initramfs = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfsOutputReference(this, "initramfs");
  public get initramfs() {
    return this._initramfs;
  }
  public putInitramfs(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookInitramfs) {
    this._initramfs.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get initramfsInput() {
    return this._initramfs.internalValue;
  }

  // kernel - computed: false, optional: false, required: true
  private _kernel = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookKernelOutputReference(this, "kernel");
  public get kernel() {
    return this._kernel;
  }
  public putKernel(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookKernel) {
    this._kernel.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kernelInput() {
    return this._kernel.internalValue;
  }

  // vmlinuz - computed: false, optional: false, required: true
  private _vmlinuz = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuzOutputReference(this, "vmlinuz");
  public get vmlinuz() {
    return this._vmlinuz;
  }
  public putVmlinuz(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookVmlinuz) {
    this._vmlinuz.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get vmlinuzInput() {
    return this._vmlinuz.internalValue;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackRufio {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackRufioToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackRufio | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackRufioToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackRufio | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackRufioOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackRufio | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackRufio | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackStack {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackStackToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackStack | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackStackToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackStack | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackStackOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackStack | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackStack | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkNginx {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkNginxToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkNginx | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkNginxToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkNginx | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkNginxOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkNginx | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkNginx | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelay {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelay | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelay | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayInit {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayInitToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayInit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayInitToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayInit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayInitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayInit | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayInit | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkServer {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkServerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkServer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkServerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkServer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkServerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkServer | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkServer | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkWorker {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkWorkerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkWorker | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkWorkerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkWorker | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkWorkerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkWorker | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkWorker | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTink {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#nginx DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#nginx}
  */
  readonly nginx: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkNginx;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#tink_controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#tink_controller}
  */
  readonly tinkController: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#tink_relay DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#tink_relay}
  */
  readonly tinkRelay: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelay;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#tink_relay_init DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#tink_relay_init}
  */
  readonly tinkRelayInit: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayInit;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#tink_server DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#tink_server}
  */
  readonly tinkServer: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkServer;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#tink_worker DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#tink_worker}
  */
  readonly tinkWorker: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkWorker;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTink | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nginx: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkNginxToTerraform(struct!.nginx),
    tink_controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkControllerToTerraform(struct!.tinkController),
    tink_relay: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayToTerraform(struct!.tinkRelay),
    tink_relay_init: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayInitToTerraform(struct!.tinkRelayInit),
    tink_server: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkServerToTerraform(struct!.tinkServer),
    tink_worker: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkWorkerToTerraform(struct!.tinkWorker),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTink | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nginx: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkNginxToHclTerraform(struct!.nginx),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkNginx",
    },
    tink_controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkControllerToHclTerraform(struct!.tinkController),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkController",
    },
    tink_relay: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayToHclTerraform(struct!.tinkRelay),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelay",
    },
    tink_relay_init: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayInitToHclTerraform(struct!.tinkRelayInit),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayInit",
    },
    tink_server: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkServerToHclTerraform(struct!.tinkServer),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkServer",
    },
    tink_worker: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkWorkerToHclTerraform(struct!.tinkWorker),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkWorker",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTink | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nginx?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nginx = this._nginx?.internalValue;
    }
    if (this._tinkController?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tinkController = this._tinkController?.internalValue;
    }
    if (this._tinkRelay?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tinkRelay = this._tinkRelay?.internalValue;
    }
    if (this._tinkRelayInit?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tinkRelayInit = this._tinkRelayInit?.internalValue;
    }
    if (this._tinkServer?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tinkServer = this._tinkServer?.internalValue;
    }
    if (this._tinkWorker?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tinkWorker = this._tinkWorker?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTink | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nginx.internalValue = undefined;
      this._tinkController.internalValue = undefined;
      this._tinkRelay.internalValue = undefined;
      this._tinkRelayInit.internalValue = undefined;
      this._tinkServer.internalValue = undefined;
      this._tinkWorker.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nginx.internalValue = value.nginx;
      this._tinkController.internalValue = value.tinkController;
      this._tinkRelay.internalValue = value.tinkRelay;
      this._tinkRelayInit.internalValue = value.tinkRelayInit;
      this._tinkServer.internalValue = value.tinkServer;
      this._tinkWorker.internalValue = value.tinkWorker;
    }
  }

  // nginx - computed: false, optional: false, required: true
  private _nginx = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkNginxOutputReference(this, "nginx");
  public get nginx() {
    return this._nginx;
  }
  public putNginx(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkNginx) {
    this._nginx.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nginxInput() {
    return this._nginx.internalValue;
  }

  // tink_controller - computed: false, optional: false, required: true
  private _tinkController = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkControllerOutputReference(this, "tink_controller");
  public get tinkController() {
    return this._tinkController;
  }
  public putTinkController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkController) {
    this._tinkController.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tinkControllerInput() {
    return this._tinkController.internalValue;
  }

  // tink_relay - computed: false, optional: false, required: true
  private _tinkRelay = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayOutputReference(this, "tink_relay");
  public get tinkRelay() {
    return this._tinkRelay;
  }
  public putTinkRelay(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelay) {
    this._tinkRelay.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tinkRelayInput() {
    return this._tinkRelay.internalValue;
  }

  // tink_relay_init - computed: false, optional: false, required: true
  private _tinkRelayInit = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayInitOutputReference(this, "tink_relay_init");
  public get tinkRelayInit() {
    return this._tinkRelayInit;
  }
  public putTinkRelayInit(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkRelayInit) {
    this._tinkRelayInit.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tinkRelayInitInput() {
    return this._tinkRelayInit.internalValue;
  }

  // tink_server - computed: false, optional: false, required: true
  private _tinkServer = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkServerOutputReference(this, "tink_server");
  public get tinkServer() {
    return this._tinkServer;
  }
  public putTinkServer(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkServer) {
    this._tinkServer.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tinkServerInput() {
    return this._tinkServer.internalValue;
  }

  // tink_worker - computed: false, optional: false, required: true
  private _tinkWorker = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkWorkerOutputReference(this, "tink_worker");
  public get tinkWorker() {
    return this._tinkWorker;
  }
  public putTinkWorker(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkTinkWorker) {
    this._tinkWorker.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tinkWorkerInput() {
    return this._tinkWorker.internalValue;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellChart {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellChartToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellChart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellChartToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellChart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellChartOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellChart | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellChart | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellCrds {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellCrdsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellCrds | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellCrdsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellCrds | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellCrdsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellCrds | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellCrds | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStack {
  /**
  * Tinkerbell Template Actions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#actions DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#actions}
  */
  readonly actions: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActions;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#boots DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#boots}
  */
  readonly boots: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackBoots;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#hegel DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#hegel}
  */
  readonly hegel: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHegel;
  /**
  * Tinkerbell hook OS.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#hook DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#hook}
  */
  readonly hook: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHook;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#rufio DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#rufio}
  */
  readonly rufio: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackRufio;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#stack DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#stack}
  */
  readonly stack: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackStack;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#tink DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#tink}
  */
  readonly tink: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTink;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#tinkerbell_chart DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#tinkerbell_chart}
  */
  readonly tinkerbellChart: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellChart;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#tinkerbell_crds DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#tinkerbell_crds}
  */
  readonly tinkerbellCrds: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellCrds;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStack | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    actions: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsToTerraform(struct!.actions),
    boots: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackBootsToTerraform(struct!.boots),
    hegel: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHegelToTerraform(struct!.hegel),
    hook: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookToTerraform(struct!.hook),
    rufio: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackRufioToTerraform(struct!.rufio),
    stack: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackStackToTerraform(struct!.stack),
    tink: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkToTerraform(struct!.tink),
    tinkerbell_chart: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellChartToTerraform(struct!.tinkerbellChart),
    tinkerbell_crds: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellCrdsToTerraform(struct!.tinkerbellCrds),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStack | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    actions: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsToHclTerraform(struct!.actions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActions",
    },
    boots: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackBootsToHclTerraform(struct!.boots),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackBoots",
    },
    hegel: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHegelToHclTerraform(struct!.hegel),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHegel",
    },
    hook: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookToHclTerraform(struct!.hook),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHook",
    },
    rufio: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackRufioToHclTerraform(struct!.rufio),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackRufio",
    },
    stack: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackStackToHclTerraform(struct!.stack),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackStack",
    },
    tink: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkToHclTerraform(struct!.tink),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTink",
    },
    tinkerbell_chart: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellChartToHclTerraform(struct!.tinkerbellChart),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellChart",
    },
    tinkerbell_crds: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellCrdsToHclTerraform(struct!.tinkerbellCrds),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellCrds",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStack | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._actions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.actions = this._actions?.internalValue;
    }
    if (this._boots?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.boots = this._boots?.internalValue;
    }
    if (this._hegel?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.hegel = this._hegel?.internalValue;
    }
    if (this._hook?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.hook = this._hook?.internalValue;
    }
    if (this._rufio?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rufio = this._rufio?.internalValue;
    }
    if (this._stack?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.stack = this._stack?.internalValue;
    }
    if (this._tink?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tink = this._tink?.internalValue;
    }
    if (this._tinkerbellChart?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tinkerbellChart = this._tinkerbellChart?.internalValue;
    }
    if (this._tinkerbellCrds?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tinkerbellCrds = this._tinkerbellCrds?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStack | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._actions.internalValue = undefined;
      this._boots.internalValue = undefined;
      this._hegel.internalValue = undefined;
      this._hook.internalValue = undefined;
      this._rufio.internalValue = undefined;
      this._stack.internalValue = undefined;
      this._tink.internalValue = undefined;
      this._tinkerbellChart.internalValue = undefined;
      this._tinkerbellCrds.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._actions.internalValue = value.actions;
      this._boots.internalValue = value.boots;
      this._hegel.internalValue = value.hegel;
      this._hook.internalValue = value.hook;
      this._rufio.internalValue = value.rufio;
      this._stack.internalValue = value.stack;
      this._tink.internalValue = value.tink;
      this._tinkerbellChart.internalValue = value.tinkerbellChart;
      this._tinkerbellCrds.internalValue = value.tinkerbellCrds;
    }
  }

  // actions - computed: false, optional: false, required: true
  private _actions = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActionsOutputReference(this, "actions");
  public get actions() {
    return this._actions;
  }
  public putActions(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackActions) {
    this._actions.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionsInput() {
    return this._actions.internalValue;
  }

  // boots - computed: false, optional: false, required: true
  private _boots = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackBootsOutputReference(this, "boots");
  public get boots() {
    return this._boots;
  }
  public putBoots(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackBoots) {
    this._boots.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get bootsInput() {
    return this._boots.internalValue;
  }

  // hegel - computed: false, optional: false, required: true
  private _hegel = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHegelOutputReference(this, "hegel");
  public get hegel() {
    return this._hegel;
  }
  public putHegel(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHegel) {
    this._hegel.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get hegelInput() {
    return this._hegel.internalValue;
  }

  // hook - computed: false, optional: false, required: true
  private _hook = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHookOutputReference(this, "hook");
  public get hook() {
    return this._hook;
  }
  public putHook(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackHook) {
    this._hook.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get hookInput() {
    return this._hook.internalValue;
  }

  // rufio - computed: false, optional: false, required: true
  private _rufio = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackRufioOutputReference(this, "rufio");
  public get rufio() {
    return this._rufio;
  }
  public putRufio(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackRufio) {
    this._rufio.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get rufioInput() {
    return this._rufio.internalValue;
  }

  // stack - computed: false, optional: false, required: true
  private _stack = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackStackOutputReference(this, "stack");
  public get stack() {
    return this._stack;
  }
  public putStack(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackStack) {
    this._stack.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get stackInput() {
    return this._stack.internalValue;
  }

  // tink - computed: false, optional: false, required: true
  private _tink = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkOutputReference(this, "tink");
  public get tink() {
    return this._tink;
  }
  public putTink(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTink) {
    this._tink.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tinkInput() {
    return this._tink.internalValue;
  }

  // tinkerbell_chart - computed: false, optional: false, required: true
  private _tinkerbellChart = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellChartOutputReference(this, "tinkerbell_chart");
  public get tinkerbellChart() {
    return this._tinkerbellChart;
  }
  public putTinkerbellChart(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellChart) {
    this._tinkerbellChart.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tinkerbellChartInput() {
    return this._tinkerbellChart.internalValue;
  }

  // tinkerbell_crds - computed: false, optional: false, required: true
  private _tinkerbellCrds = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellCrdsOutputReference(this, "tinkerbell_crds");
  public get tinkerbellCrds() {
    return this._tinkerbellCrds;
  }
  public putTinkerbellCrds(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackTinkerbellCrds) {
    this._tinkerbellCrds.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get tinkerbellCrdsInput() {
    return this._tinkerbellCrds.internalValue;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbell {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cluster_api_controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cluster_api_controller}
  */
  readonly clusterApiController: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterApiController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cluster_template DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cluster_template}
  */
  readonly clusterTemplate: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterTemplate;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#components DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#components}
  */
  readonly components: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellComponents;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#envoy DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#envoy}
  */
  readonly envoy: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellEnvoy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_vip DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_vip}
  */
  readonly kubeVip: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellKubeVip;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#metadata DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#metadata}
  */
  readonly metadata: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#tinkerbell_stack DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#tinkerbell_stack}
  */
  readonly tinkerbellStack?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStack;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbell | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cluster_api_controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterApiControllerToTerraform(struct!.clusterApiController),
    cluster_template: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterTemplateToTerraform(struct!.clusterTemplate),
    components: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellComponentsToTerraform(struct!.components),
    envoy: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellEnvoyToTerraform(struct!.envoy),
    kube_vip: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellKubeVipToTerraform(struct!.kubeVip),
    metadata: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellMetadataToTerraform(struct!.metadata),
    tinkerbell_stack: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackToTerraform(struct!.tinkerbellStack),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbell | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cluster_api_controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterApiControllerToHclTerraform(struct!.clusterApiController),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterApiController",
    },
    cluster_template: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterTemplateToHclTerraform(struct!.clusterTemplate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterTemplate",
    },
    components: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellComponentsToHclTerraform(struct!.components),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellComponents",
    },
    envoy: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellEnvoyToHclTerraform(struct!.envoy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellEnvoy",
    },
    kube_vip: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellKubeVipToHclTerraform(struct!.kubeVip),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellKubeVip",
    },
    metadata: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellMetadata",
    },
    tinkerbell_stack: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackToHclTerraform(struct!.tinkerbellStack),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStack",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbell | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clusterApiController?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterApiController = this._clusterApiController?.internalValue;
    }
    if (this._clusterTemplate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterTemplate = this._clusterTemplate?.internalValue;
    }
    if (this._components?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components?.internalValue;
    }
    if (this._envoy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.envoy = this._envoy?.internalValue;
    }
    if (this._kubeVip?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeVip = this._kubeVip?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._tinkerbellStack?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tinkerbellStack = this._tinkerbellStack?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbell | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clusterApiController.internalValue = undefined;
      this._clusterTemplate.internalValue = undefined;
      this._components.internalValue = undefined;
      this._envoy.internalValue = undefined;
      this._kubeVip.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._tinkerbellStack.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clusterApiController.internalValue = value.clusterApiController;
      this._clusterTemplate.internalValue = value.clusterTemplate;
      this._components.internalValue = value.components;
      this._envoy.internalValue = value.envoy;
      this._kubeVip.internalValue = value.kubeVip;
      this._metadata.internalValue = value.metadata;
      this._tinkerbellStack.internalValue = value.tinkerbellStack;
      this._version = value.version;
    }
  }

  // cluster_api_controller - computed: false, optional: false, required: true
  private _clusterApiController = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterApiControllerOutputReference(this, "cluster_api_controller");
  public get clusterApiController() {
    return this._clusterApiController;
  }
  public putClusterApiController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterApiController) {
    this._clusterApiController.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterApiControllerInput() {
    return this._clusterApiController.internalValue;
  }

  // cluster_template - computed: false, optional: false, required: true
  private _clusterTemplate = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterTemplateOutputReference(this, "cluster_template");
  public get clusterTemplate() {
    return this._clusterTemplate;
  }
  public putClusterTemplate(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellClusterTemplate) {
    this._clusterTemplate.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterTemplateInput() {
    return this._clusterTemplate.internalValue;
  }

  // components - computed: false, optional: false, required: true
  private _components = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellComponentsOutputReference(this, "components");
  public get components() {
    return this._components;
  }
  public putComponents(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellComponents) {
    this._components.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components.internalValue;
  }

  // envoy - computed: false, optional: false, required: true
  private _envoy = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellEnvoyOutputReference(this, "envoy");
  public get envoy() {
    return this._envoy;
  }
  public putEnvoy(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellEnvoy) {
    this._envoy.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get envoyInput() {
    return this._envoy.internalValue;
  }

  // kube_vip - computed: false, optional: false, required: true
  private _kubeVip = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellKubeVipOutputReference(this, "kube_vip");
  public get kubeVip() {
    return this._kubeVip;
  }
  public putKubeVip(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellKubeVip) {
    this._kubeVip.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeVipInput() {
    return this._kubeVip.internalValue;
  }

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // tinkerbell_stack - computed: false, optional: true, required: false
  private _tinkerbellStack = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStackOutputReference(this, "tinkerbell_stack");
  public get tinkerbellStack() {
    return this._tinkerbellStack;
  }
  public putTinkerbellStack(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellTinkerbellStack) {
    this._tinkerbellStack.internalValue = value;
  }
  public resetTinkerbellStack() {
    this._tinkerbellStack.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tinkerbellStackInput() {
    return this._tinkerbellStack.internalValue;
  }

  // version - computed: false, optional: false, required: true
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderUpgrader {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderUpgraderToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderUpgrader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderUpgraderToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderUpgrader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderUpgraderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderUpgrader | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderUpgrader | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgrader {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#upgrader DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#upgrader}
  */
  readonly upgrader: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderUpgrader;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgrader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    upgrader: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderUpgraderToTerraform(struct!.upgrader),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgrader | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    upgrader: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderUpgraderToHclTerraform(struct!.upgrader),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderUpgrader",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgrader | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._upgrader?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.upgrader = this._upgrader?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgrader | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._upgrader.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._upgrader.internalValue = value.upgrader;
    }
  }

  // upgrader - computed: false, optional: false, required: true
  private _upgrader = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderUpgraderOutputReference(this, "upgrader");
  public get upgrader() {
    return this._upgrader;
  }
  public putUpgrader(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderUpgrader) {
    this._upgrader.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get upgraderInput() {
    return this._upgrader.internalValue;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterApiController {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterApiControllerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterApiController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterApiControllerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterApiController | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterApiControllerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterApiController | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterApiController | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterTemplate {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterTemplateToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterTemplateToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterTemplateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterTemplate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterTemplate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereComponents {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereComponentsToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereComponentsToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereComponents | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereComponentsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereComponents | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereComponents | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereDriver {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereDriverToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereDriver | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereDriverToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereDriver | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereDriverOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereDriver | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereDriver | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeProxy {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeProxyToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeProxyToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeProxy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeProxyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeProxy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeProxy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeVip {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeVipToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeVip | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeVipToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeVip | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeVipOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeVip | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeVip | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereManager {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereManagerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereManager | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereManagerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereManager | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereManagerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereManager | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereManager | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereMetadata {
  /**
  * URI points to the manifest yaml file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereMetadataToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereMetadataToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._uri = value.uri;
    }
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereSyncer {
  /**
  * Architectures of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#arch DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#arch}
  */
  readonly arch?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#description DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * The SHA256 digest of the image manifest
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#image_digest DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#image_digest}
  */
  readonly imageDigest?: string;
  /**
  * The asset name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Operating system of the asset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os}
  */
  readonly os?: string;
  /**
  * Name of the OS like ubuntu, bottlerocket
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#os_name DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#os_name}
  */
  readonly osName?: string;
  /**
  * The image repository, name, and tag
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#uri DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereSyncerToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereSyncer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    arch: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.arch),
    description: cdktf.stringToTerraform(struct!.description),
    image_digest: cdktf.stringToTerraform(struct!.imageDigest),
    name: cdktf.stringToTerraform(struct!.name),
    os: cdktf.stringToTerraform(struct!.os),
    os_name: cdktf.stringToTerraform(struct!.osName),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereSyncerToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereSyncer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    arch: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.arch),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_digest: {
      value: cdktf.stringToHclTerraform(struct!.imageDigest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os: {
      value: cdktf.stringToHclTerraform(struct!.os),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    os_name: {
      value: cdktf.stringToHclTerraform(struct!.osName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereSyncerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereSyncer | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._arch !== undefined) {
      hasAnyValues = true;
      internalValueResult.arch = this._arch;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._imageDigest !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageDigest = this._imageDigest;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._os !== undefined) {
      hasAnyValues = true;
      internalValueResult.os = this._os;
    }
    if (this._osName !== undefined) {
      hasAnyValues = true;
      internalValueResult.osName = this._osName;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereSyncer | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._arch = undefined;
      this._description = undefined;
      this._imageDigest = undefined;
      this._name = undefined;
      this._os = undefined;
      this._osName = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._arch = value.arch;
      this._description = value.description;
      this._imageDigest = value.imageDigest;
      this._name = value.name;
      this._os = value.os;
      this._osName = value.osName;
      this._uri = value.uri;
    }
  }

  // arch - computed: false, optional: true, required: false
  private _arch?: string[]; 
  public get arch() {
    return this.getListAttribute('arch');
  }
  public set arch(value: string[]) {
    this._arch = value;
  }
  public resetArch() {
    this._arch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get archInput() {
    return this._arch;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // image_digest - computed: false, optional: true, required: false
  private _imageDigest?: string; 
  public get imageDigest() {
    return this.getStringAttribute('image_digest');
  }
  public set imageDigest(value: string) {
    this._imageDigest = value;
  }
  public resetImageDigest() {
    this._imageDigest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageDigestInput() {
    return this._imageDigest;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // os - computed: false, optional: true, required: false
  private _os?: string; 
  public get os() {
    return this.getStringAttribute('os');
  }
  public set os(value: string) {
    this._os = value;
  }
  public resetOs() {
    this._os = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osInput() {
    return this._os;
  }

  // os_name - computed: false, optional: true, required: false
  private _osName?: string; 
  public get osName() {
    return this.getStringAttribute('os_name');
  }
  public set osName(value: string) {
    this._osName = value;
  }
  public resetOsName() {
    this._osName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get osNameInput() {
    return this._osName;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphere {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cluster_api_controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cluster_api_controller}
  */
  readonly clusterApiController: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterApiController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cluster_template DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cluster_template}
  */
  readonly clusterTemplate: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterTemplate;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#components DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#components}
  */
  readonly components: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereComponents;
  /**
  * This field has been deprecated
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#driver DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#driver}
  */
  readonly driver?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereDriver;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_proxy DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_proxy}
  */
  readonly kubeProxy: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeProxy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_vip DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_vip}
  */
  readonly kubeVip: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeVip;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#manager DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#manager}
  */
  readonly manager: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereManager;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#metadata DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#metadata}
  */
  readonly metadata: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereMetadata;
  /**
  * This field has been deprecated
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#syncer DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#syncer}
  */
  readonly syncer?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereSyncer;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#version}
  */
  readonly version: string;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphere | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cluster_api_controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterApiControllerToTerraform(struct!.clusterApiController),
    cluster_template: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterTemplateToTerraform(struct!.clusterTemplate),
    components: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereComponentsToTerraform(struct!.components),
    driver: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereDriverToTerraform(struct!.driver),
    kube_proxy: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeProxyToTerraform(struct!.kubeProxy),
    kube_vip: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeVipToTerraform(struct!.kubeVip),
    manager: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereManagerToTerraform(struct!.manager),
    metadata: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereMetadataToTerraform(struct!.metadata),
    syncer: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereSyncerToTerraform(struct!.syncer),
    version: cdktf.stringToTerraform(struct!.version),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphere | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cluster_api_controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterApiControllerToHclTerraform(struct!.clusterApiController),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterApiController",
    },
    cluster_template: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterTemplateToHclTerraform(struct!.clusterTemplate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterTemplate",
    },
    components: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereComponentsToHclTerraform(struct!.components),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereComponents",
    },
    driver: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereDriverToHclTerraform(struct!.driver),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereDriver",
    },
    kube_proxy: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeProxyToHclTerraform(struct!.kubeProxy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeProxy",
    },
    kube_vip: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeVipToHclTerraform(struct!.kubeVip),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeVip",
    },
    manager: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereManagerToHclTerraform(struct!.manager),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereManager",
    },
    metadata: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereMetadata",
    },
    syncer: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereSyncerToHclTerraform(struct!.syncer),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereSyncer",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphere | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clusterApiController?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterApiController = this._clusterApiController?.internalValue;
    }
    if (this._clusterTemplate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterTemplate = this._clusterTemplate?.internalValue;
    }
    if (this._components?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components?.internalValue;
    }
    if (this._driver?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.driver = this._driver?.internalValue;
    }
    if (this._kubeProxy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeProxy = this._kubeProxy?.internalValue;
    }
    if (this._kubeVip?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeVip = this._kubeVip?.internalValue;
    }
    if (this._manager?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.manager = this._manager?.internalValue;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._syncer?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.syncer = this._syncer?.internalValue;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphere | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clusterApiController.internalValue = undefined;
      this._clusterTemplate.internalValue = undefined;
      this._components.internalValue = undefined;
      this._driver.internalValue = undefined;
      this._kubeProxy.internalValue = undefined;
      this._kubeVip.internalValue = undefined;
      this._manager.internalValue = undefined;
      this._metadata.internalValue = undefined;
      this._syncer.internalValue = undefined;
      this._version = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clusterApiController.internalValue = value.clusterApiController;
      this._clusterTemplate.internalValue = value.clusterTemplate;
      this._components.internalValue = value.components;
      this._driver.internalValue = value.driver;
      this._kubeProxy.internalValue = value.kubeProxy;
      this._kubeVip.internalValue = value.kubeVip;
      this._manager.internalValue = value.manager;
      this._metadata.internalValue = value.metadata;
      this._syncer.internalValue = value.syncer;
      this._version = value.version;
    }
  }

  // cluster_api_controller - computed: false, optional: false, required: true
  private _clusterApiController = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterApiControllerOutputReference(this, "cluster_api_controller");
  public get clusterApiController() {
    return this._clusterApiController;
  }
  public putClusterApiController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterApiController) {
    this._clusterApiController.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterApiControllerInput() {
    return this._clusterApiController.internalValue;
  }

  // cluster_template - computed: false, optional: false, required: true
  private _clusterTemplate = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterTemplateOutputReference(this, "cluster_template");
  public get clusterTemplate() {
    return this._clusterTemplate;
  }
  public putClusterTemplate(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereClusterTemplate) {
    this._clusterTemplate.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterTemplateInput() {
    return this._clusterTemplate.internalValue;
  }

  // components - computed: false, optional: false, required: true
  private _components = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereComponentsOutputReference(this, "components");
  public get components() {
    return this._components;
  }
  public putComponents(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereComponents) {
    this._components.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components.internalValue;
  }

  // driver - computed: false, optional: true, required: false
  private _driver = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereDriverOutputReference(this, "driver");
  public get driver() {
    return this._driver;
  }
  public putDriver(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereDriver) {
    this._driver.internalValue = value;
  }
  public resetDriver() {
    this._driver.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get driverInput() {
    return this._driver.internalValue;
  }

  // kube_proxy - computed: false, optional: false, required: true
  private _kubeProxy = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeProxyOutputReference(this, "kube_proxy");
  public get kubeProxy() {
    return this._kubeProxy;
  }
  public putKubeProxy(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeProxy) {
    this._kubeProxy.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeProxyInput() {
    return this._kubeProxy.internalValue;
  }

  // kube_vip - computed: false, optional: false, required: true
  private _kubeVip = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeVipOutputReference(this, "kube_vip");
  public get kubeVip() {
    return this._kubeVip;
  }
  public putKubeVip(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereKubeVip) {
    this._kubeVip.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeVipInput() {
    return this._kubeVip.internalValue;
  }

  // manager - computed: false, optional: false, required: true
  private _manager = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereManagerOutputReference(this, "manager");
  public get manager() {
    return this._manager;
  }
  public putManager(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereManager) {
    this._manager.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get managerInput() {
    return this._manager.internalValue;
  }

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // syncer - computed: false, optional: true, required: false
  private _syncer = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereSyncerOutputReference(this, "syncer");
  public get syncer() {
    return this._syncer;
  }
  public putSyncer(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereSyncer) {
    this._syncer.internalValue = value;
  }
  public resetSyncer() {
    this._syncer.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get syncerInput() {
    return this._syncer.internalValue;
  }

  // version - computed: false, optional: false, required: true
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundles {
  /**
  * This field has been deprecated
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#aws DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#aws}
  */
  readonly aws?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAws;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#bootstrap DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#bootstrap}
  */
  readonly bootstrap: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrap;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#bottlerocket_host_containers DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#bottlerocket_host_containers}
  */
  readonly bottlerocketHostContainers: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainers;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cert_manager DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cert_manager}
  */
  readonly certManager: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManager;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cilium DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cilium}
  */
  readonly cilium: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCilium;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cloud_stack DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cloud_stack}
  */
  readonly cloudStack?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStack;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cluster_api DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cluster_api}
  */
  readonly clusterApi: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApi;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#control_plane DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#control_plane}
  */
  readonly controlPlane: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlane;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#docker DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#docker}
  */
  readonly docker: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDocker;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#eks_d DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#eks_d}
  */
  readonly eksD: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksD;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#eksa DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#eksa}
  */
  readonly eksa: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksa;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#etcdadm_bootstrap DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#etcdadm_bootstrap}
  */
  readonly etcdadmBootstrap: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrap;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#etcdadm_controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#etcdadm_controller}
  */
  readonly etcdadmController: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#flux DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#flux}
  */
  readonly flux: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFlux;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#haproxy DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#haproxy}
  */
  readonly haproxy?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxy;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kindnetd DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kindnetd}
  */
  readonly kindnetd: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetd;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#kube_version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#kube_version}
  */
  readonly kubeVersion: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#nutanix DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#nutanix}
  */
  readonly nutanix?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanix;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#package_controller DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#package_controller}
  */
  readonly packageController: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageController;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#snow DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#snow}
  */
  readonly snow?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnow;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#tinkerbell DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#tinkerbell}
  */
  readonly tinkerbell?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbell;
  /**
  * UpgraderBundle is a In-place Kubernetes version upgrader bundle.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#upgrader DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#upgrader}
  */
  readonly upgrader?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgrader;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#v_sphere DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#v_sphere}
  */
  readonly vSphere: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphere;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundles | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    aws: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsToTerraform(struct!.aws),
    bootstrap: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapToTerraform(struct!.bootstrap),
    bottlerocket_host_containers: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersToTerraform(struct!.bottlerocketHostContainers),
    cert_manager: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerToTerraform(struct!.certManager),
    cilium: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumToTerraform(struct!.cilium),
    cloud_stack: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackToTerraform(struct!.cloudStack),
    cluster_api: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiToTerraform(struct!.clusterApi),
    control_plane: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneToTerraform(struct!.controlPlane),
    docker: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerToTerraform(struct!.docker),
    eks_d: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDToTerraform(struct!.eksD),
    eksa: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaToTerraform(struct!.eksa),
    etcdadm_bootstrap: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapToTerraform(struct!.etcdadmBootstrap),
    etcdadm_controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerToTerraform(struct!.etcdadmController),
    flux: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxToTerraform(struct!.flux),
    haproxy: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyToTerraform(struct!.haproxy),
    kindnetd: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdToTerraform(struct!.kindnetd),
    kube_version: cdktf.stringToTerraform(struct!.kubeVersion),
    nutanix: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixToTerraform(struct!.nutanix),
    package_controller: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerToTerraform(struct!.packageController),
    snow: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowToTerraform(struct!.snow),
    tinkerbell: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellToTerraform(struct!.tinkerbell),
    upgrader: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderToTerraform(struct!.upgrader),
    v_sphere: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereToTerraform(struct!.vSphere),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundles | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    aws: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsToHclTerraform(struct!.aws),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAws",
    },
    bootstrap: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapToHclTerraform(struct!.bootstrap),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrap",
    },
    bottlerocket_host_containers: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersToHclTerraform(struct!.bottlerocketHostContainers),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainers",
    },
    cert_manager: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerToHclTerraform(struct!.certManager),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManager",
    },
    cilium: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumToHclTerraform(struct!.cilium),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCilium",
    },
    cloud_stack: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackToHclTerraform(struct!.cloudStack),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStack",
    },
    cluster_api: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiToHclTerraform(struct!.clusterApi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApi",
    },
    control_plane: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneToHclTerraform(struct!.controlPlane),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlane",
    },
    docker: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerToHclTerraform(struct!.docker),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDocker",
    },
    eks_d: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDToHclTerraform(struct!.eksD),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksD",
    },
    eksa: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaToHclTerraform(struct!.eksa),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksa",
    },
    etcdadm_bootstrap: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapToHclTerraform(struct!.etcdadmBootstrap),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrap",
    },
    etcdadm_controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerToHclTerraform(struct!.etcdadmController),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmController",
    },
    flux: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxToHclTerraform(struct!.flux),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFlux",
    },
    haproxy: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyToHclTerraform(struct!.haproxy),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxy",
    },
    kindnetd: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdToHclTerraform(struct!.kindnetd),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetd",
    },
    kube_version: {
      value: cdktf.stringToHclTerraform(struct!.kubeVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    nutanix: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixToHclTerraform(struct!.nutanix),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanix",
    },
    package_controller: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerToHclTerraform(struct!.packageController),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageController",
    },
    snow: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowToHclTerraform(struct!.snow),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnow",
    },
    tinkerbell: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellToHclTerraform(struct!.tinkerbell),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbell",
    },
    upgrader: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderToHclTerraform(struct!.upgrader),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgrader",
    },
    v_sphere: {
      value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereToHclTerraform(struct!.vSphere),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphere",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundles | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._aws?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.aws = this._aws?.internalValue;
    }
    if (this._bootstrap?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bootstrap = this._bootstrap?.internalValue;
    }
    if (this._bottlerocketHostContainers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bottlerocketHostContainers = this._bottlerocketHostContainers?.internalValue;
    }
    if (this._certManager?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.certManager = this._certManager?.internalValue;
    }
    if (this._cilium?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cilium = this._cilium?.internalValue;
    }
    if (this._cloudStack?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cloudStack = this._cloudStack?.internalValue;
    }
    if (this._clusterApi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterApi = this._clusterApi?.internalValue;
    }
    if (this._controlPlane?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.controlPlane = this._controlPlane?.internalValue;
    }
    if (this._docker?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.docker = this._docker?.internalValue;
    }
    if (this._eksD?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.eksD = this._eksD?.internalValue;
    }
    if (this._eksa?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.eksa = this._eksa?.internalValue;
    }
    if (this._etcdadmBootstrap?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.etcdadmBootstrap = this._etcdadmBootstrap?.internalValue;
    }
    if (this._etcdadmController?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.etcdadmController = this._etcdadmController?.internalValue;
    }
    if (this._flux?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.flux = this._flux?.internalValue;
    }
    if (this._haproxy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.haproxy = this._haproxy?.internalValue;
    }
    if (this._kindnetd?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kindnetd = this._kindnetd?.internalValue;
    }
    if (this._kubeVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubeVersion = this._kubeVersion;
    }
    if (this._nutanix?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nutanix = this._nutanix?.internalValue;
    }
    if (this._packageController?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.packageController = this._packageController?.internalValue;
    }
    if (this._snow?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.snow = this._snow?.internalValue;
    }
    if (this._tinkerbell?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tinkerbell = this._tinkerbell?.internalValue;
    }
    if (this._upgrader?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.upgrader = this._upgrader?.internalValue;
    }
    if (this._vSphere?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vSphere = this._vSphere?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundles | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._aws.internalValue = undefined;
      this._bootstrap.internalValue = undefined;
      this._bottlerocketHostContainers.internalValue = undefined;
      this._certManager.internalValue = undefined;
      this._cilium.internalValue = undefined;
      this._cloudStack.internalValue = undefined;
      this._clusterApi.internalValue = undefined;
      this._controlPlane.internalValue = undefined;
      this._docker.internalValue = undefined;
      this._eksD.internalValue = undefined;
      this._eksa.internalValue = undefined;
      this._etcdadmBootstrap.internalValue = undefined;
      this._etcdadmController.internalValue = undefined;
      this._flux.internalValue = undefined;
      this._haproxy.internalValue = undefined;
      this._kindnetd.internalValue = undefined;
      this._kubeVersion = undefined;
      this._nutanix.internalValue = undefined;
      this._packageController.internalValue = undefined;
      this._snow.internalValue = undefined;
      this._tinkerbell.internalValue = undefined;
      this._upgrader.internalValue = undefined;
      this._vSphere.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._aws.internalValue = value.aws;
      this._bootstrap.internalValue = value.bootstrap;
      this._bottlerocketHostContainers.internalValue = value.bottlerocketHostContainers;
      this._certManager.internalValue = value.certManager;
      this._cilium.internalValue = value.cilium;
      this._cloudStack.internalValue = value.cloudStack;
      this._clusterApi.internalValue = value.clusterApi;
      this._controlPlane.internalValue = value.controlPlane;
      this._docker.internalValue = value.docker;
      this._eksD.internalValue = value.eksD;
      this._eksa.internalValue = value.eksa;
      this._etcdadmBootstrap.internalValue = value.etcdadmBootstrap;
      this._etcdadmController.internalValue = value.etcdadmController;
      this._flux.internalValue = value.flux;
      this._haproxy.internalValue = value.haproxy;
      this._kindnetd.internalValue = value.kindnetd;
      this._kubeVersion = value.kubeVersion;
      this._nutanix.internalValue = value.nutanix;
      this._packageController.internalValue = value.packageController;
      this._snow.internalValue = value.snow;
      this._tinkerbell.internalValue = value.tinkerbell;
      this._upgrader.internalValue = value.upgrader;
      this._vSphere.internalValue = value.vSphere;
    }
  }

  // aws - computed: false, optional: true, required: false
  private _aws = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAwsOutputReference(this, "aws");
  public get aws() {
    return this._aws;
  }
  public putAws(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesAws) {
    this._aws.internalValue = value;
  }
  public resetAws() {
    this._aws.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get awsInput() {
    return this._aws.internalValue;
  }

  // bootstrap - computed: false, optional: false, required: true
  private _bootstrap = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrapOutputReference(this, "bootstrap");
  public get bootstrap() {
    return this._bootstrap;
  }
  public putBootstrap(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBootstrap) {
    this._bootstrap.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get bootstrapInput() {
    return this._bootstrap.internalValue;
  }

  // bottlerocket_host_containers - computed: false, optional: false, required: true
  private _bottlerocketHostContainers = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainersOutputReference(this, "bottlerocket_host_containers");
  public get bottlerocketHostContainers() {
    return this._bottlerocketHostContainers;
  }
  public putBottlerocketHostContainers(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesBottlerocketHostContainers) {
    this._bottlerocketHostContainers.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get bottlerocketHostContainersInput() {
    return this._bottlerocketHostContainers.internalValue;
  }

  // cert_manager - computed: false, optional: false, required: true
  private _certManager = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManagerOutputReference(this, "cert_manager");
  public get certManager() {
    return this._certManager;
  }
  public putCertManager(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCertManager) {
    this._certManager.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get certManagerInput() {
    return this._certManager.internalValue;
  }

  // cilium - computed: false, optional: false, required: true
  private _cilium = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCiliumOutputReference(this, "cilium");
  public get cilium() {
    return this._cilium;
  }
  public putCilium(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCilium) {
    this._cilium.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get ciliumInput() {
    return this._cilium.internalValue;
  }

  // cloud_stack - computed: false, optional: true, required: false
  private _cloudStack = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStackOutputReference(this, "cloud_stack");
  public get cloudStack() {
    return this._cloudStack;
  }
  public putCloudStack(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesCloudStack) {
    this._cloudStack.internalValue = value;
  }
  public resetCloudStack() {
    this._cloudStack.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cloudStackInput() {
    return this._cloudStack.internalValue;
  }

  // cluster_api - computed: false, optional: false, required: true
  private _clusterApi = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApiOutputReference(this, "cluster_api");
  public get clusterApi() {
    return this._clusterApi;
  }
  public putClusterApi(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesClusterApi) {
    this._clusterApi.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterApiInput() {
    return this._clusterApi.internalValue;
  }

  // control_plane - computed: false, optional: false, required: true
  private _controlPlane = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlaneOutputReference(this, "control_plane");
  public get controlPlane() {
    return this._controlPlane;
  }
  public putControlPlane(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesControlPlane) {
    this._controlPlane.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get controlPlaneInput() {
    return this._controlPlane.internalValue;
  }

  // docker - computed: false, optional: false, required: true
  private _docker = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDockerOutputReference(this, "docker");
  public get docker() {
    return this._docker;
  }
  public putDocker(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesDocker) {
    this._docker.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get dockerInput() {
    return this._docker.internalValue;
  }

  // eks_d - computed: false, optional: false, required: true
  private _eksD = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksDOutputReference(this, "eks_d");
  public get eksD() {
    return this._eksD;
  }
  public putEksD(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksD) {
    this._eksD.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get eksDInput() {
    return this._eksD.internalValue;
  }

  // eksa - computed: false, optional: false, required: true
  private _eksa = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksaOutputReference(this, "eksa");
  public get eksa() {
    return this._eksa;
  }
  public putEksa(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEksa) {
    this._eksa.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get eksaInput() {
    return this._eksa.internalValue;
  }

  // etcdadm_bootstrap - computed: false, optional: false, required: true
  private _etcdadmBootstrap = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrapOutputReference(this, "etcdadm_bootstrap");
  public get etcdadmBootstrap() {
    return this._etcdadmBootstrap;
  }
  public putEtcdadmBootstrap(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmBootstrap) {
    this._etcdadmBootstrap.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get etcdadmBootstrapInput() {
    return this._etcdadmBootstrap.internalValue;
  }

  // etcdadm_controller - computed: false, optional: false, required: true
  private _etcdadmController = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmControllerOutputReference(this, "etcdadm_controller");
  public get etcdadmController() {
    return this._etcdadmController;
  }
  public putEtcdadmController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesEtcdadmController) {
    this._etcdadmController.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get etcdadmControllerInput() {
    return this._etcdadmController.internalValue;
  }

  // flux - computed: false, optional: false, required: true
  private _flux = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFluxOutputReference(this, "flux");
  public get flux() {
    return this._flux;
  }
  public putFlux(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesFlux) {
    this._flux.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get fluxInput() {
    return this._flux.internalValue;
  }

  // haproxy - computed: false, optional: true, required: false
  private _haproxy = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxyOutputReference(this, "haproxy");
  public get haproxy() {
    return this._haproxy;
  }
  public putHaproxy(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesHaproxy) {
    this._haproxy.internalValue = value;
  }
  public resetHaproxy() {
    this._haproxy.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get haproxyInput() {
    return this._haproxy.internalValue;
  }

  // kindnetd - computed: false, optional: false, required: true
  private _kindnetd = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetdOutputReference(this, "kindnetd");
  public get kindnetd() {
    return this._kindnetd;
  }
  public putKindnetd(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesKindnetd) {
    this._kindnetd.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kindnetdInput() {
    return this._kindnetd.internalValue;
  }

  // kube_version - computed: false, optional: false, required: true
  private _kubeVersion?: string; 
  public get kubeVersion() {
    return this.getStringAttribute('kube_version');
  }
  public set kubeVersion(value: string) {
    this._kubeVersion = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kubeVersionInput() {
    return this._kubeVersion;
  }

  // nutanix - computed: false, optional: true, required: false
  private _nutanix = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanixOutputReference(this, "nutanix");
  public get nutanix() {
    return this._nutanix;
  }
  public putNutanix(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesNutanix) {
    this._nutanix.internalValue = value;
  }
  public resetNutanix() {
    this._nutanix.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nutanixInput() {
    return this._nutanix.internalValue;
  }

  // package_controller - computed: false, optional: false, required: true
  private _packageController = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageControllerOutputReference(this, "package_controller");
  public get packageController() {
    return this._packageController;
  }
  public putPackageController(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesPackageController) {
    this._packageController.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get packageControllerInput() {
    return this._packageController.internalValue;
  }

  // snow - computed: false, optional: true, required: false
  private _snow = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnowOutputReference(this, "snow");
  public get snow() {
    return this._snow;
  }
  public putSnow(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesSnow) {
    this._snow.internalValue = value;
  }
  public resetSnow() {
    this._snow.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snowInput() {
    return this._snow.internalValue;
  }

  // tinkerbell - computed: false, optional: true, required: false
  private _tinkerbell = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbellOutputReference(this, "tinkerbell");
  public get tinkerbell() {
    return this._tinkerbell;
  }
  public putTinkerbell(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesTinkerbell) {
    this._tinkerbell.internalValue = value;
  }
  public resetTinkerbell() {
    this._tinkerbell.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tinkerbellInput() {
    return this._tinkerbell.internalValue;
  }

  // upgrader - computed: false, optional: true, required: false
  private _upgrader = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgraderOutputReference(this, "upgrader");
  public get upgrader() {
    return this._upgrader;
  }
  public putUpgrader(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesUpgrader) {
    this._upgrader.internalValue = value;
  }
  public resetUpgrader() {
    this._upgrader.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get upgraderInput() {
    return this._upgrader.internalValue;
  }

  // v_sphere - computed: false, optional: false, required: true
  private _vSphere = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphereOutputReference(this, "v_sphere");
  public get vSphere() {
    return this._vSphere;
  }
  public putVSphere(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesVSphere) {
    this._vSphere.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get vSphereInput() {
    return this._vSphere.internalValue;
  }
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesList extends cdktf.ComplexList {
  public internalValue? : DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundles[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesOutputReference {
    return new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpec {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cli_max_version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cli_max_version}
  */
  readonly cliMaxVersion: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#cli_min_version DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#cli_min_version}
  */
  readonly cliMinVersion: string;
  /**
  * Monotonically increasing release number
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#number DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#number}
  */
  readonly number: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#versions_bundles DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest#versions_bundles}
  */
  readonly versionsBundles: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundles[] | cdktf.IResolvable;
}

export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecToTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cli_max_version: cdktf.stringToTerraform(struct!.cliMaxVersion),
    cli_min_version: cdktf.stringToTerraform(struct!.cliMinVersion),
    number: cdktf.numberToTerraform(struct!.number),
    versions_bundles: cdktf.listMapper(dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesToTerraform, false)(struct!.versionsBundles),
  }
}


export function dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecToHclTerraform(struct?: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cli_max_version: {
      value: cdktf.stringToHclTerraform(struct!.cliMaxVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    cli_min_version: {
      value: cdktf.stringToHclTerraform(struct!.cliMinVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    number: {
      value: cdktf.numberToHclTerraform(struct!.number),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    versions_bundles: {
      value: cdktf.listMapperHcl(dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesToHclTerraform, false)(struct!.versionsBundles),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cliMaxVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.cliMaxVersion = this._cliMaxVersion;
    }
    if (this._cliMinVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.cliMinVersion = this._cliMinVersion;
    }
    if (this._number !== undefined) {
      hasAnyValues = true;
      internalValueResult.number = this._number;
    }
    if (this._versionsBundles?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.versionsBundles = this._versionsBundles?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cliMaxVersion = undefined;
      this._cliMinVersion = undefined;
      this._number = undefined;
      this._versionsBundles.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cliMaxVersion = value.cliMaxVersion;
      this._cliMinVersion = value.cliMinVersion;
      this._number = value.number;
      this._versionsBundles.internalValue = value.versionsBundles;
    }
  }

  // cli_max_version - computed: false, optional: false, required: true
  private _cliMaxVersion?: string; 
  public get cliMaxVersion() {
    return this.getStringAttribute('cli_max_version');
  }
  public set cliMaxVersion(value: string) {
    this._cliMaxVersion = value;
  }
  // Temporarily expose input value. Use with caution.
  public get cliMaxVersionInput() {
    return this._cliMaxVersion;
  }

  // cli_min_version - computed: false, optional: false, required: true
  private _cliMinVersion?: string; 
  public get cliMinVersion() {
    return this.getStringAttribute('cli_min_version');
  }
  public set cliMinVersion(value: string) {
    this._cliMinVersion = value;
  }
  // Temporarily expose input value. Use with caution.
  public get cliMinVersionInput() {
    return this._cliMinVersion;
  }

  // number - computed: false, optional: false, required: true
  private _number?: number; 
  public get number() {
    return this.getNumberAttribute('number');
  }
  public set number(value: number) {
    this._number = value;
  }
  // Temporarily expose input value. Use with caution.
  public get numberInput() {
    return this._number;
  }

  // versions_bundles - computed: false, optional: false, required: true
  private _versionsBundles = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundlesList(this, "versions_bundles", false);
  public get versionsBundles() {
    return this._versionsBundles;
  }
  public putVersionsBundles(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecVersionsBundles[] | cdktf.IResolvable) {
    this._versionsBundles.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get versionsBundlesInput() {
    return this._versionsBundles.internalValue;
  }
}

/**
* Represents a {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest k8s_anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest}
*/
export class DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest extends cdktf.TerraformDataSource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "k8s_anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest to import
  * @param importFromId The id of the existing DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest that should be imported. Refer to the {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1Manifest to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "k8s_anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest k8s_anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest} Data Source
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestConfig
  */
  public constructor(scope: Construct, id: string, config: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestConfig) {
    super(scope, id, {
      terraformResourceType: 'k8s_anywhere_eks_amazonaws_com_bundles_v1alpha1_manifest',
      terraformGeneratorMetadata: {
        providerName: 'k8s',
        providerVersion: '2025.10.20'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._metadata.internalValue = config.metadata;
    this._spec.internalValue = config.spec;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }

  // yaml - computed: true, optional: false, required: false
  public get yaml() {
    return this.getStringAttribute('yaml');
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      metadata: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestMetadataToTerraform(this._metadata.internalValue),
      spec: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecToTerraform(this._spec.internalValue),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      metadata: {
        value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestMetadataToHclTerraform(this._metadata.internalValue),
        isBlock: true,
        type: "struct",
        storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestMetadata",
      },
      spec: {
        value: dataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpecToHclTerraform(this._spec.internalValue),
        isBlock: true,
        type: "struct",
        storageClassType: "DataK8SAnywhereEksAmazonawsComBundlesV1Alpha1ManifestSpec",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
