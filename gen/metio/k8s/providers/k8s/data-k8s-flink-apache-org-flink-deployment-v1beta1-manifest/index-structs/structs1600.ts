import * as cdktf from 'cdktf';
import { DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateRunning,
dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateRunningToTerraform,
dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateRunningToHclTerraform,
DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateRunningOutputReference,
DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesLastState,
dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesLastStateToTerraform,
dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesLastStateToHclTerraform,
DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesLastStateOutputReference,
DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesResources,
dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesResourcesToTerraform,
dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesResourcesToHclTerraform,
DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesResourcesOutputReference,
DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusConditions,
dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusConditionsToTerraform,
dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusConditionsToHclTerraform,
DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusConditionsList,
DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateSpec,
dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateSpecToTerraform,
dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateSpecToHclTerraform,
DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateSpecOutputReference } from './structs1200'
import { DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateMetadata,
dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateMetadataToTerraform,
dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateMetadataToHclTerraform,
DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateMetadataOutputReference } from './structs800'
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateTerminated {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#container_id DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#container_id}
  */
  readonly containerId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#exit_code DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#exit_code}
  */
  readonly exitCode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#finished_at DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#finished_at}
  */
  readonly finishedAt?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#message DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#message}
  */
  readonly message?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#reason DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#reason}
  */
  readonly reason?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#signal DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#signal}
  */
  readonly signal?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#started_at DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#started_at}
  */
  readonly startedAt?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateTerminatedToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateTerminated | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_id: cdktf.stringToTerraform(struct!.containerId),
    exit_code: cdktf.numberToTerraform(struct!.exitCode),
    finished_at: cdktf.stringToTerraform(struct!.finishedAt),
    message: cdktf.stringToTerraform(struct!.message),
    reason: cdktf.stringToTerraform(struct!.reason),
    signal: cdktf.numberToTerraform(struct!.signal),
    started_at: cdktf.stringToTerraform(struct!.startedAt),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateTerminatedToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateTerminated | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_id: {
      value: cdktf.stringToHclTerraform(struct!.containerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    exit_code: {
      value: cdktf.numberToHclTerraform(struct!.exitCode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    finished_at: {
      value: cdktf.stringToHclTerraform(struct!.finishedAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    message: {
      value: cdktf.stringToHclTerraform(struct!.message),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reason: {
      value: cdktf.stringToHclTerraform(struct!.reason),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    signal: {
      value: cdktf.numberToHclTerraform(struct!.signal),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    started_at: {
      value: cdktf.stringToHclTerraform(struct!.startedAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateTerminatedOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateTerminated | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerId = this._containerId;
    }
    if (this._exitCode !== undefined) {
      hasAnyValues = true;
      internalValueResult.exitCode = this._exitCode;
    }
    if (this._finishedAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.finishedAt = this._finishedAt;
    }
    if (this._message !== undefined) {
      hasAnyValues = true;
      internalValueResult.message = this._message;
    }
    if (this._reason !== undefined) {
      hasAnyValues = true;
      internalValueResult.reason = this._reason;
    }
    if (this._signal !== undefined) {
      hasAnyValues = true;
      internalValueResult.signal = this._signal;
    }
    if (this._startedAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.startedAt = this._startedAt;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateTerminated | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerId = undefined;
      this._exitCode = undefined;
      this._finishedAt = undefined;
      this._message = undefined;
      this._reason = undefined;
      this._signal = undefined;
      this._startedAt = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerId = value.containerId;
      this._exitCode = value.exitCode;
      this._finishedAt = value.finishedAt;
      this._message = value.message;
      this._reason = value.reason;
      this._signal = value.signal;
      this._startedAt = value.startedAt;
    }
  }

  // container_id - computed: false, optional: true, required: false
  private _containerId?: string; 
  public get containerId() {
    return this.getStringAttribute('container_id');
  }
  public set containerId(value: string) {
    this._containerId = value;
  }
  public resetContainerId() {
    this._containerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerIdInput() {
    return this._containerId;
  }

  // exit_code - computed: false, optional: true, required: false
  private _exitCode?: number; 
  public get exitCode() {
    return this.getNumberAttribute('exit_code');
  }
  public set exitCode(value: number) {
    this._exitCode = value;
  }
  public resetExitCode() {
    this._exitCode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exitCodeInput() {
    return this._exitCode;
  }

  // finished_at - computed: false, optional: true, required: false
  private _finishedAt?: string; 
  public get finishedAt() {
    return this.getStringAttribute('finished_at');
  }
  public set finishedAt(value: string) {
    this._finishedAt = value;
  }
  public resetFinishedAt() {
    this._finishedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get finishedAtInput() {
    return this._finishedAt;
  }

  // message - computed: false, optional: true, required: false
  private _message?: string; 
  public get message() {
    return this.getStringAttribute('message');
  }
  public set message(value: string) {
    this._message = value;
  }
  public resetMessage() {
    this._message = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageInput() {
    return this._message;
  }

  // reason - computed: false, optional: true, required: false
  private _reason?: string; 
  public get reason() {
    return this.getStringAttribute('reason');
  }
  public set reason(value: string) {
    this._reason = value;
  }
  public resetReason() {
    this._reason = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reasonInput() {
    return this._reason;
  }

  // signal - computed: false, optional: true, required: false
  private _signal?: number; 
  public get signal() {
    return this.getNumberAttribute('signal');
  }
  public set signal(value: number) {
    this._signal = value;
  }
  public resetSignal() {
    this._signal = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get signalInput() {
    return this._signal;
  }

  // started_at - computed: false, optional: true, required: false
  private _startedAt?: string; 
  public get startedAt() {
    return this.getStringAttribute('started_at');
  }
  public set startedAt(value: string) {
    this._startedAt = value;
  }
  public resetStartedAt() {
    this._startedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startedAtInput() {
    return this._startedAt;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateWaiting {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#message DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#message}
  */
  readonly message?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#reason DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#reason}
  */
  readonly reason?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateWaitingToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateWaiting | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    message: cdktf.stringToTerraform(struct!.message),
    reason: cdktf.stringToTerraform(struct!.reason),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateWaitingToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateWaiting | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    message: {
      value: cdktf.stringToHclTerraform(struct!.message),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reason: {
      value: cdktf.stringToHclTerraform(struct!.reason),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateWaitingOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateWaiting | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._message !== undefined) {
      hasAnyValues = true;
      internalValueResult.message = this._message;
    }
    if (this._reason !== undefined) {
      hasAnyValues = true;
      internalValueResult.reason = this._reason;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateWaiting | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._message = undefined;
      this._reason = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._message = value.message;
      this._reason = value.reason;
    }
  }

  // message - computed: false, optional: true, required: false
  private _message?: string; 
  public get message() {
    return this.getStringAttribute('message');
  }
  public set message(value: string) {
    this._message = value;
  }
  public resetMessage() {
    this._message = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageInput() {
    return this._message;
  }

  // reason - computed: false, optional: true, required: false
  private _reason?: string; 
  public get reason() {
    return this.getStringAttribute('reason');
  }
  public set reason(value: string) {
    this._reason = value;
  }
  public resetReason() {
    this._reason = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reasonInput() {
    return this._reason;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesState {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#running DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#running}
  */
  readonly running?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateRunning;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#terminated DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#terminated}
  */
  readonly terminated?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateTerminated;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#waiting DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#waiting}
  */
  readonly waiting?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateWaiting;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesState | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    running: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateRunningToTerraform(struct!.running),
    terminated: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateTerminatedToTerraform(struct!.terminated),
    waiting: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateWaitingToTerraform(struct!.waiting),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesState | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    running: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateRunningToHclTerraform(struct!.running),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateRunning",
    },
    terminated: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateTerminatedToHclTerraform(struct!.terminated),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateTerminated",
    },
    waiting: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateWaitingToHclTerraform(struct!.waiting),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateWaiting",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesState | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._running?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.running = this._running?.internalValue;
    }
    if (this._terminated?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.terminated = this._terminated?.internalValue;
    }
    if (this._waiting?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.waiting = this._waiting?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesState | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._running.internalValue = undefined;
      this._terminated.internalValue = undefined;
      this._waiting.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._running.internalValue = value.running;
      this._terminated.internalValue = value.terminated;
      this._waiting.internalValue = value.waiting;
    }
  }

  // running - computed: false, optional: true, required: false
  private _running = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateRunningOutputReference(this, "running");
  public get running() {
    return this._running;
  }
  public putRunning(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateRunning) {
    this._running.internalValue = value;
  }
  public resetRunning() {
    this._running.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runningInput() {
    return this._running.internalValue;
  }

  // terminated - computed: false, optional: true, required: false
  private _terminated = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateTerminatedOutputReference(this, "terminated");
  public get terminated() {
    return this._terminated;
  }
  public putTerminated(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateTerminated) {
    this._terminated.internalValue = value;
  }
  public resetTerminated() {
    this._terminated.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get terminatedInput() {
    return this._terminated.internalValue;
  }

  // waiting - computed: false, optional: true, required: false
  private _waiting = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateWaitingOutputReference(this, "waiting");
  public get waiting() {
    return this._waiting;
  }
  public putWaiting(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateWaiting) {
    this._waiting.internalValue = value;
  }
  public resetWaiting() {
    this._waiting.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get waitingInput() {
    return this._waiting.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMounts {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#mount_path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#mount_path}
  */
  readonly mountPath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#read_only DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#recursive_read_only DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#recursive_read_only}
  */
  readonly recursiveReadOnly?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMountsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    mount_path: cdktf.stringToTerraform(struct!.mountPath),
    name: cdktf.stringToTerraform(struct!.name),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    recursive_read_only: cdktf.stringToTerraform(struct!.recursiveReadOnly),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMountsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    mount_path: {
      value: cdktf.stringToHclTerraform(struct!.mountPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    recursive_read_only: {
      value: cdktf.stringToHclTerraform(struct!.recursiveReadOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMountsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMounts | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._mountPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.mountPath = this._mountPath;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._recursiveReadOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.recursiveReadOnly = this._recursiveReadOnly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMounts | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._mountPath = undefined;
      this._name = undefined;
      this._readOnly = undefined;
      this._recursiveReadOnly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._mountPath = value.mountPath;
      this._name = value.name;
      this._readOnly = value.readOnly;
      this._recursiveReadOnly = value.recursiveReadOnly;
    }
  }

  // mount_path - computed: false, optional: true, required: false
  private _mountPath?: string; 
  public get mountPath() {
    return this.getStringAttribute('mount_path');
  }
  public set mountPath(value: string) {
    this._mountPath = value;
  }
  public resetMountPath() {
    this._mountPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mountPathInput() {
    return this._mountPath;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // recursive_read_only - computed: false, optional: true, required: false
  private _recursiveReadOnly?: string; 
  public get recursiveReadOnly() {
    return this.getStringAttribute('recursive_read_only');
  }
  public set recursiveReadOnly(value: string) {
    this._recursiveReadOnly = value;
  }
  public resetRecursiveReadOnly() {
    this._recursiveReadOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get recursiveReadOnlyInput() {
    return this._recursiveReadOnly;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMountsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMounts[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMountsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMountsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatuses {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#allocated_resources DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#allocated_resources}
  */
  readonly allocatedResources?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#container_id DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#container_id}
  */
  readonly containerId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#image DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#image_id DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#image_id}
  */
  readonly imageId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#last_state DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#last_state}
  */
  readonly lastState?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesLastState;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#ready DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#ready}
  */
  readonly ready?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#resources DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#resources}
  */
  readonly resources?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesResources;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#restart_count DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#restart_count}
  */
  readonly restartCount?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#started DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#started}
  */
  readonly started?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#state DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#state}
  */
  readonly state?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesState;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#volume_mounts DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#volume_mounts}
  */
  readonly volumeMounts?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMounts[] | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatuses | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allocated_resources: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.allocatedResources),
    container_id: cdktf.stringToTerraform(struct!.containerId),
    image: cdktf.stringToTerraform(struct!.image),
    image_id: cdktf.stringToTerraform(struct!.imageId),
    last_state: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesLastStateToTerraform(struct!.lastState),
    name: cdktf.stringToTerraform(struct!.name),
    ready: cdktf.booleanToTerraform(struct!.ready),
    resources: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesResourcesToTerraform(struct!.resources),
    restart_count: cdktf.numberToTerraform(struct!.restartCount),
    started: cdktf.booleanToTerraform(struct!.started),
    state: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateToTerraform(struct!.state),
    volume_mounts: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMountsToTerraform, false)(struct!.volumeMounts),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatuses | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allocated_resources: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.allocatedResources),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    container_id: {
      value: cdktf.stringToHclTerraform(struct!.containerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_id: {
      value: cdktf.stringToHclTerraform(struct!.imageId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    last_state: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesLastStateToHclTerraform(struct!.lastState),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesLastState",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ready: {
      value: cdktf.booleanToHclTerraform(struct!.ready),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    resources: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesResourcesToHclTerraform(struct!.resources),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesResources",
    },
    restart_count: {
      value: cdktf.numberToHclTerraform(struct!.restartCount),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    started: {
      value: cdktf.booleanToHclTerraform(struct!.started),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    state: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateToHclTerraform(struct!.state),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesState",
    },
    volume_mounts: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMountsToHclTerraform, false)(struct!.volumeMounts),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMountsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatuses | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allocatedResources !== undefined) {
      hasAnyValues = true;
      internalValueResult.allocatedResources = this._allocatedResources;
    }
    if (this._containerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerId = this._containerId;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._imageId !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageId = this._imageId;
    }
    if (this._lastState?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.lastState = this._lastState?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._ready !== undefined) {
      hasAnyValues = true;
      internalValueResult.ready = this._ready;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._restartCount !== undefined) {
      hasAnyValues = true;
      internalValueResult.restartCount = this._restartCount;
    }
    if (this._started !== undefined) {
      hasAnyValues = true;
      internalValueResult.started = this._started;
    }
    if (this._state?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.state = this._state?.internalValue;
    }
    if (this._volumeMounts?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeMounts = this._volumeMounts?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatuses | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allocatedResources = undefined;
      this._containerId = undefined;
      this._image = undefined;
      this._imageId = undefined;
      this._lastState.internalValue = undefined;
      this._name = undefined;
      this._ready = undefined;
      this._resources.internalValue = undefined;
      this._restartCount = undefined;
      this._started = undefined;
      this._state.internalValue = undefined;
      this._volumeMounts.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allocatedResources = value.allocatedResources;
      this._containerId = value.containerId;
      this._image = value.image;
      this._imageId = value.imageId;
      this._lastState.internalValue = value.lastState;
      this._name = value.name;
      this._ready = value.ready;
      this._resources.internalValue = value.resources;
      this._restartCount = value.restartCount;
      this._started = value.started;
      this._state.internalValue = value.state;
      this._volumeMounts.internalValue = value.volumeMounts;
    }
  }

  // allocated_resources - computed: false, optional: true, required: false
  private _allocatedResources?: { [key: string]: string }; 
  public get allocatedResources() {
    return this.getStringMapAttribute('allocated_resources');
  }
  public set allocatedResources(value: { [key: string]: string }) {
    this._allocatedResources = value;
  }
  public resetAllocatedResources() {
    this._allocatedResources = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allocatedResourcesInput() {
    return this._allocatedResources;
  }

  // container_id - computed: false, optional: true, required: false
  private _containerId?: string; 
  public get containerId() {
    return this.getStringAttribute('container_id');
  }
  public set containerId(value: string) {
    this._containerId = value;
  }
  public resetContainerId() {
    this._containerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerIdInput() {
    return this._containerId;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // image_id - computed: false, optional: true, required: false
  private _imageId?: string; 
  public get imageId() {
    return this.getStringAttribute('image_id');
  }
  public set imageId(value: string) {
    this._imageId = value;
  }
  public resetImageId() {
    this._imageId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageIdInput() {
    return this._imageId;
  }

  // last_state - computed: false, optional: true, required: false
  private _lastState = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesLastStateOutputReference(this, "last_state");
  public get lastState() {
    return this._lastState;
  }
  public putLastState(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesLastState) {
    this._lastState.internalValue = value;
  }
  public resetLastState() {
    this._lastState.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lastStateInput() {
    return this._lastState.internalValue;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // ready - computed: false, optional: true, required: false
  private _ready?: boolean | cdktf.IResolvable; 
  public get ready() {
    return this.getBooleanAttribute('ready');
  }
  public set ready(value: boolean | cdktf.IResolvable) {
    this._ready = value;
  }
  public resetReady() {
    this._ready = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readyInput() {
    return this._ready;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesResourcesOutputReference(this, "resources");
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesResources) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // restart_count - computed: false, optional: true, required: false
  private _restartCount?: number; 
  public get restartCount() {
    return this.getNumberAttribute('restart_count');
  }
  public set restartCount(value: number) {
    this._restartCount = value;
  }
  public resetRestartCount() {
    this._restartCount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get restartCountInput() {
    return this._restartCount;
  }

  // started - computed: false, optional: true, required: false
  private _started?: boolean | cdktf.IResolvable; 
  public get started() {
    return this.getBooleanAttribute('started');
  }
  public set started(value: boolean | cdktf.IResolvable) {
    this._started = value;
  }
  public resetStarted() {
    this._started = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startedInput() {
    return this._started;
  }

  // state - computed: false, optional: true, required: false
  private _state = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesStateOutputReference(this, "state");
  public get state() {
    return this._state;
  }
  public putState(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesState) {
    this._state.internalValue = value;
  }
  public resetState() {
    this._state.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stateInput() {
    return this._state.internalValue;
  }

  // volume_mounts - computed: false, optional: true, required: false
  private _volumeMounts = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMountsList(this, "volume_mounts", false);
  public get volumeMounts() {
    return this._volumeMounts;
  }
  public putVolumeMounts(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesVolumeMounts[] | cdktf.IResolvable) {
    this._volumeMounts.internalValue = value;
  }
  public resetVolumeMounts() {
    this._volumeMounts.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeMountsInput() {
    return this._volumeMounts.internalValue;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatuses[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateRunning {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#started_at DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#started_at}
  */
  readonly startedAt?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateRunningToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateRunning | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    started_at: cdktf.stringToTerraform(struct!.startedAt),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateRunningToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateRunning | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    started_at: {
      value: cdktf.stringToHclTerraform(struct!.startedAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateRunningOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateRunning | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._startedAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.startedAt = this._startedAt;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateRunning | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._startedAt = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._startedAt = value.startedAt;
    }
  }

  // started_at - computed: false, optional: true, required: false
  private _startedAt?: string; 
  public get startedAt() {
    return this.getStringAttribute('started_at');
  }
  public set startedAt(value: string) {
    this._startedAt = value;
  }
  public resetStartedAt() {
    this._startedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startedAtInput() {
    return this._startedAt;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateTerminated {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#container_id DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#container_id}
  */
  readonly containerId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#exit_code DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#exit_code}
  */
  readonly exitCode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#finished_at DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#finished_at}
  */
  readonly finishedAt?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#message DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#message}
  */
  readonly message?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#reason DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#reason}
  */
  readonly reason?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#signal DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#signal}
  */
  readonly signal?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#started_at DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#started_at}
  */
  readonly startedAt?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateTerminatedToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateTerminated | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_id: cdktf.stringToTerraform(struct!.containerId),
    exit_code: cdktf.numberToTerraform(struct!.exitCode),
    finished_at: cdktf.stringToTerraform(struct!.finishedAt),
    message: cdktf.stringToTerraform(struct!.message),
    reason: cdktf.stringToTerraform(struct!.reason),
    signal: cdktf.numberToTerraform(struct!.signal),
    started_at: cdktf.stringToTerraform(struct!.startedAt),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateTerminatedToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateTerminated | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_id: {
      value: cdktf.stringToHclTerraform(struct!.containerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    exit_code: {
      value: cdktf.numberToHclTerraform(struct!.exitCode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    finished_at: {
      value: cdktf.stringToHclTerraform(struct!.finishedAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    message: {
      value: cdktf.stringToHclTerraform(struct!.message),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reason: {
      value: cdktf.stringToHclTerraform(struct!.reason),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    signal: {
      value: cdktf.numberToHclTerraform(struct!.signal),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    started_at: {
      value: cdktf.stringToHclTerraform(struct!.startedAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateTerminatedOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateTerminated | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerId = this._containerId;
    }
    if (this._exitCode !== undefined) {
      hasAnyValues = true;
      internalValueResult.exitCode = this._exitCode;
    }
    if (this._finishedAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.finishedAt = this._finishedAt;
    }
    if (this._message !== undefined) {
      hasAnyValues = true;
      internalValueResult.message = this._message;
    }
    if (this._reason !== undefined) {
      hasAnyValues = true;
      internalValueResult.reason = this._reason;
    }
    if (this._signal !== undefined) {
      hasAnyValues = true;
      internalValueResult.signal = this._signal;
    }
    if (this._startedAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.startedAt = this._startedAt;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateTerminated | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerId = undefined;
      this._exitCode = undefined;
      this._finishedAt = undefined;
      this._message = undefined;
      this._reason = undefined;
      this._signal = undefined;
      this._startedAt = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerId = value.containerId;
      this._exitCode = value.exitCode;
      this._finishedAt = value.finishedAt;
      this._message = value.message;
      this._reason = value.reason;
      this._signal = value.signal;
      this._startedAt = value.startedAt;
    }
  }

  // container_id - computed: false, optional: true, required: false
  private _containerId?: string; 
  public get containerId() {
    return this.getStringAttribute('container_id');
  }
  public set containerId(value: string) {
    this._containerId = value;
  }
  public resetContainerId() {
    this._containerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerIdInput() {
    return this._containerId;
  }

  // exit_code - computed: false, optional: true, required: false
  private _exitCode?: number; 
  public get exitCode() {
    return this.getNumberAttribute('exit_code');
  }
  public set exitCode(value: number) {
    this._exitCode = value;
  }
  public resetExitCode() {
    this._exitCode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exitCodeInput() {
    return this._exitCode;
  }

  // finished_at - computed: false, optional: true, required: false
  private _finishedAt?: string; 
  public get finishedAt() {
    return this.getStringAttribute('finished_at');
  }
  public set finishedAt(value: string) {
    this._finishedAt = value;
  }
  public resetFinishedAt() {
    this._finishedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get finishedAtInput() {
    return this._finishedAt;
  }

  // message - computed: false, optional: true, required: false
  private _message?: string; 
  public get message() {
    return this.getStringAttribute('message');
  }
  public set message(value: string) {
    this._message = value;
  }
  public resetMessage() {
    this._message = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageInput() {
    return this._message;
  }

  // reason - computed: false, optional: true, required: false
  private _reason?: string; 
  public get reason() {
    return this.getStringAttribute('reason');
  }
  public set reason(value: string) {
    this._reason = value;
  }
  public resetReason() {
    this._reason = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reasonInput() {
    return this._reason;
  }

  // signal - computed: false, optional: true, required: false
  private _signal?: number; 
  public get signal() {
    return this.getNumberAttribute('signal');
  }
  public set signal(value: number) {
    this._signal = value;
  }
  public resetSignal() {
    this._signal = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get signalInput() {
    return this._signal;
  }

  // started_at - computed: false, optional: true, required: false
  private _startedAt?: string; 
  public get startedAt() {
    return this.getStringAttribute('started_at');
  }
  public set startedAt(value: string) {
    this._startedAt = value;
  }
  public resetStartedAt() {
    this._startedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startedAtInput() {
    return this._startedAt;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateWaiting {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#message DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#message}
  */
  readonly message?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#reason DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#reason}
  */
  readonly reason?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateWaitingToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateWaiting | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    message: cdktf.stringToTerraform(struct!.message),
    reason: cdktf.stringToTerraform(struct!.reason),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateWaitingToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateWaiting | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    message: {
      value: cdktf.stringToHclTerraform(struct!.message),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reason: {
      value: cdktf.stringToHclTerraform(struct!.reason),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateWaitingOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateWaiting | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._message !== undefined) {
      hasAnyValues = true;
      internalValueResult.message = this._message;
    }
    if (this._reason !== undefined) {
      hasAnyValues = true;
      internalValueResult.reason = this._reason;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateWaiting | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._message = undefined;
      this._reason = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._message = value.message;
      this._reason = value.reason;
    }
  }

  // message - computed: false, optional: true, required: false
  private _message?: string; 
  public get message() {
    return this.getStringAttribute('message');
  }
  public set message(value: string) {
    this._message = value;
  }
  public resetMessage() {
    this._message = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageInput() {
    return this._message;
  }

  // reason - computed: false, optional: true, required: false
  private _reason?: string; 
  public get reason() {
    return this.getStringAttribute('reason');
  }
  public set reason(value: string) {
    this._reason = value;
  }
  public resetReason() {
    this._reason = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reasonInput() {
    return this._reason;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastState {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#running DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#running}
  */
  readonly running?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateRunning;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#terminated DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#terminated}
  */
  readonly terminated?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateTerminated;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#waiting DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#waiting}
  */
  readonly waiting?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateWaiting;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastState | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    running: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateRunningToTerraform(struct!.running),
    terminated: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateTerminatedToTerraform(struct!.terminated),
    waiting: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateWaitingToTerraform(struct!.waiting),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastState | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    running: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateRunningToHclTerraform(struct!.running),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateRunning",
    },
    terminated: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateTerminatedToHclTerraform(struct!.terminated),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateTerminated",
    },
    waiting: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateWaitingToHclTerraform(struct!.waiting),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateWaiting",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastState | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._running?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.running = this._running?.internalValue;
    }
    if (this._terminated?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.terminated = this._terminated?.internalValue;
    }
    if (this._waiting?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.waiting = this._waiting?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastState | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._running.internalValue = undefined;
      this._terminated.internalValue = undefined;
      this._waiting.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._running.internalValue = value.running;
      this._terminated.internalValue = value.terminated;
      this._waiting.internalValue = value.waiting;
    }
  }

  // running - computed: false, optional: true, required: false
  private _running = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateRunningOutputReference(this, "running");
  public get running() {
    return this._running;
  }
  public putRunning(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateRunning) {
    this._running.internalValue = value;
  }
  public resetRunning() {
    this._running.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runningInput() {
    return this._running.internalValue;
  }

  // terminated - computed: false, optional: true, required: false
  private _terminated = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateTerminatedOutputReference(this, "terminated");
  public get terminated() {
    return this._terminated;
  }
  public putTerminated(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateTerminated) {
    this._terminated.internalValue = value;
  }
  public resetTerminated() {
    this._terminated.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get terminatedInput() {
    return this._terminated.internalValue;
  }

  // waiting - computed: false, optional: true, required: false
  private _waiting = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateWaitingOutputReference(this, "waiting");
  public get waiting() {
    return this._waiting;
  }
  public putWaiting(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateWaiting) {
    this._waiting.internalValue = value;
  }
  public resetWaiting() {
    this._waiting.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get waitingInput() {
    return this._waiting.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaims {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaimsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaimsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaimsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaims | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaims | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaimsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaims[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaimsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaimsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResources {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#claims DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#claims}
  */
  readonly claims?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaims[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#limits DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#limits}
  */
  readonly limits?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#requests DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#requests}
  */
  readonly requests?: { [key: string]: string };
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    claims: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaimsToTerraform, false)(struct!.claims),
    limits: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.limits),
    requests: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.requests),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    claims: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaimsToHclTerraform, false)(struct!.claims),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaimsList",
    },
    limits: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.limits),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    requests: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.requests),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._claims?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.claims = this._claims?.internalValue;
    }
    if (this._limits !== undefined) {
      hasAnyValues = true;
      internalValueResult.limits = this._limits;
    }
    if (this._requests !== undefined) {
      hasAnyValues = true;
      internalValueResult.requests = this._requests;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._claims.internalValue = undefined;
      this._limits = undefined;
      this._requests = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._claims.internalValue = value.claims;
      this._limits = value.limits;
      this._requests = value.requests;
    }
  }

  // claims - computed: false, optional: true, required: false
  private _claims = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaimsList(this, "claims", false);
  public get claims() {
    return this._claims;
  }
  public putClaims(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesClaims[] | cdktf.IResolvable) {
    this._claims.internalValue = value;
  }
  public resetClaims() {
    this._claims.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get claimsInput() {
    return this._claims.internalValue;
  }

  // limits - computed: false, optional: true, required: false
  private _limits?: { [key: string]: string }; 
  public get limits() {
    return this.getStringMapAttribute('limits');
  }
  public set limits(value: { [key: string]: string }) {
    this._limits = value;
  }
  public resetLimits() {
    this._limits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitsInput() {
    return this._limits;
  }

  // requests - computed: false, optional: true, required: false
  private _requests?: { [key: string]: string }; 
  public get requests() {
    return this.getStringMapAttribute('requests');
  }
  public set requests(value: { [key: string]: string }) {
    this._requests = value;
  }
  public resetRequests() {
    this._requests = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestsInput() {
    return this._requests;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateRunning {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#started_at DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#started_at}
  */
  readonly startedAt?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateRunningToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateRunning | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    started_at: cdktf.stringToTerraform(struct!.startedAt),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateRunningToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateRunning | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    started_at: {
      value: cdktf.stringToHclTerraform(struct!.startedAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateRunningOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateRunning | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._startedAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.startedAt = this._startedAt;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateRunning | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._startedAt = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._startedAt = value.startedAt;
    }
  }

  // started_at - computed: false, optional: true, required: false
  private _startedAt?: string; 
  public get startedAt() {
    return this.getStringAttribute('started_at');
  }
  public set startedAt(value: string) {
    this._startedAt = value;
  }
  public resetStartedAt() {
    this._startedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startedAtInput() {
    return this._startedAt;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateTerminated {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#container_id DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#container_id}
  */
  readonly containerId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#exit_code DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#exit_code}
  */
  readonly exitCode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#finished_at DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#finished_at}
  */
  readonly finishedAt?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#message DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#message}
  */
  readonly message?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#reason DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#reason}
  */
  readonly reason?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#signal DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#signal}
  */
  readonly signal?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#started_at DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#started_at}
  */
  readonly startedAt?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateTerminatedToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateTerminated | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_id: cdktf.stringToTerraform(struct!.containerId),
    exit_code: cdktf.numberToTerraform(struct!.exitCode),
    finished_at: cdktf.stringToTerraform(struct!.finishedAt),
    message: cdktf.stringToTerraform(struct!.message),
    reason: cdktf.stringToTerraform(struct!.reason),
    signal: cdktf.numberToTerraform(struct!.signal),
    started_at: cdktf.stringToTerraform(struct!.startedAt),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateTerminatedToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateTerminated | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_id: {
      value: cdktf.stringToHclTerraform(struct!.containerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    exit_code: {
      value: cdktf.numberToHclTerraform(struct!.exitCode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    finished_at: {
      value: cdktf.stringToHclTerraform(struct!.finishedAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    message: {
      value: cdktf.stringToHclTerraform(struct!.message),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reason: {
      value: cdktf.stringToHclTerraform(struct!.reason),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    signal: {
      value: cdktf.numberToHclTerraform(struct!.signal),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    started_at: {
      value: cdktf.stringToHclTerraform(struct!.startedAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateTerminatedOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateTerminated | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerId = this._containerId;
    }
    if (this._exitCode !== undefined) {
      hasAnyValues = true;
      internalValueResult.exitCode = this._exitCode;
    }
    if (this._finishedAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.finishedAt = this._finishedAt;
    }
    if (this._message !== undefined) {
      hasAnyValues = true;
      internalValueResult.message = this._message;
    }
    if (this._reason !== undefined) {
      hasAnyValues = true;
      internalValueResult.reason = this._reason;
    }
    if (this._signal !== undefined) {
      hasAnyValues = true;
      internalValueResult.signal = this._signal;
    }
    if (this._startedAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.startedAt = this._startedAt;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateTerminated | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerId = undefined;
      this._exitCode = undefined;
      this._finishedAt = undefined;
      this._message = undefined;
      this._reason = undefined;
      this._signal = undefined;
      this._startedAt = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerId = value.containerId;
      this._exitCode = value.exitCode;
      this._finishedAt = value.finishedAt;
      this._message = value.message;
      this._reason = value.reason;
      this._signal = value.signal;
      this._startedAt = value.startedAt;
    }
  }

  // container_id - computed: false, optional: true, required: false
  private _containerId?: string; 
  public get containerId() {
    return this.getStringAttribute('container_id');
  }
  public set containerId(value: string) {
    this._containerId = value;
  }
  public resetContainerId() {
    this._containerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerIdInput() {
    return this._containerId;
  }

  // exit_code - computed: false, optional: true, required: false
  private _exitCode?: number; 
  public get exitCode() {
    return this.getNumberAttribute('exit_code');
  }
  public set exitCode(value: number) {
    this._exitCode = value;
  }
  public resetExitCode() {
    this._exitCode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exitCodeInput() {
    return this._exitCode;
  }

  // finished_at - computed: false, optional: true, required: false
  private _finishedAt?: string; 
  public get finishedAt() {
    return this.getStringAttribute('finished_at');
  }
  public set finishedAt(value: string) {
    this._finishedAt = value;
  }
  public resetFinishedAt() {
    this._finishedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get finishedAtInput() {
    return this._finishedAt;
  }

  // message - computed: false, optional: true, required: false
  private _message?: string; 
  public get message() {
    return this.getStringAttribute('message');
  }
  public set message(value: string) {
    this._message = value;
  }
  public resetMessage() {
    this._message = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageInput() {
    return this._message;
  }

  // reason - computed: false, optional: true, required: false
  private _reason?: string; 
  public get reason() {
    return this.getStringAttribute('reason');
  }
  public set reason(value: string) {
    this._reason = value;
  }
  public resetReason() {
    this._reason = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reasonInput() {
    return this._reason;
  }

  // signal - computed: false, optional: true, required: false
  private _signal?: number; 
  public get signal() {
    return this.getNumberAttribute('signal');
  }
  public set signal(value: number) {
    this._signal = value;
  }
  public resetSignal() {
    this._signal = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get signalInput() {
    return this._signal;
  }

  // started_at - computed: false, optional: true, required: false
  private _startedAt?: string; 
  public get startedAt() {
    return this.getStringAttribute('started_at');
  }
  public set startedAt(value: string) {
    this._startedAt = value;
  }
  public resetStartedAt() {
    this._startedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startedAtInput() {
    return this._startedAt;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateWaiting {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#message DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#message}
  */
  readonly message?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#reason DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#reason}
  */
  readonly reason?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateWaitingToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateWaiting | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    message: cdktf.stringToTerraform(struct!.message),
    reason: cdktf.stringToTerraform(struct!.reason),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateWaitingToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateWaiting | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    message: {
      value: cdktf.stringToHclTerraform(struct!.message),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reason: {
      value: cdktf.stringToHclTerraform(struct!.reason),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateWaitingOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateWaiting | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._message !== undefined) {
      hasAnyValues = true;
      internalValueResult.message = this._message;
    }
    if (this._reason !== undefined) {
      hasAnyValues = true;
      internalValueResult.reason = this._reason;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateWaiting | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._message = undefined;
      this._reason = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._message = value.message;
      this._reason = value.reason;
    }
  }

  // message - computed: false, optional: true, required: false
  private _message?: string; 
  public get message() {
    return this.getStringAttribute('message');
  }
  public set message(value: string) {
    this._message = value;
  }
  public resetMessage() {
    this._message = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageInput() {
    return this._message;
  }

  // reason - computed: false, optional: true, required: false
  private _reason?: string; 
  public get reason() {
    return this.getStringAttribute('reason');
  }
  public set reason(value: string) {
    this._reason = value;
  }
  public resetReason() {
    this._reason = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reasonInput() {
    return this._reason;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesState {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#running DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#running}
  */
  readonly running?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateRunning;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#terminated DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#terminated}
  */
  readonly terminated?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateTerminated;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#waiting DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#waiting}
  */
  readonly waiting?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateWaiting;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesState | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    running: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateRunningToTerraform(struct!.running),
    terminated: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateTerminatedToTerraform(struct!.terminated),
    waiting: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateWaitingToTerraform(struct!.waiting),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesState | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    running: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateRunningToHclTerraform(struct!.running),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateRunning",
    },
    terminated: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateTerminatedToHclTerraform(struct!.terminated),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateTerminated",
    },
    waiting: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateWaitingToHclTerraform(struct!.waiting),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateWaiting",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesState | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._running?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.running = this._running?.internalValue;
    }
    if (this._terminated?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.terminated = this._terminated?.internalValue;
    }
    if (this._waiting?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.waiting = this._waiting?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesState | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._running.internalValue = undefined;
      this._terminated.internalValue = undefined;
      this._waiting.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._running.internalValue = value.running;
      this._terminated.internalValue = value.terminated;
      this._waiting.internalValue = value.waiting;
    }
  }

  // running - computed: false, optional: true, required: false
  private _running = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateRunningOutputReference(this, "running");
  public get running() {
    return this._running;
  }
  public putRunning(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateRunning) {
    this._running.internalValue = value;
  }
  public resetRunning() {
    this._running.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runningInput() {
    return this._running.internalValue;
  }

  // terminated - computed: false, optional: true, required: false
  private _terminated = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateTerminatedOutputReference(this, "terminated");
  public get terminated() {
    return this._terminated;
  }
  public putTerminated(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateTerminated) {
    this._terminated.internalValue = value;
  }
  public resetTerminated() {
    this._terminated.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get terminatedInput() {
    return this._terminated.internalValue;
  }

  // waiting - computed: false, optional: true, required: false
  private _waiting = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateWaitingOutputReference(this, "waiting");
  public get waiting() {
    return this._waiting;
  }
  public putWaiting(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateWaiting) {
    this._waiting.internalValue = value;
  }
  public resetWaiting() {
    this._waiting.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get waitingInput() {
    return this._waiting.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMounts {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#mount_path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#mount_path}
  */
  readonly mountPath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#read_only DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#recursive_read_only DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#recursive_read_only}
  */
  readonly recursiveReadOnly?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMountsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    mount_path: cdktf.stringToTerraform(struct!.mountPath),
    name: cdktf.stringToTerraform(struct!.name),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    recursive_read_only: cdktf.stringToTerraform(struct!.recursiveReadOnly),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMountsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    mount_path: {
      value: cdktf.stringToHclTerraform(struct!.mountPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    recursive_read_only: {
      value: cdktf.stringToHclTerraform(struct!.recursiveReadOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMountsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMounts | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._mountPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.mountPath = this._mountPath;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._recursiveReadOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.recursiveReadOnly = this._recursiveReadOnly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMounts | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._mountPath = undefined;
      this._name = undefined;
      this._readOnly = undefined;
      this._recursiveReadOnly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._mountPath = value.mountPath;
      this._name = value.name;
      this._readOnly = value.readOnly;
      this._recursiveReadOnly = value.recursiveReadOnly;
    }
  }

  // mount_path - computed: false, optional: true, required: false
  private _mountPath?: string; 
  public get mountPath() {
    return this.getStringAttribute('mount_path');
  }
  public set mountPath(value: string) {
    this._mountPath = value;
  }
  public resetMountPath() {
    this._mountPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mountPathInput() {
    return this._mountPath;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // recursive_read_only - computed: false, optional: true, required: false
  private _recursiveReadOnly?: string; 
  public get recursiveReadOnly() {
    return this.getStringAttribute('recursive_read_only');
  }
  public set recursiveReadOnly(value: string) {
    this._recursiveReadOnly = value;
  }
  public resetRecursiveReadOnly() {
    this._recursiveReadOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get recursiveReadOnlyInput() {
    return this._recursiveReadOnly;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMountsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMounts[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMountsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMountsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatuses {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#allocated_resources DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#allocated_resources}
  */
  readonly allocatedResources?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#container_id DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#container_id}
  */
  readonly containerId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#image DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#image_id DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#image_id}
  */
  readonly imageId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#last_state DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#last_state}
  */
  readonly lastState?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastState;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#ready DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#ready}
  */
  readonly ready?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#resources DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#resources}
  */
  readonly resources?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResources;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#restart_count DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#restart_count}
  */
  readonly restartCount?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#started DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#started}
  */
  readonly started?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#state DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#state}
  */
  readonly state?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesState;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#volume_mounts DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#volume_mounts}
  */
  readonly volumeMounts?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMounts[] | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatuses | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allocated_resources: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.allocatedResources),
    container_id: cdktf.stringToTerraform(struct!.containerId),
    image: cdktf.stringToTerraform(struct!.image),
    image_id: cdktf.stringToTerraform(struct!.imageId),
    last_state: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateToTerraform(struct!.lastState),
    name: cdktf.stringToTerraform(struct!.name),
    ready: cdktf.booleanToTerraform(struct!.ready),
    resources: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesToTerraform(struct!.resources),
    restart_count: cdktf.numberToTerraform(struct!.restartCount),
    started: cdktf.booleanToTerraform(struct!.started),
    state: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateToTerraform(struct!.state),
    volume_mounts: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMountsToTerraform, false)(struct!.volumeMounts),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatuses | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allocated_resources: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.allocatedResources),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    container_id: {
      value: cdktf.stringToHclTerraform(struct!.containerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_id: {
      value: cdktf.stringToHclTerraform(struct!.imageId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    last_state: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateToHclTerraform(struct!.lastState),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastState",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ready: {
      value: cdktf.booleanToHclTerraform(struct!.ready),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    resources: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesToHclTerraform(struct!.resources),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResources",
    },
    restart_count: {
      value: cdktf.numberToHclTerraform(struct!.restartCount),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    started: {
      value: cdktf.booleanToHclTerraform(struct!.started),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    state: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateToHclTerraform(struct!.state),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesState",
    },
    volume_mounts: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMountsToHclTerraform, false)(struct!.volumeMounts),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMountsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatuses | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allocatedResources !== undefined) {
      hasAnyValues = true;
      internalValueResult.allocatedResources = this._allocatedResources;
    }
    if (this._containerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerId = this._containerId;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._imageId !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageId = this._imageId;
    }
    if (this._lastState?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.lastState = this._lastState?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._ready !== undefined) {
      hasAnyValues = true;
      internalValueResult.ready = this._ready;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._restartCount !== undefined) {
      hasAnyValues = true;
      internalValueResult.restartCount = this._restartCount;
    }
    if (this._started !== undefined) {
      hasAnyValues = true;
      internalValueResult.started = this._started;
    }
    if (this._state?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.state = this._state?.internalValue;
    }
    if (this._volumeMounts?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeMounts = this._volumeMounts?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatuses | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allocatedResources = undefined;
      this._containerId = undefined;
      this._image = undefined;
      this._imageId = undefined;
      this._lastState.internalValue = undefined;
      this._name = undefined;
      this._ready = undefined;
      this._resources.internalValue = undefined;
      this._restartCount = undefined;
      this._started = undefined;
      this._state.internalValue = undefined;
      this._volumeMounts.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allocatedResources = value.allocatedResources;
      this._containerId = value.containerId;
      this._image = value.image;
      this._imageId = value.imageId;
      this._lastState.internalValue = value.lastState;
      this._name = value.name;
      this._ready = value.ready;
      this._resources.internalValue = value.resources;
      this._restartCount = value.restartCount;
      this._started = value.started;
      this._state.internalValue = value.state;
      this._volumeMounts.internalValue = value.volumeMounts;
    }
  }

  // allocated_resources - computed: false, optional: true, required: false
  private _allocatedResources?: { [key: string]: string }; 
  public get allocatedResources() {
    return this.getStringMapAttribute('allocated_resources');
  }
  public set allocatedResources(value: { [key: string]: string }) {
    this._allocatedResources = value;
  }
  public resetAllocatedResources() {
    this._allocatedResources = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allocatedResourcesInput() {
    return this._allocatedResources;
  }

  // container_id - computed: false, optional: true, required: false
  private _containerId?: string; 
  public get containerId() {
    return this.getStringAttribute('container_id');
  }
  public set containerId(value: string) {
    this._containerId = value;
  }
  public resetContainerId() {
    this._containerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerIdInput() {
    return this._containerId;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // image_id - computed: false, optional: true, required: false
  private _imageId?: string; 
  public get imageId() {
    return this.getStringAttribute('image_id');
  }
  public set imageId(value: string) {
    this._imageId = value;
  }
  public resetImageId() {
    this._imageId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageIdInput() {
    return this._imageId;
  }

  // last_state - computed: false, optional: true, required: false
  private _lastState = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastStateOutputReference(this, "last_state");
  public get lastState() {
    return this._lastState;
  }
  public putLastState(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesLastState) {
    this._lastState.internalValue = value;
  }
  public resetLastState() {
    this._lastState.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lastStateInput() {
    return this._lastState.internalValue;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // ready - computed: false, optional: true, required: false
  private _ready?: boolean | cdktf.IResolvable; 
  public get ready() {
    return this.getBooleanAttribute('ready');
  }
  public set ready(value: boolean | cdktf.IResolvable) {
    this._ready = value;
  }
  public resetReady() {
    this._ready = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readyInput() {
    return this._ready;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResourcesOutputReference(this, "resources");
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesResources) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // restart_count - computed: false, optional: true, required: false
  private _restartCount?: number; 
  public get restartCount() {
    return this.getNumberAttribute('restart_count');
  }
  public set restartCount(value: number) {
    this._restartCount = value;
  }
  public resetRestartCount() {
    this._restartCount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get restartCountInput() {
    return this._restartCount;
  }

  // started - computed: false, optional: true, required: false
  private _started?: boolean | cdktf.IResolvable; 
  public get started() {
    return this.getBooleanAttribute('started');
  }
  public set started(value: boolean | cdktf.IResolvable) {
    this._started = value;
  }
  public resetStarted() {
    this._started = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startedInput() {
    return this._started;
  }

  // state - computed: false, optional: true, required: false
  private _state = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesStateOutputReference(this, "state");
  public get state() {
    return this._state;
  }
  public putState(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesState) {
    this._state.internalValue = value;
  }
  public resetState() {
    this._state.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stateInput() {
    return this._state.internalValue;
  }

  // volume_mounts - computed: false, optional: true, required: false
  private _volumeMounts = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMountsList(this, "volume_mounts", false);
  public get volumeMounts() {
    return this._volumeMounts;
  }
  public putVolumeMounts(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesVolumeMounts[] | cdktf.IResolvable) {
    this._volumeMounts.internalValue = value;
  }
  public resetVolumeMounts() {
    this._volumeMounts.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeMountsInput() {
    return this._volumeMounts.internalValue;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatuses[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#ip DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#ip}
  */
  readonly ip?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ip: cdktf.stringToTerraform(struct!.ip),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ip: {
      value: cdktf.stringToHclTerraform(struct!.ip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._ip !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip = this._ip;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._ip = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._ip = value.ip;
    }
  }

  // ip - computed: false, optional: true, required: false
  private _ip?: string; 
  public get ip() {
    return this.getStringAttribute('ip');
  }
  public set ip(value: string) {
    this._ip = value;
  }
  public resetIp() {
    this._ip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipInput() {
    return this._ip;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPs[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateRunning {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#started_at DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#started_at}
  */
  readonly startedAt?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateRunningToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateRunning | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    started_at: cdktf.stringToTerraform(struct!.startedAt),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateRunningToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateRunning | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    started_at: {
      value: cdktf.stringToHclTerraform(struct!.startedAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateRunningOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateRunning | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._startedAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.startedAt = this._startedAt;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateRunning | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._startedAt = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._startedAt = value.startedAt;
    }
  }

  // started_at - computed: false, optional: true, required: false
  private _startedAt?: string; 
  public get startedAt() {
    return this.getStringAttribute('started_at');
  }
  public set startedAt(value: string) {
    this._startedAt = value;
  }
  public resetStartedAt() {
    this._startedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startedAtInput() {
    return this._startedAt;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateTerminated {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#container_id DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#container_id}
  */
  readonly containerId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#exit_code DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#exit_code}
  */
  readonly exitCode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#finished_at DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#finished_at}
  */
  readonly finishedAt?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#message DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#message}
  */
  readonly message?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#reason DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#reason}
  */
  readonly reason?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#signal DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#signal}
  */
  readonly signal?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#started_at DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#started_at}
  */
  readonly startedAt?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateTerminatedToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateTerminated | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_id: cdktf.stringToTerraform(struct!.containerId),
    exit_code: cdktf.numberToTerraform(struct!.exitCode),
    finished_at: cdktf.stringToTerraform(struct!.finishedAt),
    message: cdktf.stringToTerraform(struct!.message),
    reason: cdktf.stringToTerraform(struct!.reason),
    signal: cdktf.numberToTerraform(struct!.signal),
    started_at: cdktf.stringToTerraform(struct!.startedAt),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateTerminatedToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateTerminated | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_id: {
      value: cdktf.stringToHclTerraform(struct!.containerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    exit_code: {
      value: cdktf.numberToHclTerraform(struct!.exitCode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    finished_at: {
      value: cdktf.stringToHclTerraform(struct!.finishedAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    message: {
      value: cdktf.stringToHclTerraform(struct!.message),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reason: {
      value: cdktf.stringToHclTerraform(struct!.reason),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    signal: {
      value: cdktf.numberToHclTerraform(struct!.signal),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    started_at: {
      value: cdktf.stringToHclTerraform(struct!.startedAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateTerminatedOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateTerminated | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerId = this._containerId;
    }
    if (this._exitCode !== undefined) {
      hasAnyValues = true;
      internalValueResult.exitCode = this._exitCode;
    }
    if (this._finishedAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.finishedAt = this._finishedAt;
    }
    if (this._message !== undefined) {
      hasAnyValues = true;
      internalValueResult.message = this._message;
    }
    if (this._reason !== undefined) {
      hasAnyValues = true;
      internalValueResult.reason = this._reason;
    }
    if (this._signal !== undefined) {
      hasAnyValues = true;
      internalValueResult.signal = this._signal;
    }
    if (this._startedAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.startedAt = this._startedAt;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateTerminated | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerId = undefined;
      this._exitCode = undefined;
      this._finishedAt = undefined;
      this._message = undefined;
      this._reason = undefined;
      this._signal = undefined;
      this._startedAt = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerId = value.containerId;
      this._exitCode = value.exitCode;
      this._finishedAt = value.finishedAt;
      this._message = value.message;
      this._reason = value.reason;
      this._signal = value.signal;
      this._startedAt = value.startedAt;
    }
  }

  // container_id - computed: false, optional: true, required: false
  private _containerId?: string; 
  public get containerId() {
    return this.getStringAttribute('container_id');
  }
  public set containerId(value: string) {
    this._containerId = value;
  }
  public resetContainerId() {
    this._containerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerIdInput() {
    return this._containerId;
  }

  // exit_code - computed: false, optional: true, required: false
  private _exitCode?: number; 
  public get exitCode() {
    return this.getNumberAttribute('exit_code');
  }
  public set exitCode(value: number) {
    this._exitCode = value;
  }
  public resetExitCode() {
    this._exitCode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exitCodeInput() {
    return this._exitCode;
  }

  // finished_at - computed: false, optional: true, required: false
  private _finishedAt?: string; 
  public get finishedAt() {
    return this.getStringAttribute('finished_at');
  }
  public set finishedAt(value: string) {
    this._finishedAt = value;
  }
  public resetFinishedAt() {
    this._finishedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get finishedAtInput() {
    return this._finishedAt;
  }

  // message - computed: false, optional: true, required: false
  private _message?: string; 
  public get message() {
    return this.getStringAttribute('message');
  }
  public set message(value: string) {
    this._message = value;
  }
  public resetMessage() {
    this._message = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageInput() {
    return this._message;
  }

  // reason - computed: false, optional: true, required: false
  private _reason?: string; 
  public get reason() {
    return this.getStringAttribute('reason');
  }
  public set reason(value: string) {
    this._reason = value;
  }
  public resetReason() {
    this._reason = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reasonInput() {
    return this._reason;
  }

  // signal - computed: false, optional: true, required: false
  private _signal?: number; 
  public get signal() {
    return this.getNumberAttribute('signal');
  }
  public set signal(value: number) {
    this._signal = value;
  }
  public resetSignal() {
    this._signal = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get signalInput() {
    return this._signal;
  }

  // started_at - computed: false, optional: true, required: false
  private _startedAt?: string; 
  public get startedAt() {
    return this.getStringAttribute('started_at');
  }
  public set startedAt(value: string) {
    this._startedAt = value;
  }
  public resetStartedAt() {
    this._startedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startedAtInput() {
    return this._startedAt;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateWaiting {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#message DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#message}
  */
  readonly message?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#reason DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#reason}
  */
  readonly reason?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateWaitingToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateWaiting | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    message: cdktf.stringToTerraform(struct!.message),
    reason: cdktf.stringToTerraform(struct!.reason),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateWaitingToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateWaiting | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    message: {
      value: cdktf.stringToHclTerraform(struct!.message),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reason: {
      value: cdktf.stringToHclTerraform(struct!.reason),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateWaitingOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateWaiting | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._message !== undefined) {
      hasAnyValues = true;
      internalValueResult.message = this._message;
    }
    if (this._reason !== undefined) {
      hasAnyValues = true;
      internalValueResult.reason = this._reason;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateWaiting | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._message = undefined;
      this._reason = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._message = value.message;
      this._reason = value.reason;
    }
  }

  // message - computed: false, optional: true, required: false
  private _message?: string; 
  public get message() {
    return this.getStringAttribute('message');
  }
  public set message(value: string) {
    this._message = value;
  }
  public resetMessage() {
    this._message = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageInput() {
    return this._message;
  }

  // reason - computed: false, optional: true, required: false
  private _reason?: string; 
  public get reason() {
    return this.getStringAttribute('reason');
  }
  public set reason(value: string) {
    this._reason = value;
  }
  public resetReason() {
    this._reason = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reasonInput() {
    return this._reason;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastState {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#running DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#running}
  */
  readonly running?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateRunning;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#terminated DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#terminated}
  */
  readonly terminated?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateTerminated;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#waiting DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#waiting}
  */
  readonly waiting?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateWaiting;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastState | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    running: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateRunningToTerraform(struct!.running),
    terminated: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateTerminatedToTerraform(struct!.terminated),
    waiting: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateWaitingToTerraform(struct!.waiting),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastState | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    running: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateRunningToHclTerraform(struct!.running),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateRunning",
    },
    terminated: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateTerminatedToHclTerraform(struct!.terminated),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateTerminated",
    },
    waiting: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateWaitingToHclTerraform(struct!.waiting),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateWaiting",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastState | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._running?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.running = this._running?.internalValue;
    }
    if (this._terminated?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.terminated = this._terminated?.internalValue;
    }
    if (this._waiting?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.waiting = this._waiting?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastState | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._running.internalValue = undefined;
      this._terminated.internalValue = undefined;
      this._waiting.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._running.internalValue = value.running;
      this._terminated.internalValue = value.terminated;
      this._waiting.internalValue = value.waiting;
    }
  }

  // running - computed: false, optional: true, required: false
  private _running = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateRunningOutputReference(this, "running");
  public get running() {
    return this._running;
  }
  public putRunning(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateRunning) {
    this._running.internalValue = value;
  }
  public resetRunning() {
    this._running.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runningInput() {
    return this._running.internalValue;
  }

  // terminated - computed: false, optional: true, required: false
  private _terminated = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateTerminatedOutputReference(this, "terminated");
  public get terminated() {
    return this._terminated;
  }
  public putTerminated(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateTerminated) {
    this._terminated.internalValue = value;
  }
  public resetTerminated() {
    this._terminated.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get terminatedInput() {
    return this._terminated.internalValue;
  }

  // waiting - computed: false, optional: true, required: false
  private _waiting = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateWaitingOutputReference(this, "waiting");
  public get waiting() {
    return this._waiting;
  }
  public putWaiting(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateWaiting) {
    this._waiting.internalValue = value;
  }
  public resetWaiting() {
    this._waiting.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get waitingInput() {
    return this._waiting.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaims {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaimsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaimsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaimsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaims | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaims | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaimsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaims[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaimsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaimsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResources {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#claims DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#claims}
  */
  readonly claims?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaims[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#limits DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#limits}
  */
  readonly limits?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#requests DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#requests}
  */
  readonly requests?: { [key: string]: string };
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    claims: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaimsToTerraform, false)(struct!.claims),
    limits: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.limits),
    requests: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.requests),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    claims: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaimsToHclTerraform, false)(struct!.claims),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaimsList",
    },
    limits: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.limits),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    requests: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.requests),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._claims?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.claims = this._claims?.internalValue;
    }
    if (this._limits !== undefined) {
      hasAnyValues = true;
      internalValueResult.limits = this._limits;
    }
    if (this._requests !== undefined) {
      hasAnyValues = true;
      internalValueResult.requests = this._requests;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._claims.internalValue = undefined;
      this._limits = undefined;
      this._requests = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._claims.internalValue = value.claims;
      this._limits = value.limits;
      this._requests = value.requests;
    }
  }

  // claims - computed: false, optional: true, required: false
  private _claims = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaimsList(this, "claims", false);
  public get claims() {
    return this._claims;
  }
  public putClaims(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesClaims[] | cdktf.IResolvable) {
    this._claims.internalValue = value;
  }
  public resetClaims() {
    this._claims.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get claimsInput() {
    return this._claims.internalValue;
  }

  // limits - computed: false, optional: true, required: false
  private _limits?: { [key: string]: string }; 
  public get limits() {
    return this.getStringMapAttribute('limits');
  }
  public set limits(value: { [key: string]: string }) {
    this._limits = value;
  }
  public resetLimits() {
    this._limits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitsInput() {
    return this._limits;
  }

  // requests - computed: false, optional: true, required: false
  private _requests?: { [key: string]: string }; 
  public get requests() {
    return this.getStringMapAttribute('requests');
  }
  public set requests(value: { [key: string]: string }) {
    this._requests = value;
  }
  public resetRequests() {
    this._requests = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestsInput() {
    return this._requests;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateRunning {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#started_at DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#started_at}
  */
  readonly startedAt?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateRunningToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateRunning | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    started_at: cdktf.stringToTerraform(struct!.startedAt),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateRunningToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateRunning | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    started_at: {
      value: cdktf.stringToHclTerraform(struct!.startedAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateRunningOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateRunning | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._startedAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.startedAt = this._startedAt;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateRunning | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._startedAt = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._startedAt = value.startedAt;
    }
  }

  // started_at - computed: false, optional: true, required: false
  private _startedAt?: string; 
  public get startedAt() {
    return this.getStringAttribute('started_at');
  }
  public set startedAt(value: string) {
    this._startedAt = value;
  }
  public resetStartedAt() {
    this._startedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startedAtInput() {
    return this._startedAt;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateTerminated {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#container_id DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#container_id}
  */
  readonly containerId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#exit_code DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#exit_code}
  */
  readonly exitCode?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#finished_at DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#finished_at}
  */
  readonly finishedAt?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#message DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#message}
  */
  readonly message?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#reason DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#reason}
  */
  readonly reason?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#signal DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#signal}
  */
  readonly signal?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#started_at DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#started_at}
  */
  readonly startedAt?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateTerminatedToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateTerminated | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_id: cdktf.stringToTerraform(struct!.containerId),
    exit_code: cdktf.numberToTerraform(struct!.exitCode),
    finished_at: cdktf.stringToTerraform(struct!.finishedAt),
    message: cdktf.stringToTerraform(struct!.message),
    reason: cdktf.stringToTerraform(struct!.reason),
    signal: cdktf.numberToTerraform(struct!.signal),
    started_at: cdktf.stringToTerraform(struct!.startedAt),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateTerminatedToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateTerminated | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_id: {
      value: cdktf.stringToHclTerraform(struct!.containerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    exit_code: {
      value: cdktf.numberToHclTerraform(struct!.exitCode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    finished_at: {
      value: cdktf.stringToHclTerraform(struct!.finishedAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    message: {
      value: cdktf.stringToHclTerraform(struct!.message),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reason: {
      value: cdktf.stringToHclTerraform(struct!.reason),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    signal: {
      value: cdktf.numberToHclTerraform(struct!.signal),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    started_at: {
      value: cdktf.stringToHclTerraform(struct!.startedAt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateTerminatedOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateTerminated | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerId = this._containerId;
    }
    if (this._exitCode !== undefined) {
      hasAnyValues = true;
      internalValueResult.exitCode = this._exitCode;
    }
    if (this._finishedAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.finishedAt = this._finishedAt;
    }
    if (this._message !== undefined) {
      hasAnyValues = true;
      internalValueResult.message = this._message;
    }
    if (this._reason !== undefined) {
      hasAnyValues = true;
      internalValueResult.reason = this._reason;
    }
    if (this._signal !== undefined) {
      hasAnyValues = true;
      internalValueResult.signal = this._signal;
    }
    if (this._startedAt !== undefined) {
      hasAnyValues = true;
      internalValueResult.startedAt = this._startedAt;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateTerminated | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerId = undefined;
      this._exitCode = undefined;
      this._finishedAt = undefined;
      this._message = undefined;
      this._reason = undefined;
      this._signal = undefined;
      this._startedAt = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerId = value.containerId;
      this._exitCode = value.exitCode;
      this._finishedAt = value.finishedAt;
      this._message = value.message;
      this._reason = value.reason;
      this._signal = value.signal;
      this._startedAt = value.startedAt;
    }
  }

  // container_id - computed: false, optional: true, required: false
  private _containerId?: string; 
  public get containerId() {
    return this.getStringAttribute('container_id');
  }
  public set containerId(value: string) {
    this._containerId = value;
  }
  public resetContainerId() {
    this._containerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerIdInput() {
    return this._containerId;
  }

  // exit_code - computed: false, optional: true, required: false
  private _exitCode?: number; 
  public get exitCode() {
    return this.getNumberAttribute('exit_code');
  }
  public set exitCode(value: number) {
    this._exitCode = value;
  }
  public resetExitCode() {
    this._exitCode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exitCodeInput() {
    return this._exitCode;
  }

  // finished_at - computed: false, optional: true, required: false
  private _finishedAt?: string; 
  public get finishedAt() {
    return this.getStringAttribute('finished_at');
  }
  public set finishedAt(value: string) {
    this._finishedAt = value;
  }
  public resetFinishedAt() {
    this._finishedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get finishedAtInput() {
    return this._finishedAt;
  }

  // message - computed: false, optional: true, required: false
  private _message?: string; 
  public get message() {
    return this.getStringAttribute('message');
  }
  public set message(value: string) {
    this._message = value;
  }
  public resetMessage() {
    this._message = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageInput() {
    return this._message;
  }

  // reason - computed: false, optional: true, required: false
  private _reason?: string; 
  public get reason() {
    return this.getStringAttribute('reason');
  }
  public set reason(value: string) {
    this._reason = value;
  }
  public resetReason() {
    this._reason = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reasonInput() {
    return this._reason;
  }

  // signal - computed: false, optional: true, required: false
  private _signal?: number; 
  public get signal() {
    return this.getNumberAttribute('signal');
  }
  public set signal(value: number) {
    this._signal = value;
  }
  public resetSignal() {
    this._signal = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get signalInput() {
    return this._signal;
  }

  // started_at - computed: false, optional: true, required: false
  private _startedAt?: string; 
  public get startedAt() {
    return this.getStringAttribute('started_at');
  }
  public set startedAt(value: string) {
    this._startedAt = value;
  }
  public resetStartedAt() {
    this._startedAt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startedAtInput() {
    return this._startedAt;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateWaiting {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#message DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#message}
  */
  readonly message?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#reason DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#reason}
  */
  readonly reason?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateWaitingToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateWaiting | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    message: cdktf.stringToTerraform(struct!.message),
    reason: cdktf.stringToTerraform(struct!.reason),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateWaitingToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateWaiting | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    message: {
      value: cdktf.stringToHclTerraform(struct!.message),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reason: {
      value: cdktf.stringToHclTerraform(struct!.reason),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateWaitingOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateWaiting | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._message !== undefined) {
      hasAnyValues = true;
      internalValueResult.message = this._message;
    }
    if (this._reason !== undefined) {
      hasAnyValues = true;
      internalValueResult.reason = this._reason;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateWaiting | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._message = undefined;
      this._reason = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._message = value.message;
      this._reason = value.reason;
    }
  }

  // message - computed: false, optional: true, required: false
  private _message?: string; 
  public get message() {
    return this.getStringAttribute('message');
  }
  public set message(value: string) {
    this._message = value;
  }
  public resetMessage() {
    this._message = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageInput() {
    return this._message;
  }

  // reason - computed: false, optional: true, required: false
  private _reason?: string; 
  public get reason() {
    return this.getStringAttribute('reason');
  }
  public set reason(value: string) {
    this._reason = value;
  }
  public resetReason() {
    this._reason = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reasonInput() {
    return this._reason;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesState {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#running DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#running}
  */
  readonly running?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateRunning;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#terminated DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#terminated}
  */
  readonly terminated?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateTerminated;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#waiting DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#waiting}
  */
  readonly waiting?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateWaiting;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesState | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    running: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateRunningToTerraform(struct!.running),
    terminated: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateTerminatedToTerraform(struct!.terminated),
    waiting: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateWaitingToTerraform(struct!.waiting),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesState | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    running: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateRunningToHclTerraform(struct!.running),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateRunning",
    },
    terminated: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateTerminatedToHclTerraform(struct!.terminated),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateTerminated",
    },
    waiting: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateWaitingToHclTerraform(struct!.waiting),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateWaiting",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesState | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._running?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.running = this._running?.internalValue;
    }
    if (this._terminated?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.terminated = this._terminated?.internalValue;
    }
    if (this._waiting?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.waiting = this._waiting?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesState | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._running.internalValue = undefined;
      this._terminated.internalValue = undefined;
      this._waiting.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._running.internalValue = value.running;
      this._terminated.internalValue = value.terminated;
      this._waiting.internalValue = value.waiting;
    }
  }

  // running - computed: false, optional: true, required: false
  private _running = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateRunningOutputReference(this, "running");
  public get running() {
    return this._running;
  }
  public putRunning(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateRunning) {
    this._running.internalValue = value;
  }
  public resetRunning() {
    this._running.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runningInput() {
    return this._running.internalValue;
  }

  // terminated - computed: false, optional: true, required: false
  private _terminated = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateTerminatedOutputReference(this, "terminated");
  public get terminated() {
    return this._terminated;
  }
  public putTerminated(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateTerminated) {
    this._terminated.internalValue = value;
  }
  public resetTerminated() {
    this._terminated.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get terminatedInput() {
    return this._terminated.internalValue;
  }

  // waiting - computed: false, optional: true, required: false
  private _waiting = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateWaitingOutputReference(this, "waiting");
  public get waiting() {
    return this._waiting;
  }
  public putWaiting(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateWaiting) {
    this._waiting.internalValue = value;
  }
  public resetWaiting() {
    this._waiting.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get waitingInput() {
    return this._waiting.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMounts {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#mount_path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#mount_path}
  */
  readonly mountPath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#read_only DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#recursive_read_only DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#recursive_read_only}
  */
  readonly recursiveReadOnly?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMountsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    mount_path: cdktf.stringToTerraform(struct!.mountPath),
    name: cdktf.stringToTerraform(struct!.name),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    recursive_read_only: cdktf.stringToTerraform(struct!.recursiveReadOnly),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMountsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    mount_path: {
      value: cdktf.stringToHclTerraform(struct!.mountPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    recursive_read_only: {
      value: cdktf.stringToHclTerraform(struct!.recursiveReadOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMountsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMounts | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._mountPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.mountPath = this._mountPath;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._recursiveReadOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.recursiveReadOnly = this._recursiveReadOnly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMounts | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._mountPath = undefined;
      this._name = undefined;
      this._readOnly = undefined;
      this._recursiveReadOnly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._mountPath = value.mountPath;
      this._name = value.name;
      this._readOnly = value.readOnly;
      this._recursiveReadOnly = value.recursiveReadOnly;
    }
  }

  // mount_path - computed: false, optional: true, required: false
  private _mountPath?: string; 
  public get mountPath() {
    return this.getStringAttribute('mount_path');
  }
  public set mountPath(value: string) {
    this._mountPath = value;
  }
  public resetMountPath() {
    this._mountPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mountPathInput() {
    return this._mountPath;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // recursive_read_only - computed: false, optional: true, required: false
  private _recursiveReadOnly?: string; 
  public get recursiveReadOnly() {
    return this.getStringAttribute('recursive_read_only');
  }
  public set recursiveReadOnly(value: string) {
    this._recursiveReadOnly = value;
  }
  public resetRecursiveReadOnly() {
    this._recursiveReadOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get recursiveReadOnlyInput() {
    return this._recursiveReadOnly;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMountsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMounts[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMountsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMountsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatuses {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#allocated_resources DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#allocated_resources}
  */
  readonly allocatedResources?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#container_id DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#container_id}
  */
  readonly containerId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#image DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#image_id DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#image_id}
  */
  readonly imageId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#last_state DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#last_state}
  */
  readonly lastState?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastState;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#ready DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#ready}
  */
  readonly ready?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#resources DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#resources}
  */
  readonly resources?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResources;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#restart_count DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#restart_count}
  */
  readonly restartCount?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#started DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#started}
  */
  readonly started?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#state DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#state}
  */
  readonly state?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesState;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#volume_mounts DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#volume_mounts}
  */
  readonly volumeMounts?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMounts[] | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatuses | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allocated_resources: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.allocatedResources),
    container_id: cdktf.stringToTerraform(struct!.containerId),
    image: cdktf.stringToTerraform(struct!.image),
    image_id: cdktf.stringToTerraform(struct!.imageId),
    last_state: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateToTerraform(struct!.lastState),
    name: cdktf.stringToTerraform(struct!.name),
    ready: cdktf.booleanToTerraform(struct!.ready),
    resources: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesToTerraform(struct!.resources),
    restart_count: cdktf.numberToTerraform(struct!.restartCount),
    started: cdktf.booleanToTerraform(struct!.started),
    state: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateToTerraform(struct!.state),
    volume_mounts: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMountsToTerraform, false)(struct!.volumeMounts),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatuses | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allocated_resources: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.allocatedResources),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    container_id: {
      value: cdktf.stringToHclTerraform(struct!.containerId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_id: {
      value: cdktf.stringToHclTerraform(struct!.imageId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    last_state: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateToHclTerraform(struct!.lastState),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastState",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ready: {
      value: cdktf.booleanToHclTerraform(struct!.ready),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    resources: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesToHclTerraform(struct!.resources),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResources",
    },
    restart_count: {
      value: cdktf.numberToHclTerraform(struct!.restartCount),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    started: {
      value: cdktf.booleanToHclTerraform(struct!.started),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    state: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateToHclTerraform(struct!.state),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesState",
    },
    volume_mounts: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMountsToHclTerraform, false)(struct!.volumeMounts),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMountsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatuses | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allocatedResources !== undefined) {
      hasAnyValues = true;
      internalValueResult.allocatedResources = this._allocatedResources;
    }
    if (this._containerId !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerId = this._containerId;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._imageId !== undefined) {
      hasAnyValues = true;
      internalValueResult.imageId = this._imageId;
    }
    if (this._lastState?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.lastState = this._lastState?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._ready !== undefined) {
      hasAnyValues = true;
      internalValueResult.ready = this._ready;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._restartCount !== undefined) {
      hasAnyValues = true;
      internalValueResult.restartCount = this._restartCount;
    }
    if (this._started !== undefined) {
      hasAnyValues = true;
      internalValueResult.started = this._started;
    }
    if (this._state?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.state = this._state?.internalValue;
    }
    if (this._volumeMounts?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeMounts = this._volumeMounts?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatuses | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allocatedResources = undefined;
      this._containerId = undefined;
      this._image = undefined;
      this._imageId = undefined;
      this._lastState.internalValue = undefined;
      this._name = undefined;
      this._ready = undefined;
      this._resources.internalValue = undefined;
      this._restartCount = undefined;
      this._started = undefined;
      this._state.internalValue = undefined;
      this._volumeMounts.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allocatedResources = value.allocatedResources;
      this._containerId = value.containerId;
      this._image = value.image;
      this._imageId = value.imageId;
      this._lastState.internalValue = value.lastState;
      this._name = value.name;
      this._ready = value.ready;
      this._resources.internalValue = value.resources;
      this._restartCount = value.restartCount;
      this._started = value.started;
      this._state.internalValue = value.state;
      this._volumeMounts.internalValue = value.volumeMounts;
    }
  }

  // allocated_resources - computed: false, optional: true, required: false
  private _allocatedResources?: { [key: string]: string }; 
  public get allocatedResources() {
    return this.getStringMapAttribute('allocated_resources');
  }
  public set allocatedResources(value: { [key: string]: string }) {
    this._allocatedResources = value;
  }
  public resetAllocatedResources() {
    this._allocatedResources = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allocatedResourcesInput() {
    return this._allocatedResources;
  }

  // container_id - computed: false, optional: true, required: false
  private _containerId?: string; 
  public get containerId() {
    return this.getStringAttribute('container_id');
  }
  public set containerId(value: string) {
    this._containerId = value;
  }
  public resetContainerId() {
    this._containerId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerIdInput() {
    return this._containerId;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // image_id - computed: false, optional: true, required: false
  private _imageId?: string; 
  public get imageId() {
    return this.getStringAttribute('image_id');
  }
  public set imageId(value: string) {
    this._imageId = value;
  }
  public resetImageId() {
    this._imageId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageIdInput() {
    return this._imageId;
  }

  // last_state - computed: false, optional: true, required: false
  private _lastState = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastStateOutputReference(this, "last_state");
  public get lastState() {
    return this._lastState;
  }
  public putLastState(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesLastState) {
    this._lastState.internalValue = value;
  }
  public resetLastState() {
    this._lastState.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lastStateInput() {
    return this._lastState.internalValue;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // ready - computed: false, optional: true, required: false
  private _ready?: boolean | cdktf.IResolvable; 
  public get ready() {
    return this.getBooleanAttribute('ready');
  }
  public set ready(value: boolean | cdktf.IResolvable) {
    this._ready = value;
  }
  public resetReady() {
    this._ready = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readyInput() {
    return this._ready;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResourcesOutputReference(this, "resources");
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesResources) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // restart_count - computed: false, optional: true, required: false
  private _restartCount?: number; 
  public get restartCount() {
    return this.getNumberAttribute('restart_count');
  }
  public set restartCount(value: number) {
    this._restartCount = value;
  }
  public resetRestartCount() {
    this._restartCount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get restartCountInput() {
    return this._restartCount;
  }

  // started - computed: false, optional: true, required: false
  private _started?: boolean | cdktf.IResolvable; 
  public get started() {
    return this.getBooleanAttribute('started');
  }
  public set started(value: boolean | cdktf.IResolvable) {
    this._started = value;
  }
  public resetStarted() {
    this._started = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startedInput() {
    return this._started;
  }

  // state - computed: false, optional: true, required: false
  private _state = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesStateOutputReference(this, "state");
  public get state() {
    return this._state;
  }
  public putState(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesState) {
    this._state.internalValue = value;
  }
  public resetState() {
    this._state.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stateInput() {
    return this._state.internalValue;
  }

  // volume_mounts - computed: false, optional: true, required: false
  private _volumeMounts = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMountsList(this, "volume_mounts", false);
  public get volumeMounts() {
    return this._volumeMounts;
  }
  public putVolumeMounts(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesVolumeMounts[] | cdktf.IResolvable) {
    this._volumeMounts.internalValue = value;
  }
  public resetVolumeMounts() {
    this._volumeMounts.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeMountsInput() {
    return this._volumeMounts.internalValue;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatuses[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#ip DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#ip}
  */
  readonly ip?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ip: cdktf.stringToTerraform(struct!.ip),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ip: {
      value: cdktf.stringToHclTerraform(struct!.ip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._ip !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip = this._ip;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._ip = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._ip = value.ip;
    }
  }

  // ip - computed: false, optional: true, required: false
  private _ip?: string; 
  public get ip() {
    return this.getStringAttribute('ip');
  }
  public set ip(value: string) {
    this._ip = value;
  }
  public resetIp() {
    this._ip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipInput() {
    return this._ip;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPs[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatuses {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#resource_claim_name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#resource_claim_name}
  */
  readonly resourceClaimName?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatusesToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatuses | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    resource_claim_name: cdktf.stringToTerraform(struct!.resourceClaimName),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatusesToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatuses | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_claim_name: {
      value: cdktf.stringToHclTerraform(struct!.resourceClaimName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatusesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatuses | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._resourceClaimName !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceClaimName = this._resourceClaimName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatuses | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._resourceClaimName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._resourceClaimName = value.resourceClaimName;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // resource_claim_name - computed: false, optional: true, required: false
  private _resourceClaimName?: string; 
  public get resourceClaimName() {
    return this.getStringAttribute('resource_claim_name');
  }
  public set resourceClaimName(value: string) {
    this._resourceClaimName = value;
  }
  public resetResourceClaimName() {
    this._resourceClaimName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceClaimNameInput() {
    return this._resourceClaimName;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatusesList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatuses[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatusesOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatusesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatus {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#conditions DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#conditions}
  */
  readonly conditions?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusConditions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#container_statuses DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#container_statuses}
  */
  readonly containerStatuses?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatuses[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#ephemeral_container_statuses DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#ephemeral_container_statuses}
  */
  readonly ephemeralContainerStatuses?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatuses[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host_i_ps DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host_i_ps}
  */
  readonly hostIPs?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPs[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host_ip DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host_ip}
  */
  readonly hostIp?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#init_container_statuses DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#init_container_statuses}
  */
  readonly initContainerStatuses?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatuses[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#message DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#message}
  */
  readonly message?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#nominated_node_name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#nominated_node_name}
  */
  readonly nominatedNodeName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#phase DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#phase}
  */
  readonly phase?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#pod_i_ps DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#pod_i_ps}
  */
  readonly podIPs?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPs[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#pod_ip DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#pod_ip}
  */
  readonly podIp?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#qos_class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#qos_class}
  */
  readonly qosClass?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#reason DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#reason}
  */
  readonly reason?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#resize DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#resize}
  */
  readonly resize?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#resource_claim_statuses DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#resource_claim_statuses}
  */
  readonly resourceClaimStatuses?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatuses[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#start_time DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#start_time}
  */
  readonly startTime?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatus | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    conditions: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusConditionsToTerraform, false)(struct!.conditions),
    container_statuses: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesToTerraform, false)(struct!.containerStatuses),
    ephemeral_container_statuses: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesToTerraform, false)(struct!.ephemeralContainerStatuses),
    host_i_ps: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPsToTerraform, false)(struct!.hostIPs),
    host_ip: cdktf.stringToTerraform(struct!.hostIp),
    init_container_statuses: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesToTerraform, false)(struct!.initContainerStatuses),
    message: cdktf.stringToTerraform(struct!.message),
    nominated_node_name: cdktf.stringToTerraform(struct!.nominatedNodeName),
    phase: cdktf.stringToTerraform(struct!.phase),
    pod_i_ps: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPsToTerraform, false)(struct!.podIPs),
    pod_ip: cdktf.stringToTerraform(struct!.podIp),
    qos_class: cdktf.stringToTerraform(struct!.qosClass),
    reason: cdktf.stringToTerraform(struct!.reason),
    resize: cdktf.stringToTerraform(struct!.resize),
    resource_claim_statuses: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatusesToTerraform, false)(struct!.resourceClaimStatuses),
    start_time: cdktf.stringToTerraform(struct!.startTime),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatus | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    conditions: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusConditionsToHclTerraform, false)(struct!.conditions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusConditionsList",
    },
    container_statuses: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesToHclTerraform, false)(struct!.containerStatuses),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesList",
    },
    ephemeral_container_statuses: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesToHclTerraform, false)(struct!.ephemeralContainerStatuses),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesList",
    },
    host_i_ps: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPsToHclTerraform, false)(struct!.hostIPs),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPsList",
    },
    host_ip: {
      value: cdktf.stringToHclTerraform(struct!.hostIp),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    init_container_statuses: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesToHclTerraform, false)(struct!.initContainerStatuses),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesList",
    },
    message: {
      value: cdktf.stringToHclTerraform(struct!.message),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    nominated_node_name: {
      value: cdktf.stringToHclTerraform(struct!.nominatedNodeName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    phase: {
      value: cdktf.stringToHclTerraform(struct!.phase),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pod_i_ps: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPsToHclTerraform, false)(struct!.podIPs),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPsList",
    },
    pod_ip: {
      value: cdktf.stringToHclTerraform(struct!.podIp),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    qos_class: {
      value: cdktf.stringToHclTerraform(struct!.qosClass),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reason: {
      value: cdktf.stringToHclTerraform(struct!.reason),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resize: {
      value: cdktf.stringToHclTerraform(struct!.resize),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_claim_statuses: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatusesToHclTerraform, false)(struct!.resourceClaimStatuses),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatusesList",
    },
    start_time: {
      value: cdktf.stringToHclTerraform(struct!.startTime),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatus | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._conditions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.conditions = this._conditions?.internalValue;
    }
    if (this._containerStatuses?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerStatuses = this._containerStatuses?.internalValue;
    }
    if (this._ephemeralContainerStatuses?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ephemeralContainerStatuses = this._ephemeralContainerStatuses?.internalValue;
    }
    if (this._hostIPs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostIPs = this._hostIPs?.internalValue;
    }
    if (this._hostIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostIp = this._hostIp;
    }
    if (this._initContainerStatuses?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.initContainerStatuses = this._initContainerStatuses?.internalValue;
    }
    if (this._message !== undefined) {
      hasAnyValues = true;
      internalValueResult.message = this._message;
    }
    if (this._nominatedNodeName !== undefined) {
      hasAnyValues = true;
      internalValueResult.nominatedNodeName = this._nominatedNodeName;
    }
    if (this._phase !== undefined) {
      hasAnyValues = true;
      internalValueResult.phase = this._phase;
    }
    if (this._podIPs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podIPs = this._podIPs?.internalValue;
    }
    if (this._podIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.podIp = this._podIp;
    }
    if (this._qosClass !== undefined) {
      hasAnyValues = true;
      internalValueResult.qosClass = this._qosClass;
    }
    if (this._reason !== undefined) {
      hasAnyValues = true;
      internalValueResult.reason = this._reason;
    }
    if (this._resize !== undefined) {
      hasAnyValues = true;
      internalValueResult.resize = this._resize;
    }
    if (this._resourceClaimStatuses?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceClaimStatuses = this._resourceClaimStatuses?.internalValue;
    }
    if (this._startTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.startTime = this._startTime;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatus | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._conditions.internalValue = undefined;
      this._containerStatuses.internalValue = undefined;
      this._ephemeralContainerStatuses.internalValue = undefined;
      this._hostIPs.internalValue = undefined;
      this._hostIp = undefined;
      this._initContainerStatuses.internalValue = undefined;
      this._message = undefined;
      this._nominatedNodeName = undefined;
      this._phase = undefined;
      this._podIPs.internalValue = undefined;
      this._podIp = undefined;
      this._qosClass = undefined;
      this._reason = undefined;
      this._resize = undefined;
      this._resourceClaimStatuses.internalValue = undefined;
      this._startTime = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._conditions.internalValue = value.conditions;
      this._containerStatuses.internalValue = value.containerStatuses;
      this._ephemeralContainerStatuses.internalValue = value.ephemeralContainerStatuses;
      this._hostIPs.internalValue = value.hostIPs;
      this._hostIp = value.hostIp;
      this._initContainerStatuses.internalValue = value.initContainerStatuses;
      this._message = value.message;
      this._nominatedNodeName = value.nominatedNodeName;
      this._phase = value.phase;
      this._podIPs.internalValue = value.podIPs;
      this._podIp = value.podIp;
      this._qosClass = value.qosClass;
      this._reason = value.reason;
      this._resize = value.resize;
      this._resourceClaimStatuses.internalValue = value.resourceClaimStatuses;
      this._startTime = value.startTime;
    }
  }

  // conditions - computed: false, optional: true, required: false
  private _conditions = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusConditionsList(this, "conditions", false);
  public get conditions() {
    return this._conditions;
  }
  public putConditions(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusConditions[] | cdktf.IResolvable) {
    this._conditions.internalValue = value;
  }
  public resetConditions() {
    this._conditions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get conditionsInput() {
    return this._conditions.internalValue;
  }

  // container_statuses - computed: false, optional: true, required: false
  private _containerStatuses = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatusesList(this, "container_statuses", false);
  public get containerStatuses() {
    return this._containerStatuses;
  }
  public putContainerStatuses(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusContainerStatuses[] | cdktf.IResolvable) {
    this._containerStatuses.internalValue = value;
  }
  public resetContainerStatuses() {
    this._containerStatuses.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerStatusesInput() {
    return this._containerStatuses.internalValue;
  }

  // ephemeral_container_statuses - computed: false, optional: true, required: false
  private _ephemeralContainerStatuses = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatusesList(this, "ephemeral_container_statuses", false);
  public get ephemeralContainerStatuses() {
    return this._ephemeralContainerStatuses;
  }
  public putEphemeralContainerStatuses(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusEphemeralContainerStatuses[] | cdktf.IResolvable) {
    this._ephemeralContainerStatuses.internalValue = value;
  }
  public resetEphemeralContainerStatuses() {
    this._ephemeralContainerStatuses.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ephemeralContainerStatusesInput() {
    return this._ephemeralContainerStatuses.internalValue;
  }

  // host_i_ps - computed: false, optional: true, required: false
  private _hostIPs = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPsList(this, "host_i_ps", false);
  public get hostIPs() {
    return this._hostIPs;
  }
  public putHostIPs(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusHostIPs[] | cdktf.IResolvable) {
    this._hostIPs.internalValue = value;
  }
  public resetHostIPs() {
    this._hostIPs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostIPsInput() {
    return this._hostIPs.internalValue;
  }

  // host_ip - computed: false, optional: true, required: false
  private _hostIp?: string; 
  public get hostIp() {
    return this.getStringAttribute('host_ip');
  }
  public set hostIp(value: string) {
    this._hostIp = value;
  }
  public resetHostIp() {
    this._hostIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostIpInput() {
    return this._hostIp;
  }

  // init_container_statuses - computed: false, optional: true, required: false
  private _initContainerStatuses = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatusesList(this, "init_container_statuses", false);
  public get initContainerStatuses() {
    return this._initContainerStatuses;
  }
  public putInitContainerStatuses(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusInitContainerStatuses[] | cdktf.IResolvable) {
    this._initContainerStatuses.internalValue = value;
  }
  public resetInitContainerStatuses() {
    this._initContainerStatuses.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get initContainerStatusesInput() {
    return this._initContainerStatuses.internalValue;
  }

  // message - computed: false, optional: true, required: false
  private _message?: string; 
  public get message() {
    return this.getStringAttribute('message');
  }
  public set message(value: string) {
    this._message = value;
  }
  public resetMessage() {
    this._message = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageInput() {
    return this._message;
  }

  // nominated_node_name - computed: false, optional: true, required: false
  private _nominatedNodeName?: string; 
  public get nominatedNodeName() {
    return this.getStringAttribute('nominated_node_name');
  }
  public set nominatedNodeName(value: string) {
    this._nominatedNodeName = value;
  }
  public resetNominatedNodeName() {
    this._nominatedNodeName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nominatedNodeNameInput() {
    return this._nominatedNodeName;
  }

  // phase - computed: false, optional: true, required: false
  private _phase?: string; 
  public get phase() {
    return this.getStringAttribute('phase');
  }
  public set phase(value: string) {
    this._phase = value;
  }
  public resetPhase() {
    this._phase = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get phaseInput() {
    return this._phase;
  }

  // pod_i_ps - computed: false, optional: true, required: false
  private _podIPs = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPsList(this, "pod_i_ps", false);
  public get podIPs() {
    return this._podIPs;
  }
  public putPodIPs(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusPodIPs[] | cdktf.IResolvable) {
    this._podIPs.internalValue = value;
  }
  public resetPodIPs() {
    this._podIPs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podIPsInput() {
    return this._podIPs.internalValue;
  }

  // pod_ip - computed: false, optional: true, required: false
  private _podIp?: string; 
  public get podIp() {
    return this.getStringAttribute('pod_ip');
  }
  public set podIp(value: string) {
    this._podIp = value;
  }
  public resetPodIp() {
    this._podIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podIpInput() {
    return this._podIp;
  }

  // qos_class - computed: false, optional: true, required: false
  private _qosClass?: string; 
  public get qosClass() {
    return this.getStringAttribute('qos_class');
  }
  public set qosClass(value: string) {
    this._qosClass = value;
  }
  public resetQosClass() {
    this._qosClass = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qosClassInput() {
    return this._qosClass;
  }

  // reason - computed: false, optional: true, required: false
  private _reason?: string; 
  public get reason() {
    return this.getStringAttribute('reason');
  }
  public set reason(value: string) {
    this._reason = value;
  }
  public resetReason() {
    this._reason = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reasonInput() {
    return this._reason;
  }

  // resize - computed: false, optional: true, required: false
  private _resize?: string; 
  public get resize() {
    return this.getStringAttribute('resize');
  }
  public set resize(value: string) {
    this._resize = value;
  }
  public resetResize() {
    this._resize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resizeInput() {
    return this._resize;
  }

  // resource_claim_statuses - computed: false, optional: true, required: false
  private _resourceClaimStatuses = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatusesList(this, "resource_claim_statuses", false);
  public get resourceClaimStatuses() {
    return this._resourceClaimStatuses;
  }
  public putResourceClaimStatuses(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusResourceClaimStatuses[] | cdktf.IResolvable) {
    this._resourceClaimStatuses.internalValue = value;
  }
  public resetResourceClaimStatuses() {
    this._resourceClaimStatuses.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceClaimStatusesInput() {
    return this._resourceClaimStatuses.internalValue;
  }

  // start_time - computed: false, optional: true, required: false
  private _startTime?: string; 
  public get startTime() {
    return this.getStringAttribute('start_time');
  }
  public set startTime(value: string) {
    this._startTime = value;
  }
  public resetStartTime() {
    this._startTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startTimeInput() {
    return this._startTime;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplate {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#api_version DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#kind DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#metadata DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#metadata}
  */
  readonly metadata?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateMetadata;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#spec DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#spec}
  */
  readonly spec?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateSpec;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#status DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#status}
  */
  readonly status?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatus;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    kind: cdktf.stringToTerraform(struct!.kind),
    metadata: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateMetadataToTerraform(struct!.metadata),
    spec: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateSpecToTerraform(struct!.spec),
    status: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusToTerraform(struct!.status),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metadata: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateMetadata",
    },
    spec: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateSpec",
    },
    status: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusToHclTerraform(struct!.status),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatus",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    if (this._status?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.status = this._status?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._kind = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
      this._status.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._kind = value.kind;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
      this._status.internalValue = value.status;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }

  // status - computed: false, optional: true, required: false
  private _status = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatusOutputReference(this, "status");
  public get status() {
    return this._status;
  }
  public putStatus(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecPodTemplateStatus) {
    this._status.internalValue = value;
  }
  public resetStatus() {
    this._status.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get statusInput() {
    return this._status.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFields {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#api_version DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#fields_type DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#fields_type}
  */
  readonly fieldsType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#fields_v1 DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#fields_v1}
  */
  readonly fieldsV1?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#manager DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#manager}
  */
  readonly manager?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#operation DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#operation}
  */
  readonly operation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#subresource DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#subresource}
  */
  readonly subresource?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#time DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#time}
  */
  readonly time?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFieldsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    fields_type: cdktf.stringToTerraform(struct!.fieldsType),
    fields_v1: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldsV1),
    manager: cdktf.stringToTerraform(struct!.manager),
    operation: cdktf.stringToTerraform(struct!.operation),
    subresource: cdktf.stringToTerraform(struct!.subresource),
    time: cdktf.stringToTerraform(struct!.time),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFieldsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fields_type: {
      value: cdktf.stringToHclTerraform(struct!.fieldsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fields_v1: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldsV1),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    manager: {
      value: cdktf.stringToHclTerraform(struct!.manager),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operation: {
      value: cdktf.stringToHclTerraform(struct!.operation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    subresource: {
      value: cdktf.stringToHclTerraform(struct!.subresource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    time: {
      value: cdktf.stringToHclTerraform(struct!.time),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFieldsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFields | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldsType = this._fieldsType;
    }
    if (this._fieldsV1 !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldsV1 = this._fieldsV1;
    }
    if (this._manager !== undefined) {
      hasAnyValues = true;
      internalValueResult.manager = this._manager;
    }
    if (this._operation !== undefined) {
      hasAnyValues = true;
      internalValueResult.operation = this._operation;
    }
    if (this._subresource !== undefined) {
      hasAnyValues = true;
      internalValueResult.subresource = this._subresource;
    }
    if (this._time !== undefined) {
      hasAnyValues = true;
      internalValueResult.time = this._time;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFields | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldsType = undefined;
      this._fieldsV1 = undefined;
      this._manager = undefined;
      this._operation = undefined;
      this._subresource = undefined;
      this._time = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldsType = value.fieldsType;
      this._fieldsV1 = value.fieldsV1;
      this._manager = value.manager;
      this._operation = value.operation;
      this._subresource = value.subresource;
      this._time = value.time;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // fields_type - computed: false, optional: true, required: false
  private _fieldsType?: string; 
  public get fieldsType() {
    return this.getStringAttribute('fields_type');
  }
  public set fieldsType(value: string) {
    this._fieldsType = value;
  }
  public resetFieldsType() {
    this._fieldsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldsTypeInput() {
    return this._fieldsType;
  }

  // fields_v1 - computed: false, optional: true, required: false
  private _fieldsV1?: { [key: string]: string }; 
  public get fieldsV1() {
    return this.getStringMapAttribute('fields_v1');
  }
  public set fieldsV1(value: { [key: string]: string }) {
    this._fieldsV1 = value;
  }
  public resetFieldsV1() {
    this._fieldsV1 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldsV1Input() {
    return this._fieldsV1;
  }

  // manager - computed: false, optional: true, required: false
  private _manager?: string; 
  public get manager() {
    return this.getStringAttribute('manager');
  }
  public set manager(value: string) {
    this._manager = value;
  }
  public resetManager() {
    this._manager = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get managerInput() {
    return this._manager;
  }

  // operation - computed: false, optional: true, required: false
  private _operation?: string; 
  public get operation() {
    return this.getStringAttribute('operation');
  }
  public set operation(value: string) {
    this._operation = value;
  }
  public resetOperation() {
    this._operation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operationInput() {
    return this._operation;
  }

  // subresource - computed: false, optional: true, required: false
  private _subresource?: string; 
  public get subresource() {
    return this.getStringAttribute('subresource');
  }
  public set subresource(value: string) {
    this._subresource = value;
  }
  public resetSubresource() {
    this._subresource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subresourceInput() {
    return this._subresource;
  }

  // time - computed: false, optional: true, required: false
  private _time?: string; 
  public get time() {
    return this.getStringAttribute('time');
  }
  public set time(value: string) {
    this._time = value;
  }
  public resetTime() {
    this._time = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeInput() {
    return this._time;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFieldsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFields[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFieldsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFieldsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferences {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#api_version DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#block_owner_deletion DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#block_owner_deletion}
  */
  readonly blockOwnerDeletion?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#controller DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#controller}
  */
  readonly controller?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#kind DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#uid DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#uid}
  */
  readonly uid?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferencesToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferences | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    block_owner_deletion: cdktf.booleanToTerraform(struct!.blockOwnerDeletion),
    controller: cdktf.booleanToTerraform(struct!.controller),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
    uid: cdktf.stringToTerraform(struct!.uid),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferencesToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferences | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    block_owner_deletion: {
      value: cdktf.booleanToHclTerraform(struct!.blockOwnerDeletion),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    controller: {
      value: cdktf.booleanToHclTerraform(struct!.controller),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uid: {
      value: cdktf.stringToHclTerraform(struct!.uid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferencesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferences | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._blockOwnerDeletion !== undefined) {
      hasAnyValues = true;
      internalValueResult.blockOwnerDeletion = this._blockOwnerDeletion;
    }
    if (this._controller !== undefined) {
      hasAnyValues = true;
      internalValueResult.controller = this._controller;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._uid !== undefined) {
      hasAnyValues = true;
      internalValueResult.uid = this._uid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferences | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._blockOwnerDeletion = undefined;
      this._controller = undefined;
      this._kind = undefined;
      this._name = undefined;
      this._uid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._blockOwnerDeletion = value.blockOwnerDeletion;
      this._controller = value.controller;
      this._kind = value.kind;
      this._name = value.name;
      this._uid = value.uid;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // block_owner_deletion - computed: false, optional: true, required: false
  private _blockOwnerDeletion?: boolean | cdktf.IResolvable; 
  public get blockOwnerDeletion() {
    return this.getBooleanAttribute('block_owner_deletion');
  }
  public set blockOwnerDeletion(value: boolean | cdktf.IResolvable) {
    this._blockOwnerDeletion = value;
  }
  public resetBlockOwnerDeletion() {
    this._blockOwnerDeletion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get blockOwnerDeletionInput() {
    return this._blockOwnerDeletion;
  }

  // controller - computed: false, optional: true, required: false
  private _controller?: boolean | cdktf.IResolvable; 
  public get controller() {
    return this.getBooleanAttribute('controller');
  }
  public set controller(value: boolean | cdktf.IResolvable) {
    this._controller = value;
  }
  public resetController() {
    this._controller = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get controllerInput() {
    return this._controller;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // uid - computed: false, optional: true, required: false
  private _uid?: string; 
  public get uid() {
    return this.getStringAttribute('uid');
  }
  public set uid(value: string) {
    this._uid = value;
  }
  public resetUid() {
    this._uid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uidInput() {
    return this._uid;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferencesList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferences[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferencesOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferencesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#annotations DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#creation_timestamp DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#creation_timestamp}
  */
  readonly creationTimestamp?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#deletion_grace_period_seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#deletion_grace_period_seconds}
  */
  readonly deletionGracePeriodSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#deletion_timestamp DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#deletion_timestamp}
  */
  readonly deletionTimestamp?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#finalizers DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#finalizers}
  */
  readonly finalizers?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#generate_name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#generate_name}
  */
  readonly generateName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#generation DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#generation}
  */
  readonly generation?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#labels DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#managed_fields DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#managed_fields}
  */
  readonly managedFields?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFields[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#namespace DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#namespace}
  */
  readonly namespace?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#owner_references DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#owner_references}
  */
  readonly ownerReferences?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferences[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#resource_version DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#resource_version}
  */
  readonly resourceVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#self_link DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#self_link}
  */
  readonly selfLink?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#uid DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#uid}
  */
  readonly uid?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    creation_timestamp: cdktf.stringToTerraform(struct!.creationTimestamp),
    deletion_grace_period_seconds: cdktf.numberToTerraform(struct!.deletionGracePeriodSeconds),
    deletion_timestamp: cdktf.stringToTerraform(struct!.deletionTimestamp),
    finalizers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.finalizers),
    generate_name: cdktf.stringToTerraform(struct!.generateName),
    generation: cdktf.numberToTerraform(struct!.generation),
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    managed_fields: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFieldsToTerraform, false)(struct!.managedFields),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
    owner_references: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferencesToTerraform, false)(struct!.ownerReferences),
    resource_version: cdktf.stringToTerraform(struct!.resourceVersion),
    self_link: cdktf.stringToTerraform(struct!.selfLink),
    uid: cdktf.stringToTerraform(struct!.uid),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    creation_timestamp: {
      value: cdktf.stringToHclTerraform(struct!.creationTimestamp),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    deletion_grace_period_seconds: {
      value: cdktf.numberToHclTerraform(struct!.deletionGracePeriodSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    deletion_timestamp: {
      value: cdktf.stringToHclTerraform(struct!.deletionTimestamp),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    finalizers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.finalizers),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    generate_name: {
      value: cdktf.stringToHclTerraform(struct!.generateName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    generation: {
      value: cdktf.numberToHclTerraform(struct!.generation),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    managed_fields: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFieldsToHclTerraform, false)(struct!.managedFields),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFieldsList",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    owner_references: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferencesToHclTerraform, false)(struct!.ownerReferences),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferencesList",
    },
    resource_version: {
      value: cdktf.stringToHclTerraform(struct!.resourceVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    self_link: {
      value: cdktf.stringToHclTerraform(struct!.selfLink),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uid: {
      value: cdktf.stringToHclTerraform(struct!.uid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._creationTimestamp !== undefined) {
      hasAnyValues = true;
      internalValueResult.creationTimestamp = this._creationTimestamp;
    }
    if (this._deletionGracePeriodSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.deletionGracePeriodSeconds = this._deletionGracePeriodSeconds;
    }
    if (this._deletionTimestamp !== undefined) {
      hasAnyValues = true;
      internalValueResult.deletionTimestamp = this._deletionTimestamp;
    }
    if (this._finalizers !== undefined) {
      hasAnyValues = true;
      internalValueResult.finalizers = this._finalizers;
    }
    if (this._generateName !== undefined) {
      hasAnyValues = true;
      internalValueResult.generateName = this._generateName;
    }
    if (this._generation !== undefined) {
      hasAnyValues = true;
      internalValueResult.generation = this._generation;
    }
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._managedFields?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.managedFields = this._managedFields?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    if (this._ownerReferences?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ownerReferences = this._ownerReferences?.internalValue;
    }
    if (this._resourceVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceVersion = this._resourceVersion;
    }
    if (this._selfLink !== undefined) {
      hasAnyValues = true;
      internalValueResult.selfLink = this._selfLink;
    }
    if (this._uid !== undefined) {
      hasAnyValues = true;
      internalValueResult.uid = this._uid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._creationTimestamp = undefined;
      this._deletionGracePeriodSeconds = undefined;
      this._deletionTimestamp = undefined;
      this._finalizers = undefined;
      this._generateName = undefined;
      this._generation = undefined;
      this._labels = undefined;
      this._managedFields.internalValue = undefined;
      this._name = undefined;
      this._namespace = undefined;
      this._ownerReferences.internalValue = undefined;
      this._resourceVersion = undefined;
      this._selfLink = undefined;
      this._uid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._creationTimestamp = value.creationTimestamp;
      this._deletionGracePeriodSeconds = value.deletionGracePeriodSeconds;
      this._deletionTimestamp = value.deletionTimestamp;
      this._finalizers = value.finalizers;
      this._generateName = value.generateName;
      this._generation = value.generation;
      this._labels = value.labels;
      this._managedFields.internalValue = value.managedFields;
      this._name = value.name;
      this._namespace = value.namespace;
      this._ownerReferences.internalValue = value.ownerReferences;
      this._resourceVersion = value.resourceVersion;
      this._selfLink = value.selfLink;
      this._uid = value.uid;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // creation_timestamp - computed: false, optional: true, required: false
  private _creationTimestamp?: string; 
  public get creationTimestamp() {
    return this.getStringAttribute('creation_timestamp');
  }
  public set creationTimestamp(value: string) {
    this._creationTimestamp = value;
  }
  public resetCreationTimestamp() {
    this._creationTimestamp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get creationTimestampInput() {
    return this._creationTimestamp;
  }

  // deletion_grace_period_seconds - computed: false, optional: true, required: false
  private _deletionGracePeriodSeconds?: number; 
  public get deletionGracePeriodSeconds() {
    return this.getNumberAttribute('deletion_grace_period_seconds');
  }
  public set deletionGracePeriodSeconds(value: number) {
    this._deletionGracePeriodSeconds = value;
  }
  public resetDeletionGracePeriodSeconds() {
    this._deletionGracePeriodSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deletionGracePeriodSecondsInput() {
    return this._deletionGracePeriodSeconds;
  }

  // deletion_timestamp - computed: false, optional: true, required: false
  private _deletionTimestamp?: string; 
  public get deletionTimestamp() {
    return this.getStringAttribute('deletion_timestamp');
  }
  public set deletionTimestamp(value: string) {
    this._deletionTimestamp = value;
  }
  public resetDeletionTimestamp() {
    this._deletionTimestamp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deletionTimestampInput() {
    return this._deletionTimestamp;
  }

  // finalizers - computed: false, optional: true, required: false
  private _finalizers?: string[]; 
  public get finalizers() {
    return this.getListAttribute('finalizers');
  }
  public set finalizers(value: string[]) {
    this._finalizers = value;
  }
  public resetFinalizers() {
    this._finalizers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get finalizersInput() {
    return this._finalizers;
  }

  // generate_name - computed: false, optional: true, required: false
  private _generateName?: string; 
  public get generateName() {
    return this.getStringAttribute('generate_name');
  }
  public set generateName(value: string) {
    this._generateName = value;
  }
  public resetGenerateName() {
    this._generateName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get generateNameInput() {
    return this._generateName;
  }

  // generation - computed: false, optional: true, required: false
  private _generation?: number; 
  public get generation() {
    return this.getNumberAttribute('generation');
  }
  public set generation(value: number) {
    this._generation = value;
  }
  public resetGeneration() {
    this._generation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get generationInput() {
    return this._generation;
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // managed_fields - computed: false, optional: true, required: false
  private _managedFields = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFieldsList(this, "managed_fields", false);
  public get managedFields() {
    return this._managedFields;
  }
  public putManagedFields(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataManagedFields[] | cdktf.IResolvable) {
    this._managedFields.internalValue = value;
  }
  public resetManagedFields() {
    this._managedFields.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get managedFieldsInput() {
    return this._managedFields.internalValue;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }

  // owner_references - computed: false, optional: true, required: false
  private _ownerReferences = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferencesList(this, "owner_references", false);
  public get ownerReferences() {
    return this._ownerReferences;
  }
  public putOwnerReferences(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateMetadataOwnerReferences[] | cdktf.IResolvable) {
    this._ownerReferences.internalValue = value;
  }
  public resetOwnerReferences() {
    this._ownerReferences.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerReferencesInput() {
    return this._ownerReferences.internalValue;
  }

  // resource_version - computed: false, optional: true, required: false
  private _resourceVersion?: string; 
  public get resourceVersion() {
    return this.getStringAttribute('resource_version');
  }
  public set resourceVersion(value: string) {
    this._resourceVersion = value;
  }
  public resetResourceVersion() {
    this._resourceVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceVersionInput() {
    return this._resourceVersion;
  }

  // self_link - computed: false, optional: true, required: false
  private _selfLink?: string; 
  public get selfLink() {
    return this.getStringAttribute('self_link');
  }
  public set selfLink(value: string) {
    this._selfLink = value;
  }
  public resetSelfLink() {
    this._selfLink = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfLinkInput() {
    return this._selfLink;
  }

  // uid - computed: false, optional: true, required: false
  private _uid?: string; 
  public get uid() {
    return this.getStringAttribute('uid');
  }
  public set uid(value: string) {
    this._uid = value;
  }
  public resetUid() {
    this._uid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uidInput() {
    return this._uid;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#operator DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#values DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#operator DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#values DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_expressions DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_fields DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_fields}
  */
  readonly matchFields?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[] | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_fields: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsToTerraform, false)(struct!.matchFields),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsList",
    },
    match_fields: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsToHclTerraform, false)(struct!.matchFields),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchFields?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchFields = this._matchFields?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchFields.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchFields.internalValue = value.matchFields;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_fields - computed: false, optional: true, required: false
  private _matchFields = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsList(this, "match_fields", false);
  public get matchFields() {
    return this._matchFields;
  }
  public putMatchFields(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[] | cdktf.IResolvable) {
    this._matchFields.internalValue = value;
  }
  public resetMatchFields() {
    this._matchFields.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchFieldsInput() {
    return this._matchFields.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#preference DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#preference}
  */
  readonly preference?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#weight DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#weight}
  */
  readonly weight?: number;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    preference: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceToTerraform(struct!.preference),
    weight: cdktf.numberToTerraform(struct!.weight),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    preference: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceToHclTerraform(struct!.preference),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference",
    },
    weight: {
      value: cdktf.numberToHclTerraform(struct!.weight),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._preference?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.preference = this._preference?.internalValue;
    }
    if (this._weight !== undefined) {
      hasAnyValues = true;
      internalValueResult.weight = this._weight;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._preference.internalValue = undefined;
      this._weight = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._preference.internalValue = value.preference;
      this._weight = value.weight;
    }
  }

  // preference - computed: false, optional: true, required: false
  private _preference = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputReference(this, "preference");
  public get preference() {
    return this._preference;
  }
  public putPreference(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) {
    this._preference.internalValue = value;
  }
  public resetPreference() {
    this._preference.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preferenceInput() {
    return this._preference.internalValue;
  }

  // weight - computed: false, optional: true, required: false
  private _weight?: number; 
  public get weight() {
    return this.getNumberAttribute('weight');
  }
  public set weight(value: number) {
    this._weight = value;
  }
  public resetWeight() {
    this._weight = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get weightInput() {
    return this._weight;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#operator DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#values DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#operator DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#values DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_expressions DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_fields DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_fields}
  */
  readonly matchFields?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[] | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_fields: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsToTerraform, false)(struct!.matchFields),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsList",
    },
    match_fields: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsToHclTerraform, false)(struct!.matchFields),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchFields?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchFields = this._matchFields?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchFields.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchFields.internalValue = value.matchFields;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_fields - computed: false, optional: true, required: false
  private _matchFields = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsList(this, "match_fields", false);
  public get matchFields() {
    return this._matchFields;
  }
  public putMatchFields(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[] | cdktf.IResolvable) {
    this._matchFields.internalValue = value;
  }
  public resetMatchFields() {
    this._matchFields.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchFieldsInput() {
    return this._matchFields.internalValue;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#node_selector_terms DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#node_selector_terms}
  */
  readonly nodeSelectorTerms?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[] | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    node_selector_terms: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsToTerraform, false)(struct!.nodeSelectorTerms),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    node_selector_terms: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsToHclTerraform, false)(struct!.nodeSelectorTerms),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nodeSelectorTerms?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectorTerms = this._nodeSelectorTerms?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nodeSelectorTerms.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nodeSelectorTerms.internalValue = value.nodeSelectorTerms;
    }
  }

  // node_selector_terms - computed: false, optional: true, required: false
  private _nodeSelectorTerms = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsList(this, "node_selector_terms", false);
  public get nodeSelectorTerms() {
    return this._nodeSelectorTerms;
  }
  public putNodeSelectorTerms(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[] | cdktf.IResolvable) {
    this._nodeSelectorTerms.internalValue = value;
  }
  public resetNodeSelectorTerms() {
    this._nodeSelectorTerms.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorTermsInput() {
    return this._nodeSelectorTerms.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinity {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#preferred_during_scheduling_ignored_during_execution DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#preferred_during_scheduling_ignored_during_execution}
  */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#required_during_scheduling_ignored_during_execution DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#required_during_scheduling_ignored_during_execution}
  */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    preferred_during_scheduling_ignored_during_execution: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
    required_during_scheduling_ignored_during_execution: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform(struct!.requiredDuringSchedulingIgnoredDuringExecution),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    preferred_during_scheduling_ignored_during_execution: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionList",
    },
    required_during_scheduling_ignored_during_execution: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct!.requiredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.preferredDuringSchedulingIgnoredDuringExecution = this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    if (this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requiredDuringSchedulingIgnoredDuringExecution = this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value.preferredDuringSchedulingIgnoredDuringExecution;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value.requiredDuringSchedulingIgnoredDuringExecution;
    }
  }

  // preferred_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _preferredDuringSchedulingIgnoredDuringExecution = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionList(this, "preferred_during_scheduling_ignored_during_execution", false);
  public get preferredDuringSchedulingIgnoredDuringExecution() {
    return this._preferredDuringSchedulingIgnoredDuringExecution;
  }
  public putPreferredDuringSchedulingIgnoredDuringExecution(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable) {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetPreferredDuringSchedulingIgnoredDuringExecution() {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preferredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._preferredDuringSchedulingIgnoredDuringExecution.internalValue;
  }

  // required_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _requiredDuringSchedulingIgnoredDuringExecution = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference(this, "required_during_scheduling_ignored_during_execution");
  public get requiredDuringSchedulingIgnoredDuringExecution() {
    return this._requiredDuringSchedulingIgnoredDuringExecution;
  }
  public putRequiredDuringSchedulingIgnoredDuringExecution(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetRequiredDuringSchedulingIgnoredDuringExecution() {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._requiredDuringSchedulingIgnoredDuringExecution.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#operator DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#values DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_expressions DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_labels DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#operator DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#values DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_expressions DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_labels DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#label_selector DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_label_keys DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_label_keys}
  */
  readonly matchLabelKeys?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#mismatch_label_keys DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#mismatch_label_keys}
  */
  readonly mismatchLabelKeys?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#namespace_selector DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#namespace_selector}
  */
  readonly namespaceSelector?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#namespaces DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#topology_key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#topology_key}
  */
  readonly topologyKey?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToTerraform(struct!.labelSelector),
    match_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.matchLabelKeys),
    mismatch_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.mismatchLabelKeys),
    namespace_selector: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToTerraform(struct!.namespaceSelector),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    topology_key: cdktf.stringToTerraform(struct!.topologyKey),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
    },
    match_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.matchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    mismatch_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.mismatchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    namespace_selector: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToHclTerraform(struct!.namespaceSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    topology_key: {
      value: cdktf.stringToHclTerraform(struct!.topologyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._matchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabelKeys = this._matchLabelKeys;
    }
    if (this._mismatchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.mismatchLabelKeys = this._mismatchLabelKeys;
    }
    if (this._namespaceSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaceSelector = this._namespaceSelector?.internalValue;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._topologyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyKey = this._topologyKey;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._matchLabelKeys = undefined;
      this._mismatchLabelKeys = undefined;
      this._namespaceSelector.internalValue = undefined;
      this._namespaces = undefined;
      this._topologyKey = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._matchLabelKeys = value.matchLabelKeys;
      this._mismatchLabelKeys = value.mismatchLabelKeys;
      this._namespaceSelector.internalValue = value.namespaceSelector;
      this._namespaces = value.namespaces;
      this._topologyKey = value.topologyKey;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // match_label_keys - computed: false, optional: true, required: false
  private _matchLabelKeys?: string[]; 
  public get matchLabelKeys() {
    return this.getListAttribute('match_label_keys');
  }
  public set matchLabelKeys(value: string[]) {
    this._matchLabelKeys = value;
  }
  public resetMatchLabelKeys() {
    this._matchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelKeysInput() {
    return this._matchLabelKeys;
  }

  // mismatch_label_keys - computed: false, optional: true, required: false
  private _mismatchLabelKeys?: string[]; 
  public get mismatchLabelKeys() {
    return this.getListAttribute('mismatch_label_keys');
  }
  public set mismatchLabelKeys(value: string[]) {
    this._mismatchLabelKeys = value;
  }
  public resetMismatchLabelKeys() {
    this._mismatchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mismatchLabelKeysInput() {
    return this._mismatchLabelKeys;
  }

  // namespace_selector - computed: false, optional: true, required: false
  private _namespaceSelector = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputReference(this, "namespace_selector");
  public get namespaceSelector() {
    return this._namespaceSelector;
  }
  public putNamespaceSelector(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) {
    this._namespaceSelector.internalValue = value;
  }
  public resetNamespaceSelector() {
    this._namespaceSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceSelectorInput() {
    return this._namespaceSelector.internalValue;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // topology_key - computed: false, optional: true, required: false
  private _topologyKey?: string; 
  public get topologyKey() {
    return this.getStringAttribute('topology_key');
  }
  public set topologyKey(value: string) {
    this._topologyKey = value;
  }
  public resetTopologyKey() {
    this._topologyKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyKeyInput() {
    return this._topologyKey;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#pod_affinity_term DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#pod_affinity_term}
  */
  readonly podAffinityTerm?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#weight DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#weight}
  */
  readonly weight?: number;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    pod_affinity_term: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToTerraform(struct!.podAffinityTerm),
    weight: cdktf.numberToTerraform(struct!.weight),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    pod_affinity_term: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToHclTerraform(struct!.podAffinityTerm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
    },
    weight: {
      value: cdktf.numberToHclTerraform(struct!.weight),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._podAffinityTerm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAffinityTerm = this._podAffinityTerm?.internalValue;
    }
    if (this._weight !== undefined) {
      hasAnyValues = true;
      internalValueResult.weight = this._weight;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._podAffinityTerm.internalValue = undefined;
      this._weight = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._podAffinityTerm.internalValue = value.podAffinityTerm;
      this._weight = value.weight;
    }
  }

  // pod_affinity_term - computed: false, optional: true, required: false
  private _podAffinityTerm = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputReference(this, "pod_affinity_term");
  public get podAffinityTerm() {
    return this._podAffinityTerm;
  }
  public putPodAffinityTerm(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) {
    this._podAffinityTerm.internalValue = value;
  }
  public resetPodAffinityTerm() {
    this._podAffinityTerm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podAffinityTermInput() {
    return this._podAffinityTerm.internalValue;
  }

  // weight - computed: false, optional: true, required: false
  private _weight?: number; 
  public get weight() {
    return this.getNumberAttribute('weight');
  }
  public set weight(value: number) {
    this._weight = value;
  }
  public resetWeight() {
    this._weight = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get weightInput() {
    return this._weight;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#operator DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#values DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_expressions DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_labels DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#operator DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#values DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_expressions DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_labels DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#label_selector DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_label_keys DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_label_keys}
  */
  readonly matchLabelKeys?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#mismatch_label_keys DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#mismatch_label_keys}
  */
  readonly mismatchLabelKeys?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#namespace_selector DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#namespace_selector}
  */
  readonly namespaceSelector?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#namespaces DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#topology_key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#topology_key}
  */
  readonly topologyKey?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToTerraform(struct!.labelSelector),
    match_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.matchLabelKeys),
    mismatch_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.mismatchLabelKeys),
    namespace_selector: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToTerraform(struct!.namespaceSelector),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    topology_key: cdktf.stringToTerraform(struct!.topologyKey),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
    },
    match_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.matchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    mismatch_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.mismatchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    namespace_selector: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToHclTerraform(struct!.namespaceSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    topology_key: {
      value: cdktf.stringToHclTerraform(struct!.topologyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._matchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabelKeys = this._matchLabelKeys;
    }
    if (this._mismatchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.mismatchLabelKeys = this._mismatchLabelKeys;
    }
    if (this._namespaceSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaceSelector = this._namespaceSelector?.internalValue;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._topologyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyKey = this._topologyKey;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._matchLabelKeys = undefined;
      this._mismatchLabelKeys = undefined;
      this._namespaceSelector.internalValue = undefined;
      this._namespaces = undefined;
      this._topologyKey = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._matchLabelKeys = value.matchLabelKeys;
      this._mismatchLabelKeys = value.mismatchLabelKeys;
      this._namespaceSelector.internalValue = value.namespaceSelector;
      this._namespaces = value.namespaces;
      this._topologyKey = value.topologyKey;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // match_label_keys - computed: false, optional: true, required: false
  private _matchLabelKeys?: string[]; 
  public get matchLabelKeys() {
    return this.getListAttribute('match_label_keys');
  }
  public set matchLabelKeys(value: string[]) {
    this._matchLabelKeys = value;
  }
  public resetMatchLabelKeys() {
    this._matchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelKeysInput() {
    return this._matchLabelKeys;
  }

  // mismatch_label_keys - computed: false, optional: true, required: false
  private _mismatchLabelKeys?: string[]; 
  public get mismatchLabelKeys() {
    return this.getListAttribute('mismatch_label_keys');
  }
  public set mismatchLabelKeys(value: string[]) {
    this._mismatchLabelKeys = value;
  }
  public resetMismatchLabelKeys() {
    this._mismatchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mismatchLabelKeysInput() {
    return this._mismatchLabelKeys;
  }

  // namespace_selector - computed: false, optional: true, required: false
  private _namespaceSelector = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputReference(this, "namespace_selector");
  public get namespaceSelector() {
    return this._namespaceSelector;
  }
  public putNamespaceSelector(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) {
    this._namespaceSelector.internalValue = value;
  }
  public resetNamespaceSelector() {
    this._namespaceSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceSelectorInput() {
    return this._namespaceSelector.internalValue;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // topology_key - computed: false, optional: true, required: false
  private _topologyKey?: string; 
  public get topologyKey() {
    return this.getStringAttribute('topology_key');
  }
  public set topologyKey(value: string) {
    this._topologyKey = value;
  }
  public resetTopologyKey() {
    this._topologyKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyKeyInput() {
    return this._topologyKey;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinity {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#preferred_during_scheduling_ignored_during_execution DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#preferred_during_scheduling_ignored_during_execution}
  */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#required_during_scheduling_ignored_during_execution DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#required_during_scheduling_ignored_during_execution}
  */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    preferred_during_scheduling_ignored_during_execution: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
    required_during_scheduling_ignored_during_execution: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform, false)(struct!.requiredDuringSchedulingIgnoredDuringExecution),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    preferred_during_scheduling_ignored_during_execution: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionList",
    },
    required_during_scheduling_ignored_during_execution: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform, false)(struct!.requiredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.preferredDuringSchedulingIgnoredDuringExecution = this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    if (this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requiredDuringSchedulingIgnoredDuringExecution = this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value.preferredDuringSchedulingIgnoredDuringExecution;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value.requiredDuringSchedulingIgnoredDuringExecution;
    }
  }

  // preferred_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _preferredDuringSchedulingIgnoredDuringExecution = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionList(this, "preferred_during_scheduling_ignored_during_execution", false);
  public get preferredDuringSchedulingIgnoredDuringExecution() {
    return this._preferredDuringSchedulingIgnoredDuringExecution;
  }
  public putPreferredDuringSchedulingIgnoredDuringExecution(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable) {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetPreferredDuringSchedulingIgnoredDuringExecution() {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preferredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._preferredDuringSchedulingIgnoredDuringExecution.internalValue;
  }

  // required_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _requiredDuringSchedulingIgnoredDuringExecution = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionList(this, "required_during_scheduling_ignored_during_execution", false);
  public get requiredDuringSchedulingIgnoredDuringExecution() {
    return this._requiredDuringSchedulingIgnoredDuringExecution;
  }
  public putRequiredDuringSchedulingIgnoredDuringExecution(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable) {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetRequiredDuringSchedulingIgnoredDuringExecution() {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._requiredDuringSchedulingIgnoredDuringExecution.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#operator DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#values DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_expressions DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_labels DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#operator DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#values DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_expressions DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_labels DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#label_selector DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_label_keys DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_label_keys}
  */
  readonly matchLabelKeys?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#mismatch_label_keys DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#mismatch_label_keys}
  */
  readonly mismatchLabelKeys?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#namespace_selector DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#namespace_selector}
  */
  readonly namespaceSelector?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#namespaces DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#topology_key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#topology_key}
  */
  readonly topologyKey?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToTerraform(struct!.labelSelector),
    match_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.matchLabelKeys),
    mismatch_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.mismatchLabelKeys),
    namespace_selector: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToTerraform(struct!.namespaceSelector),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    topology_key: cdktf.stringToTerraform(struct!.topologyKey),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector",
    },
    match_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.matchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    mismatch_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.mismatchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    namespace_selector: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorToHclTerraform(struct!.namespaceSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    topology_key: {
      value: cdktf.stringToHclTerraform(struct!.topologyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._matchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabelKeys = this._matchLabelKeys;
    }
    if (this._mismatchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.mismatchLabelKeys = this._mismatchLabelKeys;
    }
    if (this._namespaceSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaceSelector = this._namespaceSelector?.internalValue;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._topologyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyKey = this._topologyKey;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._matchLabelKeys = undefined;
      this._mismatchLabelKeys = undefined;
      this._namespaceSelector.internalValue = undefined;
      this._namespaces = undefined;
      this._topologyKey = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._matchLabelKeys = value.matchLabelKeys;
      this._mismatchLabelKeys = value.mismatchLabelKeys;
      this._namespaceSelector.internalValue = value.namespaceSelector;
      this._namespaces = value.namespaces;
      this._topologyKey = value.topologyKey;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // match_label_keys - computed: false, optional: true, required: false
  private _matchLabelKeys?: string[]; 
  public get matchLabelKeys() {
    return this.getListAttribute('match_label_keys');
  }
  public set matchLabelKeys(value: string[]) {
    this._matchLabelKeys = value;
  }
  public resetMatchLabelKeys() {
    this._matchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelKeysInput() {
    return this._matchLabelKeys;
  }

  // mismatch_label_keys - computed: false, optional: true, required: false
  private _mismatchLabelKeys?: string[]; 
  public get mismatchLabelKeys() {
    return this.getListAttribute('mismatch_label_keys');
  }
  public set mismatchLabelKeys(value: string[]) {
    this._mismatchLabelKeys = value;
  }
  public resetMismatchLabelKeys() {
    this._mismatchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mismatchLabelKeysInput() {
    return this._mismatchLabelKeys;
  }

  // namespace_selector - computed: false, optional: true, required: false
  private _namespaceSelector = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputReference(this, "namespace_selector");
  public get namespaceSelector() {
    return this._namespaceSelector;
  }
  public putNamespaceSelector(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) {
    this._namespaceSelector.internalValue = value;
  }
  public resetNamespaceSelector() {
    this._namespaceSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceSelectorInput() {
    return this._namespaceSelector.internalValue;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // topology_key - computed: false, optional: true, required: false
  private _topologyKey?: string; 
  public get topologyKey() {
    return this.getStringAttribute('topology_key');
  }
  public set topologyKey(value: string) {
    this._topologyKey = value;
  }
  public resetTopologyKey() {
    this._topologyKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyKeyInput() {
    return this._topologyKey;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#pod_affinity_term DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#pod_affinity_term}
  */
  readonly podAffinityTerm?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#weight DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#weight}
  */
  readonly weight?: number;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    pod_affinity_term: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToTerraform(struct!.podAffinityTerm),
    weight: cdktf.numberToTerraform(struct!.weight),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    pod_affinity_term: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermToHclTerraform(struct!.podAffinityTerm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm",
    },
    weight: {
      value: cdktf.numberToHclTerraform(struct!.weight),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._podAffinityTerm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAffinityTerm = this._podAffinityTerm?.internalValue;
    }
    if (this._weight !== undefined) {
      hasAnyValues = true;
      internalValueResult.weight = this._weight;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._podAffinityTerm.internalValue = undefined;
      this._weight = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._podAffinityTerm.internalValue = value.podAffinityTerm;
      this._weight = value.weight;
    }
  }

  // pod_affinity_term - computed: false, optional: true, required: false
  private _podAffinityTerm = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputReference(this, "pod_affinity_term");
  public get podAffinityTerm() {
    return this._podAffinityTerm;
  }
  public putPodAffinityTerm(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) {
    this._podAffinityTerm.internalValue = value;
  }
  public resetPodAffinityTerm() {
    this._podAffinityTerm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podAffinityTermInput() {
    return this._podAffinityTerm.internalValue;
  }

  // weight - computed: false, optional: true, required: false
  private _weight?: number; 
  public get weight() {
    return this.getNumberAttribute('weight');
  }
  public set weight(value: number) {
    this._weight = value;
  }
  public resetWeight() {
    this._weight = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get weightInput() {
    return this._weight;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#operator DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#values DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_expressions DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_labels DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#operator DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#values DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_expressions DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_labels DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#label_selector DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#match_label_keys DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#match_label_keys}
  */
  readonly matchLabelKeys?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#mismatch_label_keys DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#mismatch_label_keys}
  */
  readonly mismatchLabelKeys?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#namespace_selector DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#namespace_selector}
  */
  readonly namespaceSelector?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#namespaces DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#topology_key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#topology_key}
  */
  readonly topologyKey?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToTerraform(struct!.labelSelector),
    match_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.matchLabelKeys),
    mismatch_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.mismatchLabelKeys),
    namespace_selector: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToTerraform(struct!.namespaceSelector),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    topology_key: cdktf.stringToTerraform(struct!.topologyKey),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector",
    },
    match_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.matchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    mismatch_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.mismatchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    namespace_selector: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorToHclTerraform(struct!.namespaceSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    topology_key: {
      value: cdktf.stringToHclTerraform(struct!.topologyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._matchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabelKeys = this._matchLabelKeys;
    }
    if (this._mismatchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.mismatchLabelKeys = this._mismatchLabelKeys;
    }
    if (this._namespaceSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaceSelector = this._namespaceSelector?.internalValue;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._topologyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyKey = this._topologyKey;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._matchLabelKeys = undefined;
      this._mismatchLabelKeys = undefined;
      this._namespaceSelector.internalValue = undefined;
      this._namespaces = undefined;
      this._topologyKey = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._matchLabelKeys = value.matchLabelKeys;
      this._mismatchLabelKeys = value.mismatchLabelKeys;
      this._namespaceSelector.internalValue = value.namespaceSelector;
      this._namespaces = value.namespaces;
      this._topologyKey = value.topologyKey;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // match_label_keys - computed: false, optional: true, required: false
  private _matchLabelKeys?: string[]; 
  public get matchLabelKeys() {
    return this.getListAttribute('match_label_keys');
  }
  public set matchLabelKeys(value: string[]) {
    this._matchLabelKeys = value;
  }
  public resetMatchLabelKeys() {
    this._matchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelKeysInput() {
    return this._matchLabelKeys;
  }

  // mismatch_label_keys - computed: false, optional: true, required: false
  private _mismatchLabelKeys?: string[]; 
  public get mismatchLabelKeys() {
    return this.getListAttribute('mismatch_label_keys');
  }
  public set mismatchLabelKeys(value: string[]) {
    this._mismatchLabelKeys = value;
  }
  public resetMismatchLabelKeys() {
    this._mismatchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mismatchLabelKeysInput() {
    return this._mismatchLabelKeys;
  }

  // namespace_selector - computed: false, optional: true, required: false
  private _namespaceSelector = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputReference(this, "namespace_selector");
  public get namespaceSelector() {
    return this._namespaceSelector;
  }
  public putNamespaceSelector(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) {
    this._namespaceSelector.internalValue = value;
  }
  public resetNamespaceSelector() {
    this._namespaceSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceSelectorInput() {
    return this._namespaceSelector.internalValue;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // topology_key - computed: false, optional: true, required: false
  private _topologyKey?: string; 
  public get topologyKey() {
    return this.getStringAttribute('topology_key');
  }
  public set topologyKey(value: string) {
    this._topologyKey = value;
  }
  public resetTopologyKey() {
    this._topologyKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyKeyInput() {
    return this._topologyKey;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinity {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#preferred_during_scheduling_ignored_during_execution DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#preferred_during_scheduling_ignored_during_execution}
  */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#required_during_scheduling_ignored_during_execution DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#required_during_scheduling_ignored_during_execution}
  */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    preferred_during_scheduling_ignored_during_execution: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionToTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
    required_during_scheduling_ignored_during_execution: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionToTerraform, false)(struct!.requiredDuringSchedulingIgnoredDuringExecution),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    preferred_during_scheduling_ignored_during_execution: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionToHclTerraform, false)(struct!.preferredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionList",
    },
    required_during_scheduling_ignored_during_execution: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionToHclTerraform, false)(struct!.requiredDuringSchedulingIgnoredDuringExecution),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.preferredDuringSchedulingIgnoredDuringExecution = this._preferredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    if (this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.requiredDuringSchedulingIgnoredDuringExecution = this._requiredDuringSchedulingIgnoredDuringExecution?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value.preferredDuringSchedulingIgnoredDuringExecution;
      this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value.requiredDuringSchedulingIgnoredDuringExecution;
    }
  }

  // preferred_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _preferredDuringSchedulingIgnoredDuringExecution = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionList(this, "preferred_during_scheduling_ignored_during_execution", false);
  public get preferredDuringSchedulingIgnoredDuringExecution() {
    return this._preferredDuringSchedulingIgnoredDuringExecution;
  }
  public putPreferredDuringSchedulingIgnoredDuringExecution(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable) {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetPreferredDuringSchedulingIgnoredDuringExecution() {
    this._preferredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preferredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._preferredDuringSchedulingIgnoredDuringExecution.internalValue;
  }

  // required_during_scheduling_ignored_during_execution - computed: false, optional: true, required: false
  private _requiredDuringSchedulingIgnoredDuringExecution = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionList(this, "required_during_scheduling_ignored_during_execution", false);
  public get requiredDuringSchedulingIgnoredDuringExecution() {
    return this._requiredDuringSchedulingIgnoredDuringExecution;
  }
  public putRequiredDuringSchedulingIgnoredDuringExecution(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[] | cdktf.IResolvable) {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = value;
  }
  public resetRequiredDuringSchedulingIgnoredDuringExecution() {
    this._requiredDuringSchedulingIgnoredDuringExecution.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredDuringSchedulingIgnoredDuringExecutionInput() {
    return this._requiredDuringSchedulingIgnoredDuringExecution.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinity {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#node_affinity DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#node_affinity}
  */
  readonly nodeAffinity?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#pod_affinity DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#pod_affinity}
  */
  readonly podAffinity?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinity;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#pod_anti_affinity DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#pod_anti_affinity}
  */
  readonly podAntiAffinity?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinity;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    node_affinity: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityToTerraform(struct!.nodeAffinity),
    pod_affinity: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityToTerraform(struct!.podAffinity),
    pod_anti_affinity: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityToTerraform(struct!.podAntiAffinity),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    node_affinity: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityToHclTerraform(struct!.nodeAffinity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinity",
    },
    pod_affinity: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityToHclTerraform(struct!.podAffinity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinity",
    },
    pod_anti_affinity: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityToHclTerraform(struct!.podAntiAffinity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinity",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nodeAffinity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeAffinity = this._nodeAffinity?.internalValue;
    }
    if (this._podAffinity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAffinity = this._podAffinity?.internalValue;
    }
    if (this._podAntiAffinity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAntiAffinity = this._podAntiAffinity?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nodeAffinity.internalValue = undefined;
      this._podAffinity.internalValue = undefined;
      this._podAntiAffinity.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nodeAffinity.internalValue = value.nodeAffinity;
      this._podAffinity.internalValue = value.podAffinity;
      this._podAntiAffinity.internalValue = value.podAntiAffinity;
    }
  }

  // node_affinity - computed: false, optional: true, required: false
  private _nodeAffinity = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinityOutputReference(this, "node_affinity");
  public get nodeAffinity() {
    return this._nodeAffinity;
  }
  public putNodeAffinity(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityNodeAffinity) {
    this._nodeAffinity.internalValue = value;
  }
  public resetNodeAffinity() {
    this._nodeAffinity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeAffinityInput() {
    return this._nodeAffinity.internalValue;
  }

  // pod_affinity - computed: false, optional: true, required: false
  private _podAffinity = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinityOutputReference(this, "pod_affinity");
  public get podAffinity() {
    return this._podAffinity;
  }
  public putPodAffinity(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAffinity) {
    this._podAffinity.internalValue = value;
  }
  public resetPodAffinity() {
    this._podAffinity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podAffinityInput() {
    return this._podAffinity.internalValue;
  }

  // pod_anti_affinity - computed: false, optional: true, required: false
  private _podAntiAffinity = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinityOutputReference(this, "pod_anti_affinity");
  public get podAntiAffinity() {
    return this._podAntiAffinity;
  }
  public putPodAntiAffinity(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecAffinityPodAntiAffinity) {
    this._podAntiAffinity.internalValue = value;
  }
  public resetPodAntiAffinity() {
    this._podAntiAffinity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podAntiAffinityInput() {
    return this._podAntiAffinity.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromConfigMapKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#optional DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromConfigMapKeyRefToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromConfigMapKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromConfigMapKeyRefToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromConfigMapKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromConfigMapKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromConfigMapKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromConfigMapKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
      this._optional = value.optional;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#api_version DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#field_path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#field_path}
  */
  readonly fieldPath?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromFieldRefToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    field_path: cdktf.stringToTerraform(struct!.fieldPath),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromFieldRefToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    field_path: {
      value: cdktf.stringToHclTerraform(struct!.fieldPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldPath = this._fieldPath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldPath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldPath = value.fieldPath;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // field_path - computed: false, optional: true, required: false
  private _fieldPath?: string; 
  public get fieldPath() {
    return this.getStringAttribute('field_path');
  }
  public set fieldPath(value: string) {
    this._fieldPath = value;
  }
  public resetFieldPath() {
    this._fieldPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldPathInput() {
    return this._fieldPath;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromResourceFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#container_name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#container_name}
  */
  readonly containerName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#divisor DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#divisor}
  */
  readonly divisor?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#resource DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#resource}
  */
  readonly resource?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromResourceFieldRefToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_name: cdktf.stringToTerraform(struct!.containerName),
    divisor: cdktf.stringToTerraform(struct!.divisor),
    resource: cdktf.stringToTerraform(struct!.resource),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromResourceFieldRefToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_name: {
      value: cdktf.stringToHclTerraform(struct!.containerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    divisor: {
      value: cdktf.stringToHclTerraform(struct!.divisor),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromResourceFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromResourceFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerName = this._containerName;
    }
    if (this._divisor !== undefined) {
      hasAnyValues = true;
      internalValueResult.divisor = this._divisor;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromResourceFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerName = undefined;
      this._divisor = undefined;
      this._resource = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerName = value.containerName;
      this._divisor = value.divisor;
      this._resource = value.resource;
    }
  }

  // container_name - computed: false, optional: true, required: false
  private _containerName?: string; 
  public get containerName() {
    return this.getStringAttribute('container_name');
  }
  public set containerName(value: string) {
    this._containerName = value;
  }
  public resetContainerName() {
    this._containerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNameInput() {
    return this._containerName;
  }

  // divisor - computed: false, optional: true, required: false
  private _divisor?: string; 
  public get divisor() {
    return this.getStringAttribute('divisor');
  }
  public set divisor(value: string) {
    this._divisor = value;
  }
  public resetDivisor() {
    this._divisor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get divisorInput() {
    return this._divisor;
  }

  // resource - computed: false, optional: true, required: false
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  public resetResource() {
    this._resource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#optional DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromSecretKeyRefToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromSecretKeyRefToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
      this._optional = value.optional;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#config_map_key_ref DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#config_map_key_ref}
  */
  readonly configMapKeyRef?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromConfigMapKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#field_ref DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#field_ref}
  */
  readonly fieldRef?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromFieldRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#resource_field_ref DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#resource_field_ref}
  */
  readonly resourceFieldRef?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromResourceFieldRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#secret_key_ref DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromSecretKeyRef;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config_map_key_ref: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromConfigMapKeyRefToTerraform(struct!.configMapKeyRef),
    field_ref: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromFieldRefToTerraform(struct!.fieldRef),
    resource_field_ref: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromResourceFieldRefToTerraform(struct!.resourceFieldRef),
    secret_key_ref: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config_map_key_ref: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromConfigMapKeyRefToHclTerraform(struct!.configMapKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromConfigMapKeyRef",
    },
    field_ref: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromFieldRefToHclTerraform(struct!.fieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromFieldRef",
    },
    resource_field_ref: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromResourceFieldRefToHclTerraform(struct!.resourceFieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromResourceFieldRef",
    },
    secret_key_ref: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configMapKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.configMapKeyRef = this._configMapKeyRef?.internalValue;
    }
    if (this._fieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldRef = this._fieldRef?.internalValue;
    }
    if (this._resourceFieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceFieldRef = this._resourceFieldRef?.internalValue;
    }
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configMapKeyRef.internalValue = undefined;
      this._fieldRef.internalValue = undefined;
      this._resourceFieldRef.internalValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configMapKeyRef.internalValue = value.configMapKeyRef;
      this._fieldRef.internalValue = value.fieldRef;
      this._resourceFieldRef.internalValue = value.resourceFieldRef;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // config_map_key_ref - computed: false, optional: true, required: false
  private _configMapKeyRef = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromConfigMapKeyRefOutputReference(this, "config_map_key_ref");
  public get configMapKeyRef() {
    return this._configMapKeyRef;
  }
  public putConfigMapKeyRef(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromConfigMapKeyRef) {
    this._configMapKeyRef.internalValue = value;
  }
  public resetConfigMapKeyRef() {
    this._configMapKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configMapKeyRefInput() {
    return this._configMapKeyRef.internalValue;
  }

  // field_ref - computed: false, optional: true, required: false
  private _fieldRef = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromFieldRefOutputReference(this, "field_ref");
  public get fieldRef() {
    return this._fieldRef;
  }
  public putFieldRef(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromFieldRef) {
    this._fieldRef.internalValue = value;
  }
  public resetFieldRef() {
    this._fieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldRefInput() {
    return this._fieldRef.internalValue;
  }

  // resource_field_ref - computed: false, optional: true, required: false
  private _resourceFieldRef = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromResourceFieldRefOutputReference(this, "resource_field_ref");
  public get resourceFieldRef() {
    return this._resourceFieldRef;
  }
  public putResourceFieldRef(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromResourceFieldRef) {
    this._resourceFieldRef.internalValue = value;
  }
  public resetResourceFieldRef() {
    this._resourceFieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceFieldRefInput() {
    return this._resourceFieldRef.internalValue;
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnv {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#value DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#value_from DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#value_from}
  */
  readonly valueFrom?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFrom;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnv | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnv | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnv | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnv | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnv[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromConfigMapRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#optional DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromConfigMapRefToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromConfigMapRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromConfigMapRefToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromConfigMapRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromConfigMapRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromConfigMapRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromConfigMapRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._optional = value.optional;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#optional DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromSecretRefToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromSecretRefToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._optional = value.optional;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#config_map_ref DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#config_map_ref}
  */
  readonly configMapRef?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromConfigMapRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#prefix DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#prefix}
  */
  readonly prefix?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#secret_ref DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromSecretRef;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config_map_ref: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromConfigMapRefToTerraform(struct!.configMapRef),
    prefix: cdktf.stringToTerraform(struct!.prefix),
    secret_ref: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromSecretRefToTerraform(struct!.secretRef),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config_map_ref: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromConfigMapRefToHclTerraform(struct!.configMapRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromConfigMapRef",
    },
    prefix: {
      value: cdktf.stringToHclTerraform(struct!.prefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_ref: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromSecretRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configMapRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.configMapRef = this._configMapRef?.internalValue;
    }
    if (this._prefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefix = this._prefix;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configMapRef.internalValue = undefined;
      this._prefix = undefined;
      this._secretRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configMapRef.internalValue = value.configMapRef;
      this._prefix = value.prefix;
      this._secretRef.internalValue = value.secretRef;
    }
  }

  // config_map_ref - computed: false, optional: true, required: false
  private _configMapRef = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromConfigMapRefOutputReference(this, "config_map_ref");
  public get configMapRef() {
    return this._configMapRef;
  }
  public putConfigMapRef(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromConfigMapRef) {
    this._configMapRef.internalValue = value;
  }
  public resetConfigMapRef() {
    this._configMapRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configMapRefInput() {
    return this._configMapRef.internalValue;
  }

  // prefix - computed: false, optional: true, required: false
  private _prefix?: string; 
  public get prefix() {
    return this.getStringAttribute('prefix');
  }
  public set prefix(value: string) {
    this._prefix = value;
  }
  public resetPrefix() {
    this._prefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixInput() {
    return this._prefix;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFrom[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartExec {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#command DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#command}
  */
  readonly command?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartExecToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartExecToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartExecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartExec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartExec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#value DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeadersToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeadersToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeadersOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGet {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#http_headers DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#http_headers}
  */
  readonly httpHeaders?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeaders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#scheme DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#scheme}
  */
  readonly scheme?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    http_headers: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeadersToTerraform, false)(struct!.httpHeaders),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.stringToTerraform(struct!.port),
    scheme: cdktf.stringToTerraform(struct!.scheme),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    http_headers: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeadersToHclTerraform, false)(struct!.httpHeaders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeadersList",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme: {
      value: cdktf.stringToHclTerraform(struct!.scheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGet | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._httpHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpHeaders = this._httpHeaders?.internalValue;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._scheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.scheme = this._scheme;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGet | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._httpHeaders.internalValue = undefined;
      this._path = undefined;
      this._port = undefined;
      this._scheme = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._httpHeaders.internalValue = value.httpHeaders;
      this._path = value.path;
      this._port = value.port;
      this._scheme = value.scheme;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // http_headers - computed: false, optional: true, required: false
  private _httpHeaders = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeadersList(this, "http_headers", false);
  public get httpHeaders() {
    return this._httpHeaders;
  }
  public putHttpHeaders(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetHttpHeaders[] | cdktf.IResolvable) {
    this._httpHeaders.internalValue = value;
  }
  public resetHttpHeaders() {
    this._httpHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpHeadersInput() {
    return this._httpHeaders.internalValue;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // scheme - computed: false, optional: true, required: false
  private _scheme?: string; 
  public get scheme() {
    return this.getStringAttribute('scheme');
  }
  public set scheme(value: string) {
    this._scheme = value;
  }
  public resetScheme() {
    this._scheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeInput() {
    return this._scheme;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartSleep {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#seconds}
  */
  readonly seconds?: number;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartSleepToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartSleep | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    seconds: cdktf.numberToTerraform(struct!.seconds),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartSleepToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartSleep | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    seconds: {
      value: cdktf.numberToHclTerraform(struct!.seconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartSleepOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartSleep | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._seconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.seconds = this._seconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartSleep | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._seconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._seconds = value.seconds;
    }
  }

  // seconds - computed: false, optional: true, required: false
  private _seconds?: number; 
  public get seconds() {
    return this.getNumberAttribute('seconds');
  }
  public set seconds(value: number) {
    this._seconds = value;
  }
  public resetSeconds() {
    this._seconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secondsInput() {
    return this._seconds;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartTcpSocket {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartTcpSocketToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    port: cdktf.stringToTerraform(struct!.port),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartTcpSocketToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartTcpSocketOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartTcpSocket | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartTcpSocket | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._port = value.port;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStart {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#exec DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#exec}
  */
  readonly exec?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartExec;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#http_get DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#http_get}
  */
  readonly httpGet?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGet;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#sleep DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#sleep}
  */
  readonly sleep?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartSleep;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#tcp_socket DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#tcp_socket}
  */
  readonly tcpSocket?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartTcpSocket;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exec: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartExecToTerraform(struct!.exec),
    http_get: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetToTerraform(struct!.httpGet),
    sleep: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartSleepToTerraform(struct!.sleep),
    tcp_socket: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartTcpSocketToTerraform(struct!.tcpSocket),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exec: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartExecToHclTerraform(struct!.exec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartExec",
    },
    http_get: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetToHclTerraform(struct!.httpGet),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGet",
    },
    sleep: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartSleepToHclTerraform(struct!.sleep),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartSleep",
    },
    tcp_socket: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartTcpSocketToHclTerraform(struct!.tcpSocket),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartTcpSocket",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStart | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.exec = this._exec?.internalValue;
    }
    if (this._httpGet?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpGet = this._httpGet?.internalValue;
    }
    if (this._sleep?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sleep = this._sleep?.internalValue;
    }
    if (this._tcpSocket?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tcpSocket = this._tcpSocket?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStart | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exec.internalValue = undefined;
      this._httpGet.internalValue = undefined;
      this._sleep.internalValue = undefined;
      this._tcpSocket.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exec.internalValue = value.exec;
      this._httpGet.internalValue = value.httpGet;
      this._sleep.internalValue = value.sleep;
      this._tcpSocket.internalValue = value.tcpSocket;
    }
  }

  // exec - computed: false, optional: true, required: false
  private _exec = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartExecOutputReference(this, "exec");
  public get exec() {
    return this._exec;
  }
  public putExec(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartExec) {
    this._exec.internalValue = value;
  }
  public resetExec() {
    this._exec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get execInput() {
    return this._exec.internalValue;
  }

  // http_get - computed: false, optional: true, required: false
  private _httpGet = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGetOutputReference(this, "http_get");
  public get httpGet() {
    return this._httpGet;
  }
  public putHttpGet(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartHttpGet) {
    this._httpGet.internalValue = value;
  }
  public resetHttpGet() {
    this._httpGet.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpGetInput() {
    return this._httpGet.internalValue;
  }

  // sleep - computed: false, optional: true, required: false
  private _sleep = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartSleepOutputReference(this, "sleep");
  public get sleep() {
    return this._sleep;
  }
  public putSleep(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartSleep) {
    this._sleep.internalValue = value;
  }
  public resetSleep() {
    this._sleep.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sleepInput() {
    return this._sleep.internalValue;
  }

  // tcp_socket - computed: false, optional: true, required: false
  private _tcpSocket = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartTcpSocketOutputReference(this, "tcp_socket");
  public get tcpSocket() {
    return this._tcpSocket;
  }
  public putTcpSocket(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartTcpSocket) {
    this._tcpSocket.internalValue = value;
  }
  public resetTcpSocket() {
    this._tcpSocket.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tcpSocketInput() {
    return this._tcpSocket.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopExec {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#command DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#command}
  */
  readonly command?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopExecToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopExecToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopExecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopExec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopExec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#value DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeadersToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeadersToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeadersOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGet {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#http_headers DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#http_headers}
  */
  readonly httpHeaders?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeaders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#scheme DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#scheme}
  */
  readonly scheme?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    http_headers: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeadersToTerraform, false)(struct!.httpHeaders),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.stringToTerraform(struct!.port),
    scheme: cdktf.stringToTerraform(struct!.scheme),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    http_headers: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeadersToHclTerraform, false)(struct!.httpHeaders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeadersList",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme: {
      value: cdktf.stringToHclTerraform(struct!.scheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGet | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._httpHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpHeaders = this._httpHeaders?.internalValue;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._scheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.scheme = this._scheme;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGet | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._httpHeaders.internalValue = undefined;
      this._path = undefined;
      this._port = undefined;
      this._scheme = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._httpHeaders.internalValue = value.httpHeaders;
      this._path = value.path;
      this._port = value.port;
      this._scheme = value.scheme;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // http_headers - computed: false, optional: true, required: false
  private _httpHeaders = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeadersList(this, "http_headers", false);
  public get httpHeaders() {
    return this._httpHeaders;
  }
  public putHttpHeaders(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetHttpHeaders[] | cdktf.IResolvable) {
    this._httpHeaders.internalValue = value;
  }
  public resetHttpHeaders() {
    this._httpHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpHeadersInput() {
    return this._httpHeaders.internalValue;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // scheme - computed: false, optional: true, required: false
  private _scheme?: string; 
  public get scheme() {
    return this.getStringAttribute('scheme');
  }
  public set scheme(value: string) {
    this._scheme = value;
  }
  public resetScheme() {
    this._scheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeInput() {
    return this._scheme;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopSleep {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#seconds}
  */
  readonly seconds?: number;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopSleepToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopSleep | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    seconds: cdktf.numberToTerraform(struct!.seconds),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopSleepToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopSleep | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    seconds: {
      value: cdktf.numberToHclTerraform(struct!.seconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopSleepOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopSleep | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._seconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.seconds = this._seconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopSleep | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._seconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._seconds = value.seconds;
    }
  }

  // seconds - computed: false, optional: true, required: false
  private _seconds?: number; 
  public get seconds() {
    return this.getNumberAttribute('seconds');
  }
  public set seconds(value: number) {
    this._seconds = value;
  }
  public resetSeconds() {
    this._seconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secondsInput() {
    return this._seconds;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopTcpSocket {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopTcpSocketToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    port: cdktf.stringToTerraform(struct!.port),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopTcpSocketToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopTcpSocketOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopTcpSocket | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopTcpSocket | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._port = value.port;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStop {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#exec DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#exec}
  */
  readonly exec?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopExec;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#http_get DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#http_get}
  */
  readonly httpGet?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGet;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#sleep DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#sleep}
  */
  readonly sleep?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopSleep;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#tcp_socket DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#tcp_socket}
  */
  readonly tcpSocket?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopTcpSocket;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStop | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exec: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopExecToTerraform(struct!.exec),
    http_get: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetToTerraform(struct!.httpGet),
    sleep: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopSleepToTerraform(struct!.sleep),
    tcp_socket: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopTcpSocketToTerraform(struct!.tcpSocket),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStop | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exec: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopExecToHclTerraform(struct!.exec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopExec",
    },
    http_get: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetToHclTerraform(struct!.httpGet),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGet",
    },
    sleep: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopSleepToHclTerraform(struct!.sleep),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopSleep",
    },
    tcp_socket: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopTcpSocketToHclTerraform(struct!.tcpSocket),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopTcpSocket",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStop | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.exec = this._exec?.internalValue;
    }
    if (this._httpGet?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpGet = this._httpGet?.internalValue;
    }
    if (this._sleep?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sleep = this._sleep?.internalValue;
    }
    if (this._tcpSocket?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tcpSocket = this._tcpSocket?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStop | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exec.internalValue = undefined;
      this._httpGet.internalValue = undefined;
      this._sleep.internalValue = undefined;
      this._tcpSocket.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exec.internalValue = value.exec;
      this._httpGet.internalValue = value.httpGet;
      this._sleep.internalValue = value.sleep;
      this._tcpSocket.internalValue = value.tcpSocket;
    }
  }

  // exec - computed: false, optional: true, required: false
  private _exec = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopExecOutputReference(this, "exec");
  public get exec() {
    return this._exec;
  }
  public putExec(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopExec) {
    this._exec.internalValue = value;
  }
  public resetExec() {
    this._exec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get execInput() {
    return this._exec.internalValue;
  }

  // http_get - computed: false, optional: true, required: false
  private _httpGet = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGetOutputReference(this, "http_get");
  public get httpGet() {
    return this._httpGet;
  }
  public putHttpGet(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopHttpGet) {
    this._httpGet.internalValue = value;
  }
  public resetHttpGet() {
    this._httpGet.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpGetInput() {
    return this._httpGet.internalValue;
  }

  // sleep - computed: false, optional: true, required: false
  private _sleep = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopSleepOutputReference(this, "sleep");
  public get sleep() {
    return this._sleep;
  }
  public putSleep(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopSleep) {
    this._sleep.internalValue = value;
  }
  public resetSleep() {
    this._sleep.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sleepInput() {
    return this._sleep.internalValue;
  }

  // tcp_socket - computed: false, optional: true, required: false
  private _tcpSocket = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopTcpSocketOutputReference(this, "tcp_socket");
  public get tcpSocket() {
    return this._tcpSocket;
  }
  public putTcpSocket(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopTcpSocket) {
    this._tcpSocket.internalValue = value;
  }
  public resetTcpSocket() {
    this._tcpSocket.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tcpSocketInput() {
    return this._tcpSocket.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecycle {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#post_start DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#post_start}
  */
  readonly postStart?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStart;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#pre_stop DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#pre_stop}
  */
  readonly preStop?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStop;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecycleToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecycle | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    post_start: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartToTerraform(struct!.postStart),
    pre_stop: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopToTerraform(struct!.preStop),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecycleToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecycle | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    post_start: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartToHclTerraform(struct!.postStart),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStart",
    },
    pre_stop: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopToHclTerraform(struct!.preStop),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStop",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecycleOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecycle | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._postStart?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.postStart = this._postStart?.internalValue;
    }
    if (this._preStop?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.preStop = this._preStop?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecycle | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._postStart.internalValue = undefined;
      this._preStop.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._postStart.internalValue = value.postStart;
      this._preStop.internalValue = value.preStop;
    }
  }

  // post_start - computed: false, optional: true, required: false
  private _postStart = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStartOutputReference(this, "post_start");
  public get postStart() {
    return this._postStart;
  }
  public putPostStart(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePostStart) {
    this._postStart.internalValue = value;
  }
  public resetPostStart() {
    this._postStart.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get postStartInput() {
    return this._postStart.internalValue;
  }

  // pre_stop - computed: false, optional: true, required: false
  private _preStop = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStopOutputReference(this, "pre_stop");
  public get preStop() {
    return this._preStop;
  }
  public putPreStop(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecyclePreStop) {
    this._preStop.internalValue = value;
  }
  public resetPreStop() {
    this._preStop.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preStopInput() {
    return this._preStop.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeExec {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#command DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#command}
  */
  readonly command?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeExecToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeExecToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeExecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeExec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeExec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeGrpc {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#service DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#service}
  */
  readonly service?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeGrpcToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeGrpc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    port: cdktf.numberToTerraform(struct!.port),
    service: cdktf.stringToTerraform(struct!.service),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeGrpcToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeGrpc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    service: {
      value: cdktf.stringToHclTerraform(struct!.service),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeGrpcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeGrpc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._service !== undefined) {
      hasAnyValues = true;
      internalValueResult.service = this._service;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeGrpc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._port = undefined;
      this._service = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._port = value.port;
      this._service = value.service;
    }
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // service - computed: false, optional: true, required: false
  private _service?: string; 
  public get service() {
    return this.getStringAttribute('service');
  }
  public set service(value: string) {
    this._service = value;
  }
  public resetService() {
    this._service = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceInput() {
    return this._service;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#value DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeadersToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeadersToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeadersOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGet {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#http_headers DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#http_headers}
  */
  readonly httpHeaders?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeaders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#scheme DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#scheme}
  */
  readonly scheme?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    http_headers: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeadersToTerraform, false)(struct!.httpHeaders),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.stringToTerraform(struct!.port),
    scheme: cdktf.stringToTerraform(struct!.scheme),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    http_headers: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeadersToHclTerraform, false)(struct!.httpHeaders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeadersList",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme: {
      value: cdktf.stringToHclTerraform(struct!.scheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGet | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._httpHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpHeaders = this._httpHeaders?.internalValue;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._scheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.scheme = this._scheme;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGet | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._httpHeaders.internalValue = undefined;
      this._path = undefined;
      this._port = undefined;
      this._scheme = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._httpHeaders.internalValue = value.httpHeaders;
      this._path = value.path;
      this._port = value.port;
      this._scheme = value.scheme;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // http_headers - computed: false, optional: true, required: false
  private _httpHeaders = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeadersList(this, "http_headers", false);
  public get httpHeaders() {
    return this._httpHeaders;
  }
  public putHttpHeaders(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetHttpHeaders[] | cdktf.IResolvable) {
    this._httpHeaders.internalValue = value;
  }
  public resetHttpHeaders() {
    this._httpHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpHeadersInput() {
    return this._httpHeaders.internalValue;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // scheme - computed: false, optional: true, required: false
  private _scheme?: string; 
  public get scheme() {
    return this.getStringAttribute('scheme');
  }
  public set scheme(value: string) {
    this._scheme = value;
  }
  public resetScheme() {
    this._scheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeInput() {
    return this._scheme;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeTcpSocket {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeTcpSocketToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    port: cdktf.stringToTerraform(struct!.port),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeTcpSocketToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeTcpSocketOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeTcpSocket | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeTcpSocket | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._port = value.port;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbe {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#exec DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#exec}
  */
  readonly exec?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeExec;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#failure_threshold DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#failure_threshold}
  */
  readonly failureThreshold?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#grpc DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#grpc}
  */
  readonly grpc?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeGrpc;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#http_get DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#http_get}
  */
  readonly httpGet?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGet;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#initial_delay_seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#initial_delay_seconds}
  */
  readonly initialDelaySeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#period_seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#period_seconds}
  */
  readonly periodSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#success_threshold DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#success_threshold}
  */
  readonly successThreshold?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#tcp_socket DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#tcp_socket}
  */
  readonly tcpSocket?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeTcpSocket;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#termination_grace_period_seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#termination_grace_period_seconds}
  */
  readonly terminationGracePeriodSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#timeout_seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#timeout_seconds}
  */
  readonly timeoutSeconds?: number;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbe | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exec: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeExecToTerraform(struct!.exec),
    failure_threshold: cdktf.numberToTerraform(struct!.failureThreshold),
    grpc: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeGrpcToTerraform(struct!.grpc),
    http_get: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetToTerraform(struct!.httpGet),
    initial_delay_seconds: cdktf.numberToTerraform(struct!.initialDelaySeconds),
    period_seconds: cdktf.numberToTerraform(struct!.periodSeconds),
    success_threshold: cdktf.numberToTerraform(struct!.successThreshold),
    tcp_socket: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeTcpSocketToTerraform(struct!.tcpSocket),
    termination_grace_period_seconds: cdktf.numberToTerraform(struct!.terminationGracePeriodSeconds),
    timeout_seconds: cdktf.numberToTerraform(struct!.timeoutSeconds),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbe | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exec: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeExecToHclTerraform(struct!.exec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeExec",
    },
    failure_threshold: {
      value: cdktf.numberToHclTerraform(struct!.failureThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    grpc: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeGrpcToHclTerraform(struct!.grpc),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeGrpc",
    },
    http_get: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetToHclTerraform(struct!.httpGet),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGet",
    },
    initial_delay_seconds: {
      value: cdktf.numberToHclTerraform(struct!.initialDelaySeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    period_seconds: {
      value: cdktf.numberToHclTerraform(struct!.periodSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    success_threshold: {
      value: cdktf.numberToHclTerraform(struct!.successThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    tcp_socket: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeTcpSocketToHclTerraform(struct!.tcpSocket),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeTcpSocket",
    },
    termination_grace_period_seconds: {
      value: cdktf.numberToHclTerraform(struct!.terminationGracePeriodSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    timeout_seconds: {
      value: cdktf.numberToHclTerraform(struct!.timeoutSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbe | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.exec = this._exec?.internalValue;
    }
    if (this._failureThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.failureThreshold = this._failureThreshold;
    }
    if (this._grpc?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.grpc = this._grpc?.internalValue;
    }
    if (this._httpGet?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpGet = this._httpGet?.internalValue;
    }
    if (this._initialDelaySeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.initialDelaySeconds = this._initialDelaySeconds;
    }
    if (this._periodSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.periodSeconds = this._periodSeconds;
    }
    if (this._successThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.successThreshold = this._successThreshold;
    }
    if (this._tcpSocket?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tcpSocket = this._tcpSocket?.internalValue;
    }
    if (this._terminationGracePeriodSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.terminationGracePeriodSeconds = this._terminationGracePeriodSeconds;
    }
    if (this._timeoutSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeoutSeconds = this._timeoutSeconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbe | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exec.internalValue = undefined;
      this._failureThreshold = undefined;
      this._grpc.internalValue = undefined;
      this._httpGet.internalValue = undefined;
      this._initialDelaySeconds = undefined;
      this._periodSeconds = undefined;
      this._successThreshold = undefined;
      this._tcpSocket.internalValue = undefined;
      this._terminationGracePeriodSeconds = undefined;
      this._timeoutSeconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exec.internalValue = value.exec;
      this._failureThreshold = value.failureThreshold;
      this._grpc.internalValue = value.grpc;
      this._httpGet.internalValue = value.httpGet;
      this._initialDelaySeconds = value.initialDelaySeconds;
      this._periodSeconds = value.periodSeconds;
      this._successThreshold = value.successThreshold;
      this._tcpSocket.internalValue = value.tcpSocket;
      this._terminationGracePeriodSeconds = value.terminationGracePeriodSeconds;
      this._timeoutSeconds = value.timeoutSeconds;
    }
  }

  // exec - computed: false, optional: true, required: false
  private _exec = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeExecOutputReference(this, "exec");
  public get exec() {
    return this._exec;
  }
  public putExec(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeExec) {
    this._exec.internalValue = value;
  }
  public resetExec() {
    this._exec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get execInput() {
    return this._exec.internalValue;
  }

  // failure_threshold - computed: false, optional: true, required: false
  private _failureThreshold?: number; 
  public get failureThreshold() {
    return this.getNumberAttribute('failure_threshold');
  }
  public set failureThreshold(value: number) {
    this._failureThreshold = value;
  }
  public resetFailureThreshold() {
    this._failureThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get failureThresholdInput() {
    return this._failureThreshold;
  }

  // grpc - computed: false, optional: true, required: false
  private _grpc = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeGrpcOutputReference(this, "grpc");
  public get grpc() {
    return this._grpc;
  }
  public putGrpc(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeGrpc) {
    this._grpc.internalValue = value;
  }
  public resetGrpc() {
    this._grpc.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get grpcInput() {
    return this._grpc.internalValue;
  }

  // http_get - computed: false, optional: true, required: false
  private _httpGet = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGetOutputReference(this, "http_get");
  public get httpGet() {
    return this._httpGet;
  }
  public putHttpGet(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeHttpGet) {
    this._httpGet.internalValue = value;
  }
  public resetHttpGet() {
    this._httpGet.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpGetInput() {
    return this._httpGet.internalValue;
  }

  // initial_delay_seconds - computed: false, optional: true, required: false
  private _initialDelaySeconds?: number; 
  public get initialDelaySeconds() {
    return this.getNumberAttribute('initial_delay_seconds');
  }
  public set initialDelaySeconds(value: number) {
    this._initialDelaySeconds = value;
  }
  public resetInitialDelaySeconds() {
    this._initialDelaySeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get initialDelaySecondsInput() {
    return this._initialDelaySeconds;
  }

  // period_seconds - computed: false, optional: true, required: false
  private _periodSeconds?: number; 
  public get periodSeconds() {
    return this.getNumberAttribute('period_seconds');
  }
  public set periodSeconds(value: number) {
    this._periodSeconds = value;
  }
  public resetPeriodSeconds() {
    this._periodSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get periodSecondsInput() {
    return this._periodSeconds;
  }

  // success_threshold - computed: false, optional: true, required: false
  private _successThreshold?: number; 
  public get successThreshold() {
    return this.getNumberAttribute('success_threshold');
  }
  public set successThreshold(value: number) {
    this._successThreshold = value;
  }
  public resetSuccessThreshold() {
    this._successThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get successThresholdInput() {
    return this._successThreshold;
  }

  // tcp_socket - computed: false, optional: true, required: false
  private _tcpSocket = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeTcpSocketOutputReference(this, "tcp_socket");
  public get tcpSocket() {
    return this._tcpSocket;
  }
  public putTcpSocket(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeTcpSocket) {
    this._tcpSocket.internalValue = value;
  }
  public resetTcpSocket() {
    this._tcpSocket.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tcpSocketInput() {
    return this._tcpSocket.internalValue;
  }

  // termination_grace_period_seconds - computed: false, optional: true, required: false
  private _terminationGracePeriodSeconds?: number; 
  public get terminationGracePeriodSeconds() {
    return this.getNumberAttribute('termination_grace_period_seconds');
  }
  public set terminationGracePeriodSeconds(value: number) {
    this._terminationGracePeriodSeconds = value;
  }
  public resetTerminationGracePeriodSeconds() {
    this._terminationGracePeriodSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get terminationGracePeriodSecondsInput() {
    return this._terminationGracePeriodSeconds;
  }

  // timeout_seconds - computed: false, optional: true, required: false
  private _timeoutSeconds?: number; 
  public get timeoutSeconds() {
    return this.getNumberAttribute('timeout_seconds');
  }
  public set timeoutSeconds(value: number) {
    this._timeoutSeconds = value;
  }
  public resetTimeoutSeconds() {
    this._timeoutSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeoutSecondsInput() {
    return this._timeoutSeconds;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPorts {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#container_port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#container_port}
  */
  readonly containerPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host_ip DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host_ip}
  */
  readonly hostIp?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host_port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host_port}
  */
  readonly hostPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#protocol DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#protocol}
  */
  readonly protocol?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPortsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPorts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_port: cdktf.numberToTerraform(struct!.containerPort),
    host_ip: cdktf.stringToTerraform(struct!.hostIp),
    host_port: cdktf.numberToTerraform(struct!.hostPort),
    name: cdktf.stringToTerraform(struct!.name),
    protocol: cdktf.stringToTerraform(struct!.protocol),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPortsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPorts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_port: {
      value: cdktf.numberToHclTerraform(struct!.containerPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    host_ip: {
      value: cdktf.stringToHclTerraform(struct!.hostIp),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    host_port: {
      value: cdktf.numberToHclTerraform(struct!.hostPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protocol: {
      value: cdktf.stringToHclTerraform(struct!.protocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPortsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPorts | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerPort = this._containerPort;
    }
    if (this._hostIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostIp = this._hostIp;
    }
    if (this._hostPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostPort = this._hostPort;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._protocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocol = this._protocol;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPorts | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerPort = undefined;
      this._hostIp = undefined;
      this._hostPort = undefined;
      this._name = undefined;
      this._protocol = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerPort = value.containerPort;
      this._hostIp = value.hostIp;
      this._hostPort = value.hostPort;
      this._name = value.name;
      this._protocol = value.protocol;
    }
  }

  // container_port - computed: false, optional: true, required: false
  private _containerPort?: number; 
  public get containerPort() {
    return this.getNumberAttribute('container_port');
  }
  public set containerPort(value: number) {
    this._containerPort = value;
  }
  public resetContainerPort() {
    this._containerPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerPortInput() {
    return this._containerPort;
  }

  // host_ip - computed: false, optional: true, required: false
  private _hostIp?: string; 
  public get hostIp() {
    return this.getStringAttribute('host_ip');
  }
  public set hostIp(value: string) {
    this._hostIp = value;
  }
  public resetHostIp() {
    this._hostIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostIpInput() {
    return this._hostIp;
  }

  // host_port - computed: false, optional: true, required: false
  private _hostPort?: number; 
  public get hostPort() {
    return this.getNumberAttribute('host_port');
  }
  public set hostPort(value: number) {
    this._hostPort = value;
  }
  public resetHostPort() {
    this._hostPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostPortInput() {
    return this._hostPort;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // protocol - computed: false, optional: true, required: false
  private _protocol?: string; 
  public get protocol() {
    return this.getStringAttribute('protocol');
  }
  public set protocol(value: string) {
    this._protocol = value;
  }
  public resetProtocol() {
    this._protocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolInput() {
    return this._protocol;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPortsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPorts[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPortsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPortsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeExec {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#command DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#command}
  */
  readonly command?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeExecToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeExecToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeExecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeExec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeExec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeGrpc {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#service DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#service}
  */
  readonly service?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeGrpcToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeGrpc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    port: cdktf.numberToTerraform(struct!.port),
    service: cdktf.stringToTerraform(struct!.service),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeGrpcToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeGrpc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    service: {
      value: cdktf.stringToHclTerraform(struct!.service),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeGrpcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeGrpc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._service !== undefined) {
      hasAnyValues = true;
      internalValueResult.service = this._service;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeGrpc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._port = undefined;
      this._service = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._port = value.port;
      this._service = value.service;
    }
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // service - computed: false, optional: true, required: false
  private _service?: string; 
  public get service() {
    return this.getStringAttribute('service');
  }
  public set service(value: string) {
    this._service = value;
  }
  public resetService() {
    this._service = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceInput() {
    return this._service;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#value DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeadersToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeadersToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeadersOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGet {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#http_headers DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#http_headers}
  */
  readonly httpHeaders?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeaders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#scheme DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#scheme}
  */
  readonly scheme?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    http_headers: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeadersToTerraform, false)(struct!.httpHeaders),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.stringToTerraform(struct!.port),
    scheme: cdktf.stringToTerraform(struct!.scheme),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    http_headers: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeadersToHclTerraform, false)(struct!.httpHeaders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeadersList",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme: {
      value: cdktf.stringToHclTerraform(struct!.scheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGet | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._httpHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpHeaders = this._httpHeaders?.internalValue;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._scheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.scheme = this._scheme;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGet | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._httpHeaders.internalValue = undefined;
      this._path = undefined;
      this._port = undefined;
      this._scheme = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._httpHeaders.internalValue = value.httpHeaders;
      this._path = value.path;
      this._port = value.port;
      this._scheme = value.scheme;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // http_headers - computed: false, optional: true, required: false
  private _httpHeaders = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeadersList(this, "http_headers", false);
  public get httpHeaders() {
    return this._httpHeaders;
  }
  public putHttpHeaders(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetHttpHeaders[] | cdktf.IResolvable) {
    this._httpHeaders.internalValue = value;
  }
  public resetHttpHeaders() {
    this._httpHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpHeadersInput() {
    return this._httpHeaders.internalValue;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // scheme - computed: false, optional: true, required: false
  private _scheme?: string; 
  public get scheme() {
    return this.getStringAttribute('scheme');
  }
  public set scheme(value: string) {
    this._scheme = value;
  }
  public resetScheme() {
    this._scheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeInput() {
    return this._scheme;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeTcpSocket {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeTcpSocketToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    port: cdktf.stringToTerraform(struct!.port),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeTcpSocketToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeTcpSocketOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeTcpSocket | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeTcpSocket | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._port = value.port;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbe {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#exec DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#exec}
  */
  readonly exec?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeExec;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#failure_threshold DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#failure_threshold}
  */
  readonly failureThreshold?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#grpc DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#grpc}
  */
  readonly grpc?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeGrpc;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#http_get DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#http_get}
  */
  readonly httpGet?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGet;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#initial_delay_seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#initial_delay_seconds}
  */
  readonly initialDelaySeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#period_seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#period_seconds}
  */
  readonly periodSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#success_threshold DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#success_threshold}
  */
  readonly successThreshold?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#tcp_socket DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#tcp_socket}
  */
  readonly tcpSocket?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeTcpSocket;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#termination_grace_period_seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#termination_grace_period_seconds}
  */
  readonly terminationGracePeriodSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#timeout_seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#timeout_seconds}
  */
  readonly timeoutSeconds?: number;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbe | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exec: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeExecToTerraform(struct!.exec),
    failure_threshold: cdktf.numberToTerraform(struct!.failureThreshold),
    grpc: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeGrpcToTerraform(struct!.grpc),
    http_get: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetToTerraform(struct!.httpGet),
    initial_delay_seconds: cdktf.numberToTerraform(struct!.initialDelaySeconds),
    period_seconds: cdktf.numberToTerraform(struct!.periodSeconds),
    success_threshold: cdktf.numberToTerraform(struct!.successThreshold),
    tcp_socket: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeTcpSocketToTerraform(struct!.tcpSocket),
    termination_grace_period_seconds: cdktf.numberToTerraform(struct!.terminationGracePeriodSeconds),
    timeout_seconds: cdktf.numberToTerraform(struct!.timeoutSeconds),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbe | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exec: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeExecToHclTerraform(struct!.exec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeExec",
    },
    failure_threshold: {
      value: cdktf.numberToHclTerraform(struct!.failureThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    grpc: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeGrpcToHclTerraform(struct!.grpc),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeGrpc",
    },
    http_get: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetToHclTerraform(struct!.httpGet),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGet",
    },
    initial_delay_seconds: {
      value: cdktf.numberToHclTerraform(struct!.initialDelaySeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    period_seconds: {
      value: cdktf.numberToHclTerraform(struct!.periodSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    success_threshold: {
      value: cdktf.numberToHclTerraform(struct!.successThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    tcp_socket: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeTcpSocketToHclTerraform(struct!.tcpSocket),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeTcpSocket",
    },
    termination_grace_period_seconds: {
      value: cdktf.numberToHclTerraform(struct!.terminationGracePeriodSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    timeout_seconds: {
      value: cdktf.numberToHclTerraform(struct!.timeoutSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbe | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.exec = this._exec?.internalValue;
    }
    if (this._failureThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.failureThreshold = this._failureThreshold;
    }
    if (this._grpc?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.grpc = this._grpc?.internalValue;
    }
    if (this._httpGet?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpGet = this._httpGet?.internalValue;
    }
    if (this._initialDelaySeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.initialDelaySeconds = this._initialDelaySeconds;
    }
    if (this._periodSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.periodSeconds = this._periodSeconds;
    }
    if (this._successThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.successThreshold = this._successThreshold;
    }
    if (this._tcpSocket?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tcpSocket = this._tcpSocket?.internalValue;
    }
    if (this._terminationGracePeriodSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.terminationGracePeriodSeconds = this._terminationGracePeriodSeconds;
    }
    if (this._timeoutSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeoutSeconds = this._timeoutSeconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbe | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exec.internalValue = undefined;
      this._failureThreshold = undefined;
      this._grpc.internalValue = undefined;
      this._httpGet.internalValue = undefined;
      this._initialDelaySeconds = undefined;
      this._periodSeconds = undefined;
      this._successThreshold = undefined;
      this._tcpSocket.internalValue = undefined;
      this._terminationGracePeriodSeconds = undefined;
      this._timeoutSeconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exec.internalValue = value.exec;
      this._failureThreshold = value.failureThreshold;
      this._grpc.internalValue = value.grpc;
      this._httpGet.internalValue = value.httpGet;
      this._initialDelaySeconds = value.initialDelaySeconds;
      this._periodSeconds = value.periodSeconds;
      this._successThreshold = value.successThreshold;
      this._tcpSocket.internalValue = value.tcpSocket;
      this._terminationGracePeriodSeconds = value.terminationGracePeriodSeconds;
      this._timeoutSeconds = value.timeoutSeconds;
    }
  }

  // exec - computed: false, optional: true, required: false
  private _exec = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeExecOutputReference(this, "exec");
  public get exec() {
    return this._exec;
  }
  public putExec(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeExec) {
    this._exec.internalValue = value;
  }
  public resetExec() {
    this._exec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get execInput() {
    return this._exec.internalValue;
  }

  // failure_threshold - computed: false, optional: true, required: false
  private _failureThreshold?: number; 
  public get failureThreshold() {
    return this.getNumberAttribute('failure_threshold');
  }
  public set failureThreshold(value: number) {
    this._failureThreshold = value;
  }
  public resetFailureThreshold() {
    this._failureThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get failureThresholdInput() {
    return this._failureThreshold;
  }

  // grpc - computed: false, optional: true, required: false
  private _grpc = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeGrpcOutputReference(this, "grpc");
  public get grpc() {
    return this._grpc;
  }
  public putGrpc(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeGrpc) {
    this._grpc.internalValue = value;
  }
  public resetGrpc() {
    this._grpc.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get grpcInput() {
    return this._grpc.internalValue;
  }

  // http_get - computed: false, optional: true, required: false
  private _httpGet = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGetOutputReference(this, "http_get");
  public get httpGet() {
    return this._httpGet;
  }
  public putHttpGet(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeHttpGet) {
    this._httpGet.internalValue = value;
  }
  public resetHttpGet() {
    this._httpGet.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpGetInput() {
    return this._httpGet.internalValue;
  }

  // initial_delay_seconds - computed: false, optional: true, required: false
  private _initialDelaySeconds?: number; 
  public get initialDelaySeconds() {
    return this.getNumberAttribute('initial_delay_seconds');
  }
  public set initialDelaySeconds(value: number) {
    this._initialDelaySeconds = value;
  }
  public resetInitialDelaySeconds() {
    this._initialDelaySeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get initialDelaySecondsInput() {
    return this._initialDelaySeconds;
  }

  // period_seconds - computed: false, optional: true, required: false
  private _periodSeconds?: number; 
  public get periodSeconds() {
    return this.getNumberAttribute('period_seconds');
  }
  public set periodSeconds(value: number) {
    this._periodSeconds = value;
  }
  public resetPeriodSeconds() {
    this._periodSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get periodSecondsInput() {
    return this._periodSeconds;
  }

  // success_threshold - computed: false, optional: true, required: false
  private _successThreshold?: number; 
  public get successThreshold() {
    return this.getNumberAttribute('success_threshold');
  }
  public set successThreshold(value: number) {
    this._successThreshold = value;
  }
  public resetSuccessThreshold() {
    this._successThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get successThresholdInput() {
    return this._successThreshold;
  }

  // tcp_socket - computed: false, optional: true, required: false
  private _tcpSocket = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeTcpSocketOutputReference(this, "tcp_socket");
  public get tcpSocket() {
    return this._tcpSocket;
  }
  public putTcpSocket(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeTcpSocket) {
    this._tcpSocket.internalValue = value;
  }
  public resetTcpSocket() {
    this._tcpSocket.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tcpSocketInput() {
    return this._tcpSocket.internalValue;
  }

  // termination_grace_period_seconds - computed: false, optional: true, required: false
  private _terminationGracePeriodSeconds?: number; 
  public get terminationGracePeriodSeconds() {
    return this.getNumberAttribute('termination_grace_period_seconds');
  }
  public set terminationGracePeriodSeconds(value: number) {
    this._terminationGracePeriodSeconds = value;
  }
  public resetTerminationGracePeriodSeconds() {
    this._terminationGracePeriodSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get terminationGracePeriodSecondsInput() {
    return this._terminationGracePeriodSeconds;
  }

  // timeout_seconds - computed: false, optional: true, required: false
  private _timeoutSeconds?: number; 
  public get timeoutSeconds() {
    return this.getNumberAttribute('timeout_seconds');
  }
  public set timeoutSeconds(value: number) {
    this._timeoutSeconds = value;
  }
  public resetTimeoutSeconds() {
    this._timeoutSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeoutSecondsInput() {
    return this._timeoutSeconds;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicy {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#resource_name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#resource_name}
  */
  readonly resourceName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#restart_policy DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#restart_policy}
  */
  readonly restartPolicy?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicyToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    resource_name: cdktf.stringToTerraform(struct!.resourceName),
    restart_policy: cdktf.stringToTerraform(struct!.restartPolicy),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicyToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicy | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    resource_name: {
      value: cdktf.stringToHclTerraform(struct!.resourceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    restart_policy: {
      value: cdktf.stringToHclTerraform(struct!.restartPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicy | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._resourceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceName = this._resourceName;
    }
    if (this._restartPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.restartPolicy = this._restartPolicy;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicy | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._resourceName = undefined;
      this._restartPolicy = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._resourceName = value.resourceName;
      this._restartPolicy = value.restartPolicy;
    }
  }

  // resource_name - computed: false, optional: true, required: false
  private _resourceName?: string; 
  public get resourceName() {
    return this.getStringAttribute('resource_name');
  }
  public set resourceName(value: string) {
    this._resourceName = value;
  }
  public resetResourceName() {
    this._resourceName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceNameInput() {
    return this._resourceName;
  }

  // restart_policy - computed: false, optional: true, required: false
  private _restartPolicy?: string; 
  public get restartPolicy() {
    return this.getStringAttribute('restart_policy');
  }
  public set restartPolicy(value: string) {
    this._restartPolicy = value;
  }
  public resetRestartPolicy() {
    this._restartPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get restartPolicyInput() {
    return this._restartPolicy;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicyList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicy[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicyOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicyOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaims {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaimsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaimsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaims | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaimsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaims | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaims | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaimsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaims[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaimsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaimsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResources {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#claims DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#claims}
  */
  readonly claims?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaims[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#limits DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#limits}
  */
  readonly limits?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#requests DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#requests}
  */
  readonly requests?: { [key: string]: string };
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    claims: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaimsToTerraform, false)(struct!.claims),
    limits: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.limits),
    requests: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.requests),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    claims: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaimsToHclTerraform, false)(struct!.claims),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaimsList",
    },
    limits: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.limits),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    requests: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.requests),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._claims?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.claims = this._claims?.internalValue;
    }
    if (this._limits !== undefined) {
      hasAnyValues = true;
      internalValueResult.limits = this._limits;
    }
    if (this._requests !== undefined) {
      hasAnyValues = true;
      internalValueResult.requests = this._requests;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._claims.internalValue = undefined;
      this._limits = undefined;
      this._requests = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._claims.internalValue = value.claims;
      this._limits = value.limits;
      this._requests = value.requests;
    }
  }

  // claims - computed: false, optional: true, required: false
  private _claims = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaimsList(this, "claims", false);
  public get claims() {
    return this._claims;
  }
  public putClaims(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesClaims[] | cdktf.IResolvable) {
    this._claims.internalValue = value;
  }
  public resetClaims() {
    this._claims.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get claimsInput() {
    return this._claims.internalValue;
  }

  // limits - computed: false, optional: true, required: false
  private _limits?: { [key: string]: string }; 
  public get limits() {
    return this.getStringMapAttribute('limits');
  }
  public set limits(value: { [key: string]: string }) {
    this._limits = value;
  }
  public resetLimits() {
    this._limits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitsInput() {
    return this._limits;
  }

  // requests - computed: false, optional: true, required: false
  private _requests?: { [key: string]: string }; 
  public get requests() {
    return this.getStringMapAttribute('requests');
  }
  public set requests(value: { [key: string]: string }) {
    this._requests = value;
  }
  public resetRequests() {
    this._requests = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestsInput() {
    return this._requests;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextAppArmorProfile {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#localhost_profile DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#localhost_profile}
  */
  readonly localhostProfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#type DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextAppArmorProfileToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextAppArmorProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    localhost_profile: cdktf.stringToTerraform(struct!.localhostProfile),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextAppArmorProfileToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextAppArmorProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    localhost_profile: {
      value: cdktf.stringToHclTerraform(struct!.localhostProfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextAppArmorProfileOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextAppArmorProfile | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._localhostProfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.localhostProfile = this._localhostProfile;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextAppArmorProfile | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._localhostProfile = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._localhostProfile = value.localhostProfile;
      this._type = value.type;
    }
  }

  // localhost_profile - computed: false, optional: true, required: false
  private _localhostProfile?: string; 
  public get localhostProfile() {
    return this.getStringAttribute('localhost_profile');
  }
  public set localhostProfile(value: string) {
    this._localhostProfile = value;
  }
  public resetLocalhostProfile() {
    this._localhostProfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localhostProfileInput() {
    return this._localhostProfile;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextCapabilities {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#add DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#add}
  */
  readonly add?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#drop DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#drop}
  */
  readonly drop?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextCapabilitiesToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextCapabilities | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    add: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.add),
    drop: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.drop),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextCapabilitiesToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextCapabilities | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    add: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.add),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    drop: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.drop),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextCapabilitiesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextCapabilities | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._add !== undefined) {
      hasAnyValues = true;
      internalValueResult.add = this._add;
    }
    if (this._drop !== undefined) {
      hasAnyValues = true;
      internalValueResult.drop = this._drop;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextCapabilities | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._add = undefined;
      this._drop = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._add = value.add;
      this._drop = value.drop;
    }
  }

  // add - computed: false, optional: true, required: false
  private _add?: string[]; 
  public get add() {
    return this.getListAttribute('add');
  }
  public set add(value: string[]) {
    this._add = value;
  }
  public resetAdd() {
    this._add = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addInput() {
    return this._add;
  }

  // drop - computed: false, optional: true, required: false
  private _drop?: string[]; 
  public get drop() {
    return this.getListAttribute('drop');
  }
  public set drop(value: string[]) {
    this._drop = value;
  }
  public resetDrop() {
    this._drop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dropInput() {
    return this._drop;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeLinuxOptions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#level DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#level}
  */
  readonly level?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#role DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#role}
  */
  readonly role?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#type DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#user DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#user}
  */
  readonly user?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeLinuxOptionsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeLinuxOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    level: cdktf.stringToTerraform(struct!.level),
    role: cdktf.stringToTerraform(struct!.role),
    type: cdktf.stringToTerraform(struct!.type),
    user: cdktf.stringToTerraform(struct!.user),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeLinuxOptionsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeLinuxOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    level: {
      value: cdktf.stringToHclTerraform(struct!.level),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeLinuxOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeLinuxOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._level !== undefined) {
      hasAnyValues = true;
      internalValueResult.level = this._level;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeLinuxOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._level = undefined;
      this._role = undefined;
      this._type = undefined;
      this._user = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._level = value.level;
      this._role = value.role;
      this._type = value.type;
      this._user = value.user;
    }
  }

  // level - computed: false, optional: true, required: false
  private _level?: string; 
  public get level() {
    return this.getStringAttribute('level');
  }
  public set level(value: string) {
    this._level = value;
  }
  public resetLevel() {
    this._level = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get levelInput() {
    return this._level;
  }

  // role - computed: false, optional: true, required: false
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  public resetRole() {
    this._role = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeccompProfile {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#localhost_profile DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#localhost_profile}
  */
  readonly localhostProfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#type DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeccompProfileToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeccompProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    localhost_profile: cdktf.stringToTerraform(struct!.localhostProfile),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeccompProfileToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeccompProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    localhost_profile: {
      value: cdktf.stringToHclTerraform(struct!.localhostProfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeccompProfileOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeccompProfile | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._localhostProfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.localhostProfile = this._localhostProfile;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeccompProfile | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._localhostProfile = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._localhostProfile = value.localhostProfile;
      this._type = value.type;
    }
  }

  // localhost_profile - computed: false, optional: true, required: false
  private _localhostProfile?: string; 
  public get localhostProfile() {
    return this.getStringAttribute('localhost_profile');
  }
  public set localhostProfile(value: string) {
    this._localhostProfile = value;
  }
  public resetLocalhostProfile() {
    this._localhostProfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localhostProfileInput() {
    return this._localhostProfile;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextWindowsOptions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#gmsa_credential_spec DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#gmsa_credential_spec}
  */
  readonly gmsaCredentialSpec?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#gmsa_credential_spec_name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#gmsa_credential_spec_name}
  */
  readonly gmsaCredentialSpecName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host_process DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host_process}
  */
  readonly hostProcess?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#run_as_user_name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#run_as_user_name}
  */
  readonly runAsUserName?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextWindowsOptionsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextWindowsOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    gmsa_credential_spec: cdktf.stringToTerraform(struct!.gmsaCredentialSpec),
    gmsa_credential_spec_name: cdktf.stringToTerraform(struct!.gmsaCredentialSpecName),
    host_process: cdktf.booleanToTerraform(struct!.hostProcess),
    run_as_user_name: cdktf.stringToTerraform(struct!.runAsUserName),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextWindowsOptionsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextWindowsOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    gmsa_credential_spec: {
      value: cdktf.stringToHclTerraform(struct!.gmsaCredentialSpec),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    gmsa_credential_spec_name: {
      value: cdktf.stringToHclTerraform(struct!.gmsaCredentialSpecName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    host_process: {
      value: cdktf.booleanToHclTerraform(struct!.hostProcess),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_user_name: {
      value: cdktf.stringToHclTerraform(struct!.runAsUserName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextWindowsOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextWindowsOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._gmsaCredentialSpec !== undefined) {
      hasAnyValues = true;
      internalValueResult.gmsaCredentialSpec = this._gmsaCredentialSpec;
    }
    if (this._gmsaCredentialSpecName !== undefined) {
      hasAnyValues = true;
      internalValueResult.gmsaCredentialSpecName = this._gmsaCredentialSpecName;
    }
    if (this._hostProcess !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostProcess = this._hostProcess;
    }
    if (this._runAsUserName !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsUserName = this._runAsUserName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextWindowsOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._gmsaCredentialSpec = undefined;
      this._gmsaCredentialSpecName = undefined;
      this._hostProcess = undefined;
      this._runAsUserName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._gmsaCredentialSpec = value.gmsaCredentialSpec;
      this._gmsaCredentialSpecName = value.gmsaCredentialSpecName;
      this._hostProcess = value.hostProcess;
      this._runAsUserName = value.runAsUserName;
    }
  }

  // gmsa_credential_spec - computed: false, optional: true, required: false
  private _gmsaCredentialSpec?: string; 
  public get gmsaCredentialSpec() {
    return this.getStringAttribute('gmsa_credential_spec');
  }
  public set gmsaCredentialSpec(value: string) {
    this._gmsaCredentialSpec = value;
  }
  public resetGmsaCredentialSpec() {
    this._gmsaCredentialSpec = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gmsaCredentialSpecInput() {
    return this._gmsaCredentialSpec;
  }

  // gmsa_credential_spec_name - computed: false, optional: true, required: false
  private _gmsaCredentialSpecName?: string; 
  public get gmsaCredentialSpecName() {
    return this.getStringAttribute('gmsa_credential_spec_name');
  }
  public set gmsaCredentialSpecName(value: string) {
    this._gmsaCredentialSpecName = value;
  }
  public resetGmsaCredentialSpecName() {
    this._gmsaCredentialSpecName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gmsaCredentialSpecNameInput() {
    return this._gmsaCredentialSpecName;
  }

  // host_process - computed: false, optional: true, required: false
  private _hostProcess?: boolean | cdktf.IResolvable; 
  public get hostProcess() {
    return this.getBooleanAttribute('host_process');
  }
  public set hostProcess(value: boolean | cdktf.IResolvable) {
    this._hostProcess = value;
  }
  public resetHostProcess() {
    this._hostProcess = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostProcessInput() {
    return this._hostProcess;
  }

  // run_as_user_name - computed: false, optional: true, required: false
  private _runAsUserName?: string; 
  public get runAsUserName() {
    return this.getStringAttribute('run_as_user_name');
  }
  public set runAsUserName(value: string) {
    this._runAsUserName = value;
  }
  public resetRunAsUserName() {
    this._runAsUserName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsUserNameInput() {
    return this._runAsUserName;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContext {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#allow_privilege_escalation DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#allow_privilege_escalation}
  */
  readonly allowPrivilegeEscalation?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#app_armor_profile DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#app_armor_profile}
  */
  readonly appArmorProfile?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextAppArmorProfile;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#capabilities DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#capabilities}
  */
  readonly capabilities?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextCapabilities;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#privileged DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#privileged}
  */
  readonly privileged?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#proc_mount DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#proc_mount}
  */
  readonly procMount?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#read_only_root_filesystem DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#read_only_root_filesystem}
  */
  readonly readOnlyRootFilesystem?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#run_as_group DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#run_as_group}
  */
  readonly runAsGroup?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#run_as_non_root DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#run_as_non_root}
  */
  readonly runAsNonRoot?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#run_as_user DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#run_as_user}
  */
  readonly runAsUser?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#se_linux_options DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#se_linux_options}
  */
  readonly seLinuxOptions?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeLinuxOptions;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#seccomp_profile DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#seccomp_profile}
  */
  readonly seccompProfile?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeccompProfile;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#windows_options DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#windows_options}
  */
  readonly windowsOptions?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextWindowsOptions;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContext | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_privilege_escalation: cdktf.booleanToTerraform(struct!.allowPrivilegeEscalation),
    app_armor_profile: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextAppArmorProfileToTerraform(struct!.appArmorProfile),
    capabilities: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextCapabilitiesToTerraform(struct!.capabilities),
    privileged: cdktf.booleanToTerraform(struct!.privileged),
    proc_mount: cdktf.stringToTerraform(struct!.procMount),
    read_only_root_filesystem: cdktf.booleanToTerraform(struct!.readOnlyRootFilesystem),
    run_as_group: cdktf.numberToTerraform(struct!.runAsGroup),
    run_as_non_root: cdktf.booleanToTerraform(struct!.runAsNonRoot),
    run_as_user: cdktf.numberToTerraform(struct!.runAsUser),
    se_linux_options: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeLinuxOptionsToTerraform(struct!.seLinuxOptions),
    seccomp_profile: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeccompProfileToTerraform(struct!.seccompProfile),
    windows_options: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextWindowsOptionsToTerraform(struct!.windowsOptions),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContext | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_privilege_escalation: {
      value: cdktf.booleanToHclTerraform(struct!.allowPrivilegeEscalation),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    app_armor_profile: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextAppArmorProfileToHclTerraform(struct!.appArmorProfile),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextAppArmorProfile",
    },
    capabilities: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextCapabilitiesToHclTerraform(struct!.capabilities),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextCapabilities",
    },
    privileged: {
      value: cdktf.booleanToHclTerraform(struct!.privileged),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    proc_mount: {
      value: cdktf.stringToHclTerraform(struct!.procMount),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only_root_filesystem: {
      value: cdktf.booleanToHclTerraform(struct!.readOnlyRootFilesystem),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_group: {
      value: cdktf.numberToHclTerraform(struct!.runAsGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    run_as_non_root: {
      value: cdktf.booleanToHclTerraform(struct!.runAsNonRoot),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_user: {
      value: cdktf.numberToHclTerraform(struct!.runAsUser),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    se_linux_options: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeLinuxOptionsToHclTerraform(struct!.seLinuxOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeLinuxOptions",
    },
    seccomp_profile: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeccompProfileToHclTerraform(struct!.seccompProfile),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeccompProfile",
    },
    windows_options: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextWindowsOptionsToHclTerraform(struct!.windowsOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextWindowsOptions",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContext | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowPrivilegeEscalation !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowPrivilegeEscalation = this._allowPrivilegeEscalation;
    }
    if (this._appArmorProfile?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.appArmorProfile = this._appArmorProfile?.internalValue;
    }
    if (this._capabilities?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.capabilities = this._capabilities?.internalValue;
    }
    if (this._privileged !== undefined) {
      hasAnyValues = true;
      internalValueResult.privileged = this._privileged;
    }
    if (this._procMount !== undefined) {
      hasAnyValues = true;
      internalValueResult.procMount = this._procMount;
    }
    if (this._readOnlyRootFilesystem !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnlyRootFilesystem = this._readOnlyRootFilesystem;
    }
    if (this._runAsGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsGroup = this._runAsGroup;
    }
    if (this._runAsNonRoot !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsNonRoot = this._runAsNonRoot;
    }
    if (this._runAsUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsUser = this._runAsUser;
    }
    if (this._seLinuxOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.seLinuxOptions = this._seLinuxOptions?.internalValue;
    }
    if (this._seccompProfile?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.seccompProfile = this._seccompProfile?.internalValue;
    }
    if (this._windowsOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.windowsOptions = this._windowsOptions?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContext | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowPrivilegeEscalation = undefined;
      this._appArmorProfile.internalValue = undefined;
      this._capabilities.internalValue = undefined;
      this._privileged = undefined;
      this._procMount = undefined;
      this._readOnlyRootFilesystem = undefined;
      this._runAsGroup = undefined;
      this._runAsNonRoot = undefined;
      this._runAsUser = undefined;
      this._seLinuxOptions.internalValue = undefined;
      this._seccompProfile.internalValue = undefined;
      this._windowsOptions.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowPrivilegeEscalation = value.allowPrivilegeEscalation;
      this._appArmorProfile.internalValue = value.appArmorProfile;
      this._capabilities.internalValue = value.capabilities;
      this._privileged = value.privileged;
      this._procMount = value.procMount;
      this._readOnlyRootFilesystem = value.readOnlyRootFilesystem;
      this._runAsGroup = value.runAsGroup;
      this._runAsNonRoot = value.runAsNonRoot;
      this._runAsUser = value.runAsUser;
      this._seLinuxOptions.internalValue = value.seLinuxOptions;
      this._seccompProfile.internalValue = value.seccompProfile;
      this._windowsOptions.internalValue = value.windowsOptions;
    }
  }

  // allow_privilege_escalation - computed: false, optional: true, required: false
  private _allowPrivilegeEscalation?: boolean | cdktf.IResolvable; 
  public get allowPrivilegeEscalation() {
    return this.getBooleanAttribute('allow_privilege_escalation');
  }
  public set allowPrivilegeEscalation(value: boolean | cdktf.IResolvable) {
    this._allowPrivilegeEscalation = value;
  }
  public resetAllowPrivilegeEscalation() {
    this._allowPrivilegeEscalation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowPrivilegeEscalationInput() {
    return this._allowPrivilegeEscalation;
  }

  // app_armor_profile - computed: false, optional: true, required: false
  private _appArmorProfile = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextAppArmorProfileOutputReference(this, "app_armor_profile");
  public get appArmorProfile() {
    return this._appArmorProfile;
  }
  public putAppArmorProfile(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextAppArmorProfile) {
    this._appArmorProfile.internalValue = value;
  }
  public resetAppArmorProfile() {
    this._appArmorProfile.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appArmorProfileInput() {
    return this._appArmorProfile.internalValue;
  }

  // capabilities - computed: false, optional: true, required: false
  private _capabilities = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextCapabilitiesOutputReference(this, "capabilities");
  public get capabilities() {
    return this._capabilities;
  }
  public putCapabilities(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextCapabilities) {
    this._capabilities.internalValue = value;
  }
  public resetCapabilities() {
    this._capabilities.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get capabilitiesInput() {
    return this._capabilities.internalValue;
  }

  // privileged - computed: false, optional: true, required: false
  private _privileged?: boolean | cdktf.IResolvable; 
  public get privileged() {
    return this.getBooleanAttribute('privileged');
  }
  public set privileged(value: boolean | cdktf.IResolvable) {
    this._privileged = value;
  }
  public resetPrivileged() {
    this._privileged = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get privilegedInput() {
    return this._privileged;
  }

  // proc_mount - computed: false, optional: true, required: false
  private _procMount?: string; 
  public get procMount() {
    return this.getStringAttribute('proc_mount');
  }
  public set procMount(value: string) {
    this._procMount = value;
  }
  public resetProcMount() {
    this._procMount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get procMountInput() {
    return this._procMount;
  }

  // read_only_root_filesystem - computed: false, optional: true, required: false
  private _readOnlyRootFilesystem?: boolean | cdktf.IResolvable; 
  public get readOnlyRootFilesystem() {
    return this.getBooleanAttribute('read_only_root_filesystem');
  }
  public set readOnlyRootFilesystem(value: boolean | cdktf.IResolvable) {
    this._readOnlyRootFilesystem = value;
  }
  public resetReadOnlyRootFilesystem() {
    this._readOnlyRootFilesystem = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyRootFilesystemInput() {
    return this._readOnlyRootFilesystem;
  }

  // run_as_group - computed: false, optional: true, required: false
  private _runAsGroup?: number; 
  public get runAsGroup() {
    return this.getNumberAttribute('run_as_group');
  }
  public set runAsGroup(value: number) {
    this._runAsGroup = value;
  }
  public resetRunAsGroup() {
    this._runAsGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsGroupInput() {
    return this._runAsGroup;
  }

  // run_as_non_root - computed: false, optional: true, required: false
  private _runAsNonRoot?: boolean | cdktf.IResolvable; 
  public get runAsNonRoot() {
    return this.getBooleanAttribute('run_as_non_root');
  }
  public set runAsNonRoot(value: boolean | cdktf.IResolvable) {
    this._runAsNonRoot = value;
  }
  public resetRunAsNonRoot() {
    this._runAsNonRoot = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsNonRootInput() {
    return this._runAsNonRoot;
  }

  // run_as_user - computed: false, optional: true, required: false
  private _runAsUser?: number; 
  public get runAsUser() {
    return this.getNumberAttribute('run_as_user');
  }
  public set runAsUser(value: number) {
    this._runAsUser = value;
  }
  public resetRunAsUser() {
    this._runAsUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsUserInput() {
    return this._runAsUser;
  }

  // se_linux_options - computed: false, optional: true, required: false
  private _seLinuxOptions = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeLinuxOptionsOutputReference(this, "se_linux_options");
  public get seLinuxOptions() {
    return this._seLinuxOptions;
  }
  public putSeLinuxOptions(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeLinuxOptions) {
    this._seLinuxOptions.internalValue = value;
  }
  public resetSeLinuxOptions() {
    this._seLinuxOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get seLinuxOptionsInput() {
    return this._seLinuxOptions.internalValue;
  }

  // seccomp_profile - computed: false, optional: true, required: false
  private _seccompProfile = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeccompProfileOutputReference(this, "seccomp_profile");
  public get seccompProfile() {
    return this._seccompProfile;
  }
  public putSeccompProfile(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextSeccompProfile) {
    this._seccompProfile.internalValue = value;
  }
  public resetSeccompProfile() {
    this._seccompProfile.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get seccompProfileInput() {
    return this._seccompProfile.internalValue;
  }

  // windows_options - computed: false, optional: true, required: false
  private _windowsOptions = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextWindowsOptionsOutputReference(this, "windows_options");
  public get windowsOptions() {
    return this._windowsOptions;
  }
  public putWindowsOptions(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextWindowsOptions) {
    this._windowsOptions.internalValue = value;
  }
  public resetWindowsOptions() {
    this._windowsOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get windowsOptionsInput() {
    return this._windowsOptions.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeExec {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#command DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#command}
  */
  readonly command?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeExecToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeExecToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeExecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeExec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeExec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeGrpc {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#service DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#service}
  */
  readonly service?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeGrpcToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeGrpc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    port: cdktf.numberToTerraform(struct!.port),
    service: cdktf.stringToTerraform(struct!.service),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeGrpcToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeGrpc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    service: {
      value: cdktf.stringToHclTerraform(struct!.service),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeGrpcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeGrpc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._service !== undefined) {
      hasAnyValues = true;
      internalValueResult.service = this._service;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeGrpc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._port = undefined;
      this._service = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._port = value.port;
      this._service = value.service;
    }
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // service - computed: false, optional: true, required: false
  private _service?: string; 
  public get service() {
    return this.getStringAttribute('service');
  }
  public set service(value: string) {
    this._service = value;
  }
  public resetService() {
    this._service = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceInput() {
    return this._service;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#value DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeadersToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeadersToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeadersOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGet {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#http_headers DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#http_headers}
  */
  readonly httpHeaders?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeaders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#scheme DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#scheme}
  */
  readonly scheme?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    http_headers: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeadersToTerraform, false)(struct!.httpHeaders),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.stringToTerraform(struct!.port),
    scheme: cdktf.stringToTerraform(struct!.scheme),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    http_headers: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeadersToHclTerraform, false)(struct!.httpHeaders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeadersList",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme: {
      value: cdktf.stringToHclTerraform(struct!.scheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGet | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._httpHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpHeaders = this._httpHeaders?.internalValue;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._scheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.scheme = this._scheme;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGet | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._httpHeaders.internalValue = undefined;
      this._path = undefined;
      this._port = undefined;
      this._scheme = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._httpHeaders.internalValue = value.httpHeaders;
      this._path = value.path;
      this._port = value.port;
      this._scheme = value.scheme;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // http_headers - computed: false, optional: true, required: false
  private _httpHeaders = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeadersList(this, "http_headers", false);
  public get httpHeaders() {
    return this._httpHeaders;
  }
  public putHttpHeaders(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetHttpHeaders[] | cdktf.IResolvable) {
    this._httpHeaders.internalValue = value;
  }
  public resetHttpHeaders() {
    this._httpHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpHeadersInput() {
    return this._httpHeaders.internalValue;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // scheme - computed: false, optional: true, required: false
  private _scheme?: string; 
  public get scheme() {
    return this.getStringAttribute('scheme');
  }
  public set scheme(value: string) {
    this._scheme = value;
  }
  public resetScheme() {
    this._scheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeInput() {
    return this._scheme;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeTcpSocket {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeTcpSocketToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    port: cdktf.stringToTerraform(struct!.port),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeTcpSocketToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeTcpSocketOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeTcpSocket | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeTcpSocket | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._port = value.port;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbe {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#exec DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#exec}
  */
  readonly exec?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeExec;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#failure_threshold DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#failure_threshold}
  */
  readonly failureThreshold?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#grpc DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#grpc}
  */
  readonly grpc?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeGrpc;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#http_get DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#http_get}
  */
  readonly httpGet?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGet;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#initial_delay_seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#initial_delay_seconds}
  */
  readonly initialDelaySeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#period_seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#period_seconds}
  */
  readonly periodSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#success_threshold DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#success_threshold}
  */
  readonly successThreshold?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#tcp_socket DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#tcp_socket}
  */
  readonly tcpSocket?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeTcpSocket;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#termination_grace_period_seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#termination_grace_period_seconds}
  */
  readonly terminationGracePeriodSeconds?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#timeout_seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#timeout_seconds}
  */
  readonly timeoutSeconds?: number;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbe | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exec: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeExecToTerraform(struct!.exec),
    failure_threshold: cdktf.numberToTerraform(struct!.failureThreshold),
    grpc: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeGrpcToTerraform(struct!.grpc),
    http_get: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetToTerraform(struct!.httpGet),
    initial_delay_seconds: cdktf.numberToTerraform(struct!.initialDelaySeconds),
    period_seconds: cdktf.numberToTerraform(struct!.periodSeconds),
    success_threshold: cdktf.numberToTerraform(struct!.successThreshold),
    tcp_socket: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeTcpSocketToTerraform(struct!.tcpSocket),
    termination_grace_period_seconds: cdktf.numberToTerraform(struct!.terminationGracePeriodSeconds),
    timeout_seconds: cdktf.numberToTerraform(struct!.timeoutSeconds),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbe | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exec: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeExecToHclTerraform(struct!.exec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeExec",
    },
    failure_threshold: {
      value: cdktf.numberToHclTerraform(struct!.failureThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    grpc: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeGrpcToHclTerraform(struct!.grpc),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeGrpc",
    },
    http_get: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetToHclTerraform(struct!.httpGet),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGet",
    },
    initial_delay_seconds: {
      value: cdktf.numberToHclTerraform(struct!.initialDelaySeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    period_seconds: {
      value: cdktf.numberToHclTerraform(struct!.periodSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    success_threshold: {
      value: cdktf.numberToHclTerraform(struct!.successThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    tcp_socket: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeTcpSocketToHclTerraform(struct!.tcpSocket),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeTcpSocket",
    },
    termination_grace_period_seconds: {
      value: cdktf.numberToHclTerraform(struct!.terminationGracePeriodSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    timeout_seconds: {
      value: cdktf.numberToHclTerraform(struct!.timeoutSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbe | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.exec = this._exec?.internalValue;
    }
    if (this._failureThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.failureThreshold = this._failureThreshold;
    }
    if (this._grpc?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.grpc = this._grpc?.internalValue;
    }
    if (this._httpGet?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpGet = this._httpGet?.internalValue;
    }
    if (this._initialDelaySeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.initialDelaySeconds = this._initialDelaySeconds;
    }
    if (this._periodSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.periodSeconds = this._periodSeconds;
    }
    if (this._successThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.successThreshold = this._successThreshold;
    }
    if (this._tcpSocket?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tcpSocket = this._tcpSocket?.internalValue;
    }
    if (this._terminationGracePeriodSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.terminationGracePeriodSeconds = this._terminationGracePeriodSeconds;
    }
    if (this._timeoutSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeoutSeconds = this._timeoutSeconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbe | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exec.internalValue = undefined;
      this._failureThreshold = undefined;
      this._grpc.internalValue = undefined;
      this._httpGet.internalValue = undefined;
      this._initialDelaySeconds = undefined;
      this._periodSeconds = undefined;
      this._successThreshold = undefined;
      this._tcpSocket.internalValue = undefined;
      this._terminationGracePeriodSeconds = undefined;
      this._timeoutSeconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exec.internalValue = value.exec;
      this._failureThreshold = value.failureThreshold;
      this._grpc.internalValue = value.grpc;
      this._httpGet.internalValue = value.httpGet;
      this._initialDelaySeconds = value.initialDelaySeconds;
      this._periodSeconds = value.periodSeconds;
      this._successThreshold = value.successThreshold;
      this._tcpSocket.internalValue = value.tcpSocket;
      this._terminationGracePeriodSeconds = value.terminationGracePeriodSeconds;
      this._timeoutSeconds = value.timeoutSeconds;
    }
  }

  // exec - computed: false, optional: true, required: false
  private _exec = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeExecOutputReference(this, "exec");
  public get exec() {
    return this._exec;
  }
  public putExec(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeExec) {
    this._exec.internalValue = value;
  }
  public resetExec() {
    this._exec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get execInput() {
    return this._exec.internalValue;
  }

  // failure_threshold - computed: false, optional: true, required: false
  private _failureThreshold?: number; 
  public get failureThreshold() {
    return this.getNumberAttribute('failure_threshold');
  }
  public set failureThreshold(value: number) {
    this._failureThreshold = value;
  }
  public resetFailureThreshold() {
    this._failureThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get failureThresholdInput() {
    return this._failureThreshold;
  }

  // grpc - computed: false, optional: true, required: false
  private _grpc = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeGrpcOutputReference(this, "grpc");
  public get grpc() {
    return this._grpc;
  }
  public putGrpc(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeGrpc) {
    this._grpc.internalValue = value;
  }
  public resetGrpc() {
    this._grpc.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get grpcInput() {
    return this._grpc.internalValue;
  }

  // http_get - computed: false, optional: true, required: false
  private _httpGet = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGetOutputReference(this, "http_get");
  public get httpGet() {
    return this._httpGet;
  }
  public putHttpGet(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeHttpGet) {
    this._httpGet.internalValue = value;
  }
  public resetHttpGet() {
    this._httpGet.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpGetInput() {
    return this._httpGet.internalValue;
  }

  // initial_delay_seconds - computed: false, optional: true, required: false
  private _initialDelaySeconds?: number; 
  public get initialDelaySeconds() {
    return this.getNumberAttribute('initial_delay_seconds');
  }
  public set initialDelaySeconds(value: number) {
    this._initialDelaySeconds = value;
  }
  public resetInitialDelaySeconds() {
    this._initialDelaySeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get initialDelaySecondsInput() {
    return this._initialDelaySeconds;
  }

  // period_seconds - computed: false, optional: true, required: false
  private _periodSeconds?: number; 
  public get periodSeconds() {
    return this.getNumberAttribute('period_seconds');
  }
  public set periodSeconds(value: number) {
    this._periodSeconds = value;
  }
  public resetPeriodSeconds() {
    this._periodSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get periodSecondsInput() {
    return this._periodSeconds;
  }

  // success_threshold - computed: false, optional: true, required: false
  private _successThreshold?: number; 
  public get successThreshold() {
    return this.getNumberAttribute('success_threshold');
  }
  public set successThreshold(value: number) {
    this._successThreshold = value;
  }
  public resetSuccessThreshold() {
    this._successThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get successThresholdInput() {
    return this._successThreshold;
  }

  // tcp_socket - computed: false, optional: true, required: false
  private _tcpSocket = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeTcpSocketOutputReference(this, "tcp_socket");
  public get tcpSocket() {
    return this._tcpSocket;
  }
  public putTcpSocket(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeTcpSocket) {
    this._tcpSocket.internalValue = value;
  }
  public resetTcpSocket() {
    this._tcpSocket.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tcpSocketInput() {
    return this._tcpSocket.internalValue;
  }

  // termination_grace_period_seconds - computed: false, optional: true, required: false
  private _terminationGracePeriodSeconds?: number; 
  public get terminationGracePeriodSeconds() {
    return this.getNumberAttribute('termination_grace_period_seconds');
  }
  public set terminationGracePeriodSeconds(value: number) {
    this._terminationGracePeriodSeconds = value;
  }
  public resetTerminationGracePeriodSeconds() {
    this._terminationGracePeriodSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get terminationGracePeriodSecondsInput() {
    return this._terminationGracePeriodSeconds;
  }

  // timeout_seconds - computed: false, optional: true, required: false
  private _timeoutSeconds?: number; 
  public get timeoutSeconds() {
    return this.getNumberAttribute('timeout_seconds');
  }
  public set timeoutSeconds(value: number) {
    this._timeoutSeconds = value;
  }
  public resetTimeoutSeconds() {
    this._timeoutSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeoutSecondsInput() {
    return this._timeoutSeconds;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevices {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#device_path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#device_path}
  */
  readonly devicePath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevicesToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevices | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    device_path: cdktf.stringToTerraform(struct!.devicePath),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevicesToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevices | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    device_path: {
      value: cdktf.stringToHclTerraform(struct!.devicePath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevicesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevices | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._devicePath !== undefined) {
      hasAnyValues = true;
      internalValueResult.devicePath = this._devicePath;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevices | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._devicePath = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._devicePath = value.devicePath;
      this._name = value.name;
    }
  }

  // device_path - computed: false, optional: true, required: false
  private _devicePath?: string; 
  public get devicePath() {
    return this.getStringAttribute('device_path');
  }
  public set devicePath(value: string) {
    this._devicePath = value;
  }
  public resetDevicePath() {
    this._devicePath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get devicePathInput() {
    return this._devicePath;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevicesList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevices[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevicesOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevicesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMounts {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#mount_path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#mount_path}
  */
  readonly mountPath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#mount_propagation DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#mount_propagation}
  */
  readonly mountPropagation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#read_only DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#recursive_read_only DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#recursive_read_only}
  */
  readonly recursiveReadOnly?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#sub_path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#sub_path}
  */
  readonly subPath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#sub_path_expr DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#sub_path_expr}
  */
  readonly subPathExpr?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMountsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    mount_path: cdktf.stringToTerraform(struct!.mountPath),
    mount_propagation: cdktf.stringToTerraform(struct!.mountPropagation),
    name: cdktf.stringToTerraform(struct!.name),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    recursive_read_only: cdktf.stringToTerraform(struct!.recursiveReadOnly),
    sub_path: cdktf.stringToTerraform(struct!.subPath),
    sub_path_expr: cdktf.stringToTerraform(struct!.subPathExpr),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMountsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMounts | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    mount_path: {
      value: cdktf.stringToHclTerraform(struct!.mountPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mount_propagation: {
      value: cdktf.stringToHclTerraform(struct!.mountPropagation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    recursive_read_only: {
      value: cdktf.stringToHclTerraform(struct!.recursiveReadOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sub_path: {
      value: cdktf.stringToHclTerraform(struct!.subPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sub_path_expr: {
      value: cdktf.stringToHclTerraform(struct!.subPathExpr),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMountsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMounts | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._mountPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.mountPath = this._mountPath;
    }
    if (this._mountPropagation !== undefined) {
      hasAnyValues = true;
      internalValueResult.mountPropagation = this._mountPropagation;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._recursiveReadOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.recursiveReadOnly = this._recursiveReadOnly;
    }
    if (this._subPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.subPath = this._subPath;
    }
    if (this._subPathExpr !== undefined) {
      hasAnyValues = true;
      internalValueResult.subPathExpr = this._subPathExpr;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMounts | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._mountPath = undefined;
      this._mountPropagation = undefined;
      this._name = undefined;
      this._readOnly = undefined;
      this._recursiveReadOnly = undefined;
      this._subPath = undefined;
      this._subPathExpr = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._mountPath = value.mountPath;
      this._mountPropagation = value.mountPropagation;
      this._name = value.name;
      this._readOnly = value.readOnly;
      this._recursiveReadOnly = value.recursiveReadOnly;
      this._subPath = value.subPath;
      this._subPathExpr = value.subPathExpr;
    }
  }

  // mount_path - computed: false, optional: true, required: false
  private _mountPath?: string; 
  public get mountPath() {
    return this.getStringAttribute('mount_path');
  }
  public set mountPath(value: string) {
    this._mountPath = value;
  }
  public resetMountPath() {
    this._mountPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mountPathInput() {
    return this._mountPath;
  }

  // mount_propagation - computed: false, optional: true, required: false
  private _mountPropagation?: string; 
  public get mountPropagation() {
    return this.getStringAttribute('mount_propagation');
  }
  public set mountPropagation(value: string) {
    this._mountPropagation = value;
  }
  public resetMountPropagation() {
    this._mountPropagation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mountPropagationInput() {
    return this._mountPropagation;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // recursive_read_only - computed: false, optional: true, required: false
  private _recursiveReadOnly?: string; 
  public get recursiveReadOnly() {
    return this.getStringAttribute('recursive_read_only');
  }
  public set recursiveReadOnly(value: string) {
    this._recursiveReadOnly = value;
  }
  public resetRecursiveReadOnly() {
    this._recursiveReadOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get recursiveReadOnlyInput() {
    return this._recursiveReadOnly;
  }

  // sub_path - computed: false, optional: true, required: false
  private _subPath?: string; 
  public get subPath() {
    return this.getStringAttribute('sub_path');
  }
  public set subPath(value: string) {
    this._subPath = value;
  }
  public resetSubPath() {
    this._subPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subPathInput() {
    return this._subPath;
  }

  // sub_path_expr - computed: false, optional: true, required: false
  private _subPathExpr?: string; 
  public get subPathExpr() {
    return this.getStringAttribute('sub_path_expr');
  }
  public set subPathExpr(value: string) {
    this._subPathExpr = value;
  }
  public resetSubPathExpr() {
    this._subPathExpr = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subPathExprInput() {
    return this._subPathExpr;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMountsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMounts[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMountsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMountsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#args DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#args}
  */
  readonly args?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#command DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#command}
  */
  readonly command?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#env DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#env}
  */
  readonly env?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnv[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#env_from DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#env_from}
  */
  readonly envFrom?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFrom[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#image DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#image_pull_policy DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#image_pull_policy}
  */
  readonly imagePullPolicy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#lifecycle DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#lifecycle}
  */
  readonly lifecycle?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecycle;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#liveness_probe DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#liveness_probe}
  */
  readonly livenessProbe?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbe;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#ports DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#ports}
  */
  readonly ports?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPorts[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#readiness_probe DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#readiness_probe}
  */
  readonly readinessProbe?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbe;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#resize_policy DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#resize_policy}
  */
  readonly resizePolicy?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicy[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#resources DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#resources}
  */
  readonly resources?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResources;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#restart_policy DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#restart_policy}
  */
  readonly restartPolicy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#security_context DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#security_context}
  */
  readonly securityContext?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContext;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#startup_probe DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#startup_probe}
  */
  readonly startupProbe?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbe;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#stdin DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#stdin}
  */
  readonly stdin?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#stdin_once DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#stdin_once}
  */
  readonly stdinOnce?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#termination_message_path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#termination_message_path}
  */
  readonly terminationMessagePath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#termination_message_policy DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#termination_message_policy}
  */
  readonly terminationMessagePolicy?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#tty DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#tty}
  */
  readonly tty?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#volume_devices DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#volume_devices}
  */
  readonly volumeDevices?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevices[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#volume_mounts DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#volume_mounts}
  */
  readonly volumeMounts?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMounts[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#working_dir DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#working_dir}
  */
  readonly workingDir?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    args: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.args),
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
    env: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvToTerraform, false)(struct!.env),
    env_from: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromToTerraform, false)(struct!.envFrom),
    image: cdktf.stringToTerraform(struct!.image),
    image_pull_policy: cdktf.stringToTerraform(struct!.imagePullPolicy),
    lifecycle: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecycleToTerraform(struct!.lifecycle),
    liveness_probe: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeToTerraform(struct!.livenessProbe),
    name: cdktf.stringToTerraform(struct!.name),
    ports: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPortsToTerraform, false)(struct!.ports),
    readiness_probe: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeToTerraform(struct!.readinessProbe),
    resize_policy: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicyToTerraform, false)(struct!.resizePolicy),
    resources: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesToTerraform(struct!.resources),
    restart_policy: cdktf.stringToTerraform(struct!.restartPolicy),
    security_context: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextToTerraform(struct!.securityContext),
    startup_probe: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeToTerraform(struct!.startupProbe),
    stdin: cdktf.booleanToTerraform(struct!.stdin),
    stdin_once: cdktf.booleanToTerraform(struct!.stdinOnce),
    termination_message_path: cdktf.stringToTerraform(struct!.terminationMessagePath),
    termination_message_policy: cdktf.stringToTerraform(struct!.terminationMessagePolicy),
    tty: cdktf.booleanToTerraform(struct!.tty),
    volume_devices: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevicesToTerraform, false)(struct!.volumeDevices),
    volume_mounts: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMountsToTerraform, false)(struct!.volumeMounts),
    working_dir: cdktf.stringToTerraform(struct!.workingDir),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    args: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.args),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    env: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvToHclTerraform, false)(struct!.env),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvList",
    },
    env_from: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromToHclTerraform, false)(struct!.envFrom),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_policy: {
      value: cdktf.stringToHclTerraform(struct!.imagePullPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    lifecycle: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecycleToHclTerraform(struct!.lifecycle),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecycle",
    },
    liveness_probe: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeToHclTerraform(struct!.livenessProbe),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbe",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ports: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPortsToHclTerraform, false)(struct!.ports),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPortsList",
    },
    readiness_probe: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeToHclTerraform(struct!.readinessProbe),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbe",
    },
    resize_policy: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicyToHclTerraform, false)(struct!.resizePolicy),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicyList",
    },
    resources: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesToHclTerraform(struct!.resources),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResources",
    },
    restart_policy: {
      value: cdktf.stringToHclTerraform(struct!.restartPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    security_context: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextToHclTerraform(struct!.securityContext),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContext",
    },
    startup_probe: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeToHclTerraform(struct!.startupProbe),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbe",
    },
    stdin: {
      value: cdktf.booleanToHclTerraform(struct!.stdin),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    stdin_once: {
      value: cdktf.booleanToHclTerraform(struct!.stdinOnce),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    termination_message_path: {
      value: cdktf.stringToHclTerraform(struct!.terminationMessagePath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    termination_message_policy: {
      value: cdktf.stringToHclTerraform(struct!.terminationMessagePolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tty: {
      value: cdktf.booleanToHclTerraform(struct!.tty),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    volume_devices: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevicesToHclTerraform, false)(struct!.volumeDevices),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevicesList",
    },
    volume_mounts: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMountsToHclTerraform, false)(struct!.volumeMounts),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMountsList",
    },
    working_dir: {
      value: cdktf.stringToHclTerraform(struct!.workingDir),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._args !== undefined) {
      hasAnyValues = true;
      internalValueResult.args = this._args;
    }
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    if (this._env?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.env = this._env?.internalValue;
    }
    if (this._envFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.envFrom = this._envFrom?.internalValue;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._imagePullPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullPolicy = this._imagePullPolicy;
    }
    if (this._lifecycle?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.lifecycle = this._lifecycle?.internalValue;
    }
    if (this._livenessProbe?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.livenessProbe = this._livenessProbe?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._ports?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ports = this._ports?.internalValue;
    }
    if (this._readinessProbe?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.readinessProbe = this._readinessProbe?.internalValue;
    }
    if (this._resizePolicy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resizePolicy = this._resizePolicy?.internalValue;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._restartPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.restartPolicy = this._restartPolicy;
    }
    if (this._securityContext?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.securityContext = this._securityContext?.internalValue;
    }
    if (this._startupProbe?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.startupProbe = this._startupProbe?.internalValue;
    }
    if (this._stdin !== undefined) {
      hasAnyValues = true;
      internalValueResult.stdin = this._stdin;
    }
    if (this._stdinOnce !== undefined) {
      hasAnyValues = true;
      internalValueResult.stdinOnce = this._stdinOnce;
    }
    if (this._terminationMessagePath !== undefined) {
      hasAnyValues = true;
      internalValueResult.terminationMessagePath = this._terminationMessagePath;
    }
    if (this._terminationMessagePolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.terminationMessagePolicy = this._terminationMessagePolicy;
    }
    if (this._tty !== undefined) {
      hasAnyValues = true;
      internalValueResult.tty = this._tty;
    }
    if (this._volumeDevices?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeDevices = this._volumeDevices?.internalValue;
    }
    if (this._volumeMounts?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeMounts = this._volumeMounts?.internalValue;
    }
    if (this._workingDir !== undefined) {
      hasAnyValues = true;
      internalValueResult.workingDir = this._workingDir;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._args = undefined;
      this._command = undefined;
      this._env.internalValue = undefined;
      this._envFrom.internalValue = undefined;
      this._image = undefined;
      this._imagePullPolicy = undefined;
      this._lifecycle.internalValue = undefined;
      this._livenessProbe.internalValue = undefined;
      this._name = undefined;
      this._ports.internalValue = undefined;
      this._readinessProbe.internalValue = undefined;
      this._resizePolicy.internalValue = undefined;
      this._resources.internalValue = undefined;
      this._restartPolicy = undefined;
      this._securityContext.internalValue = undefined;
      this._startupProbe.internalValue = undefined;
      this._stdin = undefined;
      this._stdinOnce = undefined;
      this._terminationMessagePath = undefined;
      this._terminationMessagePolicy = undefined;
      this._tty = undefined;
      this._volumeDevices.internalValue = undefined;
      this._volumeMounts.internalValue = undefined;
      this._workingDir = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._args = value.args;
      this._command = value.command;
      this._env.internalValue = value.env;
      this._envFrom.internalValue = value.envFrom;
      this._image = value.image;
      this._imagePullPolicy = value.imagePullPolicy;
      this._lifecycle.internalValue = value.lifecycle;
      this._livenessProbe.internalValue = value.livenessProbe;
      this._name = value.name;
      this._ports.internalValue = value.ports;
      this._readinessProbe.internalValue = value.readinessProbe;
      this._resizePolicy.internalValue = value.resizePolicy;
      this._resources.internalValue = value.resources;
      this._restartPolicy = value.restartPolicy;
      this._securityContext.internalValue = value.securityContext;
      this._startupProbe.internalValue = value.startupProbe;
      this._stdin = value.stdin;
      this._stdinOnce = value.stdinOnce;
      this._terminationMessagePath = value.terminationMessagePath;
      this._terminationMessagePolicy = value.terminationMessagePolicy;
      this._tty = value.tty;
      this._volumeDevices.internalValue = value.volumeDevices;
      this._volumeMounts.internalValue = value.volumeMounts;
      this._workingDir = value.workingDir;
    }
  }

  // args - computed: false, optional: true, required: false
  private _args?: string[]; 
  public get args() {
    return this.getListAttribute('args');
  }
  public set args(value: string[]) {
    this._args = value;
  }
  public resetArgs() {
    this._args = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get argsInput() {
    return this._args;
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }

  // env - computed: false, optional: true, required: false
  private _env = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvList(this, "env", false);
  public get env() {
    return this._env;
  }
  public putEnv(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnv[] | cdktf.IResolvable) {
    this._env.internalValue = value;
  }
  public resetEnv() {
    this._env.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get envInput() {
    return this._env.internalValue;
  }

  // env_from - computed: false, optional: true, required: false
  private _envFrom = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFromList(this, "env_from", false);
  public get envFrom() {
    return this._envFrom;
  }
  public putEnvFrom(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersEnvFrom[] | cdktf.IResolvable) {
    this._envFrom.internalValue = value;
  }
  public resetEnvFrom() {
    this._envFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get envFromInput() {
    return this._envFrom.internalValue;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // image_pull_policy - computed: false, optional: true, required: false
  private _imagePullPolicy?: string; 
  public get imagePullPolicy() {
    return this.getStringAttribute('image_pull_policy');
  }
  public set imagePullPolicy(value: string) {
    this._imagePullPolicy = value;
  }
  public resetImagePullPolicy() {
    this._imagePullPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullPolicyInput() {
    return this._imagePullPolicy;
  }

  // lifecycle - computed: false, optional: true, required: false
  private _lifecycle = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecycleOutputReference(this, "lifecycle");
  public get lifecycle() {
    return this._lifecycle;
  }
  public putLifecycle(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLifecycle) {
    this._lifecycle.internalValue = value;
  }
  public resetLifecycle() {
    this._lifecycle.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lifecycleInput() {
    return this._lifecycle.internalValue;
  }

  // liveness_probe - computed: false, optional: true, required: false
  private _livenessProbe = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbeOutputReference(this, "liveness_probe");
  public get livenessProbe() {
    return this._livenessProbe;
  }
  public putLivenessProbe(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersLivenessProbe) {
    this._livenessProbe.internalValue = value;
  }
  public resetLivenessProbe() {
    this._livenessProbe.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get livenessProbeInput() {
    return this._livenessProbe.internalValue;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // ports - computed: false, optional: true, required: false
  private _ports = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPortsList(this, "ports", false);
  public get ports() {
    return this._ports;
  }
  public putPorts(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersPorts[] | cdktf.IResolvable) {
    this._ports.internalValue = value;
  }
  public resetPorts() {
    this._ports.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portsInput() {
    return this._ports.internalValue;
  }

  // readiness_probe - computed: false, optional: true, required: false
  private _readinessProbe = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbeOutputReference(this, "readiness_probe");
  public get readinessProbe() {
    return this._readinessProbe;
  }
  public putReadinessProbe(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersReadinessProbe) {
    this._readinessProbe.internalValue = value;
  }
  public resetReadinessProbe() {
    this._readinessProbe.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readinessProbeInput() {
    return this._readinessProbe.internalValue;
  }

  // resize_policy - computed: false, optional: true, required: false
  private _resizePolicy = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicyList(this, "resize_policy", false);
  public get resizePolicy() {
    return this._resizePolicy;
  }
  public putResizePolicy(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResizePolicy[] | cdktf.IResolvable) {
    this._resizePolicy.internalValue = value;
  }
  public resetResizePolicy() {
    this._resizePolicy.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resizePolicyInput() {
    return this._resizePolicy.internalValue;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResourcesOutputReference(this, "resources");
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersResources) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // restart_policy - computed: false, optional: true, required: false
  private _restartPolicy?: string; 
  public get restartPolicy() {
    return this.getStringAttribute('restart_policy');
  }
  public set restartPolicy(value: string) {
    this._restartPolicy = value;
  }
  public resetRestartPolicy() {
    this._restartPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get restartPolicyInput() {
    return this._restartPolicy;
  }

  // security_context - computed: false, optional: true, required: false
  private _securityContext = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContextOutputReference(this, "security_context");
  public get securityContext() {
    return this._securityContext;
  }
  public putSecurityContext(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersSecurityContext) {
    this._securityContext.internalValue = value;
  }
  public resetSecurityContext() {
    this._securityContext.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get securityContextInput() {
    return this._securityContext.internalValue;
  }

  // startup_probe - computed: false, optional: true, required: false
  private _startupProbe = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbeOutputReference(this, "startup_probe");
  public get startupProbe() {
    return this._startupProbe;
  }
  public putStartupProbe(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersStartupProbe) {
    this._startupProbe.internalValue = value;
  }
  public resetStartupProbe() {
    this._startupProbe.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startupProbeInput() {
    return this._startupProbe.internalValue;
  }

  // stdin - computed: false, optional: true, required: false
  private _stdin?: boolean | cdktf.IResolvable; 
  public get stdin() {
    return this.getBooleanAttribute('stdin');
  }
  public set stdin(value: boolean | cdktf.IResolvable) {
    this._stdin = value;
  }
  public resetStdin() {
    this._stdin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stdinInput() {
    return this._stdin;
  }

  // stdin_once - computed: false, optional: true, required: false
  private _stdinOnce?: boolean | cdktf.IResolvable; 
  public get stdinOnce() {
    return this.getBooleanAttribute('stdin_once');
  }
  public set stdinOnce(value: boolean | cdktf.IResolvable) {
    this._stdinOnce = value;
  }
  public resetStdinOnce() {
    this._stdinOnce = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stdinOnceInput() {
    return this._stdinOnce;
  }

  // termination_message_path - computed: false, optional: true, required: false
  private _terminationMessagePath?: string; 
  public get terminationMessagePath() {
    return this.getStringAttribute('termination_message_path');
  }
  public set terminationMessagePath(value: string) {
    this._terminationMessagePath = value;
  }
  public resetTerminationMessagePath() {
    this._terminationMessagePath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get terminationMessagePathInput() {
    return this._terminationMessagePath;
  }

  // termination_message_policy - computed: false, optional: true, required: false
  private _terminationMessagePolicy?: string; 
  public get terminationMessagePolicy() {
    return this.getStringAttribute('termination_message_policy');
  }
  public set terminationMessagePolicy(value: string) {
    this._terminationMessagePolicy = value;
  }
  public resetTerminationMessagePolicy() {
    this._terminationMessagePolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get terminationMessagePolicyInput() {
    return this._terminationMessagePolicy;
  }

  // tty - computed: false, optional: true, required: false
  private _tty?: boolean | cdktf.IResolvable; 
  public get tty() {
    return this.getBooleanAttribute('tty');
  }
  public set tty(value: boolean | cdktf.IResolvable) {
    this._tty = value;
  }
  public resetTty() {
    this._tty = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ttyInput() {
    return this._tty;
  }

  // volume_devices - computed: false, optional: true, required: false
  private _volumeDevices = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevicesList(this, "volume_devices", false);
  public get volumeDevices() {
    return this._volumeDevices;
  }
  public putVolumeDevices(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeDevices[] | cdktf.IResolvable) {
    this._volumeDevices.internalValue = value;
  }
  public resetVolumeDevices() {
    this._volumeDevices.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeDevicesInput() {
    return this._volumeDevices.internalValue;
  }

  // volume_mounts - computed: false, optional: true, required: false
  private _volumeMounts = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMountsList(this, "volume_mounts", false);
  public get volumeMounts() {
    return this._volumeMounts;
  }
  public putVolumeMounts(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersVolumeMounts[] | cdktf.IResolvable) {
    this._volumeMounts.internalValue = value;
  }
  public resetVolumeMounts() {
    this._volumeMounts.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeMountsInput() {
    return this._volumeMounts.internalValue;
  }

  // working_dir - computed: false, optional: true, required: false
  private _workingDir?: string; 
  public get workingDir() {
    return this.getStringAttribute('working_dir');
  }
  public set workingDir(value: string) {
    this._workingDir = value;
  }
  public resetWorkingDir() {
    this._workingDir = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get workingDirInput() {
    return this._workingDir;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecContainersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#value DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptionsToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptionsToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptionsOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#nameservers DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#nameservers}
  */
  readonly nameservers?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#options DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#options}
  */
  readonly options?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptions[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#searches DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#searches}
  */
  readonly searches?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nameservers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nameservers),
    options: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptionsToTerraform, false)(struct!.options),
    searches: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.searches),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nameservers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nameservers),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    options: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptionsToHclTerraform, false)(struct!.options),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptionsList",
    },
    searches: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.searches),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nameservers !== undefined) {
      hasAnyValues = true;
      internalValueResult.nameservers = this._nameservers;
    }
    if (this._options?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.options = this._options?.internalValue;
    }
    if (this._searches !== undefined) {
      hasAnyValues = true;
      internalValueResult.searches = this._searches;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nameservers = undefined;
      this._options.internalValue = undefined;
      this._searches = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nameservers = value.nameservers;
      this._options.internalValue = value.options;
      this._searches = value.searches;
    }
  }

  // nameservers - computed: false, optional: true, required: false
  private _nameservers?: string[]; 
  public get nameservers() {
    return this.getListAttribute('nameservers');
  }
  public set nameservers(value: string[]) {
    this._nameservers = value;
  }
  public resetNameservers() {
    this._nameservers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameserversInput() {
    return this._nameservers;
  }

  // options - computed: false, optional: true, required: false
  private _options = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptionsList(this, "options", false);
  public get options() {
    return this._options;
  }
  public putOptions(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecDnsConfigOptions[] | cdktf.IResolvable) {
    this._options.internalValue = value;
  }
  public resetOptions() {
    this._options.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionsInput() {
    return this._options.internalValue;
  }

  // searches - computed: false, optional: true, required: false
  private _searches?: string[]; 
  public get searches() {
    return this.getListAttribute('searches');
  }
  public set searches(value: string[]) {
    this._searches = value;
  }
  public resetSearches() {
    this._searches = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get searchesInput() {
    return this._searches;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#optional DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRefToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRefToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
      this._optional = value.optional;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#api_version DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#field_path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#field_path}
  */
  readonly fieldPath?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromFieldRefToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    field_path: cdktf.stringToTerraform(struct!.fieldPath),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromFieldRefToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    field_path: {
      value: cdktf.stringToHclTerraform(struct!.fieldPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldPath = this._fieldPath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldPath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldPath = value.fieldPath;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // field_path - computed: false, optional: true, required: false
  private _fieldPath?: string; 
  public get fieldPath() {
    return this.getStringAttribute('field_path');
  }
  public set fieldPath(value: string) {
    this._fieldPath = value;
  }
  public resetFieldPath() {
    this._fieldPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldPathInput() {
    return this._fieldPath;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromResourceFieldRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#container_name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#container_name}
  */
  readonly containerName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#divisor DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#divisor}
  */
  readonly divisor?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#resource DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#resource}
  */
  readonly resource?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromResourceFieldRefToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_name: cdktf.stringToTerraform(struct!.containerName),
    divisor: cdktf.stringToTerraform(struct!.divisor),
    resource: cdktf.stringToTerraform(struct!.resource),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromResourceFieldRefToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_name: {
      value: cdktf.stringToHclTerraform(struct!.containerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    divisor: {
      value: cdktf.stringToHclTerraform(struct!.divisor),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromResourceFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromResourceFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerName = this._containerName;
    }
    if (this._divisor !== undefined) {
      hasAnyValues = true;
      internalValueResult.divisor = this._divisor;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromResourceFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerName = undefined;
      this._divisor = undefined;
      this._resource = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerName = value.containerName;
      this._divisor = value.divisor;
      this._resource = value.resource;
    }
  }

  // container_name - computed: false, optional: true, required: false
  private _containerName?: string; 
  public get containerName() {
    return this.getStringAttribute('container_name');
  }
  public set containerName(value: string) {
    this._containerName = value;
  }
  public resetContainerName() {
    this._containerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNameInput() {
    return this._containerName;
  }

  // divisor - computed: false, optional: true, required: false
  private _divisor?: string; 
  public get divisor() {
    return this.getStringAttribute('divisor');
  }
  public set divisor(value: string) {
    this._divisor = value;
  }
  public resetDivisor() {
    this._divisor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get divisorInput() {
    return this._divisor;
  }

  // resource - computed: false, optional: true, required: false
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  public resetResource() {
    this._resource = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromSecretKeyRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#key DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#key}
  */
  readonly key?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#optional DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromSecretKeyRefToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    name: cdktf.stringToTerraform(struct!.name),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromSecretKeyRefToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromSecretKeyRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromSecretKeyRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromSecretKeyRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromSecretKeyRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._name = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._name = value.name;
      this._optional = value.optional;
    }
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#config_map_key_ref DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#config_map_key_ref}
  */
  readonly configMapKeyRef?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#field_ref DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#field_ref}
  */
  readonly fieldRef?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromFieldRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#resource_field_ref DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#resource_field_ref}
  */
  readonly resourceFieldRef?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromResourceFieldRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#secret_key_ref DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#secret_key_ref}
  */
  readonly secretKeyRef?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromSecretKeyRef;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config_map_key_ref: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRefToTerraform(struct!.configMapKeyRef),
    field_ref: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromFieldRefToTerraform(struct!.fieldRef),
    resource_field_ref: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromResourceFieldRefToTerraform(struct!.resourceFieldRef),
    secret_key_ref: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromSecretKeyRefToTerraform(struct!.secretKeyRef),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config_map_key_ref: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRefToHclTerraform(struct!.configMapKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRef",
    },
    field_ref: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromFieldRefToHclTerraform(struct!.fieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromFieldRef",
    },
    resource_field_ref: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromResourceFieldRefToHclTerraform(struct!.resourceFieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromResourceFieldRef",
    },
    secret_key_ref: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromSecretKeyRefToHclTerraform(struct!.secretKeyRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromSecretKeyRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configMapKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.configMapKeyRef = this._configMapKeyRef?.internalValue;
    }
    if (this._fieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldRef = this._fieldRef?.internalValue;
    }
    if (this._resourceFieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceFieldRef = this._resourceFieldRef?.internalValue;
    }
    if (this._secretKeyRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretKeyRef = this._secretKeyRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configMapKeyRef.internalValue = undefined;
      this._fieldRef.internalValue = undefined;
      this._resourceFieldRef.internalValue = undefined;
      this._secretKeyRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configMapKeyRef.internalValue = value.configMapKeyRef;
      this._fieldRef.internalValue = value.fieldRef;
      this._resourceFieldRef.internalValue = value.resourceFieldRef;
      this._secretKeyRef.internalValue = value.secretKeyRef;
    }
  }

  // config_map_key_ref - computed: false, optional: true, required: false
  private _configMapKeyRef = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRefOutputReference(this, "config_map_key_ref");
  public get configMapKeyRef() {
    return this._configMapKeyRef;
  }
  public putConfigMapKeyRef(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRef) {
    this._configMapKeyRef.internalValue = value;
  }
  public resetConfigMapKeyRef() {
    this._configMapKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configMapKeyRefInput() {
    return this._configMapKeyRef.internalValue;
  }

  // field_ref - computed: false, optional: true, required: false
  private _fieldRef = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromFieldRefOutputReference(this, "field_ref");
  public get fieldRef() {
    return this._fieldRef;
  }
  public putFieldRef(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromFieldRef) {
    this._fieldRef.internalValue = value;
  }
  public resetFieldRef() {
    this._fieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldRefInput() {
    return this._fieldRef.internalValue;
  }

  // resource_field_ref - computed: false, optional: true, required: false
  private _resourceFieldRef = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromResourceFieldRefOutputReference(this, "resource_field_ref");
  public get resourceFieldRef() {
    return this._resourceFieldRef;
  }
  public putResourceFieldRef(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromResourceFieldRef) {
    this._resourceFieldRef.internalValue = value;
  }
  public resetResourceFieldRef() {
    this._resourceFieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceFieldRefInput() {
    return this._resourceFieldRef.internalValue;
  }

  // secret_key_ref - computed: false, optional: true, required: false
  private _secretKeyRef = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromSecretKeyRefOutputReference(this, "secret_key_ref");
  public get secretKeyRef() {
    return this._secretKeyRef;
  }
  public putSecretKeyRef(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromSecretKeyRef) {
    this._secretKeyRef.internalValue = value;
  }
  public resetSecretKeyRef() {
    this._secretKeyRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretKeyRefInput() {
    return this._secretKeyRef.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnv {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#value DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#value_from DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#value_from}
  */
  readonly valueFrom?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFrom;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnv | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
    value_from: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromToTerraform(struct!.valueFrom),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnv | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value_from: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromToHclTerraform(struct!.valueFrom),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFrom",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnv | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._valueFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.valueFrom = this._valueFrom?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnv | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
      this._valueFrom.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
      this._valueFrom.internalValue = value.valueFrom;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // value_from - computed: false, optional: true, required: false
  private _valueFrom = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFromOutputReference(this, "value_from");
  public get valueFrom() {
    return this._valueFrom;
  }
  public putValueFrom(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvValueFrom) {
    this._valueFrom.internalValue = value;
  }
  public resetValueFrom() {
    this._valueFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueFromInput() {
    return this._valueFrom.internalValue;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnv[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromConfigMapRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#optional DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromConfigMapRefToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromConfigMapRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromConfigMapRefToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromConfigMapRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromConfigMapRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromConfigMapRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromConfigMapRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._optional = value.optional;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromSecretRef {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#optional DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromSecretRefToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromSecretRefToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._optional = value.optional;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFrom {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#config_map_ref DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#config_map_ref}
  */
  readonly configMapRef?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromConfigMapRef;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#prefix DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#prefix}
  */
  readonly prefix?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#secret_ref DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromSecretRef;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config_map_ref: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromConfigMapRefToTerraform(struct!.configMapRef),
    prefix: cdktf.stringToTerraform(struct!.prefix),
    secret_ref: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromSecretRefToTerraform(struct!.secretRef),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFrom | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config_map_ref: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromConfigMapRefToHclTerraform(struct!.configMapRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromConfigMapRef",
    },
    prefix: {
      value: cdktf.stringToHclTerraform(struct!.prefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_ref: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromSecretRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFrom | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configMapRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.configMapRef = this._configMapRef?.internalValue;
    }
    if (this._prefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefix = this._prefix;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFrom | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configMapRef.internalValue = undefined;
      this._prefix = undefined;
      this._secretRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configMapRef.internalValue = value.configMapRef;
      this._prefix = value.prefix;
      this._secretRef.internalValue = value.secretRef;
    }
  }

  // config_map_ref - computed: false, optional: true, required: false
  private _configMapRef = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromConfigMapRefOutputReference(this, "config_map_ref");
  public get configMapRef() {
    return this._configMapRef;
  }
  public putConfigMapRef(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromConfigMapRef) {
    this._configMapRef.internalValue = value;
  }
  public resetConfigMapRef() {
    this._configMapRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configMapRefInput() {
    return this._configMapRef.internalValue;
  }

  // prefix - computed: false, optional: true, required: false
  private _prefix?: string; 
  public get prefix() {
    return this.getStringAttribute('prefix');
  }
  public set prefix(value: string) {
    this._prefix = value;
  }
  public resetPrefix() {
    this._prefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixInput() {
    return this._prefix;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFrom[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersEnvFromOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartExec {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#command DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#command}
  */
  readonly command?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartExecToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartExecToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartExecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartExec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartExec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#value DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeadersToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeadersToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeadersOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGet {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#http_headers DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#http_headers}
  */
  readonly httpHeaders?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#scheme DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#scheme}
  */
  readonly scheme?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    http_headers: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeadersToTerraform, false)(struct!.httpHeaders),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.stringToTerraform(struct!.port),
    scheme: cdktf.stringToTerraform(struct!.scheme),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    http_headers: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeadersToHclTerraform, false)(struct!.httpHeaders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeadersList",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme: {
      value: cdktf.stringToHclTerraform(struct!.scheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGet | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._httpHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpHeaders = this._httpHeaders?.internalValue;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._scheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.scheme = this._scheme;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGet | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._httpHeaders.internalValue = undefined;
      this._path = undefined;
      this._port = undefined;
      this._scheme = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._httpHeaders.internalValue = value.httpHeaders;
      this._path = value.path;
      this._port = value.port;
      this._scheme = value.scheme;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // http_headers - computed: false, optional: true, required: false
  private _httpHeaders = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeadersList(this, "http_headers", false);
  public get httpHeaders() {
    return this._httpHeaders;
  }
  public putHttpHeaders(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders[] | cdktf.IResolvable) {
    this._httpHeaders.internalValue = value;
  }
  public resetHttpHeaders() {
    this._httpHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpHeadersInput() {
    return this._httpHeaders.internalValue;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // scheme - computed: false, optional: true, required: false
  private _scheme?: string; 
  public get scheme() {
    return this.getStringAttribute('scheme');
  }
  public set scheme(value: string) {
    this._scheme = value;
  }
  public resetScheme() {
    this._scheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeInput() {
    return this._scheme;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartSleep {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#seconds}
  */
  readonly seconds?: number;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartSleepToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartSleep | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    seconds: cdktf.numberToTerraform(struct!.seconds),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartSleepToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartSleep | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    seconds: {
      value: cdktf.numberToHclTerraform(struct!.seconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartSleepOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartSleep | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._seconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.seconds = this._seconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartSleep | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._seconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._seconds = value.seconds;
    }
  }

  // seconds - computed: false, optional: true, required: false
  private _seconds?: number; 
  public get seconds() {
    return this.getNumberAttribute('seconds');
  }
  public set seconds(value: number) {
    this._seconds = value;
  }
  public resetSeconds() {
    this._seconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secondsInput() {
    return this._seconds;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartTcpSocket {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartTcpSocketToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    port: cdktf.stringToTerraform(struct!.port),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartTcpSocketToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartTcpSocketOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartTcpSocket | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartTcpSocket | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._port = value.port;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStart {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#exec DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#exec}
  */
  readonly exec?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartExec;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#http_get DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#http_get}
  */
  readonly httpGet?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGet;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#sleep DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#sleep}
  */
  readonly sleep?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartSleep;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#tcp_socket DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#tcp_socket}
  */
  readonly tcpSocket?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartTcpSocket;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exec: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartExecToTerraform(struct!.exec),
    http_get: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetToTerraform(struct!.httpGet),
    sleep: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartSleepToTerraform(struct!.sleep),
    tcp_socket: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartTcpSocketToTerraform(struct!.tcpSocket),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exec: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartExecToHclTerraform(struct!.exec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartExec",
    },
    http_get: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetToHclTerraform(struct!.httpGet),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGet",
    },
    sleep: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartSleepToHclTerraform(struct!.sleep),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartSleep",
    },
    tcp_socket: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartTcpSocketToHclTerraform(struct!.tcpSocket),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartTcpSocket",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStart | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.exec = this._exec?.internalValue;
    }
    if (this._httpGet?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpGet = this._httpGet?.internalValue;
    }
    if (this._sleep?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sleep = this._sleep?.internalValue;
    }
    if (this._tcpSocket?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tcpSocket = this._tcpSocket?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStart | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exec.internalValue = undefined;
      this._httpGet.internalValue = undefined;
      this._sleep.internalValue = undefined;
      this._tcpSocket.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exec.internalValue = value.exec;
      this._httpGet.internalValue = value.httpGet;
      this._sleep.internalValue = value.sleep;
      this._tcpSocket.internalValue = value.tcpSocket;
    }
  }

  // exec - computed: false, optional: true, required: false
  private _exec = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartExecOutputReference(this, "exec");
  public get exec() {
    return this._exec;
  }
  public putExec(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartExec) {
    this._exec.internalValue = value;
  }
  public resetExec() {
    this._exec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get execInput() {
    return this._exec.internalValue;
  }

  // http_get - computed: false, optional: true, required: false
  private _httpGet = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGetOutputReference(this, "http_get");
  public get httpGet() {
    return this._httpGet;
  }
  public putHttpGet(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartHttpGet) {
    this._httpGet.internalValue = value;
  }
  public resetHttpGet() {
    this._httpGet.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpGetInput() {
    return this._httpGet.internalValue;
  }

  // sleep - computed: false, optional: true, required: false
  private _sleep = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartSleepOutputReference(this, "sleep");
  public get sleep() {
    return this._sleep;
  }
  public putSleep(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartSleep) {
    this._sleep.internalValue = value;
  }
  public resetSleep() {
    this._sleep.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sleepInput() {
    return this._sleep.internalValue;
  }

  // tcp_socket - computed: false, optional: true, required: false
  private _tcpSocket = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartTcpSocketOutputReference(this, "tcp_socket");
  public get tcpSocket() {
    return this._tcpSocket;
  }
  public putTcpSocket(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartTcpSocket) {
    this._tcpSocket.internalValue = value;
  }
  public resetTcpSocket() {
    this._tcpSocket.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tcpSocketInput() {
    return this._tcpSocket.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopExec {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#command DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#command}
  */
  readonly command?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopExecToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopExecToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopExecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopExec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopExec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#name DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#value DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeadersToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeadersToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeadersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeadersList extends cdktf.ComplexList {
  public internalValue? : DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeadersOutputReference {
    return new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeadersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGet {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#http_headers DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#http_headers}
  */
  readonly httpHeaders?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#path DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#path}
  */
  readonly path?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#scheme DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#scheme}
  */
  readonly scheme?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    http_headers: cdktf.listMapper(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeadersToTerraform, false)(struct!.httpHeaders),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.stringToTerraform(struct!.port),
    scheme: cdktf.stringToTerraform(struct!.scheme),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGet | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    http_headers: {
      value: cdktf.listMapperHcl(dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeadersToHclTerraform, false)(struct!.httpHeaders),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeadersList",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme: {
      value: cdktf.stringToHclTerraform(struct!.scheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGet | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._httpHeaders?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpHeaders = this._httpHeaders?.internalValue;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._scheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.scheme = this._scheme;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGet | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._httpHeaders.internalValue = undefined;
      this._path = undefined;
      this._port = undefined;
      this._scheme = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._httpHeaders.internalValue = value.httpHeaders;
      this._path = value.path;
      this._port = value.port;
      this._scheme = value.scheme;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // http_headers - computed: false, optional: true, required: false
  private _httpHeaders = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeadersList(this, "http_headers", false);
  public get httpHeaders() {
    return this._httpHeaders;
  }
  public putHttpHeaders(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders[] | cdktf.IResolvable) {
    this._httpHeaders.internalValue = value;
  }
  public resetHttpHeaders() {
    this._httpHeaders.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpHeadersInput() {
    return this._httpHeaders.internalValue;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // scheme - computed: false, optional: true, required: false
  private _scheme?: string; 
  public get scheme() {
    return this.getStringAttribute('scheme');
  }
  public set scheme(value: string) {
    this._scheme = value;
  }
  public resetScheme() {
    this._scheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeInput() {
    return this._scheme;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopSleep {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#seconds DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#seconds}
  */
  readonly seconds?: number;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopSleepToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopSleep | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    seconds: cdktf.numberToTerraform(struct!.seconds),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopSleepToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopSleep | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    seconds: {
      value: cdktf.numberToHclTerraform(struct!.seconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopSleepOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopSleep | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._seconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.seconds = this._seconds;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopSleep | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._seconds = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._seconds = value.seconds;
    }
  }

  // seconds - computed: false, optional: true, required: false
  private _seconds?: number; 
  public get seconds() {
    return this.getNumberAttribute('seconds');
  }
  public set seconds(value: number) {
    this._seconds = value;
  }
  public resetSeconds() {
    this._seconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secondsInput() {
    return this._seconds;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopTcpSocket {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#host DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#host}
  */
  readonly host?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopTcpSocketToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    port: cdktf.stringToTerraform(struct!.port),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopTcpSocketToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopTcpSocket | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopTcpSocketOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopTcpSocket | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopTcpSocket | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._port = value.port;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStop {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#exec DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#exec}
  */
  readonly exec?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopExec;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#http_get DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#http_get}
  */
  readonly httpGet?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGet;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#sleep DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#sleep}
  */
  readonly sleep?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopSleep;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#tcp_socket DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#tcp_socket}
  */
  readonly tcpSocket?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopTcpSocket;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStop | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    exec: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopExecToTerraform(struct!.exec),
    http_get: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetToTerraform(struct!.httpGet),
    sleep: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopSleepToTerraform(struct!.sleep),
    tcp_socket: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopTcpSocketToTerraform(struct!.tcpSocket),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStop | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    exec: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopExecToHclTerraform(struct!.exec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopExec",
    },
    http_get: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetToHclTerraform(struct!.httpGet),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGet",
    },
    sleep: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopSleepToHclTerraform(struct!.sleep),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopSleep",
    },
    tcp_socket: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopTcpSocketToHclTerraform(struct!.tcpSocket),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopTcpSocket",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStop | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._exec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.exec = this._exec?.internalValue;
    }
    if (this._httpGet?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpGet = this._httpGet?.internalValue;
    }
    if (this._sleep?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sleep = this._sleep?.internalValue;
    }
    if (this._tcpSocket?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tcpSocket = this._tcpSocket?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStop | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._exec.internalValue = undefined;
      this._httpGet.internalValue = undefined;
      this._sleep.internalValue = undefined;
      this._tcpSocket.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._exec.internalValue = value.exec;
      this._httpGet.internalValue = value.httpGet;
      this._sleep.internalValue = value.sleep;
      this._tcpSocket.internalValue = value.tcpSocket;
    }
  }

  // exec - computed: false, optional: true, required: false
  private _exec = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopExecOutputReference(this, "exec");
  public get exec() {
    return this._exec;
  }
  public putExec(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopExec) {
    this._exec.internalValue = value;
  }
  public resetExec() {
    this._exec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get execInput() {
    return this._exec.internalValue;
  }

  // http_get - computed: false, optional: true, required: false
  private _httpGet = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGetOutputReference(this, "http_get");
  public get httpGet() {
    return this._httpGet;
  }
  public putHttpGet(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopHttpGet) {
    this._httpGet.internalValue = value;
  }
  public resetHttpGet() {
    this._httpGet.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpGetInput() {
    return this._httpGet.internalValue;
  }

  // sleep - computed: false, optional: true, required: false
  private _sleep = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopSleepOutputReference(this, "sleep");
  public get sleep() {
    return this._sleep;
  }
  public putSleep(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopSleep) {
    this._sleep.internalValue = value;
  }
  public resetSleep() {
    this._sleep.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sleepInput() {
    return this._sleep.internalValue;
  }

  // tcp_socket - computed: false, optional: true, required: false
  private _tcpSocket = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopTcpSocketOutputReference(this, "tcp_socket");
  public get tcpSocket() {
    return this._tcpSocket;
  }
  public putTcpSocket(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopTcpSocket) {
    this._tcpSocket.internalValue = value;
  }
  public resetTcpSocket() {
    this._tcpSocket.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tcpSocketInput() {
    return this._tcpSocket.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecycle {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#post_start DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#post_start}
  */
  readonly postStart?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStart;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#pre_stop DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#pre_stop}
  */
  readonly preStop?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStop;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecycleToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecycle | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    post_start: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartToTerraform(struct!.postStart),
    pre_stop: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopToTerraform(struct!.preStop),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecycleToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecycle | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    post_start: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartToHclTerraform(struct!.postStart),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStart",
    },
    pre_stop: {
      value: dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopToHclTerraform(struct!.preStop),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStop",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecycleOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecycle | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._postStart?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.postStart = this._postStart?.internalValue;
    }
    if (this._preStop?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.preStop = this._preStop?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecycle | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._postStart.internalValue = undefined;
      this._preStop.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._postStart.internalValue = value.postStart;
      this._preStop.internalValue = value.preStop;
    }
  }

  // post_start - computed: false, optional: true, required: false
  private _postStart = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStartOutputReference(this, "post_start");
  public get postStart() {
    return this._postStart;
  }
  public putPostStart(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePostStart) {
    this._postStart.internalValue = value;
  }
  public resetPostStart() {
    this._postStart.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get postStartInput() {
    return this._postStart.internalValue;
  }

  // pre_stop - computed: false, optional: true, required: false
  private _preStop = new DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStopOutputReference(this, "pre_stop");
  public get preStop() {
    return this._preStop;
  }
  public putPreStop(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLifecyclePreStop) {
    this._preStop.internalValue = value;
  }
  public resetPreStop() {
    this._preStop.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preStopInput() {
    return this._preStop.internalValue;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeExec {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#command DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#command}
  */
  readonly command?: string[];
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeExecToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeExecToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeExec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeExecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeExec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeExec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }
}
export interface DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeGrpc {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#port DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/flink_apache_org_flink_deployment_v1beta1_manifest#service DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1Manifest#service}
  */
  readonly service?: string;
}

export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeGrpcToTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeGrpc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    port: cdktf.numberToTerraform(struct!.port),
    service: cdktf.stringToTerraform(struct!.service),
  }
}


export function dataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeGrpcToHclTerraform(struct?: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeGrpc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    service: {
      value: cdktf.stringToHclTerraform(struct!.service),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeGrpcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeGrpc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._service !== undefined) {
      hasAnyValues = true;
      internalValueResult.service = this._service;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SFlinkApacheOrgFlinkDeploymentV1Beta1ManifestSpecTaskManagerPodTemplateSpecEphemeralContainersLivenessProbeGrpc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._port = undefined;
      this._service = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._port = value.port;
      this._service = value.service;
    }
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // service - computed: false, optional: true, required: false
  private _service?: string; 
  public get service() {
    return this.getStringAttribute('service');
  }
  public set service(value: string) {
    this._service = value;
  }
  public resetService() {
    this._service = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceInput() {
    return this._service;
  }
}
